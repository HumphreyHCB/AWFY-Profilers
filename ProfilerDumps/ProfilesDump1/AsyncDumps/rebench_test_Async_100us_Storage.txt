--- Execution profile ---
Total samples       : 223226
unknown_Java        : 291 (0.13%)
not_walkable_Java   : 30 (0.01%)

--- 5693310024 ns (25.44%), 56871 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 5022394969 ns (22.44%), 50172 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 1947379539 ns (8.70%), 19452 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 1718870343 ns (7.68%), 17173 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 845320660 ns (3.78%), 8443 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x00000008010030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 730103408 ns (3.26%), 7293 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 724170685 ns (3.24%), 7235 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 413840511 ns (1.85%), 4134 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 372937821 ns (1.67%), 3727 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 363578077 ns (1.62%), 3634 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 299562152 ns (1.34%), 2992 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 288231191 ns (1.29%), 2879 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 236160772 ns (1.06%), 2359 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 219226809 ns (0.98%), 2189 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 189926993 ns (0.85%), 1897 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 181404612 ns (0.81%), 1812 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 155764922 ns (0.70%), 1556 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 153782315 ns (0.69%), 1535 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x00000008010030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 147912929 ns (0.66%), 1477 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 130105709 ns (0.58%), 1299 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 127961150 ns (0.57%), 1279 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 117889124 ns (0.53%), 1178 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 117032019 ns (0.52%), 1169 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 109060349 ns (0.49%), 1089 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 89310384 ns (0.40%), 892 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 82232703 ns (0.37%), 821 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 77872520 ns (0.35%), 778 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 67958301 ns (0.30%), 679 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 57657800 ns (0.26%), 576 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 55016059 ns (0.25%), 539 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 53970736 ns (0.24%), 539 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 50050186 ns (0.22%), 500 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 47123381 ns (0.21%), 471 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x00000008010030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 46240309 ns (0.21%), 462 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 42759235 ns (0.19%), 427 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 42079625 ns (0.19%), 373 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 4] .annobin__ZN6Thread8call_runEv.start
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 41937346 ns (0.19%), 419 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 39743639 ns (0.18%), 397 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 34914480 ns (0.16%), 350 samples
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 33412913 ns (0.15%), 334 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 28116356 ns (0.13%), 281 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 28055397 ns (0.13%), 280 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 26993613 ns (0.12%), 270 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 25866339 ns (0.12%), 258 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 25829053 ns (0.12%), 258 samples
  [ 0] Storage.buildTreeDepth
  [ 1] [unknown_Java]

--- 22934635 ns (0.10%), 229 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 21616885 ns (0.10%), 216 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 20919123 ns (0.09%), 209 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 20219464 ns (0.09%), 202 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 19319455 ns (0.09%), 193 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 17922223 ns (0.08%), 179 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 17635685 ns (0.08%), 176 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 16307751 ns (0.07%), 163 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 16224994 ns (0.07%), 162 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 16124355 ns (0.07%), 161 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 15930933 ns (0.07%), 159 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 15709931 ns (0.07%), 157 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 15006002 ns (0.07%), 150 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 12322424 ns (0.06%), 123 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 11726273 ns (0.05%), 117 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 11604921 ns (0.05%), 116 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 11408021 ns (0.05%), 114 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 11079883 ns (0.05%), 109 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 10821694 ns (0.05%), 108 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 10710573 ns (0.05%), 107 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.benchmark
  [17] Benchmark.innerBenchmarkLoop
  [18] Run.measure
  [19] Run.doRuns
  [20] Run.runBenchmark
  [21] Harness.main

--- 9326964 ns (0.04%), 89 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] .annobin__ZN17G1RemSetScanState20G1ClearCardTableTask7do_workEj.start
  [ 2] G1BatchedGangTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] .annobin__ZN6Thread8call_runEv.start
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 9009614 ns (0.04%), 90 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 8948662 ns (0.04%), 87 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 8707511 ns (0.04%), 87 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 7807052 ns (0.03%), 78 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 7127451 ns (0.03%), 70 samples
  [ 0] clear_page_rep_[k]
  [ 1] clear_huge_page_[k]
  [ 2] __do_huge_pmd_anonymous_page_[k]
  [ 3] __handle_mm_fault_[k]
  [ 4] handle_mm_fault_[k]
  [ 5] do_user_addr_fault_[k]
  [ 6] exc_page_fault_[k]
  [ 7] asm_exc_page_fault_[k]
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.lambda$buildTreeDepth$0
  [26] Storage$$Lambda$2.0x00000008010030f0.apply
  [27] java.util.Arrays.setAll
  [28] Storage.buildTreeDepth
  [29] Storage.lambda$buildTreeDepth$0
  [30] Storage$$Lambda$2.0x00000008010030f0.apply
  [31] java.util.Arrays.setAll
  [32] Storage.buildTreeDepth
  [33] Storage.benchmark
  [34] Benchmark.innerBenchmarkLoop
  [35] Run.measure
  [36] Run.doRuns
  [37] Run.runBenchmark
  [38] Harness.main

--- 6830111 ns (0.03%), 67 samples
  [ 0] clear_page_rep_[k]
  [ 1] clear_huge_page_[k]
  [ 2] __do_huge_pmd_anonymous_page_[k]
  [ 3] __handle_mm_fault_[k]
  [ 4] handle_mm_fault_[k]
  [ 5] do_user_addr_fault_[k]
  [ 6] exc_page_fault_[k]
  [ 7] asm_exc_page_fault_[k]
  [ 8] ObjArrayAllocator::initialize(HeapWordImpl**) const
  [ 9] MemAllocator::allocate() const
  [10] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [11] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.lambda$buildTreeDepth$0
  [26] Storage$$Lambda$2.0x00000008010030f0.apply
  [27] java.util.Arrays.setAll
  [28] Storage.buildTreeDepth
  [29] Storage.lambda$buildTreeDepth$0
  [30] Storage$$Lambda$2.0x00000008010030f0.apply
  [31] java.util.Arrays.setAll
  [32] Storage.buildTreeDepth
  [33] Storage.lambda$buildTreeDepth$0
  [34] Storage$$Lambda$2.0x00000008010030f0.apply
  [35] java.util.Arrays.setAll
  [36] Storage.buildTreeDepth
  [37] Storage.lambda$buildTreeDepth$0
  [38] Storage$$Lambda$2.0x00000008010030f0.apply
  [39] java.util.Arrays.setAll
  [40] Storage.buildTreeDepth
  [41] Storage.benchmark
  [42] Benchmark.innerBenchmarkLoop
  [43] Run.measure
  [44] Run.doRuns
  [45] Run.runBenchmark
  [46] Harness.main

--- 6694501 ns (0.03%), 61 samples
  [ 0] .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 6495241 ns (0.03%), 65 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 6307362 ns (0.03%), 63 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 6114502 ns (0.03%), 61 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 6070250 ns (0.03%), 55 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] HeapRegionManager::rebuild_free_list(WorkGang*)
  [11] G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [13] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [14] VM_G1CollectForAllocation::doit()
  [15] VM_Operation::evaluate()
  [16] VMThread::evaluate_operation(VM_Operation*)
  [17] VMThread::inner_execute(VM_Operation*)
  [18] VMThread::run()
  [19] .annobin__ZN6Thread8call_runEv.start
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 5913110 ns (0.03%), 59 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 5634942 ns (0.03%), 56 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 5523003 ns (0.02%), 50 samples
  [ 0] G1FromCardCache::clear(unsigned int)
  [ 1] HeapRegionRemSet::clear_locked(bool)
  [ 2] HeapRegion::hr_clear(bool)
  [ 3] G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*)
  [ 4] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 6] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 7] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 8] G1BatchedGangTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 5318102 ns (0.02%), 53 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 4] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x00000008010030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 5297143 ns (0.02%), 50 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] SafepointSynchronize::do_cleanup_tasks()
  [11] SafepointSynchronize::begin()
  [12] VMThread::inner_execute(VM_Operation*)
  [13] VMThread::run()
  [14] .annobin__ZN6Thread8call_runEv.start
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 5086460 ns (0.02%), 49 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 4] VM_G1CollectForAllocation::doit()
  [ 5] VM_Operation::evaluate()
  [ 6] VMThread::evaluate_operation(VM_Operation*)
  [ 7] VMThread::inner_execute(VM_Operation*)
  [ 8] VMThread::run()
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 4829632 ns (0.02%), 42 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 4709211 ns (0.02%), 47 samples
  [ 0] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 1] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x00000008010030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda$2.0x00000008010030f0.apply
  [25] java.util.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.benchmark
  [28] Benchmark.innerBenchmarkLoop
  [29] Run.measure
  [30] Run.doRuns
  [31] Run.runBenchmark
  [32] Harness.main

--- 4707142 ns (0.02%), 47 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 4507911 ns (0.02%), 41 samples
  [ 0] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 4] G1BatchedGangTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 4409300 ns (0.02%), 44 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 4350091 ns (0.02%), 39 samples
  [ 0] G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*)
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] .annobin__ZN20G1MergeHeapRootsTask4workEj.start
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 4225985 ns (0.02%), 42 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 4205854 ns (0.02%), 37 samples
  [ 0] malloc

--- 4204964 ns (0.02%), 42 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 4137260 ns (0.02%), 41 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 4066620 ns (0.02%), 37 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [11] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [13] VM_G1CollectForAllocation::doit()
  [14] VM_Operation::evaluate()
  [15] VMThread::evaluate_operation(VM_Operation*)
  [16] VMThread::inner_execute(VM_Operation*)
  [17] VMThread::run()
  [18] .annobin__ZN6Thread8call_runEv.start
  [19] thread_native_entry(Thread*)
  [20] start_thread

--- 4013960 ns (0.02%), 35 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] ___pthread_cond_broadcast

--- 4003373 ns (0.02%), 35 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __lll_lock_wake
  [ 9] G1ParEvacuateFollowersClosure::do_void()
  [10] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [11] G1EvacuateRegionsBaseTask::work(unsigned int)
  [12] GangWorker::loop()
  [13] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [14] .annobin__ZN6Thread8call_runEv.start
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 3806581 ns (0.02%), 35 samples
  [ 0] HeapRegionClaimer::claim_region(unsigned int)
  [ 1] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 2] .annobin__ZN20G1MergeHeapRootsTask4workEj.start
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] .annobin__ZN6Thread8call_runEv.start
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 3802451 ns (0.02%), 38 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 3634652 ns (0.02%), 34 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1CollectedHeap::post_evacuate_cleanup_2(PreservedMarksSet*, G1RedirtyCardsQueueSet*, G1EvacuationInfo*, unsigned long const*)
  [11] G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [13] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [14] VM_G1CollectForAllocation::doit()
  [15] VM_Operation::evaluate()
  [16] VMThread::evaluate_operation(VM_Operation*)
  [17] VMThread::inner_execute(VM_Operation*)
  [18] VMThread::run()
  [19] .annobin__ZN6Thread8call_runEv.start
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 3509360 ns (0.02%), 35 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
  9827519425   43.92%    98174  Storage.buildTreeDepth
  7864091658   35.14%    78557  java.util.Arrays.setAll
  2547070020   11.38%    25442  som.Random.next
   773355736    3.46%     7726  Storage.lambda$buildTreeDepth$0
   240959568    1.08%     2406  java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
   124017266    0.55%     1238  Storage$$Lambda$2.0x00000008010030f0.<init>
   118526759    0.53%     1184  Storage$$Lambda$2.0x00000008010030f0.apply
   116270560    0.52%     1161  java.lang.invoke.DirectMethodHandle.allocateInstance
    70528462    0.32%      692  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
    46967686    0.21%      431  _raw_spin_unlock_irqrestore_[k]
    42190895    0.19%      374  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
    34914480    0.16%      350  SpinPause
    24876509    0.11%      242  __memset_avx2_unaligned_erms
    20811085    0.09%      204  clear_page_rep_[k]
    13145664    0.06%      117  [vdso]
     9464142    0.04%       94  Benchmark.innerBenchmarkLoop
     9347912    0.04%       91  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
     8285293    0.04%       77  G1FromCardCache::clear(unsigned int)
     7011091    0.03%       63  .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
     6717991    0.03%       67  InstanceKlass::allocate_objArray(int, int, JavaThread*)
     6571713    0.03%       60  HeapRegionClaimer::claim_region(unsigned int)
     6137892    0.03%       59  __tls_get_addr
     5525021    0.02%       55  G1Allocator::unsafe_max_tlab_alloc()
     5171894    0.02%       45  malloc
     5159092    0.02%       46  syscall_enter_from_user_mode_[k]
     5004541    0.02%       50  G1Policy::preventive_collection_required(unsigned int)
     4712211    0.02%       43  FreeCSetClosure::do_heap_region(HeapRegion*)
     4644481    0.02%       46  ObjArrayAllocator::initialize(HeapWordImpl**) const
     4565661    0.02%       41  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*)
     4010131    0.02%       40  OptoRuntime::new_array_C(Klass*, int, JavaThread*)
     3812610    0.02%       34  _int_malloc
     3716850    0.02%       37  Storage.benchmark
     3669801    0.02%       34  futex_wake_[k]
     3634700    0.02%       36  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
     3406060    0.02%       34  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
     3314910    0.01%       33  G1CollectedHeap::attempt_allocation_slow(unsigned long)
     3214912    0.01%       30  G1RebuildFreeListTask::work(unsigned int)
     3213600    0.01%       32  MemAllocator::allocate() const
     3212670    0.01%       32  G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
     3197290    0.01%       28  Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
     3023343    0.01%       30  Interpreter
     2994382    0.01%       28  G1BlockOffsetTablePart::zero_bottom_entry_raw()
     2994070    0.01%       27  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*)
     2938240    0.01%       26  clock_gettime@GLIBC_2.2.5
     2835901    0.01%       26  G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
     2752940    0.01%       25  native_queued_spin_lock_slowpath_[k]
     2505661    0.01%       25  ClassLoaderData::holder_phantom() const
     2402190    0.01%       24  __GI___pthread_mutex_trylock
     2336802    0.01%       21  os::javaTimeNanos()
     2323392    0.01%       23  G1CardTable::g1_mark_as_young(MemRegion const&)
     2312680    0.01%       23  G1CollectionSet::add_eden_region(HeapRegion*)
     2308982    0.01%       23  G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const
     2260650    0.01%       20  futex_wait_[k]
     2197370    0.01%       22  _dl_update_slotinfo
     2188921    0.01%       20  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker()
     2133421    0.01%       21  .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
     2111180    0.01%       21  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
     2064590    0.01%       19  os::free(void*)
     2016720    0.01%       18  GangWorker::loop()
     1995211    0.01%       18  futex_q_lock_[k]
     1814531    0.01%       16  __futex_abstimed_wait_common
     1762180    0.01%       16  G1SurvRateGroup::record_surviving_words(int, unsigned long)
     1733661    0.01%       15  finish_task_switch.isra.0_[k]
     1731700    0.01%       16  __new_sem_wait_slow64.constprop.0
     1706311    0.01%       17  .annobin__ZN25JfrObjectAllocationSample10send_eventEPK5KlassmbP6Thread.start
     1689810    0.01%       17  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     1688941    0.01%       16  pthread_mutex_lock@@GLIBC_2.2.5
     1643480    0.01%       16  G1DirtyCardQueueSet::num_par_ids()
     1603321    0.01%       16  CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*)
     1527592    0.01%       14  G1RemSet::prepare_region_for_scan(HeapRegion*)
     1514110    0.01%       15  G1NUMA::index_of_current_thread() const
     1507050    0.01%       15  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     1499420    0.01%       15  _IO_default_xsputn
     1460032    0.01%       12  GCIdMark::GCIdMark(unsigned int)
     1457611    0.01%       13  JNIHandleBlock::oops_do(OopClosure*)
     1418271    0.01%       14  HandleMark::initialize(Thread*)
     1404730    0.01%       14  MemAllocator::Allocation::notify_allocation_jfr_sampler()
     1402540    0.01%       14  .annobin__ZNK11G1CardTable11is_in_youngEP7oopDesc.start
     1402102    0.01%       13  futex_wake_mark_[k]
     1361062    0.01%       13  sem_post@GLIBC_2.2.5
     1357191    0.01%       12  os::elapsed_counter()
     1304771    0.01%       13  G1Analytics::predict_scan_card_num(unsigned long, bool) const
     1304570    0.01%       13  HeapRegion::set_eden()
     1297040    0.01%       12  do_futex_[k]
     1277801    0.01%       11  CompositeElapsedCounterSource::seconds(PairRep<long, long>)
     1277541    0.01%       12  .annobin__ZN13WeakProcessor4Task4workI19G1STWIsAliveClosure18G1KeepAliveClosureEEvjPT_PT0_.start
     1251480    0.01%       12  ConstantPool::impl_signature_ref_at(int, bool)
     1248370    0.01%       11  G1Policy::phase_times() const
     1217800    0.01%       12  __memmove_avx_unaligned_erms
     1213430    0.01%       11  plist_add_[k]
     1206901    0.01%       12  HSpaceCounters::update_used(unsigned long)
     1187760    0.01%       11  TruncatedSeq::add(double)
     1160430    0.01%       10  G1ParCopyClosure<(G1Barrier)0, false>::do_oop(oopDesc**)
     1146760    0.01%       10  .annobin__ZN20G1MergeHeapRootsTask4workEj.start
     1116520    0.00%       11  OtherRegionsTable::occupied() const
     1104970    0.00%       10  get_futex_key_[k]
     1104540    0.00%       10  __schedule_[k]
     1104470    0.00%       11  ThreadLocalAllocBuffer::retire_before_allocation()
     1104450    0.00%       11  .annobin__ZN11AllocTracer27send_allocation_in_new_tlabEP5KlassPP12HeapWordImplmmP10JavaThread.start
     1103131    0.00%       11  MutatorAllocRegion::retire(bool)
     1100010    0.00%       11  G1RegionsOnNodes::add(HeapRegion*)
     1099550    0.00%       11  update_get_addr
     1097150    0.00%       11  __vfprintf_internal
     1094030    0.00%       10  futex_hash_[k]
     1073951    0.00%       10  __get_user_nocheck_4_[k]
     1063370    0.00%       10  .annobin__ZN17G1RemSetScanState20G1ClearCardTableTask7do_workEj.start
     1051431    0.00%       10  CollectedHeap::tlab_alloc_reserve() const
     1049761    0.00%       10  CompositeElapsedCounterSource::now()
     1031590    0.00%        9  .annobin__ZN24G1GCParPhaseTimesTrackerC2EP14G1GCPhaseTimesNS0_11GCParPhasesEjb.start
     1029761    0.00%       10  __x64_sys_futex_[k]
     1028420    0.00%       10  __memset_avx2_unaligned
     1008950    0.00%       10  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
      999011    0.00%       10  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
      997070    0.00%       10  LinearScan::build_intervals()
      995750    0.00%       10  LinearScanWalker::alloc_free_reg(Interval*)
      967270    0.00%        9  HeapRegionType::get_trace_type()
      961630    0.00%        9  G1GCPhaseTimes::record_or_add_thread_work_item(G1GCPhaseTimes::GCParPhases, unsigned int, unsigned long, unsigned int)
      945491    0.00%        9  G1GCPhaseTimes::reset()
      926210    0.00%        9  HeapRegionRemSet::clear_locked(bool)
      920582    0.00%        9  void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
      908781    0.00%        8  G1CodeRootSet::clear()
      908770    0.00%        9  G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*)
      908670    0.00%        8  frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) const
      907091    0.00%        9  CollectedHeap::fill_with_dummy_object(HeapWordImpl**, HeapWordImpl**, bool)
      903680    0.00%        9  Storage.verifyResult
      901512    0.00%        9  ObjAllocator::initialize(HeapWordImpl**) const
      896620    0.00%        9  .annobin_Unsafe_AllocateInstance.start
      887700    0.00%        9  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
      876450    0.00%        8  SparsePRT::clear()
      852930    0.00%        8  ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
      838370    0.00%        8  CodeCache::find_blob(void*)
      817940    0.00%        8  PhaseChaitin::gather_lrg_masks(bool)
      816340    0.00%        8  .annobin__ZN12LeakProfiler10is_runningEv.start
      815450    0.00%        8  G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*, unsigned int)
      813440    0.00%        8  [no_Java_frame]
      807240    0.00%        7  futex_wait_setup_[k]
      804051    0.00%        8  DebugInformationRecorder::find_sharable_decode_offset(int)
      801941    0.00%        8  InstanceKlass::array_klass(int, JavaThread*)
      801840    0.00%        8  G1RemSet::prepare_for_scan_heap_roots()
      801060    0.00%        8  ObjArrayKlass::array_klass(int, JavaThread*)
      799560    0.00%        8  __GI___pthread_mutex_unlock_usercnt
      798380    0.00%        8  LIR_OpVisitState::visit(LIR_Op*)
      797450    0.00%        7  G1CollectedHeap::reset_hot_card_cache()
      795031    0.00%        7  __audit_syscall_entry_[k]
      795001    0.00%        8  LinearScan::allocate_registers()
      782641    0.00%        7  G1BatchedGangTask::work(unsigned int)
      778750    0.00%        7  G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord)
      772331    0.00%        7  __list_add_valid_[k]
      767720    0.00%        7  rmqueue_[k]
      738201    0.00%        7  G1GCPhaseTimes::sum_thread_work_items(G1GCPhaseTimes::GCParPhases, unsigned int)
      730750    0.00%        7  MemAllocator::Allocation::notify_allocation_jvmti_sampler()
      726560    0.00%        7  __tls_get_addr@plt
      725620    0.00%        7  __memcpy_avx_unaligned
      721792    0.00%        7  G1ConcurrentRefine::max_num_threads()
      721750    0.00%        7  stringStream::write(char const*, unsigned long)
      720491    0.00%        7  .annobin__ZN21OopOopIterateDispatchI17G1ScanCardClosureE5Table15oop_oop_iterateI19InstanceMirrorKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
      715130    0.00%        7  Dict::Insert(void*, void*, bool)
      714330    0.00%        7  Node::clone() const
      712491    0.00%        7  G1RemSet::merge_heap_roots(bool)
      710760    0.00%        7  AbsSeq::davg() const
      710610    0.00%        7  G1PLABAllocator::allocate_direct_or_new_plab(G1HeapRegionAttr, unsigned long, bool*, unsigned int)
      708370    0.00%        7  do_user_addr_fault_[k]
      707970    0.00%        7  AbsSeq::dsd() const
      707051    0.00%        7  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
      703330    0.00%        7  G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long)
      700990    0.00%        7  __tls_get_addr_slow
      700910    0.00%        7  HandleMark::~HandleMark()
      698910    0.00%        7  LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind)
      696581    0.00%        7  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
      696560    0.00%        7  MethodLiveness::BasicBlock::compute_gen_kill_single(ciBytecodeStream*)
      680630    0.00%        6  G1PrepareEvacuationTask::work(unsigned int)
      676400    0.00%        6  do_syscall_64_[k]
      662720    0.00%        6  copy_user_generic_string_[k]
      661070    0.00%        6  G1GCPhaseTimes::record_or_add_time_secs(G1GCPhaseTimes::GCParPhases, unsigned int, double)
      654760    0.00%        6  JavaThread::oops_do_no_frames(OopClosure*, CodeBlobClosure*)
      647071    0.00%        6  G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*)
      641750    0.00%        6  OopStorage::BasicParState::default_estimated_thread_count(bool)
      635741    0.00%        6  os::elapsedTime()
      635230    0.00%        6  PLABStats::desired_plab_sz(unsigned int)
      619100    0.00%        6  _int_free
      607820    0.00%        6  GrowableArrayWithAllocator<int, GrowableArray<int> >::grow(int)
      605690    0.00%        6  _invokeBasic
      603450    0.00%        6  ThreadLocalAllocBuffer::fill(HeapWordImpl**, HeapWordImpl**, unsigned long)
      603400    0.00%        6  java.lang.invoke.MethodType.equals
      603280    0.00%        6  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List*, Node_List*, bool)
      603121    0.00%        6  G1MonitoringSupport::update_eden_size()
      602940    0.00%        6  ValueMap::find_insert(Instruction*)
      602850    0.00%        6  PhaseIterGVN::transform_old(Node*)
      602720    0.00%        6  ObjectSampler::is_created()
      602370    0.00%        6  JfrAllocationTracer::JfrAllocationTracer(Klass const*, HeapWordImpl**, unsigned long, bool, JavaThread*)
      602000    0.00%        6  G1Analytics::predict_card_merge_time_ms(unsigned long, bool) const
      600440    0.00%        6  PhaseChaitin::post_allocate_copy_removal()
      599510    0.00%        6  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
      598210    0.00%        6  PhaseIterGVN::add_users_to_worklist(Node*)
      597800    0.00%        6  DebugInformationRecorder::describe_scope(int, methodHandle const&, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*)
      596710    0.00%        6  PhaseIdealLoop::Dominators()
      593090    0.00%        6  Matcher::xform(Node*, int)
      583870    0.00%        5  ___pthread_cond_broadcast
      575691    0.00%        5  free
      574970    0.00%        5  G1PostEvacuateCollectionSetCleanupTask2::RedirtyLoggedCardsTask::do_work(unsigned int)
