--- Execution profile ---
Total samples       : 5287884
not_walkable_not_Java: 3 (0.00%)
unknown_Java        : 10980 (0.21%)
not_walkable_Java   : 1683 (0.03%)
deoptimization      : 834 (0.02%)

--- 3510251807 ns (6.49%), 344640 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 3] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2609253423 ns (4.82%), 256523 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda$3.0x000000080100c000.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2428792440 ns (4.49%), 240225 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.reduceCollisionSet
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 2144363853 ns (3.96%), 211338 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1781208632 ns (3.29%), 174932 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1140273964 ns (2.11%), 111927 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1072917651 ns (1.98%), 105265 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 884548496 ns (1.63%), 86791 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 1] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 679429625 ns (1.26%), 66692 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 671176038 ns (1.24%), 66077 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 614188761 ns (1.13%), 60295 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 584461864 ns (1.08%), 57440 samples
  [ 0] Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
  [ 1] Node::replace_edge(Node*, Node*, PhaseGVN*)
  [ 2] PhaseIterGVN::remove_globally_dead_node(Node*)
  [ 3] PhaseIterGVN::subsume_node(Node*, Node*)
  [ 4] PhaseIterGVN::transform_old(Node*)
  [ 5] PhaseIterGVN::optimize()
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] .annobin__ZN6Thread8call_runEv.start
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 444460302 ns (0.82%), 43833 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 413554776 ns (0.76%), 40653 samples
  [ 0] libmSin
  [ 1] cd.Simulator.simulate
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 391145437 ns (0.72%), 38507 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda$3.0x000000080100c000.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 387215347 ns (0.72%), 38075 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 386181671 ns (0.71%), 37941 samples
  [ 0] libmCos
  [ 1] cd.Simulator.simulate
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 375568956 ns (0.69%), 36850 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 356227041 ns (0.66%), 35023 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 349898953 ns (0.65%), 34496 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 339031127 ns (0.63%), 33373 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda$3.0x000000080100c000.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 333803588 ns (0.62%), 32792 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 284635286 ns (0.53%), 27966 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 281311565 ns (0.52%), 27655 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda$3.0x000000080100c000.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 277962307 ns (0.51%), 27386 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 277240328 ns (0.51%), 27130 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 270394278 ns (0.50%), 26568 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 260171737 ns (0.48%), 25564 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 255187518 ns (0.47%), 25193 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 241664073 ns (0.45%), 23796 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] som.Vector.append
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 238490473 ns (0.44%), 23415 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 233487072 ns (0.43%), 22967 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 227591384 ns (0.42%), 22278 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 221672513 ns (0.41%), 21899 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] cd.Simulator.simulate
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 213936174 ns (0.40%), 21063 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 205156652 ns (0.38%), 20232 samples
  [ 0] cd.RedBlackTree.rightRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 197072949 ns (0.36%), 19369 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 1] cd.CollisionDetector$$Lambda$3.0x000000080100c000.apply
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 196580295 ns (0.36%), 19337 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.findNode
  [ 3] cd.RedBlackTree.get
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 5] cd.CollisionDetector$$Lambda$3.0x000000080100c000.apply
  [ 6] cd.RedBlackTree.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 196344895 ns (0.36%), 19288 samples
  [ 0] PhaseIterGVN::subsume_node(Node*, Node*)
  [ 1] PhaseIterGVN::transform_old(Node*)
  [ 2] PhaseIterGVN::optimize()
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 190276090 ns (0.35%), 18704 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 182958479 ns (0.34%), 18056 samples
  [ 0] cd.CollisionDetector.lambda$reduceCollisionSet$5
  [ 1] cd.CollisionDetector$$Lambda$6.0x000000080100c678.apply
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 179271647 ns (0.33%), 17599 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 178880285 ns (0.33%), 17511 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 163884795 ns (0.30%), 16111 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 158616398 ns (0.29%), 15612 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 138785514 ns (0.26%), 13679 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 133237556 ns (0.25%), 13125 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 128024010 ns (0.24%), 12500 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] .annobin__ZN6Thread8call_runEv.start
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 120274533 ns (0.22%), 11860 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 118047397 ns (0.22%), 11474 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 112924124 ns (0.21%), 11092 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda$3.0x000000080100c000.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 111446728 ns (0.21%), 10894 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 107672459 ns (0.20%), 10589 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 104263942 ns (0.19%), 10241 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 6] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 100720948 ns (0.19%), 9920 samples
  [ 0] Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
  [ 1] Node::replace_edge(Node*, Node*, PhaseGVN*)
  [ 2] PhaseIterGVN::remove_globally_dead_node(Node*)
  [ 3] PhaseIterGVN::optimize()
  [ 4] Compile::Optimize()
  [ 5] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 6] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] .annobin__ZN6Thread8call_runEv.start
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 99540164 ns (0.18%), 8360 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 94512710 ns (0.17%), 9244 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 93741188 ns (0.17%), 9232 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 92625045 ns (0.17%), 9150 samples
  [ 0] cd.Simulator.simulate
  [ 1] CD.benchmark
  [ 2] CD.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 92326216 ns (0.17%), 9011 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 92015154 ns (0.17%), 8961 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 91008737 ns (0.17%), 8992 samples
  [ 0] cd.RedBlackTree.rightRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 90958383 ns (0.17%), 8934 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 89693673 ns (0.17%), 8758 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 87615283 ns (0.16%), 8539 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 86474174 ns (0.16%), 8458 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 86068464 ns (0.16%), 8490 samples
  [ 0] Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.0]
  [ 1] ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray<PhiNode*>&, bool&)
  [ 2] ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray<PhiNode*>&)
  [ 3] ConnectionGraph::find_inst_mem(Node*, int, GrowableArray<PhiNode*>&)
  [ 4] ConnectionGraph::split_unique_types(GrowableArray<Node*>&, GrowableArray<ArrayCopyNode*>&)
  [ 5] ConnectionGraph::compute_escape()
  [ 6] ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*)
  [ 7] Compile::Optimize()
  [ 8] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 9] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] .annobin__ZN6Thread8call_runEv.start
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 77231447 ns (0.14%), 7898 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 75433130 ns (0.14%), 7502 samples
  [ 0] Arena::contains(void const*) const
  [ 1] Matcher::match()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] .annobin__ZN6Thread8call_runEv.start
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 74512606 ns (0.14%), 7599 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 72098428 ns (0.13%), 7079 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 69085990 ns (0.13%), 6749 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 68940648 ns (0.13%), 6822 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 68319264 ns (0.13%), 6749 samples
  [ 0] cd.RedBlackTree.rightRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 66970752 ns (0.12%), 6572 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 1] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 64045989 ns (0.12%), 6311 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 63293583 ns (0.12%), 6228 samples
  [ 0] cd.Motion.findIntersection
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$3
  [ 2] cd.CollisionDetector$$Lambda$7.0x000000080100c8a0.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 62872016 ns (0.12%), 6164 samples
  [ 0] cd.CollisionDetector.putIntoMap
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 62622622 ns (0.12%), 6151 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 62493445 ns (0.12%), 6372 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 62397464 ns (0.12%), 6107 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 62187531 ns (0.11%), 6355 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 61844740 ns (0.11%), 6033 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 60791387 ns (0.11%), 5935 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 60766220 ns (0.11%), 5833 samples
  [ 0] Node::remove_dead_region(PhaseGVN*, bool)
  [ 1] CallStaticJavaNode::Ideal(PhaseGVN*, bool)
  [ 2] PhaseIterGVN::transform_old(Node*)
  [ 3] PhaseIterGVN::optimize()
  [ 4] PhaseMacroExpand::expand_macro_nodes()
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 60652230 ns (0.11%), 5904 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.recurse
  [ 8] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 9] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [10] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [11] som.Vector.forEach
  [12] cd.CollisionDetector.reduceCollisionSet
  [13] cd.CollisionDetector.handleNewFrame
  [14] CD.benchmark
  [15] CD.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 60603063 ns (0.11%), 6000 samples
  [ 0] PhaseChaitin::elide_copy(Node*, int, Block*, Node_List*, Node_List*, bool)
  [ 1] PhaseChaitin::post_allocate_copy_removal()
  [ 2] PhaseChaitin::Register_Allocate()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 59532626 ns (0.11%), 5832 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 59263873 ns (0.11%), 5857 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 58363878 ns (0.11%), 5720 samples
  [ 0] cd.Motion.findIntersection
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$3
  [ 2] cd.CollisionDetector$$Lambda$7.0x000000080100c8a0.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 57916100 ns (0.11%), 5808 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 57206751 ns (0.11%), 5621 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 55237624 ns (0.10%), 5381 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.recurse
  [ 8] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 9] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [10] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [11] som.Vector.forEach
  [12] cd.CollisionDetector.reduceCollisionSet
  [13] cd.CollisionDetector.handleNewFrame
  [14] CD.benchmark
  [15] CD.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 54946364 ns (0.10%), 5548 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 54412883 ns (0.10%), 5261 samples
  [ 0] PhaseAggressiveCoalesce::insert_copies(Matcher&)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] .annobin__ZN6Thread8call_runEv.start
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 53827767 ns (0.10%), 5270 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.putIntoMap
  [ 5] cd.CollisionDetector.recurse
  [ 6] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 7] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 8] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 9] som.Vector.forEach
  [10] cd.CollisionDetector.reduceCollisionSet
  [11] cd.CollisionDetector.handleNewFrame
  [12] CD.benchmark
  [13] CD.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 53754698 ns (0.10%), 5284 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 53469429 ns (0.10%), 5240 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 53420184 ns (0.10%), 5291 samples
  [ 0] PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
  [ 1] .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
  [ 2] PhaseChaitin::Register_Allocate()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 52974853 ns (0.10%), 5208 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 5] cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 10434175941   19.28%  1023527  cd.RedBlackTree.treeInsert
  6992239059   12.92%   690387  cd.CollisionDetector.isInVoxel
  5513718752   10.19%   541319  cd.CollisionDetector.recurse
  4187107391    7.74%   411960  cd.RedBlackTree.findNode
  3715149534    6.86%   364948  cd.RedBlackTree.put
  3535812992    6.53%   348276  cd.RedBlackTree.treeMinimum
  2985571954    5.52%   294887  cd.RedBlackTree.forEach
  1483043317    2.74%   145245  cd.Vector2D.compareNumbers
  1219345366    2.25%   119826  cd.RedBlackTree.leftRotate
   984272323    1.82%    96573  cd.CollisionDetector.lambda$handleNewFrame$0
   883050888    1.63%    86804  cd.RedBlackTree.rightRotate
   767753340    1.42%    75332  Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
   597271492    1.10%    58756  som.Vector.append
   421532170    0.78%    41432  libmSin
   408916590    0.76%    40191  cd.CallSign.compareTo
   394449322    0.73%    38746  libmCos
   382081513    0.71%    37404  cd.Vector2D.compareTo
   351756648    0.65%    31970  Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.0]
   310808892    0.57%    30581  java.util.Arrays.copyOf
   289660982    0.54%    28528  cd.Simulator.simulate
   286907237    0.53%    28280  som.Vector.<init>
   274876061    0.51%    27021  cd.Motion.findIntersection
   251089058    0.46%    24619  cd.CollisionDetector.putIntoMap
   245263975    0.45%    24134  cd.CollisionDetector.lambda$handleNewFrame$1
   217764181    0.40%    21485  cd.CollisionDetector.lambda$reduceCollisionSet$5
   205773767    0.38%    20209  PhaseIterGVN::subsume_node(Node*, Node*)
   197035318    0.36%    19461  cd.Vector2D.plus
   160073244    0.30%    14372  ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray<PhiNode*>&, bool&)
   135856526    0.25%    13367  cd.Vector2D.minus
   132454397    0.24%    11326  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
   128085250    0.24%    12506  PhaseChaitin::Split(unsigned int, ResourceArea*)
   118033050    0.22%    11486  som.Vector.forEach
   104234921    0.19%    10289  IndexSetIterator::advance_and_next()
    92852742    0.17%     9128  cd.RedBlackTree$Node.successor
    89537059    0.17%     8833  cd.Vector2D.<init>
    81773277    0.15%     8023  jint_disjoint_arraycopy
    76771030    0.14%     7633  Arena::contains(void const*) const
    71315712    0.13%     6946  itable stub
    65851849    0.12%     6497  PhaseChaitin::gather_lrg_masks(bool)
    65574451    0.12%     6289  Node::remove_dead_region(PhaseGVN*, bool)
    64726363    0.12%     5900  ConnectionGraph::find_inst_mem(Node*, int, GrowableArray<PhiNode*>&)
    63687392    0.12%     5689  __memset_avx2_unaligned_erms
    62900786    0.12%     3661  _raw_spin_unlock_irqrestore_[k]
    61969284    0.11%     6097  cd.Vector3D.minus
    60682973    0.11%     6008  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List*, Node_List*, bool)
    60357964    0.11%     5976  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
    57747932    0.11%     5733  cd.CollisionDetector.voxelHash
    55331338    0.10%     5421  cd.CollisionDetector$$Lambda$2.0x0000000801007618.apply
    55313195    0.10%     5476  PhaseLive::compute(unsigned int)
    54412883    0.10%     5261  PhaseAggressiveCoalesce::insert_copies(Matcher&)
    51558552    0.10%     5036  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
    50538205    0.09%     4981  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
    48356523    0.09%     4787  PhaseChaitin::post_allocate_copy_removal()
    46591617    0.09%     4229  Compile::flatten_alias_type(TypePtr const*) const
    45083708    0.08%     4442  som.Vector.at
    44955602    0.08%     4373  PhaseIterGVN::add_users_to_worklist(Node*)
    43589249    0.08%     4281  PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
    42851677    0.08%     4003  CD.benchmark
    39848358    0.07%     3888  cd.RedBlackTree$Node.<init>
    37996612    0.07%     3757  RegionNode::is_unreachable_from_root(PhaseGVN const*) const
    37137038    0.07%     3496  PhiNode::unique_input(PhaseTransform*, bool)
    37085659    0.07%     3609  g1_post_barrier_slow
    35844966    0.07%     3216  __tls_get_addr
    35809731    0.07%     3511  Unique_Node_List::remove(Node*)
    35648807    0.07%     3477  java.lang.Object.<init>
    34068568    0.06%     3296  Node::dominates(Node*, Node_List&)
    33977063    0.06%     3256  NodeHash::hash_find_insert(Node*)
    32070652    0.06%     3135  PhiNode::Ideal(PhaseGVN*, bool)
    31813808    0.06%     3127  cd.RedBlackTree.get
    31582052    0.06%     3139  .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
    31273920    0.06%     3083  cd.Vector3D.<init>
    30113473    0.06%     2944  PhaseIterGVN::transform_old(Node*)
    27895844    0.05%     2410  .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
    26981050    0.05%     2670  PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&)
    26781614    0.05%     1766  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
    26494588    0.05%     2614  IndexSet::initialize(unsigned int)
    25853896    0.05%     2532  PhaseOutput::BuildOopMaps()
    25822226    0.05%     2527  PhaseIdealLoop::Dominators()
    25593246    0.05%     2496  cd.CollisionDetector$$Lambda$5.0x000000080100c450.apply
    24944875    0.05%     2486  Matcher::xform(Node*, int)
    24433897    0.05%     2278  Dict::Insert(void*, void*, bool)
    23876794    0.04%     2345  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
    23356726    0.04%     2223  .annobin__ZN14PhaseIdealLoop15build_loop_treeEv.start
    23089660    0.04%     2280  cd.CollisionDetector.lambda$handleNewFrame$3
    22394075    0.04%     2186  Node::del_req(unsigned int)
    21899815    0.04%     1610  generic_exec_single_[k]
    20246388    0.04%     1906  Compile::identify_useful_nodes(Unique_Node_List&)
    19910743    0.04%     1851  SpinPause
    19802722    0.04%     1954  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
    19419392    0.04%     1910  IndexSet::alloc_block_containing(unsigned int)
    19350704    0.04%     1889  PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*)
    19091593    0.04%     1747  ciInstanceKlass::get_field_by_offset(int, bool)
    18964802    0.04%     1852  MergeMemNode::Ideal(PhaseGVN*, bool)
    18482535    0.03%     1835  PhaseChaitin::merge_multidefs()
    18397014    0.03%     1823  PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&, PhaseChaitin::Pressure&)
    18186555    0.03%     1792  PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*)
    18106985    0.03%     1700  Compile::disconnect_useless_nodes(Unique_Node_List&, Unique_Node_List*)
    17939641    0.03%     1080  [vdso]
    17514746    0.03%     1655  Interpreter
    17337826    0.03%     1697  TypeNode::hash() const
    17220056    0.03%     1707  PhaseIFG::effective_degree(unsigned int) const
    17105265    0.03%     1520  clear_page_rep_[k]
    16862777    0.03%     1666  PhaseCCP::analyze()
    16332432    0.03%     1596  .annobin__ZNK7PhiNode5ValueEP8PhaseGVN.start
    16311912    0.03%     1568  som.Vector.size
    16174072    0.03%     1498  Node::Node(unsigned int)
    15740523    0.03%     1547  PhaseIterGVN::optimize()
    15585012    0.03%     1499  Node::clone() const
    15314742    0.03%     1446  __memmove_avx_unaligned_erms
    15278163    0.03%     1514  PhaseChaitin::Select()
    15240663    0.03%     1508  IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&)
    14957715    0.03%     1481  PhaseIFG::remove_node(unsigned int)
    14872643    0.03%     1477  Matcher::find_shared(Node*)
    14772647    0.03%     1454  Matcher::Label_Root(Node const*, State*, Node*, Node*&)
    14769093    0.03%     1454  .annobin__ZN22Node_Backward_Iterator4nextEv.start
    14765854    0.03%     1345  MergeMemNode::memory_at(unsigned int) const
    13817541    0.03%     1356  PhaseIdealLoop::get_late_ctrl_with_anti_dep(LoadNode*, Node*, Node*)
    13740907    0.03%     1097  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
    13644631    0.03%     1337  PhaseIdealLoop::get_ctrl(Node*) [clone .isra.0]
    13610372    0.03%     1283  Compile::copy_node_notes_to(Node*, Node*)
    13549774    0.03%     1328  Node::is_CFG() const
    13385322    0.02%     1328  PhaseCFG::schedule_local(Block*, GrowableArray<int>&, VectorSet&, long*)
    13233354    0.02%     1293  Node::rematerialize() const
    13108364    0.02%     1299  cd.CollisionDetector$$Lambda$6.0x000000080100c678.apply
    12971556    0.02%     1198  Compile::final_graph_reshaping_walk(Node_Stack&, Node*, Final_Reshape_Counts&)
    12384683    0.02%     1225  PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&, IndexSet*, unsigned int&) [clone .part.0]
    12363872    0.02%     1220  cd.Vector3D.plus
    12211015    0.02%     1093  do_user_addr_fault_[k]
    12065312    0.02%     1179  PhaseIdealLoop::is_dominator(Node*, Node*)
    11929893    0.02%     1183  PhaseIFG::SquareUp()
    11186855    0.02%     1063  MultiNode::proj_out_or_null(unsigned int) const
    10977014    0.02%     1027  Node::add_req(Node*)
    10950801    0.02%     1060  PhaseIterGVN::remove_globally_dead_node(Node*)
    10910604    0.02%     1077  PhaseOutput::fill_buffer(CodeBuffer*, unsigned int*)
    10904885    0.02%     1022  Type::cmp(Type const*, Type const*)
    10838152    0.02%     1073  PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.0]
    10780942    0.02%     1060  NTarjan::DFS(NTarjan*, VectorSet&, PhaseIdealLoop*, unsigned int*)
    10770992    0.02%     1067  PhaseIFG::re_insert(unsigned int)
    10739722    0.02%      995  Node::out_grow(unsigned int)
    10645562    0.02%      971  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
    10517011    0.02%     1012  Compile::start() const
    10234972    0.02%      991  DebugInformationRecorder::find_sharable_decode_offset(int)
    10209141    0.02%     1001  PhaseIdealLoop::get_early_ctrl(Node*)
    10124113    0.02%      992  PhiNode::wait_for_region_igvn(PhaseGVN*)
    10114162    0.02%      954  TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int)
     9919101    0.02%      986  Matcher::match_tree(Node const*)
     9799735    0.02%      886  ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray<PhiNode*>&)
     9705752    0.02%      957  PhiNode::is_unsafe_data_reference(Node*) const [clone .part.0]
     9504664    0.02%      718  rmqueue_[k]
     9443041    0.02%      926  MachNode::rematerialize() const
     9385843    0.02%      929  PhaseCFG::schedule_pinned_nodes(VectorSet&)
     9380423    0.02%      869  __memcpy_avx_unaligned
     9274421    0.02%      909  .annobin__ZNK8MachNode9ideal_regEv.start
     9122942    0.02%      698  G1FromCardCache::clear(unsigned int)
     9116493    0.02%      780  .annobin__ZN12MergeMemNode13set_memory_atEjP4Node.start
     8986343    0.02%      886  IndexSet::IndexSet(IndexSet*)
     8967454    0.02%      875  MultiNode::is_CFG() const
     8906881    0.02%      888  PhaseChaitin::Simplify()
     8872874    0.02%      875  ProjNode::pinned() const
     8872471    0.02%      868  .annobin__ZNK4Node6pinnedEv.start
     8872222    0.02%      874  Node::is_dead_loop_safe() const
     8842472    0.02%      864  cd.CollisionDetector.drawMotionOnVoxelMap
     8656121    0.02%      852  CProjNode::is_block_proj() const
     8588212    0.02%      613  exit_to_user_mode_loop_[k]
     8581564    0.02%      811  MemAllocator::allocate() const
     8549806    0.02%      554  syscall_enter_from_user_mode_[k]
     8545328    0.02%      847  PhaseCFG::sched_call(Block*, unsigned int, Node_List&, GrowableArray<int>&, MachCallNode*, VectorSet&)
     8514042    0.02%      838  PhaseCFG::schedule_early(VectorSet&, Node_Stack&)
     8501454    0.02%      816  PhiNode::Opcode() const
     8287943    0.02%      810  cd.Simulator.<init>
     8185964    0.02%      722  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     7959795    0.01%      791  PhaseChaitin::build_ifg_virtual()
     7799692    0.01%      770  PhaseCCP::transform(Node*)
     7750734    0.01%      760  PhaseOutput::shorten_branches(unsigned int*)
     7723661    0.01%      764  PhaseCFG::schedule_late(VectorSet&, Node_Stack&)
     7714151    0.01%      732  cd.CollisionDetector.handleNewFrame
     7703722    0.01%      756  NodeHash::grow()
     7479483    0.01%      740  PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&, PhaseChaitin::Pressure&, double) [clone .part.0] [clone .isra.0]
     7458411    0.01%      650  InitializeNode::allocation()
     7335173    0.01%      696  Type::hashcons()
     7330304    0.01%      719  Node::unique_ctrl_out() const
     7283690    0.01%      716  Node::is_block_proj() const
     7186121    0.01%      694  PhaseIdealLoop::build_loop_tree_impl(Node*, int)
     7166506    0.01%      661  __memset_avx2_unaligned
     7120254    0.01%      712  ConnectionGraph::split_unique_types(GrowableArray<Node*>&, GrowableArray<ArrayCopyNode*>&)
     7071651    0.01%      365  clock_gettime@GLIBC_2.2.5
     6981762    0.01%      491  _int_malloc
     6928663    0.01%      671  TypeInstPtr::hash() const
     6906363    0.01%      682  PhaseCFG::insert_anti_dependences(Block*, Node*, bool)
     6723724    0.01%      513  restore_fpregs_from_user_[k]
     6675521    0.01%      626  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
     6627881    0.01%      633  G1Allocator::unsafe_max_tlab_alloc()
     6516171    0.01%      462  os::free(void*)
     6498480    0.01%      628  AddPNode::bottom_type() const
     6494123    0.01%      482  .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
     6488870    0.01%      628  Node::replace_edge(Node*, Node*, PhaseGVN*)
     6469622    0.01%      407  malloc
     6426542    0.01%      634  PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*)
     6398434    0.01%      630  ProjNode::is_CFG() const
     6395150    0.01%      559  pthread_mutex_lock@@GLIBC_2.2.5
