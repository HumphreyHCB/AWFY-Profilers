--- Execution profile ---
Total samples       : 22527
unknown_Java        : 38 (0.17%)
not_walkable_Java   : 6 (0.03%)

--- 5580700497 ns (24.76%), 5580 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 5350801216 ns (23.74%), 5350 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 2105347289 ns (9.34%), 2105 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 1717239010 ns (7.62%), 1717 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 807075351 ns (3.58%), 807 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x00000008010030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 741107033 ns (3.29%), 741 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 656083401 ns (2.91%), 656 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 400031303 ns (1.77%), 400 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 361049294 ns (1.60%), 361 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 351078047 ns (1.56%), 351 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 347041956 ns (1.54%), 347 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 321019423 ns (1.42%), 321 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 269042197 ns (1.19%), 269 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 236044062 ns (1.05%), 236 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 200035074 ns (0.89%), 200 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 182051074 ns (0.81%), 182 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x00000008010030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 172025050 ns (0.76%), 172 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 163039186 ns (0.72%), 163 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 143016200 ns (0.63%), 143 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 139025754 ns (0.62%), 139 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 123027473 ns (0.55%), 123 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 102018239 ns (0.45%), 102 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 99025831 ns (0.44%), 99 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 91007347 ns (0.40%), 91 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 89007137 ns (0.39%), 89 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 81002608 ns (0.36%), 81 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 71021602 ns (0.32%), 71 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 70998300 ns (0.31%), 71 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 51994245 ns (0.23%), 52 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 49011585 ns (0.22%), 49 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x00000008010030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 48007478 ns (0.21%), 48 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 48006782 ns (0.21%), 48 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 46465300 ns (0.21%), 46 samples
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 46005122 ns (0.20%), 46 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 40012887 ns (0.18%), 40 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 39996117 ns (0.18%), 40 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 39229542 ns (0.17%), 38 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 4] .annobin__ZN6Thread8call_runEv.start
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 33998968 ns (0.15%), 34 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 32998721 ns (0.15%), 33 samples
  [ 0] Storage.buildTreeDepth
  [ 1] [unknown_Java]

--- 32056410 ns (0.14%), 31 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 24991934 ns (0.11%), 25 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 23996895 ns (0.11%), 24 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 22998326 ns (0.10%), 23 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 22001093 ns (0.10%), 22 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 21004736 ns (0.09%), 21 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 19033478 ns (0.08%), 19 samples
  [ 0] clear_page_rep_[k]
  [ 1] clear_huge_page_[k]
  [ 2] __do_huge_pmd_anonymous_page_[k]
  [ 3] __handle_mm_fault_[k]
  [ 4] handle_mm_fault_[k]
  [ 5] do_user_addr_fault_[k]
  [ 6] exc_page_fault_[k]
  [ 7] asm_exc_page_fault_[k]
  [ 8] ObjArrayAllocator::initialize(HeapWordImpl**) const
  [ 9] MemAllocator::allocate() const
  [10] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [11] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.lambda$buildTreeDepth$0
  [26] Storage$$Lambda$2.0x00000008010030f0.apply
  [27] java.util.Arrays.setAll
  [28] Storage.buildTreeDepth
  [29] Storage.lambda$buildTreeDepth$0
  [30] Storage$$Lambda$2.0x00000008010030f0.apply
  [31] java.util.Arrays.setAll
  [32] Storage.buildTreeDepth
  [33] Storage.lambda$buildTreeDepth$0
  [34] Storage$$Lambda$2.0x00000008010030f0.apply
  [35] java.util.Arrays.setAll
  [36] Storage.buildTreeDepth
  [37] Storage.lambda$buildTreeDepth$0
  [38] Storage$$Lambda$2.0x00000008010030f0.apply
  [39] java.util.Arrays.setAll
  [40] Storage.buildTreeDepth
  [41] Storage.benchmark
  [42] Benchmark.innerBenchmarkLoop
  [43] Run.measure
  [44] Run.doRuns
  [45] Run.runBenchmark
  [46] Harness.main

--- 19006145 ns (0.08%), 19 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 19005713 ns (0.08%), 19 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 17999133 ns (0.08%), 18 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 17005642 ns (0.08%), 17 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 16996465 ns (0.08%), 17 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 16007616 ns (0.07%), 16 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 16005405 ns (0.07%), 16 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 15004794 ns (0.07%), 15 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.benchmark
  [17] Benchmark.innerBenchmarkLoop
  [18] Run.measure
  [19] Run.doRuns
  [20] Run.runBenchmark
  [21] Harness.main

--- 14004474 ns (0.06%), 14 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 13002602 ns (0.06%), 13 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 13001244 ns (0.06%), 13 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 11999284 ns (0.05%), 12 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 11007955 ns (0.05%), 11 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 11003489 ns (0.05%), 11 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 10266633 ns (0.05%), 10 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] .annobin__ZN17G1RemSetScanState20G1ClearCardTableTask7do_workEj.start
  [ 2] G1BatchedGangTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] .annobin__ZN6Thread8call_runEv.start
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 10000513 ns (0.04%), 10 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 9002543 ns (0.04%), 9 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 9001923 ns (0.04%), 9 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 9000902 ns (0.04%), 9 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 8005292 ns (0.04%), 8 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 8005172 ns (0.04%), 8 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 7310493 ns (0.03%), 7 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 7240832 ns (0.03%), 7 samples
  [ 0] .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 7151650 ns (0.03%), 7 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 7131802 ns (0.03%), 7 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 4] VM_G1CollectForAllocation::doit()
  [ 5] VM_Operation::evaluate()
  [ 6] VMThread::evaluate_operation(VM_Operation*)
  [ 7] VMThread::inner_execute(VM_Operation*)
  [ 8] VMThread::run()
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 7009872 ns (0.03%), 7 samples
  [ 0] clear_page_rep_[k]
  [ 1] clear_huge_page_[k]
  [ 2] __do_huge_pmd_anonymous_page_[k]
  [ 3] __handle_mm_fault_[k]
  [ 4] handle_mm_fault_[k]
  [ 5] do_user_addr_fault_[k]
  [ 6] exc_page_fault_[k]
  [ 7] asm_exc_page_fault_[k]
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.lambda$buildTreeDepth$0
  [26] Storage$$Lambda$2.0x00000008010030f0.apply
  [27] java.util.Arrays.setAll
  [28] Storage.buildTreeDepth
  [29] Storage.lambda$buildTreeDepth$0
  [30] Storage$$Lambda$2.0x00000008010030f0.apply
  [31] java.util.Arrays.setAll
  [32] Storage.buildTreeDepth
  [33] Storage.benchmark
  [34] Benchmark.innerBenchmarkLoop
  [35] Run.measure
  [36] Run.doRuns
  [37] Run.runBenchmark
  [38] Harness.main

--- 7002583 ns (0.03%), 7 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 6237884 ns (0.03%), 6 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __lll_lock_wake
  [ 9] G1ParEvacuateFollowersClosure::do_void()
  [10] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [11] G1EvacuateRegionsBaseTask::work(unsigned int)
  [12] GangWorker::loop()
  [13] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [14] .annobin__ZN6Thread8call_runEv.start
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 6160301 ns (0.03%), 6 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] SafepointSynchronize::do_cleanup_tasks()
  [11] SafepointSynchronize::begin()
  [12] VMThread::inner_execute(VM_Operation*)
  [13] VMThread::run()
  [14] .annobin__ZN6Thread8call_runEv.start
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 6136282 ns (0.03%), 6 samples
  [ 0] HeapRegionClaimer::claim_region(unsigned int)
  [ 1] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 2] .annobin__ZN20G1MergeHeapRootsTask4workEj.start
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] .annobin__ZN6Thread8call_runEv.start
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 6130493 ns (0.03%), 6 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 6001892 ns (0.03%), 6 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 4] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x00000008010030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 6001751 ns (0.03%), 6 samples
  [ 0] Storage.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 5192675 ns (0.02%), 5 samples
  [ 0] G1FromCardCache::clear(unsigned int)
  [ 1] HeapRegionRemSet::clear_locked(bool)
  [ 2] HeapRegion::hr_clear(bool)
  [ 3] G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*)
  [ 4] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 6] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 7] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 8] G1BatchedGangTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 5156832 ns (0.02%), 5 samples
  [ 0] [vdso]
  [ 1] clock_gettime@GLIBC_2.2.5
  [ 2] os::elapsed_counter()
  [ 3] CompositeElapsedCounterSource::now()
  [ 4] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 6] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 7] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 8] G1BatchedGangTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 5004750 ns (0.02%), 5 samples
  [ 0] clear_page_rep_[k]
  [ 1] clear_huge_page_[k]
  [ 2] __do_huge_pmd_anonymous_page_[k]
  [ 3] __handle_mm_fault_[k]
  [ 4] handle_mm_fault_[k]
  [ 5] do_user_addr_fault_[k]
  [ 6] exc_page_fault_[k]
  [ 7] asm_exc_page_fault_[k]
  [ 8] ObjArrayAllocator::initialize(HeapWordImpl**) const
  [ 9] MemAllocator::allocate() const
  [10] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [11] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.lambda$buildTreeDepth$0
  [26] Storage$$Lambda$2.0x00000008010030f0.apply
  [27] java.util.Arrays.setAll
  [28] Storage.buildTreeDepth
  [29] Storage.lambda$buildTreeDepth$0
  [30] Storage$$Lambda$2.0x00000008010030f0.apply
  [31] java.util.Arrays.setAll
  [32] Storage.buildTreeDepth
  [33] Storage.lambda$buildTreeDepth$0
  [34] Storage$$Lambda$2.0x00000008010030f0.apply
  [35] java.util.Arrays.setAll
  [36] Storage.buildTreeDepth
  [37] Storage.benchmark
  [38] Benchmark.innerBenchmarkLoop
  [39] Run.measure
  [40] Run.doRuns
  [41] Run.runBenchmark
  [42] Harness.main

--- 5002833 ns (0.02%), 5 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 5002520 ns (0.02%), 5 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 5001971 ns (0.02%), 5 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 5001691 ns (0.02%), 5 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 5001311 ns (0.02%), 5 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 5000010 ns (0.02%), 5 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 4999624 ns (0.02%), 5 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 4996372 ns (0.02%), 5 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 4127012 ns (0.02%), 4 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1CollectedHeap::post_evacuate_cleanup_2(PreservedMarksSet*, G1RedirtyCardsQueueSet*, G1EvacuationInfo*, unsigned long const*)
  [11] G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [13] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [14] VM_G1CollectForAllocation::doit()
  [15] VM_Operation::evaluate()
  [16] VMThread::evaluate_operation(VM_Operation*)
  [17] VMThread::inner_execute(VM_Operation*)
  [18] VMThread::run()
  [19] .annobin__ZN6Thread8call_runEv.start
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 4125783 ns (0.02%), 4 samples
  [ 0] G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*)
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] .annobin__ZN20G1MergeHeapRootsTask4workEj.start
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 4039742 ns (0.02%), 4 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 4000782 ns (0.02%), 4 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4000501 ns (0.02%), 4 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 4000193 ns (0.02%), 4 samples
  [ 0] MemAllocator::allocate() const
  [ 1] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 2] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.lambda$buildTreeDepth$0
  [25] Storage$$Lambda$2.0x00000008010030f0.apply
  [26] java.util.Arrays.setAll
  [27] Storage.buildTreeDepth
  [28] Storage.benchmark
  [29] Benchmark.innerBenchmarkLoop
  [30] Run.measure
  [31] Run.doRuns
  [32] Run.runBenchmark
  [33] Harness.main

--- 4000150 ns (0.02%), 4 samples
  [ 0] ObjArrayAllocator::initialize(HeapWordImpl**) const
  [ 1] MemAllocator::allocate() const
  [ 2] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 3] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.lambda$buildTreeDepth$0
  [26] Storage$$Lambda$2.0x00000008010030f0.apply
  [27] java.util.Arrays.setAll
  [28] Storage.buildTreeDepth
  [29] Storage.benchmark
  [30] Benchmark.innerBenchmarkLoop
  [31] Run.measure
  [32] Run.doRuns
  [33] Run.runBenchmark
  [34] Harness.main

--- 3999811 ns (0.02%), 4 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 3999761 ns (0.02%), 4 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 3998981 ns (0.02%), 4 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
  9600220444   42.59%     9599  Storage.buildTreeDepth
  8181180433   36.29%     8180  java.util.Arrays.setAll
  2647411734   11.74%     2647  som.Random.next
   866157577    3.84%      866  Storage.lambda$buildTreeDepth$0
   263068937    1.17%      263  java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
   111001039    0.49%      111  Storage$$Lambda$2.0x00000008010030f0.<init>
   106025013    0.47%      106  java.lang.invoke.DirectMethodHandle.allocateInstance
    79997289    0.35%       80  Storage$$Lambda$2.0x00000008010030f0.apply
    46465300    0.21%       46  SpinPause
    46219967    0.21%       46  clear_page_rep_[k]
    43247802    0.19%       42  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
    40320854    0.18%       39  _raw_spin_unlock_irqrestore_[k]
    39229542    0.17%       38  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
    27407369    0.12%       27  __memset_avx2_unaligned_erms
    17562205    0.08%       17  [vdso]
    13003622    0.06%       13  Storage.benchmark
     9208997    0.04%        9  G1FromCardCache::clear(unsigned int)
     7240832    0.03%        7  .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
     7162542    0.03%        7  HeapRegionClaimer::claim_region(unsigned int)
     6230222    0.03%        6  G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
     6130493    0.03%        6  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
     5254204    0.02%        5  _int_malloc
     5103512    0.02%        5  syscall_enter_from_user_mode_[k]
     5002833    0.02%        5  Interpreter
     5001081    0.02%        5  ObjArrayAllocator::initialize(HeapWordImpl**) const
     5000514    0.02%        5  MemAllocator::allocate() const
     4995490    0.02%        5  _dl_update_slotinfo
     4125783    0.02%        4  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*)
     4122520    0.02%        4  futex_wake_[k]
     4013541    0.02%        4  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     4006351    0.02%        4  G1CollectedHeap::attempt_allocation_slow(unsigned long)
     4004043    0.02%        4  Benchmark.innerBenchmarkLoop
     4001490    0.02%        4  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
     4000862    0.02%        4  __GI___pthread_mutex_trylock
     4000361    0.02%        4  InstanceKlass::allocate_objArray(int, int, JavaThread*)
     4000260    0.02%        4  ClassLoaderData::holder_phantom() const
     4000031    0.02%        4  G1Policy::preventive_collection_required(unsigned int)
     3078232    0.01%        3  .annobin__ZN20G1MergeHeapRootsTask4workEj.start
     3077671    0.01%        3  Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
     3068332    0.01%        3  __list_del_entry_valid_[k]
     3028541    0.01%        3  __tls_get_addr
     3027060    0.01%        3  __GI___pthread_mutex_unlock_usercnt
     3005500    0.01%        3  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
     3004911    0.01%        3  HSpaceCounters::update_used(unsigned long)
     3002210    0.01%        3  G1CollectionSet::add_eden_region(HeapRegion*)
     2997002    0.01%        3  [no_Java_frame]
     2133651    0.01%        2  futex_wake_mark_[k]
     2098241    0.01%        2  malloc
     2094240    0.01%        2  GCIdMark::GCIdMark(unsigned int)
     2090713    0.01%        2  __list_add_valid_[k]
     2080333    0.01%        2  pthread_mutex_lock@@GLIBC_2.2.5
     2078200    0.01%        2  __get_user_nocheck_4_[k]
     2074430    0.01%        2  G1GCPhaseTimes::record_or_add_thread_work_item(G1GCPhaseTimes::GCParPhases, unsigned int, unsigned long, unsigned int)
     2074211    0.01%        2  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*)
     2074171    0.01%        2  __schedule_[k]
     2072701    0.01%        2  futex_wait_[k]
     2071391    0.01%        2  __futex_abstimed_wait_common
     2065231    0.01%        2  TruncatedSeq::add(double)
     2058520    0.01%        2  __memset_avx2_unaligned
     2053520    0.01%        2  ConstantPool::impl_signature_ref_at(int, bool)
     2049370    0.01%        2  PosixSemaphore::signal(unsigned int)
     2049090    0.01%        2  SparsePRT::clear()
     2044121    0.01%        2  plist_add_[k]
     2033872    0.01%        2  HeapRegionRemSet::clear_locked(bool)
     2031100    0.01%        2  G1DirtyCardQueueSet::num_par_ids()
     2030421    0.01%        2  FreeCSetClosure::do_heap_region(HeapRegion*)
     2022652    0.01%        2  G1BlockOffsetTablePart::zero_bottom_entry_raw()
     2015020    0.01%        2  os::free(void*)
     2008120    0.01%        2  rmqueue_[k]
     2004500    0.01%        2  .annobin__ZN11LIR_Address10as_addressEv.start
     2003271    0.01%        2  jdk.internal.org.objectweb.asm.SymbolTable.put
     2002050    0.01%        2  CollectedHeap::tlab_alloc_reserve() const
     2001380    0.01%        2  oopFactory::new_objArray(Klass*, int, JavaThread*)
     2001360    0.01%        2  G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long)
     2001150    0.01%        2  .annobin__ZN25JfrObjectAllocationSample10send_eventEPK5KlassmbP6Thread.start
     2001040    0.01%        2  Run.measure
     2000832    0.01%        2  HeapRegionType::get_trace_type()
     2000721    0.01%        2  OptoRuntime::new_array_C(Klass*, int, JavaThread*)
     2000610    0.01%        2  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List*, Node_List*, bool)
     2000380    0.01%        2  G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*)
     2000040    0.01%        2  G1Allocator::unsafe_max_tlab_alloc()
     2000021    0.01%        2  MemAllocator::Allocation::notify_allocation_jfr_sampler()
     1999880    0.01%        2  .annobin__ZN11AllocTracer27send_allocation_in_new_tlabEP5KlassPP12HeapWordImplmmP10JavaThread.start
     1999631    0.01%        2  G1MonitoringSupport::update_eden_size()
     1999521    0.01%        2  ThreadLocalAllocBuffer::fill(HeapWordImpl**, HeapWordImpl**, unsigned long)
     1999251    0.01%        2  HeapRegion::set_eden()
     1998490    0.01%        2  java.lang.invoke.LambdaForm$Name.replaceNames
     1996001    0.01%        2  PhaseLive::compute(unsigned int)
     1076920    0.00%        1  os::PlatformMonitor::wait(long)
     1075590    0.00%        1  copy_user_generic_string_[k]
     1071480    0.00%        1  OtherRegionsTable::clear()
     1070740    0.00%        1  __GI__IO_setb
     1065491    0.00%        1  .annobin__ZN21G1EvacuateRegionsTask10start_workEj.start
     1061970    0.00%        1  Mutex::lock_without_safepoint_check()
     1057990    0.00%        1  G1Policy::phase_times() const
     1054900    0.00%        1  .annobin__ZN13WeakProcessor4Task4workI19G1STWIsAliveClosure18G1KeepAliveClosureEEvjPT_PT0_.start
     1049200    0.00%        1  clock_gettime@GLIBC_2.2.5
     1045911    0.00%        1  G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases)
     1041980    0.00%        1  JNIHandleBlock::oops_do(OopClosure*)
     1041011    0.00%        1  G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
     1040531    0.00%        1  PtrQueue::PtrQueue(PtrQueueSet*)
     1039500    0.00%        1  G1NUMA::is_enabled() const
     1038880    0.00%        1  G1SurvRateGroup::record_surviving_words(int, unsigned long)
     1038250    0.00%        1  native_queued_spin_lock_slowpath_[k]
     1037231    0.00%        1  G1EvacuateRegionsTask::end_work(unsigned int)
     1036740    0.00%        1  __GI___lll_lock_wait
     1035980    0.00%        1  ReferenceProcessor::process_soft_weak_final_refs(RefProcProxyTask&, ReferenceProcessorPhaseTimes&)
     1034910    0.00%        1  do_futex_[k]
     1034630    0.00%        1  OopStorage::trigger_cleanup_if_needed()
     1033010    0.00%        1  frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) const
     1031210    0.00%        1  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker()
     1030010    0.00%        1  G1BlockOffsetTablePart::initialize_threshold_raw()
     1028951    0.00%        1  StackWatermarkSet::finish_processing(JavaThread*, void*, StackWatermarkKind)
     1028011    0.00%        1  pthread_cond_timedwait@@GLIBC_2.3.2
     1026570    0.00%        1  Method::bcp_from(unsigned char*) const
     1026291    0.00%        1  G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
     1025830    0.00%        1  InterpreterOopMap::iterate_oop(OffsetClosure*) const
     1025570    0.00%        1  CompositeElapsedCounterSource::now()
     1025530    0.00%        1  frame::interpreter_frame_monitor_end() const
     1025380    0.00%        1  os::javaTimeNanos()
     1024640    0.00%        1  futex_hash_[k]
     1024530    0.00%        1  MetaspaceUtils::get_combined_statistics()
     1023980    0.00%        1  G1ParCopyClosure<(G1Barrier)2, false>::do_oop(oopDesc**)
     1023490    0.00%        1  nmethod::oops_do_marking_prologue()
     1022920    0.00%        1  __strlen_avx2
     1022551    0.00%        1  ciObjectFactory::ciObjectFactory(Arena*, int)
     1022400    0.00%        1  G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
     1022211    0.00%        1  free
     1021660    0.00%        1  G1CollectedHeap::start_new_collection_set()
     1021591    0.00%        1  .annobin__ZN24G1GCParPhaseTimesTrackerC2EP14G1GCPhaseTimesNS0_11GCParPhasesEjb.start
     1021270    0.00%        1  ThreadLocalAllocBuffer::resize()
     1021260    0.00%        1  HeapRegionClaimer::offset_for_worker(unsigned int) const
     1021100    0.00%        1  void QuickSort::inner_sort<true, unsigned int, int (*)(unsigned int, unsigned int)>(unsigned int*, unsigned long, int (*)(unsigned int, unsigned int)) [clone .constprop.0]
     1020320    0.00%        1  G1GCPhaseTimes::print_evacuate_initial_collection_set() const
     1018600    0.00%        1  Events::log_vm_operation(Thread*, char const*, ...)
     1018360    0.00%        1  G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
     1017511    0.00%        1  ciTypeFlow::get_start_state()
     1017460    0.00%        1  blk_cgroup_congested_[k]
     1016820    0.00%        1  OtherRegionsTable::occupied() const
     1016221    0.00%        1  _IO_default_xsputn
     1015721    0.00%        1  stringStream::write(char const*, unsigned long)
     1015410    0.00%        1  YoungGCTracer::send_young_gc_event() const
     1015290    0.00%        1  GCId::current()
     1015151    0.00%        1  __mpn_lshift
     1014881    0.00%        1  VMThread::inner_execute(VM_Operation*)
     1014860    0.00%        1  _raw_spin_lock_[k]
     1014720    0.00%        1  PerfTraceTime::~PerfTraceTime()
     1014680    0.00%        1  ThreadsListHandle::ThreadsListHandle(Thread*)
     1014070    0.00%        1  G1ParCopyClosure<(G1Barrier)0, false>::do_oop(narrowOop*)
     1013640    0.00%        1  rcu_core_[k]
     1013310    0.00%        1  CodeHeap::find_blob_unsafe(void*) const
     1013271    0.00%        1  __vfprintf_internal
     1013090    0.00%        1  G1EvacPhaseTimesTracker::~G1EvacPhaseTimesTracker()
     1012980    0.00%        1  G1HeapTransition::print()
     1012850    0.00%        1  G1PostEvacuateCollectionSetCleanupTask2::RedirtyLoggedCardsTask::do_work(unsigned int)
     1012261    0.00%        1  NonJavaThread::Iterator::step()
     1012150    0.00%        1  G1MonitoringSupport::old_gen_memory_usage(unsigned long, unsigned long)
     1011960    0.00%        1  sem_post@GLIBC_2.2.5
     1011471    0.00%        1  G1GCPhaseTimes::reset()
     1010651    0.00%        1  CompileQueue::get()
     1010480    0.00%        1  CollectedHeap::ensure_parsability(bool)
     1010020    0.00%        1  .annobin__ZN27java_lang_ref_SoftReference5clockEv.start
     1009380    0.00%        1  outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool)
     1007850    0.00%        1  bool CompilerOracle::has_option_value<bool>(methodHandle const&, CompileCommand, bool&)
     1007260    0.00%        1  Dependencies::sort_all_deps()
     1005850    0.00%        1  IR::optimize_blocks()
     1005701    0.00%        1  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ul>::oop_access_barrier(void*)
     1005661    0.00%        1  nr_blockdev_pages_[k]
     1005441    0.00%        1  _IO_old_init
     1005010    0.00%        1  java.lang.invoke.LambdaForm$Name.<init>
     1004740    0.00%        1  InstanceKlass::array_klass(int, JavaThread*)
     1004680    0.00%        1  _raw_spin_unlock_irq_[k]
     1004671    0.00%        1  LIRGenerator::profile_parameters(Base*)
     1004600    0.00%        1  .annobin__ZN12LinkResolver31check_method_loader_constraintsERK8LinkInfoRK12methodHandlePKcP10JavaThread.start
     1004360    0.00%        1  .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
     1004281    0.00%        1  __handle_mm_fault_[k]
     1003930    0.00%        1  java.lang.StringLatin1.charAt
     1003850    0.00%        1  PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
     1003810    0.00%        1  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
     1003790    0.00%        1  ciObjectFactory::get_metadata(Metadata*)
     1003700    0.00%        1  LinearScan::build_intervals()
     1003310    0.00%        1  GenerateOopMap::copy_state(CellTypeState*, CellTypeState*)
     1003180    0.00%        1  GraphBuilder::iterate_all_blocks(bool)
     1003030    0.00%        1  _pthread_cleanup_push@@GLIBC_2.34
     1003000    0.00%        1  java.lang.invoke.MethodType.returnType
     1002953    0.00%        1  Klass::is_subclass_of(Klass const*) const
     1002940    0.00%        1  java_lang_Class::protection_domain(oopDesc*)
     1002670    0.00%        1  LIRGenerator::do_Base(Base*)
     1002461    0.00%        1  I2C/C2I adapters(0xb)
     1002410    0.00%        1  LinearScan::compute_local_live_sets()
     1002080    0.00%        1  DataLayout::cell_count()
     1002040    0.00%        1  java.lang.StringCoding.implEncodeAsciiArray
     1001930    0.00%        1  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     1001910    0.00%        1  java.lang.Class.getPackageName
     1001860    0.00%        1  .annobin__ZN17CompilationPolicy19compile_if_requiredERK12methodHandleP10JavaThread.start
     1001830    0.00%        1  __strcmp_avx2
     1001810    0.00%        1  OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, derived_pointer*, OopClosure*))
     1001731    0.00%        1  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
     1001710    0.00%        1  java.nio.HeapCharBuffer.<init>
     1001641    0.00%        1  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
