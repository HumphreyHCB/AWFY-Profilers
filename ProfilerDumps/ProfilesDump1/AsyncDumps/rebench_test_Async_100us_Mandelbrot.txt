--- Execution profile ---
Total samples       : 185331
unknown_Java        : 11 (0.01%)
not_walkable_Java   : 34 (0.02%)

--- 9389798819 ns (50.63%), 93831 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 5690041562 ns (30.68%), 56861 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1419429142 ns (7.65%), 14184 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 918877587 ns (4.95%), 9182 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 483082233 ns (2.60%), 4828 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 208040534 ns (1.12%), 2079 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 53758097 ns (0.29%), 537 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 47218918 ns (0.25%), 472 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 35227652 ns (0.19%), 352 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 29122432 ns (0.16%), 291 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 27209607 ns (0.15%), 272 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 21411044 ns (0.12%), 214 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 20705157 ns (0.11%), 207 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 15504944 ns (0.08%), 155 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 13408364 ns (0.07%), 134 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 9503563 ns (0.05%), 95 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 6699661 ns (0.04%), 67 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 4801230 ns (0.03%), 48 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 4304382 ns (0.02%), 43 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 3507161 ns (0.02%), 35 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 3411160 ns (0.02%), 34 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 2900041 ns (0.02%), 29 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1307120 ns (0.01%), 13 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 896260 ns (0.00%), 9 samples
  [ 0] LinearScan::allocate_registers()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] .annobin__ZN6Thread8call_runEv.start
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 894270 ns (0.00%), 9 samples
  [ 0] [no_Java_frame]

--- 856640 ns (0.00%), 8 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] pipe_write_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___libc_write
  [ 9] writeBytes
  [10] Java_java_io_FileOutputStream_writeBytes
  [11] java.io.FileOutputStream.writeBytes
  [12] java.io.FileOutputStream.write
  [13] java.io.BufferedOutputStream.flushBuffer
  [14] java.io.BufferedOutputStream.flush
  [15] java.io.PrintStream.write
  [16] sun.nio.cs.StreamEncoder.writeBytes
  [17] sun.nio.cs.StreamEncoder.implFlushBuffer
  [18] sun.nio.cs.StreamEncoder.flushBuffer
  [19] java.io.OutputStreamWriter.flushBuffer
  [20] java.io.PrintStream.writeln
  [21] java.io.PrintStream.println
  [22] Run.printResult
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 795650 ns (0.00%), 8 samples
  [ 0] LinearScanWalker::alloc_free_reg(Interval*)
  [ 1] LinearScanWalker::activate_current()
  [ 2] LinearScan::allocate_registers()
  [ 3] LinearScan::do_linear_scan()
  [ 4] Compilation::emit_lir()
  [ 5] Compilation::compile_java_method()
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] .annobin__ZN6Thread8call_runEv.start
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 708101 ns (0.00%), 7 samples
  [ 0] LinearScan::compute_local_live_sets()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] .annobin__ZN6Thread8call_runEv.start
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 600470 ns (0.00%), 6 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 600110 ns (0.00%), 6 samples
  [ 0] LinearScan::build_intervals()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] .annobin__ZN6Thread8call_runEv.start
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 499340 ns (0.00%), 5 samples
  [ 0] PhaseChaitin::gather_lrg_masks(bool)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] .annobin__ZN6Thread8call_runEv.start
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 493140 ns (0.00%), 5 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 486141 ns (0.00%), 5 samples
  [ 0] LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] .annobin__ZN6Thread8call_runEv.start
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 434360 ns (0.00%), 4 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __lll_lock_wake
  [ 9] Compilation::install_code(int)
  [10] Compilation::compile_method()
  [11] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [12] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [13] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [14] CompileBroker::compiler_thread_loop()
  [15] JavaThread::thread_main_inner()
  [16] .annobin__ZN6Thread8call_runEv.start
  [17] thread_native_entry(Thread*)
  [18] start_thread

--- 400750 ns (0.00%), 4 samples
  [ 0] I2C/C2I adapters(0xb)
  [ 1] [unknown_Java]

--- 400750 ns (0.00%), 4 samples
  [ 0] BitMap::is_same(BitMap const&) const
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] .annobin__ZN6Thread8call_runEv.start
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 400480 ns (0.00%), 4 samples
  [ 0] NullCheckEliminator::iterate_one(BlockBegin*)
  [ 1] Optimizer::eliminate_null_checks()
  [ 2] IR::eliminate_null_checks()
  [ 3] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 400230 ns (0.00%), 4 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 399730 ns (0.00%), 4 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 399220 ns (0.00%), 4 samples
  [ 0] PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
  [ 1] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 2] .annobin__ZN14PhaseIdealLoop8optimizeER12PhaseIterGVN12LoopOptsMode.start
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 398740 ns (0.00%), 4 samples
  [ 0] LinearScan::add_register_hints(LIR_Op*)
  [ 1] LinearScan::build_intervals()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 335580 ns (0.00%), 3 samples
  [ 0] [vdso]
  [ 1] clock_gettime@GLIBC_2.2.5
  [ 2] WatcherThread::sleep() const
  [ 3] WatcherThread::run()
  [ 4] .annobin__ZN6Thread8call_runEv.start
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 330130 ns (0.00%), 3 samples
  [ 0] clock_gettime@GLIBC_2.2.5
  [ 1] WatcherThread::sleep() const
  [ 2] WatcherThread::run()
  [ 3] .annobin__ZN6Thread8call_runEv.start
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 329820 ns (0.00%), 3 samples
  [ 0] __condvar_dec_grefs
  [ 1] [unknown]

--- 315320 ns (0.00%), 3 samples
  [ 0] ciObjectFactory::ciObjectFactory(Arena*, int)
  [ 1] ciEnv::ciEnv(CompileTask*)
  [ 2] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 3] CompileBroker::compiler_thread_loop()
  [ 4] JavaThread::thread_main_inner()
  [ 5] .annobin__ZN6Thread8call_runEv.start
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 304240 ns (0.00%), 3 samples
  [ 0] Java_java_io_FileOutputStream_writeBytes
  [ 1] java.io.FileOutputStream.writeBytes
  [ 2] java.io.FileOutputStream.write
  [ 3] java.io.BufferedOutputStream.flushBuffer
  [ 4] java.io.BufferedOutputStream.flush
  [ 5] java.io.PrintStream.write
  [ 6] sun.nio.cs.StreamEncoder.writeBytes
  [ 7] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 8] sun.nio.cs.StreamEncoder.flushBuffer
  [ 9] java.io.OutputStreamWriter.flushBuffer
  [10] java.io.PrintStream.writeln
  [11] java.io.PrintStream.println
  [12] Run.printResult
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 304230 ns (0.00%), 3 samples
  [ 0] java.lang.StringCoding.implEncodeAsciiArray
  [ 1] java.lang.System$2.encodeASCII
  [ 2] sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop
  [ 3] sun.nio.cs.US_ASCII$Encoder.encodeLoop
  [ 4] java.nio.charset.CharsetEncoder.encode
  [ 5] sun.nio.cs.StreamEncoder.implWrite
  [ 6] sun.nio.cs.StreamEncoder.implWrite
  [ 7] sun.nio.cs.StreamEncoder.write
  [ 8] java.io.OutputStreamWriter.write
  [ 9] java.io.BufferedWriter.flushBuffer
  [10] java.io.PrintStream.writeln
  [11] java.io.PrintStream.println
  [12] Run.printResult
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 302290 ns (0.00%), 3 samples
  [ 0] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 1] GraphBuilder::iterate_all_blocks(bool)
  [ 2] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 3] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 4] IR::IR(Compilation*, ciMethod*, int)
  [ 5] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] .annobin__ZN6Thread8call_runEv.start
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 301140 ns (0.00%), 3 samples
  [ 0] DebugInformationRecorder::find_sharable_decode_offset(int)
  [ 1] DebugInformationRecorder::describe_scope(int, methodHandle const&, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*)
  [ 2] LIR_Assembler::record_non_safepoint_debug_info()
  [ 3] LIR_Assembler::process_debug_info(LIR_Op*)
  [ 4] LIR_Assembler::emit_lir_list(LIR_List*)
  [ 5] LIR_Assembler::emit_code(BlockList*)
  [ 6] .annobin__ZN11Compilation14emit_code_bodyEv.start
  [ 7] Compilation::compile_java_method()
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] .annobin__ZN6Thread8call_runEv.start
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 300710 ns (0.00%), 3 samples
  [ 0] LinearScan::add_def(LIR_OprDesc*, int, IntervalUseKind)
  [ 1] LinearScan::build_intervals()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 300420 ns (0.00%), 3 samples
  [ 0] GraphBuilder::method_return(Instruction*, bool)
  [ 1] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 2] GraphBuilder::iterate_all_blocks(bool)
  [ 3] GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [ 4] GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
  [ 5] GraphBuilder::invoke(Bytecodes::Code)
  [ 6] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 7] GraphBuilder::iterate_all_blocks(bool)
  [ 8] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 9] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [10] IR::IR(Compilation*, ciMethod*, int)
  [11] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [12] Compilation::compile_java_method()
  [13] Compilation::compile_method()
  [14] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [15] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [16] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [17] CompileBroker::compiler_thread_loop()
  [18] JavaThread::thread_main_inner()
  [19] .annobin__ZN6Thread8call_runEv.start
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 299940 ns (0.00%), 3 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 299370 ns (0.00%), 3 samples
  [ 0] Compilation::emit_lir()
  [ 1] Compilation::compile_java_method()
  [ 2] Compilation::compile_method()
  [ 3] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 4] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] .annobin__ZN6Thread8call_runEv.start
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 299031 ns (0.00%), 3 samples
  [ 0] ControlFlowOptimizer::optimize(BlockList*)
  [ 1] Compilation::emit_lir()
  [ 2] Compilation::compile_java_method()
  [ 3] Compilation::compile_method()
  [ 4] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 5] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 298910 ns (0.00%), 3 samples
  [ 0] Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode)
  [ 1] LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&)
  [ 2] LinearScan::resolve_data_flow()
  [ 3] LinearScan::do_linear_scan()
  [ 4] Compilation::emit_lir()
  [ 5] Compilation::compile_java_method()
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] .annobin__ZN6Thread8call_runEv.start
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 298890 ns (0.00%), 3 samples
  [ 0] LIR_OpVisitState::append(LIR_OprDesc*&, LIR_OpVisitState::OprMode) [clone .constprop.0]
  [ 1] LIR_OpVisitState::visit(LIR_Op*)
  [ 2] LinearScan::build_intervals()
  [ 3] LinearScan::do_linear_scan()
  [ 4] Compilation::emit_lir()
  [ 5] Compilation::compile_java_method()
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] .annobin__ZN6Thread8call_runEv.start
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 298820 ns (0.00%), 3 samples
  [ 0] PhaseChaitin::post_allocate_copy_removal()
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] .annobin__ZN6Thread8call_runEv.start
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 297870 ns (0.00%), 3 samples
  [ 0] LIR_OpVisitState::visit(LIR_Op*)
  [ 1] LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 297690 ns (0.00%), 3 samples
  [ 0] nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool)
  [ 1] nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView<RuntimeStub*> const&, char*, int, int)
  [ 2] .annobin__ZN7nmethod11new_nmethodERK12methodHandleiiP11CodeOffsetsiP24DebugInformationRecorderP12DependenciesP10CodeBufferiP9OopMapSetP21ExceptionHandlerTableP22ImplicitExceptionTableP16AbstractCompileriRK17GrowableArrayViewIP11RuntimeStubEPciiPKcPP17FailedSpeculation.start
  [ 3] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView<RuntimeStub*> const&)
  [ 4] Compilation::install_code(int)
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 289430 ns (0.00%), 3 samples
  [ 0] ciObjectFactory::get_metadata(Metadata*)
  [ 1] ciBytecodeStream::get_declared_method_holder()
  [ 2] GraphBuilder::invoke(Bytecodes::Code)
  [ 3] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 4] GraphBuilder::iterate_all_blocks(bool)
  [ 5] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 6] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 7] IR::IR(Compilation*, ciMethod*, int)
  [ 8] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 9] Compilation::compile_java_method()
  [10] Compilation::compile_method()
  [11] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [12] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [13] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [14] CompileBroker::compiler_thread_loop()
  [15] JavaThread::thread_main_inner()
  [16] .annobin__ZN6Thread8call_runEv.start
  [17] thread_native_entry(Thread*)
  [18] start_thread

--- 271930 ns (0.00%), 2 samples
  [ 0] futex_wait_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_common

--- 268140 ns (0.00%), 2 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __lll_lock_wake
  [ 6] [unknown]

--- 251500 ns (0.00%), 2 samples
  [ 0] CompileQueue::get()
  [ 1] CompileBroker::compiler_thread_loop()
  [ 2] JavaThread::thread_main_inner()
  [ 3] .annobin__ZN6Thread8call_runEv.start
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 230460 ns (0.00%), 2 samples
  [ 0] .annobin__ZN15StatSamplerTask4taskEv.start
  [ 1] WatcherThread::run()
  [ 2] .annobin__ZN6Thread8call_runEv.start
  [ 3] thread_native_entry(Thread*)
  [ 4] start_thread

--- 218700 ns (0.00%), 2 samples
  [ 0] Monitor::wait_without_safepoint_check(long)
  [ 1] WatcherThread::sleep() const
  [ 2] WatcherThread::run()
  [ 3] .annobin__ZN6Thread8call_runEv.start
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 215110 ns (0.00%), 2 samples
  [ 0] WatcherThread::sleep() const
  [ 1] WatcherThread::run()
  [ 2] .annobin__ZN6Thread8call_runEv.start
  [ 3] thread_native_entry(Thread*)
  [ 4] start_thread

--- 214400 ns (0.00%), 2 samples
  [ 0] __futex_abstimed_wait_common

--- 211720 ns (0.00%), 2 samples
  [ 0] java.io.OutputStreamWriter.flushBuffer
  [ 1] java.io.PrintStream.writeln
  [ 2] java.io.PrintStream.println
  [ 3] Run.printResult
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 209260 ns (0.00%), 2 samples
  [ 0] pthread_cond_timedwait@@GLIBC_2.3.2
  [ 1] [unknown]

--- 206230 ns (0.00%), 2 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] syscall
  [ 4] ttyLocker::release_tty_if_locked()
  [ 5] ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&, ciSymbol*, bool)
  [ 6] ciSignature::ciSignature(ciKlass*, constantPoolHandle const&, ciSymbol*)
  [ 7] ciMethod::ciMethod(methodHandle const&, ciInstanceKlass*)
  [ 8] ciObjectFactory::create_new_metadata(Metadata*)
  [ 9] ciObjectFactory::get_metadata(Metadata*)
  [10] ciEnv::get_method_by_index_impl(constantPoolHandle const&, int, Bytecodes::Code, ciInstanceKlass*)
  [11] ciBytecodeStream::get_method(bool&, ciSignature**)
  [12] GraphBuilder::invoke(Bytecodes::Code)
  [13] GraphBuilder::iterate_bytecodes_for_block(int)
  [14] GraphBuilder::iterate_all_blocks(bool)
  [15] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [16] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [17] IR::IR(Compilation*, ciMethod*, int)
  [18] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [19] Compilation::compile_java_method()
  [20] Compilation::compile_method()
  [21] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [22] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [23] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [24] CompileBroker::compiler_thread_loop()
  [25] JavaThread::thread_main_inner()
  [26] .annobin__ZN6Thread8call_runEv.start
  [27] thread_native_entry(Thread*)
  [28] start_thread

--- 205160 ns (0.00%), 2 samples
  [ 0] _int_malloc
  [ 1] [unknown]
  [ 2] [unknown]

--- 204640 ns (0.00%), 2 samples
  [ 0] __d_lookup_[k]
  [ 1] lookup_fast_[k]
  [ 2] walk_component_[k]
  [ 3] link_path_walk.part.0.constprop.0_[k]
  [ 4] path_openat_[k]
  [ 5] do_filp_open_[k]
  [ 6] do_sys_openat2_[k]
  [ 7] __x64_sys_openat_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_open64
  [11] [unknown]

--- 204370 ns (0.00%), 2 samples
  [ 0] sun.nio.cs.StreamEncoder.writeBytes
  [ 1] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 2] sun.nio.cs.StreamEncoder.flushBuffer
  [ 3] java.io.OutputStreamWriter.flushBuffer
  [ 4] java.io.PrintStream.writeln
  [ 5] java.io.PrintStream.println
  [ 6] Run.printResult
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 203960 ns (0.00%), 2 samples
  [ 0] sun.nio.cs.StreamEncoder.implWrite
  [ 1] sun.nio.cs.StreamEncoder.write
  [ 2] java.io.OutputStreamWriter.write
  [ 3] java.io.BufferedWriter.flushBuffer
  [ 4] java.io.PrintStream.writeln
  [ 5] java.io.PrintStream.println
  [ 6] Run.printResult
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 203940 ns (0.00%), 2 samples
  [ 0] ImmutableOopMapBuilder::fill(ImmutableOopMapSet*, int)
  [ 1] ImmutableOopMapSet::build_from(OopMapSet const*)
  [ 2] CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&, CodeBuffer*, int, int, OopMapSet*, bool)
  [ 3] CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool)
  [ 4] nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView<RuntimeStub*> const&, char*, int, int)
  [ 5] .annobin__ZN7nmethod11new_nmethodERK12methodHandleiiP11CodeOffsetsiP24DebugInformationRecorderP12DependenciesP10CodeBufferiP9OopMapSetP21ExceptionHandlerTableP22ImplicitExceptionTableP16AbstractCompileriRK17GrowableArrayViewIP11RuntimeStubEPciiPKcPP17FailedSpeculation.start
  [ 6] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView<RuntimeStub*> const&)
  [ 7] Compilation::install_code(int)
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] .annobin__ZN6Thread8call_runEv.start
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 203930 ns (0.00%), 2 samples
  [ 0] LIR_OpVisitState::visit(LIR_Op*)
  [ 1] LinearScan::compute_local_live_sets()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 203920 ns (0.00%), 2 samples
  [ 0] java.nio.CharBuffer.limit
  [ 1] java.nio.CharBuffer.limit
  [ 2] java.nio.Buffer.<init>
  [ 3] java.nio.CharBuffer.<init>
  [ 4] java.nio.HeapCharBuffer.<init>
  [ 5] java.nio.CharBuffer.wrap
  [ 6] sun.nio.cs.StreamEncoder.implWrite
  [ 7] sun.nio.cs.StreamEncoder.write
  [ 8] java.io.OutputStreamWriter.write
  [ 9] java.io.BufferedWriter.flushBuffer
  [10] java.io.PrintStream.writeln
  [11] java.io.PrintStream.println
  [12] Run.printResult
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 203920 ns (0.00%), 2 samples
  [ 0] RelocIterator::reloc()
  [ 1] CodeBuffer::copy_code_to(CodeBlob*)
  [ 2] nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView<RuntimeStub*> const&, char*, int, int)
  [ 3] .annobin__ZN7nmethod11new_nmethodERK12methodHandleiiP11CodeOffsetsiP24DebugInformationRecorderP12DependenciesP10CodeBufferiP9OopMapSetP21ExceptionHandlerTableP22ImplicitExceptionTableP16AbstractCompileriRK17GrowableArrayViewIP11RuntimeStubEPciiPKcPP17FailedSpeculation.start
  [ 4] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView<RuntimeStub*> const&)
  [ 5] Compilation::install_code(int)
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] .annobin__ZN6Thread8call_runEv.start
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 203310 ns (0.00%), 2 samples
  [ 0] sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop
  [ 1] sun.nio.cs.US_ASCII$Encoder.encodeLoop
  [ 2] java.nio.charset.CharsetEncoder.encode
  [ 3] sun.nio.cs.StreamEncoder.implWrite
  [ 4] sun.nio.cs.StreamEncoder.implWrite
  [ 5] sun.nio.cs.StreamEncoder.write
  [ 6] java.io.OutputStreamWriter.write
  [ 7] java.io.BufferedWriter.flushBuffer
  [ 8] java.io.PrintStream.writeln
  [ 9] java.io.PrintStream.println
  [10] Run.printResult
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 203190 ns (0.00%), 2 samples
  [ 0] java.nio.Buffer.clear
  [ 1] java.nio.ByteBuffer.clear
  [ 2] sun.nio.cs.StreamEncoder.writeBytes
  [ 3] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 4] sun.nio.cs.StreamEncoder.flushBuffer
  [ 5] java.io.OutputStreamWriter.flushBuffer
  [ 6] java.io.PrintStream.writeln
  [ 7] java.io.PrintStream.println
  [ 8] Run.printResult
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 203180 ns (0.00%), 2 samples
  [ 0] java.lang.String.getChars
  [ 1] java.io.BufferedWriter.write
  [ 2] java.io.Writer.write
  [ 3] java.io.PrintStream.writeln
  [ 4] java.io.PrintStream.println
  [ 5] Run.printResult
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 202310 ns (0.00%), 2 samples
  [ 0] java.lang.StringLatin1.inflate
  [ 1] java.lang.StringLatin1.getChars
  [ 2] java.lang.String.getChars
  [ 3] java.io.BufferedWriter.write
  [ 4] java.io.Writer.write
  [ 5] java.io.PrintStream.writeln
  [ 6] java.io.PrintStream.println
  [ 7] Run.printResult
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 202220 ns (0.00%), 2 samples
  [ 0] CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int)
  [ 1] LIR_Assembler::add_call_info(int, CodeEmitInfo*)
  [ 2] .annobin__ZN13LIR_Assembler9emit_callEP14LIR_OpJavaCall.start
  [ 3] LIR_Assembler::emit_lir_list(LIR_List*)
  [ 4] LIR_Assembler::emit_code(BlockList*)
  [ 5] .annobin__ZN11Compilation14emit_code_bodyEv.start
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] .annobin__ZN6Thread8call_runEv.start
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 202210 ns (0.00%), 2 samples
  [ 0] java.lang.invoke.LambdaForm$MH.0x0000000801008400.invoke
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801008800.linkToTargetMethod
  [ 2] Run.printResult
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 202000 ns (0.00%), 2 samples
  [ 0] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801004800.invoke
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801008400.invoke
  [ 3] java.lang.invoke.LambdaForm$MH.0x0000000801008800.linkToTargetMethod
  [ 4] Run.printResult
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 202000 ns (0.00%), 2 samples
  [ 0] .annobin__ZN16LIR_OpVisitState6appendERP11LIR_OprDescNS_7OprModeE.start
  [ 1] LinearScan::build_intervals()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 201900 ns (0.00%), 2 samples
  [ 0] java.lang.String.getChars
  [ 1] java.io.BufferedWriter.write
  [ 2] java.io.Writer.write
  [ 3] java.io.PrintStream.writeln
  [ 4] java.io.PrintStream.println
  [ 5] Run.printResult
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 201830 ns (0.00%), 2 samples
  [ 0] ComputeLinearScanOrder::compute_order(BlockBegin*)
  [ 1] ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*)
  [ 2] IR::compute_code()
  [ 3] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 201640 ns (0.00%), 2 samples
  [ 0] PhiResolver::create_node(LIR_OprDesc*, bool)
  [ 1] LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*)
  [ 2] LIRGenerator::move_to_phi(ValueStack*)
  [ 3] LIRGenerator::do_Goto(Goto*)
  [ 4] non-virtual thunk to LIRGenerator::block_do(BlockBegin*)
  [ 5] BlockList::iterate_forward(BlockClosure*)
  [ 6] Compilation::emit_lir()
  [ 7] Compilation::compile_java_method()
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] .annobin__ZN6Thread8call_runEv.start
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 201330 ns (0.00%), 2 samples
  [ 0] .annobin__ZN14PhaseIdealLoop15build_loop_treeEv.start
  [ 1] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 2] .annobin__ZN14PhaseIdealLoop8optimizeER12PhaseIterGVN12LoopOptsMode.start
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 201280 ns (0.00%), 2 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 201260 ns (0.00%), 2 samples
  [ 0] Relocation::pd_call_destination(unsigned char*)
  [ 1] CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*)
  [ 2] CodeBuffer::relocate_code_to(CodeBuffer*) const
  [ 3] CodeBuffer::copy_code_to(CodeBlob*)
  [ 4] nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView<RuntimeStub*> const&, char*, int, int)
  [ 5] .annobin__ZN7nmethod11new_nmethodERK12methodHandleiiP11CodeOffsetsiP24DebugInformationRecorderP12DependenciesP10CodeBufferiP9OopMapSetP21ExceptionHandlerTableP22ImplicitExceptionTableP16AbstractCompileriRK17GrowableArrayViewIP11RuntimeStubEPciiPKcPP17FailedSpeculation.start
  [ 6] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView<RuntimeStub*> const&)
  [ 7] Compilation::install_code(int)
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] .annobin__ZN6Thread8call_runEv.start
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 201230 ns (0.00%), 2 samples
  [ 0] Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode)
  [ 1] LinearScan::resolve_data_flow()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 201230 ns (0.00%), 2 samples
  [ 0] RegionNode::Ideal(PhaseGVN*, bool)
  [ 1] PhaseIterGVN::transform_old(Node*)
  [ 2] PhaseIterGVN::optimize()
  [ 3] .annobin__ZN14PhaseIdealLoop8optimizeER12PhaseIterGVN12LoopOptsMode.start
  [ 4] Compile::Optimize()
  [ 5] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 6] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] .annobin__ZN6Thread8call_runEv.start
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 201150 ns (0.00%), 2 samples
  [ 0] stringStream::write(char const*, unsigned long)
  [ 1] outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool)
  [ 2] outputStream::print(char const*, ...)
  [ 3] CompileTask::print_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool, bool, long, long)
  [ 4] CompileTask::print(outputStream*, char const*, bool, bool)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] .annobin__ZN6Thread8call_runEv.start
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 201080 ns (0.00%), 2 samples
  [ 0] I2C/C2I adapters(0xbba)
  [ 1] [unknown_Java]

--- 200981 ns (0.00%), 2 samples
  [ 0] GraphBuilder::profile_call(ciMethod*, Instruction*, ciKlass*, GrowableArray<Instruction*>*, bool)
  [ 1] GraphBuilder::invoke(Bytecodes::Code)
  [ 2] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 3] GraphBuilder::iterate_all_blocks(bool)
  [ 4] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 5] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 6] IR::IR(Compilation*, ciMethod*, int)
  [ 7] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 8] Compilation::compile_java_method()
  [ 9] Compilation::compile_method()
  [10] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [11] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [12] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [13] CompileBroker::compiler_thread_loop()
  [14] JavaThread::thread_main_inner()
  [15] .annobin__ZN6Thread8call_runEv.start
  [16] thread_native_entry(Thread*)
  [17] start_thread

--- 200980 ns (0.00%), 2 samples
  [ 0] nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView<RuntimeStub*> const&, char*, int, int)
  [ 1] .annobin__ZN7nmethod11new_nmethodERK12methodHandleiiP11CodeOffsetsiP24DebugInformationRecorderP12DependenciesP10CodeBufferiP9OopMapSetP21ExceptionHandlerTableP22ImplicitExceptionTableP16AbstractCompileriRK17GrowableArrayViewIP11RuntimeStubEPciiPKcPP17FailedSpeculation.start
  [ 2] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView<RuntimeStub*> const&)
  [ 3] Compilation::install_code(int)
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] .annobin__ZN6Thread8call_runEv.start
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 200970 ns (0.00%), 2 samples
  [ 0] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 1] sun.nio.cs.StreamEncoder.flushBuffer
  [ 2] java.io.OutputStreamWriter.flushBuffer
  [ 3] java.io.PrintStream.writeln
  [ 4] java.io.PrintStream.println
  [ 5] Run.printResult
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 200950 ns (0.00%), 2 samples
  [ 0] InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
  [ 1] InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const
  [ 2] LinkResolver::lookup_method_in_klasses(LinkInfo const&, bool, bool)
  [ 3] LinkResolver::resolve_method(LinkInfo const&, Bytecodes::Code, JavaThread*)
  [ 4] LinkResolver::linktime_resolve_special_method(LinkInfo const&, JavaThread*)
  [ 5] LinkResolver::resolve_special_call_or_null(LinkInfo const&)
  [ 6] ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag)
  [ 7] ciEnv::get_method_by_index_impl(constantPoolHandle const&, int, Bytecodes::Code, ciInstanceKlass*)
  [ 8] ciBytecodeStream::get_method(bool&, ciSignature**)
  [ 9] GraphBuilder::invoke(Bytecodes::Code)
  [10] GraphBuilder::iterate_bytecodes_for_block(int)
  [11] GraphBuilder::iterate_all_blocks(bool)
  [12] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [13] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [14] IR::IR(Compilation*, ciMethod*, int)
  [15] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [16] Compilation::compile_java_method()
  [17] Compilation::compile_method()
  [18] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [19] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [20] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [21] CompileBroker::compiler_thread_loop()
  [22] JavaThread::thread_main_inner()
  [23] .annobin__ZN6Thread8call_runEv.start
  [24] thread_native_entry(Thread*)
  [25] start_thread

          ns  percent  samples  top
  ----------  -------  -------  ---
 18408753730   99.25%   183958  Mandelbrot.mandelbrot
     3463691    0.02%       32  _raw_spin_unlock_irqrestore_[k]
     3411160    0.02%       34  Interpreter
     1404370    0.01%       14  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     1012030    0.01%       10  __tls_get_addr
      899750    0.00%        9  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
      896260    0.00%        9  LinearScan::allocate_registers()
      894270    0.00%        9  [no_Java_frame]
      795650    0.00%        8  LinearScanWalker::alloc_free_reg(Interval*)
      708101    0.00%        7  LinearScan::compute_local_live_sets()
      699560    0.00%        7  Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode)
      685161    0.00%        7  ciObjectFactory::get_metadata(Metadata*)
      663310    0.00%        6  clock_gettime@GLIBC_2.2.5
      662811    0.00%        6  rmqueue_[k]
      644120    0.00%        6  [vdso]
      609030    0.00%        6  sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop
      604900    0.00%        6  do_user_addr_fault_[k]
      602440    0.00%        6  LIR_OpVisitState::visit(LIR_Op*)
      602130    0.00%        6  DebugInformationRecorder::find_sharable_decode_offset(int)
      600110    0.00%        6  LinearScan::build_intervals()
      599480    0.00%        6  PhaseChaitin::gather_lrg_masks(bool)
      596150    0.00%        6  ValueStack::values_do(ValueVisitor*)
      501810    0.00%        5  java.lang.String.isLatin1
      501380    0.00%        5  I2C/C2I adapters(0xb)
      500040    0.00%        5  java.lang.invoke.MethodType.checkPtypes
      499850    0.00%        5  __memset_avx2_unaligned
      499100    0.00%        5  java.util.Arrays.copyOfRange
      495930    0.00%        5  PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
      495590    0.00%        5  java.lang.AbstractStringBuilder.append
      486141    0.00%        5  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
      484610    0.00%        5  malloc
      469420    0.00%        4  futex_wake_[k]
      413270    0.00%        4  LIRGenerator::new_register(BasicType)
      412350    0.00%        4  smp_call_function_many_cond_[k]
      411690    0.00%        4  __GI___pthread_mutex_unlock_usercnt
      405080    0.00%        4  java.lang.String.getChars
      404300    0.00%        4  java.io.BufferedWriter.write
      404070    0.00%        4  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
      403320    0.00%        4  java.lang.invoke.LambdaForm$MH.0x0000000801008400.invoke
      401020    0.00%        4  vmSymbols::find_sid(Symbol const*)
      400750    0.00%        4  BitMap::is_same(BitMap const&) const
      400480    0.00%        4  NullCheckEliminator::iterate_one(BlockBegin*)
      400161    0.00%        4  jdk.internal.org.objectweb.asm.Frame.push
      398830    0.00%        4  LIR_OpVisitState::append(LIR_OprDesc*&, LIR_OpVisitState::OprMode) [clone .constprop.0]
      398740    0.00%        4  LinearScan::add_register_hints(LIR_Op*)
      395170    0.00%        4  LIRGenerator::state_for(Instruction*, ValueStack*, bool)
      392030    0.00%        4  _dl_update_slotinfo
      391871    0.00%        4  AdapterHandlerLibrary::get_adapter(methodHandle const&)
      347190    0.00%        3  __lll_lock_wake
      342330    0.00%        3  .annobin__ZN15StatSamplerTask4taskEv.start
      335310    0.00%        3  Monitor::wait_without_safepoint_check(long)
      329820    0.00%        3  __condvar_dec_grefs
      325600    0.00%        3  os::PlatformMonitor::wait(long)
      316320    0.00%        3  exit_to_user_mode_loop_[k]
      315320    0.00%        3  ciObjectFactory::ciObjectFactory(Arena*, int)
      313760    0.00%        3  os::free(void*)
      311400    0.00%        3  stringStream::write(char const*, unsigned long)
      310140    0.00%        3  TypeNode::hash() const
      308520    0.00%        3  __handle_mm_fault_[k]
      306790    0.00%        3  syscall_enter_from_user_mode_[k]
      306550    0.00%        3  ciMethodData::bci_to_data(int, ciMethod*)
      305890    0.00%        3  __d_lookup_[k]
      305610    0.00%        3  sun.nio.cs.StreamEncoder.writeBytes
      305470    0.00%        3  java.nio.CharBuffer.limit
      305300    0.00%        3  sun.nio.cs.StreamEncoder.implWrite
      305050    0.00%        3  java.nio.Buffer.position
      304570    0.00%        3  java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke
      304240    0.00%        3  Java_java_io_FileOutputStream_writeBytes
      304230    0.00%        3  java.lang.StringCoding.implEncodeAsciiArray
      304180    0.00%        3  RelocIterator::reloc()
      303700    0.00%        3  GrowableArrayWithAllocator<int, GrowableArray<int> >::grow(int)
      303460    0.00%        3  _int_malloc
      302390    0.00%        3  sun.invoke.util.VerifyAccess.isTypeVisible
      302340    0.00%        3  .annobin__ZN16LIR_OpVisitState6appendERP11LIR_OprDescNS_7OprModeE.start
      302290    0.00%        3  GraphBuilder::iterate_bytecodes_for_block(int)
      301870    0.00%        3  TypeArrayKlass::array_klass_or_null(int)
      301820    0.00%        3  ConstantPool::klass_at_impl(constantPoolHandle const&, int, JavaThread*)
      301710    0.00%        3  SymbolTable::lookup_only(char const*, int, unsigned int&)
      301640    0.00%        3  RegionNode::Ideal(PhaseGVN*, bool)
      301510    0.00%        3  java.lang.invoke.MethodType.makeImpl
      301350    0.00%        3  java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument
      301300    0.00%        3  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
      301270    0.00%        3  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
      301260    0.00%        3  java.lang.invoke.MethodType.hashCode
      300890    0.00%        3  .annobin__ZNK4Node6pinnedEv.start
      300730    0.00%        3  Reflection::verify_member_access(Klass const*, Klass const*, Klass const*, AccessFlags, bool, bool, JavaThread*)
      300710    0.00%        3  LinearScan::add_def(LIR_OprDesc*, int, IntervalUseKind)
      300690    0.00%        3  Dict::Insert(void*, void*, bool)
      300540    0.00%        3  PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&, int, PhaseIdealLoop::CloneLoopMode, Node*)
      300420    0.00%        3  GraphBuilder::method_return(Instruction*, bool)
      300320    0.00%        3  java.lang.invoke.MemberName.<init>
      300170    0.00%        3  ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, JavaThread*)
      300050    0.00%        3  InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code)
      300010    0.00%        3  Node::is_CFG() const
      299940    0.00%        3  MethodData::initialize()
      299370    0.00%        3  Compilation::emit_lir()
      299320    0.00%        3  jdk.internal.org.objectweb.asm.SymbolTable.hash
      299110    0.00%        3  .annobin__ZN9ChunkPool8allocateEmN17AllocFailStrategy13AllocFailEnumE.start
      299031    0.00%        3  ControlFlowOptimizer::optimize(BlockList*)
      298860    0.00%        3  GraphBuilder::invoke(Bytecodes::Code)
      298820    0.00%        3  PhaseChaitin::post_allocate_copy_removal()
      298740    0.00%        3  __strlen_avx2
      298720    0.00%        3  java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable
      298640    0.00%        3  Node::unique_ctrl_out() const
      298380    0.00%        3  java.lang.AbstractStringBuilder.putStringAt
      298240    0.00%        3  java.lang.invoke.MethodType.insertParameterTypes
      298050    0.00%        3  Assembler::emit_operand_helper(int, int, int, Address::ScaleFactor, int, RelocationHolder const&, int) [clone .constprop.0]
      297940    0.00%        3  LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind)
      297850    0.00%        3  update_get_addr
      297740    0.00%        3  jdk.internal.org.objectweb.asm.SymbolTable.addType
      297690    0.00%        3  nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool)
      296630    0.00%        3  ObjectLocker::~ObjectLocker()
      295930    0.00%        3  __memset_avx2_unaligned_erms
      294990    0.00%        3  SymbolTable::lookup_shared(char const*, int, unsigned int)
      294211    0.00%        3  RegionNode::is_CFG() const
      294041    0.00%        3  Type::hashcons()
      271930    0.00%        2  futex_wait_[k]
      251500    0.00%        2  CompileQueue::get()
      232800    0.00%        2  syscall_trace_enter.constprop.0_[k]
      221070    0.00%        2  outputStream::print(char const*, ...)
      220870    0.00%        2  ConstantPool::klass_at_if_loaded(constantPoolHandle const&, int)
      216850    0.00%        2  PeriodicTask::real_time_tick(int)
      215160    0.00%        2  Mutex::lock_without_safepoint_check()
      215110    0.00%        2  WatcherThread::sleep() const
      214400    0.00%        2  __futex_abstimed_wait_common
      211720    0.00%        2  java.io.OutputStreamWriter.flushBuffer
      211450    0.00%        2  java.lang.invoke.LambdaForm.normalize
      211270    0.00%        2  os::elapsedTime()
      209720    0.00%        2  ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int)
      209260    0.00%        2  pthread_cond_timedwait@@GLIBC_2.3.2
      208530    0.00%        2  java.lang.String.getBytes
      207250    0.00%        2  ElfParser::loadSymbols(bool)
      205580    0.00%        2  java.util.ArrayList.grow
      205140    0.00%        2  next_uptodate_page_[k]
      204860    0.00%        2  java.lang.String.substring
      204790    0.00%        2  java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion
      204680    0.00%        2  metaspace::MetaspaceArena::allocate(unsigned long)
      204520    0.00%        2  Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
      203970    0.00%        2  InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const
      203970    0.00%        2  .annobin__ZN8ciMethod9load_codeEv.start
      203940    0.00%        2  ImmutableOopMapBuilder::fill(ImmutableOopMapSet*, int)
      203670    0.00%        2  GraphBuilder::if_same(ValueType*, Instruction::Condition)
      203620    0.00%        2  java.nio.charset.CharsetEncoder.encode
      203560    0.00%        2  handle_mm_fault_[k]
      203230    0.00%        2  java.lang.ref.ReferenceQueue.poll
      203200    0.00%        2  java.util.ArrayList.iterator
      203190    0.00%        2  java.nio.Buffer.clear
      202840    0.00%        2  java.lang.invoke.LambdaForm$Name.<init>
      202780    0.00%        2  java.io.BufferedWriter.flushBuffer
      202661    0.00%        2  MemAllocator::allocate() const
      202520    0.00%        2  Node::remove_dead_region(PhaseGVN*, bool)
      202490    0.00%        2  constantPoolHandle::~constantPoolHandle()
      202460    0.00%        2  java.lang.invoke.MethodTypeForm.canonicalizeAll
      202310    0.00%        2  java.lang.StringLatin1.inflate
      202290    0.00%        2  MethodData::compute_allocation_size_in_bytes(methodHandle const&)
      202230    0.00%        2  java.util.Arrays.equals
      202220    0.00%        2  CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int)
      202170    0.00%        2  .annobin__ZN11ProfileData14translate_fromEPKS_.start
      202160    0.00%        2  SignatureStream::SignatureStream(Symbol const*, bool)
      202130    0.00%        2  ciEnv::get_klass_by_index_impl(constantPoolHandle const&, int, bool&, ciInstanceKlass*)
      202071    0.00%        2  java.lang.String.startsWith
      202010    0.00%        2  LIRGenerator::is_vreg_flag_set(int, LIRGenerator::VregFlag)
      201960    0.00%        2  java.lang.StringLatin1.getChars
      201830    0.00%        2  ComputeLinearScanOrder::compute_order(BlockBegin*)
      201740    0.00%        2  Node::replace_edge(Node*, Node*, PhaseGVN*)
      201640    0.00%        2  PhiResolver::create_node(LIR_OprDesc*, bool)
      201630    0.00%        2  PhiNode::unique_input(PhaseTransform*, bool)
      201630    0.00%        2  java.lang.invoke.MethodHandleNatives.resolve
      201630    0.00%        2  java.nio.CharBuffer.wrap
      201630    0.00%        2  java.lang.invoke.LambdaForm$NamedFunction.returnType
      201540    0.00%        2  java.nio.Buffer.<init>
      201520    0.00%        2  Run.measure
      201470    0.00%        2  __memmove_avx_unaligned_erms
      201450    0.00%        2  jdk.internal.org.objectweb.asm.SymbolTable.get
      201410    0.00%        2  MemAllocator::Allocation::notify_allocation_jfr_sampler()
      201350    0.00%        2  java.lang.StringConcatHelper.mix
      201330    0.00%        2  .annobin__ZN14PhaseIdealLoop15build_loop_treeEv.start
      201320    0.00%        2  jdk.internal.org.objectweb.asm.Type.getArgumentTypes
      201301    0.00%        2  jdk.internal.org.objectweb.asm.Frame.execute
      201301    0.00%        2  __strstr_sse2
      201260    0.00%        2  Relocation::pd_call_destination(unsigned char*)
      201130    0.00%        2  Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
      201080    0.00%        2  I2C/C2I adapters(0xbba)
      201080    0.00%        2  SharedRuntime::java_calling_convention(BasicType const*, VMRegPair*, int)
      201070    0.00%        2  GrowableArrayWithAllocator<LIR_Op*, GrowableArray<LIR_Op*> >::grow(int)
      201070    0.00%        2  Method::set_code(methodHandle const&, CompiledMethod*)
      201060    0.00%        2  SystemDictionaryShared::find_record(RunTimeSharedDictionary*, RunTimeSharedDictionary*, Symbol*) [clone .part.0]
      201020    0.00%        2  java.io.PrintStream.println
      200981    0.00%        2  GraphBuilder::profile_call(ciMethod*, Instruction*, ciKlass*, GrowableArray<Instruction*>*, bool)
      200980    0.00%        2  nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView<RuntimeStub*> const&, char*, int, int)
      200970    0.00%        2  sun.nio.cs.StreamEncoder.implFlushBuffer
      200940    0.00%        2  BlockListBuilder::set_leaders()
      200900    0.00%        2  jdk.internal.org.objectweb.asm.SymbolTable.put
      200890    0.00%        2  BlockBegin::iterate_preorder(GrowableArray<bool>&, BlockClosure*)
      200861    0.00%        2  Mandelbrot.verifyResult
      200790    0.00%        2  Unique_Node_List::remove(Node*)
      200740    0.00%        2  jdk.internal.org.objectweb.asm.Frame.getAbstractTypeFromDescriptor
      200721    0.00%        2  java.lang.invoke.LambdaForm$MH.0x0000000801008800.linkToTargetMethod
      200680    0.00%        2  MultiNode::proj_out(unsigned int) const
      200610    0.00%        2  IndexSetIterator::advance_and_next()
