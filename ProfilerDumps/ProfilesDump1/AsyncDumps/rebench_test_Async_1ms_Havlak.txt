--- Execution profile ---
Total samples       : 36431
unknown_Java        : 30 (0.08%)
not_walkable_Java   : 9 (0.02%)
deoptimization      : 1 (0.00%)

--- 11860874157 ns (32.54%), 11860 samples
  [ 0] som.IdentitySet.lambda$contains$0
  [ 1] som.IdentitySet$$Lambda$10.0x0000000801009b40.test
  [ 2] som.Vector.hasSome
  [ 3] som.Set.hasSome
  [ 4] som.IdentitySet.contains
  [ 5] som.Set.add
  [ 6] havlak.SimpleLoop.addChildLoop
  [ 7] havlak.SimpleLoop.setParent
  [ 8] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 9] havlak.LoopStructureGraph$$Lambda$12.0x0000000801009f90.apply
  [10] som.Vector.forEach
  [11] havlak.LoopStructureGraph.calculateNestingLevel
  [12] havlak.LoopTesterApp.main
  [13] Havlak.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 2538433828 ns (6.96%), 2538 samples
  [ 0] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 1] havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2430369498 ns (6.67%), 2426 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 1749560080 ns (4.80%), 1750 samples
  [ 0] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 1] havlak.HavlakLoopFinder$$Lambda$3.0x0000000801008a28.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.processEdges
  [ 4] havlak.HavlakLoopFinder.identifyEdges
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1521204568 ns (4.17%), 1521 samples
  [ 0] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 1] havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.addDummyLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 753255200 ns (2.07%), 753 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 706988310 ns (1.94%), 707 samples
  [ 0] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 1] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 2] som.Vector.forEach
  [ 3] som.Set.forEach
  [ 4] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 583971311 ns (1.60%), 584 samples
  [ 0] havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply
  [ 1] som.Vector.forEach
  [ 2] havlak.HavlakLoopFinder.stepD
  [ 3] havlak.HavlakLoopFinder.findLoops
  [ 4] havlak.LoopTesterApp.findLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 535030788 ns (1.47%), 535 samples
  [ 0] havlak.HavlakLoopFinder.stepD
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 506125071 ns (1.39%), 506 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.addDummyLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 394398408 ns (1.08%), 394 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 390030843 ns (1.07%), 390 samples
  [ 0] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 1] havlak.HavlakLoopFinder$$Lambda$3.0x0000000801008a28.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.processEdges
  [ 4] havlak.HavlakLoopFinder.identifyEdges
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 365668355 ns (1.00%), 365 samples
  [ 0] .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
  [ 1] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 2] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 3] G1ParEvacuateFollowersClosure::do_void()
  [ 4] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 5] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 8] .annobin__ZN6Thread8call_runEv.start
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 288012021 ns (0.79%), 288 samples
  [ 0] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 1] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 2] som.Vector.forEach
  [ 3] som.Set.forEach
  [ 4] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 270932592 ns (0.74%), 271 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 5] havlak.HavlakLoopFinder$$Lambda$3.0x0000000801008a28.apply
  [ 6] som.Vector.forEach
  [ 7] havlak.HavlakLoopFinder.processEdges
  [ 8] havlak.HavlakLoopFinder.identifyEdges
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 228025569 ns (0.63%), 228 samples
  [ 0] havlak.LoopStructureGraph$$Lambda$12.0x0000000801009f90.apply
  [ 1] som.Vector.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevel
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 221098492 ns (0.61%), 221 samples
  [ 0] som.Dictionary.transferEntries
  [ 1] som.Dictionary.resize
  [ 2] som.Dictionary.atPut
  [ 3] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 4] havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.initAllNodes
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 216024227 ns (0.59%), 216 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.addDummyLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 195934581 ns (0.54%), 196 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 5] havlak.HavlakLoopFinder$$Lambda$3.0x0000000801008a28.apply
  [ 6] som.Vector.forEach
  [ 7] havlak.HavlakLoopFinder.processEdges
  [ 8] havlak.HavlakLoopFinder.identifyEdges
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 155172502 ns (0.43%), 155 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 152119714 ns (0.42%), 152 samples
  [ 0] som.Vector.forEach
  [ 1] som.Set.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 3] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 4] havlak.LoopStructureGraph$$Lambda$13.0x000000080100a1b8.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 8] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 9] havlak.LoopStructureGraph$$Lambda$13.0x000000080100a1b8.apply
  [10] som.Vector.forEach
  [11] som.Set.forEach
  [12] havlak.LoopStructureGraph.calculateNestingLevelRec
  [13] havlak.LoopStructureGraph.calculateNestingLevel
  [14] havlak.LoopTesterApp.main
  [15] Havlak.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 150995096 ns (0.41%), 151 samples
  [ 0] havlak.SimpleLoop.<init>
  [ 1] havlak.LoopStructureGraph.createNewLoop
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 131998350 ns (0.36%), 132 samples
  [ 0] havlak.HavlakLoopFinder.doDFS
  [ 1] havlak.HavlakLoopFinder.doDFS
  [ 2] havlak.HavlakLoopFinder.doDFS
  [ 3] havlak.HavlakLoopFinder.doDFS
  [ 4] havlak.HavlakLoopFinder.doDFS
  [ 5] havlak.HavlakLoopFinder.initAllNodes
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.addDummyLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 131011508 ns (0.36%), 131 samples
  [ 0] havlak.HavlakLoopFinder.doDFS
  [ 1] havlak.HavlakLoopFinder.initAllNodes
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.addDummyLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 126025054 ns (0.35%), 126 samples
  [ 0] havlak.HavlakLoopFinder.doDFS
  [ 1] havlak.HavlakLoopFinder.doDFS
  [ 2] havlak.HavlakLoopFinder.doDFS
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.addDummyLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 122012682 ns (0.33%), 122 samples
  [ 0] havlak.UnionFindNode.findSet
  [ 1] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 2] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 3] som.Vector.forEach
  [ 4] som.Set.forEach
  [ 5] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 119994464 ns (0.33%), 120 samples
  [ 0] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 1] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 2] som.Vector.forEach
  [ 3] som.Set.forEach
  [ 4] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 112028134 ns (0.31%), 112 samples
  [ 0] havlak.HavlakLoopFinder.doDFS
  [ 1] havlak.HavlakLoopFinder.doDFS
  [ 2] havlak.HavlakLoopFinder.doDFS
  [ 3] havlak.HavlakLoopFinder.doDFS
  [ 4] havlak.HavlakLoopFinder.doDFS
  [ 5] havlak.HavlakLoopFinder.doDFS
  [ 6] havlak.HavlakLoopFinder.doDFS
  [ 7] havlak.HavlakLoopFinder.initAllNodes
  [ 8] havlak.HavlakLoopFinder.findLoops
  [ 9] havlak.LoopTesterApp.findLoops
  [10] havlak.LoopTesterApp.addDummyLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 108051383 ns (0.30%), 108 samples
  [ 0] som.Vector.forEach
  [ 1] som.Set.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 3] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 4] havlak.LoopStructureGraph$$Lambda$13.0x000000080100a1b8.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 8] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 9] havlak.LoopStructureGraph$$Lambda$13.0x000000080100a1b8.apply
  [10] som.Vector.forEach
  [11] som.Set.forEach
  [12] havlak.LoopStructureGraph.calculateNestingLevelRec
  [13] havlak.LoopStructureGraph.calculateNestingLevel
  [14] havlak.LoopTesterApp.main
  [15] Havlak.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 103990302 ns (0.29%), 104 samples
  [ 0] havlak.UnionFindNode.union
  [ 1] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 2] havlak.HavlakLoopFinder$$Lambda$11.0x0000000801009d68.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.setLoopAttributes
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 103094644 ns (0.28%), 103 samples
  [ 0] java.lang.Object.<init>
  [ 1] som.Dictionary$Entry.<init>
  [ 2] som.IdentityDictionary$IdEntry.<init>
  [ 3] som.IdentityDictionary.newEntry
  [ 4] som.Dictionary.atPut
  [ 5] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 6] havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.apply
  [ 7] som.Vector.forEach
  [ 8] havlak.HavlakLoopFinder.initAllNodes
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 102019252 ns (0.28%), 102 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.addDummyLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 99002687 ns (0.27%), 99 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.IdentitySet.contains
  [ 3] som.Set.add
  [ 4] havlak.SimpleLoop.addChildLoop
  [ 5] havlak.SimpleLoop.setParent
  [ 6] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 7] havlak.LoopStructureGraph$$Lambda$12.0x0000000801009f90.apply
  [ 8] som.Vector.forEach
  [ 9] havlak.LoopStructureGraph.calculateNestingLevel
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 90998820 ns (0.25%), 91 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 89254059 ns (0.24%), 89 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 80018599 ns (0.22%), 80 samples
  [ 0] havlak.SimpleLoop.<init>
  [ 1] havlak.LoopStructureGraph.createNewLoop
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.addDummyLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 73139356 ns (0.20%), 73 samples
  [ 0] .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 71965131 ns (0.20%), 72 samples
  [ 0] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 1] havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 68009562 ns (0.19%), 68 samples
  [ 0] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 1] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 2] som.Vector.forEach
  [ 3] som.Set.forEach
  [ 4] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 64973303 ns (0.18%), 65 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 2] havlak.HavlakLoopFinder$$Lambda$3.0x0000000801008a28.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.processEdges
  [ 5] havlak.HavlakLoopFinder.identifyEdges
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 64008008 ns (0.18%), 64 samples
  [ 0] java.lang.Object.<init>
  [ 1] som.Dictionary$Entry.<init>
  [ 2] som.IdentityDictionary$IdEntry.<init>
  [ 3] som.IdentityDictionary.newEntry
  [ 4] som.Dictionary.atPut
  [ 5] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 6] havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.apply
  [ 7] som.Vector.forEach
  [ 8] havlak.HavlakLoopFinder.initAllNodes
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.addDummyLoops
  [12] havlak.LoopTesterApp.main
  [13] Havlak.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 56022806 ns (0.15%), 56 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.addDummyLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 54015970 ns (0.15%), 54 samples
  [ 0] havlak.UnionFindNode.findSet
  [ 1] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 2] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 3] som.Vector.forEach
  [ 4] som.Set.forEach
  [ 5] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.addDummyLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 51995354 ns (0.14%), 52 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.addDummyLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 51987986 ns (0.14%), 52 samples
  [ 0] som.Vector.append
  [ 1] som.Set.add
  [ 2] havlak.SimpleLoop.addNode
  [ 3] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 4] havlak.HavlakLoopFinder$$Lambda$11.0x0000000801009d68.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.setLoopAttributes
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 51024289 ns (0.14%), 51 samples
  [ 0] havlak.HavlakLoopFinder.stepD
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.addDummyLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 50990718 ns (0.14%), 51 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 49005491 ns (0.13%), 49 samples
  [ 0] som.Vector.forEach
  [ 1] havlak.HavlakLoopFinder.stepD
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 49001372 ns (0.13%), 49 samples
  [ 0] som.Vector.append
  [ 1] som.Set.add
  [ 2] havlak.SimpleLoop.<init>
  [ 3] havlak.LoopStructureGraph.createNewLoop
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 48013439 ns (0.13%), 48 samples
  [ 0] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 1] havlak.LoopStructureGraph$$Lambda$12.0x0000000801009f90.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.LoopStructureGraph.calculateNestingLevel
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 47998993 ns (0.13%), 48 samples
  [ 0] som.Vector.forEach
  [ 1] havlak.HavlakLoopFinder.setLoopAttributes
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 47992982 ns (0.13%), 48 samples
  [ 0] havlak.HavlakLoopFinder$$Lambda$11.0x0000000801009d68.apply
  [ 1] som.Vector.forEach
  [ 2] havlak.HavlakLoopFinder.setLoopAttributes
  [ 3] havlak.HavlakLoopFinder.findLoops
  [ 4] havlak.LoopTesterApp.findLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 47006959 ns (0.13%), 47 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepD$6
  [ 4] havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.stepD
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 47004704 ns (0.13%), 47 samples
  [ 0] som.Vector.at
  [ 1] havlak.HavlakLoopFinder.stepD
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 44997353 ns (0.12%), 45 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepD$6
  [ 4] havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.stepD
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 44996723 ns (0.12%), 45 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 4] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 8] havlak.HavlakLoopFinder.findLoops
  [ 9] havlak.LoopTesterApp.findLoops
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 44989921 ns (0.12%), 45 samples
  [ 0] som.Vector.<init>
  [ 1] som.Set.<init>
  [ 2] som.Set.<init>
  [ 3] som.IdentitySet.<init>
  [ 4] havlak.SimpleLoop.<init>
  [ 5] havlak.LoopStructureGraph.createNewLoop
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 44002460 ns (0.12%), 44 samples
  [ 0] havlak.SimpleLoop.setParent
  [ 1] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 2] havlak.LoopStructureGraph$$Lambda$12.0x0000000801009f90.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.LoopStructureGraph.calculateNestingLevel
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 43008064 ns (0.12%), 43 samples
  [ 0] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 1] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 5] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 6] som.Vector.forEach
  [ 7] som.Set.forEach
  [ 8] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 43006640 ns (0.12%), 43 samples
  [ 0] havlak.UnionFindNode.union
  [ 1] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 2] havlak.HavlakLoopFinder$$Lambda$11.0x0000000801009d68.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.setLoopAttributes
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 42999705 ns (0.12%), 43 samples
  [ 0] som.Vector.forEach
  [ 1] havlak.HavlakLoopFinder.stepD
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 39052743 ns (0.11%), 39 samples
  [ 0] som.Set.<init>
  [ 1] som.Set.<init>
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 39041309 ns (0.11%), 39 samples
  [ 0] som.Dictionary.removeAll
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 38003474 ns (0.10%), 38 samples
  [ 0] som.Vector.<init>
  [ 1] som.Set.<init>
  [ 2] som.Set.<init>
  [ 3] som.IdentitySet.<init>
  [ 4] havlak.SimpleLoop.<init>
  [ 5] havlak.LoopStructureGraph.createNewLoop
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 37004141 ns (0.10%), 37 samples
  [ 0] havlak.SimpleLoop.addNode
  [ 1] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 2] havlak.HavlakLoopFinder$$Lambda$11.0x0000000801009d68.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.setLoopAttributes
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 36511066 ns (0.10%), 36 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 4] .annobin__ZN6Thread8call_runEv.start
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 36015818 ns (0.10%), 36 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 36013775 ns (0.10%), 36 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.HavlakLoopFinder.<init>
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.addDummyLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 35024690 ns (0.10%), 35 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 35023603 ns (0.10%), 35 samples
  [ 0] som.Vector.forEach
  [ 1] som.Set.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 3] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 4] havlak.LoopStructureGraph$$Lambda$13.0x000000080100a1b8.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 8] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 9] havlak.LoopStructureGraph$$Lambda$13.0x000000080100a1b8.apply
  [10] som.Vector.forEach
  [11] som.Set.forEach
  [12] havlak.LoopStructureGraph.calculateNestingLevelRec
  [13] havlak.LoopStructureGraph.calculateNestingLevel
  [14] havlak.LoopTesterApp.main
  [15] Havlak.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 34996718 ns (0.10%), 35 samples
  [ 0] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 1] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 5] havlak.HavlakLoopFinder$$Lambda$3.0x0000000801008a28.apply
  [ 6] som.Vector.forEach
  [ 7] havlak.HavlakLoopFinder.processEdges
  [ 8] havlak.HavlakLoopFinder.identifyEdges
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.addDummyLoops
  [12] havlak.LoopTesterApp.main
  [13] Havlak.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 33988984 ns (0.09%), 34 samples
  [ 0] havlak.HavlakLoopFinder$$Lambda$11.0x0000000801009d68.apply
  [ 1] som.Vector.forEach
  [ 2] havlak.HavlakLoopFinder.setLoopAttributes
  [ 3] havlak.HavlakLoopFinder.findLoops
  [ 4] havlak.LoopTesterApp.findLoops
  [ 5] havlak.LoopTesterApp.addDummyLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 33966657 ns (0.09%), 34 samples
  [ 0] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 1] havlak.HavlakLoopFinder$$Lambda$3.0x0000000801008a28.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.processEdges
  [ 4] havlak.HavlakLoopFinder.identifyEdges
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 33000669 ns (0.09%), 33 samples
  [ 0] Node::dominates(Node*, Node_List&)
  [ 1] MemNode::all_controls_dominate(Node*, Node*) [clone .part.0]
  [ 2] InitializeNode::detect_init_independence(Node*, PhaseGVN*)
  [ 3] InitializeNode::can_capture_store(StoreNode*, PhaseGVN*, bool) [clone .part.0]
  [ 4] StoreNode::Ideal(PhaseGVN*, bool)
  [ 5] PhaseIterGVN::transform_old(Node*)
  [ 6] PhaseIterGVN::optimize()
  [ 7] Compile::Optimize()
  [ 8] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 9] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] .annobin__ZN6Thread8call_runEv.start
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 33000068 ns (0.09%), 33 samples
  [ 0] som.Vector.forEach
  [ 1] havlak.UnionFindNode.findSet
  [ 2] havlak.HavlakLoopFinder.lambda$stepD$6
  [ 3] havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply
  [ 4] som.Vector.forEach
  [ 5] havlak.HavlakLoopFinder.stepD
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 32013819 ns (0.09%), 32 samples
  [ 0] som.Dictionary.removeAll
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.addDummyLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 32006752 ns (0.09%), 32 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.addDummyLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 32002564 ns (0.09%), 32 samples
  [ 0] havlak.HavlakLoopFinder.doDFS
  [ 1] havlak.HavlakLoopFinder.doDFS
  [ 2] havlak.HavlakLoopFinder.doDFS
  [ 3] havlak.HavlakLoopFinder.doDFS
  [ 4] havlak.HavlakLoopFinder.doDFS
  [ 5] havlak.HavlakLoopFinder.doDFS
  [ 6] havlak.HavlakLoopFinder.doDFS
  [ 7] havlak.HavlakLoopFinder.doDFS
  [ 8] havlak.HavlakLoopFinder.doDFS
  [ 9] havlak.HavlakLoopFinder.initAllNodes
  [10] havlak.HavlakLoopFinder.findLoops
  [11] havlak.LoopTesterApp.findLoops
  [12] havlak.LoopTesterApp.addDummyLoops
  [13] havlak.LoopTesterApp.main
  [14] Havlak.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 31033888 ns (0.09%), 31 samples
  [ 0] som.Dictionary.insertBucketEntry
  [ 1] som.Dictionary.atPut
  [ 2] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 3] havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.apply
  [ 4] som.Vector.forEach
  [ 5] havlak.HavlakLoopFinder.initAllNodes
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 31008948 ns (0.09%), 31 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepD$6
  [ 4] havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.stepD
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.addDummyLoops
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 30029498 ns (0.08%), 30 samples
  [ 0] som.Vector.at
  [ 1] havlak.HavlakLoopFinder.stepD
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.addDummyLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 30005560 ns (0.08%), 30 samples
  [ 0] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 1] havlak.HavlakLoopFinder$$Lambda$11.0x0000000801009d68.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.setLoopAttributes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 30003077 ns (0.08%), 30 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 4] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 8] havlak.HavlakLoopFinder.findLoops
  [ 9] havlak.LoopTesterApp.findLoops
  [10] havlak.LoopTesterApp.addDummyLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 29993051 ns (0.08%), 30 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.IdentitySet.contains
  [ 3] som.Set.add
  [ 4] havlak.SimpleLoop.<init>
  [ 5] havlak.LoopStructureGraph.createNewLoop
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 29006099 ns (0.08%), 29 samples
  [ 0] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 1] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 5] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 6] som.Vector.forEach
  [ 7] som.Set.forEach
  [ 8] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.addDummyLoops
  [12] havlak.LoopTesterApp.main
  [13] Havlak.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 29004786 ns (0.08%), 29 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 28999260 ns (0.08%), 29 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepD$6
  [ 4] havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.stepD
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.addDummyLoops
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 28024258 ns (0.08%), 28 samples
  [ 0] som.Vector.forEach
  [ 1] som.Set.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 3] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 4] havlak.LoopStructureGraph$$Lambda$13.0x000000080100a1b8.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 8] havlak.LoopStructureGraph.calculateNestingLevel
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 28012895 ns (0.08%), 28 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 28008135 ns (0.08%), 28 samples
  [ 0] som.Dictionary.transferEntries
  [ 1] som.Dictionary.resize
  [ 2] som.Dictionary.atPut
  [ 3] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 4] havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.initAllNodes
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 28006910 ns (0.08%), 28 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.IdentitySet.contains
  [ 3] som.Set.add
  [ 4] havlak.SimpleLoop.addChildLoop
  [ 5] havlak.SimpleLoop.setParent
  [ 6] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 7] havlak.LoopStructureGraph$$Lambda$12.0x0000000801009f90.apply
  [ 8] som.Vector.forEach
  [ 9] havlak.LoopStructureGraph.calculateNestingLevel
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 28003928 ns (0.08%), 28 samples
  [ 0] som.Vector.forEach
  [ 1] havlak.HavlakLoopFinder.setLoopAttributes
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.addDummyLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 27001481 ns (0.07%), 27 samples
  [ 0] havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
  [ 1] som.Vector.forEach
  [ 2] som.Set.forEach
  [ 3] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 26007688 ns (0.07%), 26 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] .annobin__ZN6Thread8call_runEv.start
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 24998939 ns (0.07%), 25 samples
  [ 0] itable stub
  [ 1] som.Vector.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevel
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 24997087 ns (0.07%), 25 samples
  [ 0] havlak.SimpleLoop.addNode
  [ 1] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 2] havlak.HavlakLoopFinder$$Lambda$11.0x0000000801009d68.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.setLoopAttributes
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 24001452 ns (0.07%), 24 samples
  [ 0] som.Vector.append
  [ 1] som.Set.add
  [ 2] havlak.SimpleLoop.<init>
  [ 3] havlak.LoopStructureGraph.createNewLoop
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 23997979 ns (0.07%), 24 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.IdentitySet.contains
  [ 3] som.Set.add
  [ 4] havlak.SimpleLoop.addChildLoop
  [ 5] havlak.SimpleLoop.setParent
  [ 6] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 7] havlak.LoopStructureGraph$$Lambda$12.0x0000000801009f90.apply
  [ 8] som.Vector.forEach
  [ 9] havlak.LoopStructureGraph.calculateNestingLevel
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 23030646 ns (0.06%), 23 samples
  [ 0] jint_disjoint_arraycopy
  [ 1] java.util.Arrays.copyOf
  [ 2] som.Vector.append
  [ 3] havlak.HavlakLoopFinder.findLoops
  [ 4] havlak.LoopTesterApp.findLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 23002395 ns (0.06%), 23 samples
  [ 0] havlak.SimpleLoop.<init>
  [ 1] havlak.LoopStructureGraph.createNewLoop
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 11872876359   32.58%    11872  som.IdentitySet.lambda$contains$0
  4148603292   11.38%     4148  havlak.HavlakLoopFinder.lambda$initAllNodes$0
  2521650267    6.92%     2517  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  2190557327    6.01%     2191  havlak.HavlakLoopFinder.lambda$processEdges$1
  1991395218    5.46%     1991  havlak.HavlakLoopFinder.doDFS
  1955675580    5.37%     1955  havlak.HavlakLoopFinder.findLoops
  1265992407    3.47%     1266  havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  1167373021    3.20%     1167  som.Vector.append
   844862105    2.32%      845  som.Vector.hasSome
   803277239    2.20%      803  som.Vector.forEach
   661074901    1.81%      661  som.Vector.<init>
   640056892    1.76%      640  havlak.HavlakLoopFinder.stepD
   612968337    1.68%      613  havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply
   448836996    1.23%      448  .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
   333151218    0.91%      333  som.Dictionary.transferEntries
   300010528    0.82%      300  havlak.SimpleLoop.<init>
   267147500    0.73%      267  java.lang.Object.<init>
   251029983    0.69%      251  havlak.UnionFindNode.findSet
   241025393    0.66%      241  havlak.LoopStructureGraph$$Lambda$12.0x0000000801009f90.apply
   180331364    0.49%      180  clear_page_rep_[k]
   177042961    0.49%      177  som.Dictionary.atPut
   149993983    0.41%      150  havlak.UnionFindNode.union
   142015865    0.39%      142  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
   132046417    0.36%      132  som.Vector.at
   108982594    0.30%      109  havlak.HavlakLoopFinder$$Lambda$11.0x0000000801009d68.apply
    75054309    0.21%       75  som.Dictionary.removeAll
    75043252    0.21%       75  som.Dictionary.insertBucketEntry
    65065207    0.18%       65  som.Set.<init>
    62999938    0.17%       63  havlak.SimpleLoop.addNode
    62025627    0.17%       62  Node::dominates(Node*, Node_List&)
    61982376    0.17%       62  havlak.HavlakLoopFinder$$Lambda$3.0x0000000801008a28.apply
    58993981    0.16%       59  havlak.SimpleLoop.setParent
    57071453    0.16%       57  jint_disjoint_arraycopy
    56076317    0.15%       56  java.util.Arrays.copyOf
    55005275    0.15%       55  havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
    48138961    0.13%       48  __memset_avx2_unaligned_erms
    48013439    0.13%       48  havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
    46997628    0.13%       47  som.Set.hasSome
    46995950    0.13%       47  havlak.HavlakLoopFinder$$Lambda$8.0x00000008010096f0.apply
    41817107    0.11%       41  _raw_spin_unlock_irqrestore_[k]
    39986893    0.11%       40  itable stub
    37524636    0.10%       37  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
    37027488    0.10%       37  som.IdentityDictionary$IdEntry.<init>
    37018369    0.10%       37  som.Dictionary.resize
    35987536    0.10%       36  havlak.BasicBlock.customHash
    33991934    0.09%       34  havlak.HavlakLoopFinder.isAncestor
    26007688    0.07%       26  PhaseChaitin::Split(unsigned int, ResourceArea*)
    26000425    0.07%       26  havlak.HavlakLoopFinder.lambda$stepD$6
    24020507    0.07%       24  __memset_avx2_unaligned
    24012995    0.07%       24  havlak.UnionFindNode.initNode
    24002055    0.07%       24  havlak.LoopTesterApp.findLoops
    22999685    0.06%       23  java.lang.invoke.DirectMethodHandle.allocateInstance
    22002506    0.06%       22  havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.apply
    21999690    0.06%       22  havlak.UnionFindNode.getLoop
    21005145    0.06%       21  som.IdentityDictionary.newEntry
    21003244    0.06%       21  IndexSetIterator::advance_and_next()
    20064464    0.06%       20  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
    20018351    0.05%       20  __tls_get_addr
    20014015    0.05%       20  havlak.LoopStructureGraph$$Lambda$13.0x000000080100a1b8.apply
    19164175    0.05%       19  HeapRegionClaimer::claim_region(unsigned int)
    19112843    0.05%       19  __memmove_avx_unaligned_erms
    18006804    0.05%       18  havlak.LoopStructureGraph.createNewLoop
    16005484    0.04%       16  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List*, Node_List*, bool)
    15004965    0.04%       15  havlak.UnionFindNode.getBb
    14003936    0.04%       14  som.Dictionary.at
    13005022    0.04%       13  MemAllocator::allocate() const
    12145343    0.03%       12  .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
    12003354    0.03%       12  PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
    12000784    0.03%       12  havlak.SimpleLoop.addChildLoop
    11011704    0.03%       11  __GI___pthread_mutex_trylock
    11002463    0.03%       11  som.Vector.removeAll
    10999403    0.03%       11  PhaseLive::compute(unsigned int)
    10997883    0.03%       11  .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
    10990132    0.03%       11  som.IdentityDictionary$IdEntry.match
    10104963    0.03%       10  [vdso]
    10013942    0.03%       10  havlak.BasicBlock.<init>
    10012904    0.03%       10  SpinPause
    10007822    0.03%       10  Arena::contains(void const*) const
    10006763    0.03%       10  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
    10001592    0.03%       10  jdk.internal.misc.Unsafe.allocateInstance
    10000231    0.03%       10  PhaseChaitin::gather_lrg_masks(bool)
     9996144    0.03%       10  .annobin_Unsafe_AllocateInstance.start
     9054502    0.02%        9  .annobin__ZN14PhaseIdealLoop15build_loop_treeEv.start
     9010124    0.02%        9  Interpreter
     9004664    0.02%        9  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
     9001254    0.02%        9  havlak.UnionFindNode$$Lambda$7.0x00000008010094c8.<init>
     9001202    0.02%        9  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
     8996710    0.02%        9  PhaseChaitin::post_allocate_copy_removal()
     8995923    0.02%        9  som.Vector.atPut
     8007982    0.02%        8  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
     8005543    0.02%        8  PhaseIdealLoop::Dominators()
     8002632    0.02%        8  InstanceKlass::allocate_objArray(int, int, JavaThread*)
     8002243    0.02%        8  som.IdentitySet$$Lambda$10.0x0000000801009b40.test
     8001102    0.02%        8  PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&, PhaseChaitin::Pressure&)
     8000835    0.02%        8  IndexSet::alloc_block_containing(unsigned int)
     8000622    0.02%        8  PhaseIdealLoop::get_late_ctrl_with_anti_dep(LoadNode*, Node*, Node*)
     8000511    0.02%        8  IndexSet::initialize(unsigned int)
     7999542    0.02%        8  havlak.LoopTesterApp.addDummyLoops
     7998403    0.02%        8  PhaseAggressiveCoalesce::insert_copies(Matcher&)
     7995300    0.02%        8  Matcher::xform(Node*, int)
     7085112    0.02%        7  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*)
     7036072    0.02%        7  __memcpy_avx_unaligned
     7025804    0.02%        7  Dict::Insert(void*, void*, bool)
     7007311    0.02%        7  havlak.LoopTesterApp.main
     7005652    0.02%        7  PhaseOutput::BuildOopMaps()
     7004651    0.02%        7  G1CollectionSet::add_eden_region(HeapRegion*)
     7003850    0.02%        7  ObjArrayAllocator::initialize(HeapWordImpl**) const
     7003431    0.02%        7  PhaseIterGVN::transform_old(Node*)
     7000974    0.02%        7  PhaseChaitin::merge_multidefs()
     7000072    0.02%        7  PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&)
     6093464    0.02%        6  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*)
     6029521    0.02%        6  G1FromCardCache::clear(unsigned int)
     6022761    0.02%        6  FreeCSetClosure::do_heap_region(HeapRegion*)
     6010261    0.02%        6  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
     6007382    0.02%        6  Node::clone() const
     6003390    0.02%        6  havlak.UnionFindNode.getDfsNumber
     6001211    0.02%        6  ClassLoaderData::holder_phantom() const
     5998930    0.02%        6  som.Dictionary.getBucket
     5997861    0.02%        6  NodeHash::hash_find_insert(Node*)
     5993025    0.02%        6  Matcher::match_tree(Node const*)
     5061031    0.01%        5  .annobin__ZN17G1RemSetScanState20G1ClearCardTableTask7do_workEj.start
     5019170    0.01%        5  Type::cmp(Type const*, Type const*)
     5018681    0.01%        5  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
     5005762    0.01%        5  Compile::identify_useful_nodes(Unique_Node_List&)
     5004940    0.01%        5  PhaseIterGVN::subsume_node(Node*, Node*)
     5003923    0.01%        5  som.Dictionary.splitBucket
     5002950    0.01%        5  PhaseIdealLoop::is_dominator(Node*, Node*)
     5002371    0.01%        5  G1Allocator::unsafe_max_tlab_alloc()
     5002353    0.01%        5  som.Dictionary.getBucketIdx
     5002191    0.01%        5  PhaseCCP::analyze()
     5001632    0.01%        5  _dl_update_slotinfo
     5001620    0.01%        5  MemAllocator::Allocation::notify_allocation_jfr_sampler()
     5000141    0.01%        5  som.Set.add
     4999773    0.01%        5  Unique_Node_List::remove(Node*)
     4999442    0.01%        5  OptoRuntime::new_array_C(Klass*, int, JavaThread*)
     4999080    0.01%        5  som.Dictionary.<init>
     4997362    0.01%        5  som.Vector.size
     4993302    0.01%        5  PhaseChaitin::raise_pressure(Block*, LRG&, PhaseChaitin::Pressure&, PhaseChaitin::Pressure&) [clone .part.0]
     4129085    0.01%        4  __futex_abstimed_wait_common
     4056131    0.01%        4  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker()
     4055151    0.01%        4  G1RemSet::prepare_region_for_scan(HeapRegion*)
     4044420    0.01%        4  G1BlockOffsetTablePart::zero_bottom_entry_raw()
     4042340    0.01%        4  rmqueue_[k]
     4031672    0.01%        4  CollectedHeap::tlab_alloc_reserve() const
     4030541    0.01%        4  _int_malloc
     4024540    0.01%        4  G1RebuildFreeListTask::work(unsigned int)
     4023690    0.01%        4  os::javaTimeNanos()
     4008302    0.01%        4  Compile::copy_node_notes_to(Node*, Node*)
     4006261    0.01%        4  java.lang.Integer.valueOf
     4005872    0.01%        4  Matcher::Label_Root(Node const*, State*, Node*, Node*&)
     4005172    0.01%        4  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     4004970    0.01%        4  oopFactory::new_objArray(Klass*, int, JavaThread*)
     4003802    0.01%        4  MemAllocator::Allocation::check_out_of_memory()
     4003182    0.01%        4  PhaseIdealLoop::get_ctrl(Node*) [clone .isra.0]
     4003171    0.01%        4  pthread_mutex_lock@@GLIBC_2.2.5
     4002831    0.01%        4  java.lang.Integer.equals
     4002230    0.01%        4  PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&, IndexSet*, unsigned int&) [clone .part.0]
     4002001    0.01%        4  PhaseCFG::schedule_pinned_nodes(VectorSet&)
     4001580    0.01%        4  som.Dictionary.hash
     4001352    0.01%        4  Node::is_CFG() const
     4001320    0.01%        4  Matcher::find_shared(Node*)
     4000411    0.01%        4  [no_Java_frame]
     4000410    0.01%        4  som.Dictionary$Entry.<init>
     4000161    0.01%        4  .annobin__ZNK4Node6pinnedEv.start
     4000092    0.01%        4  PhaseIFG::SquareUp()
     3999570    0.01%        4  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
     3999451    0.01%        4  Compile::disconnect_useless_nodes(Unique_Node_List&, Unique_Node_List*)
     3999241    0.01%        4  havlak.HavlakLoopFinder.initAllNodes
     3998541    0.01%        4  PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber)
     3998371    0.01%        4  PhaseIterGVN::add_users_to_worklist(Node*)
     3998161    0.01%        4  som.IdentitySet$$Lambda$10.0x0000000801009b40.<init>
     3998100    0.01%        4  PhiNode::Ideal(PhaseGVN*, bool)
     3997611    0.01%        4  PhaseCFG::select(Block*, Node_List&, GrowableArray<int>&, VectorSet&, unsigned int, long*)
     3997512    0.01%        4  RegMask::is_misaligned_pair() const
     3996950    0.01%        4  havlak.HavlakLoopFinder.identifyEdges
     3075311    0.01%        3  GCIdMark::GCIdMark(unsigned int)
     3037541    0.01%        3  GangWorker::loop()
     3033740    0.01%        3  ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
     3032701    0.01%        3  syscall_enter_from_user_mode_[k]
     3031211    0.01%        3  PLABStats::desired_plab_sz(unsigned int)
     3028181    0.01%        3  G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord)
     3027562    0.01%        3  os::free(void*)
     3025440    0.01%        3  TruncatedSeq::add(double)
     3024841    0.01%        3  G1DirtyCardQueueSet::num_par_ids()
     3024371    0.01%        3  InlineCacheBuffer::update_inline_caches()
     3023440    0.01%        3  __x64_sys_gettid_[k]
     3007361    0.01%        3  Compile::remove_speculative_types(PhaseIterGVN&) [clone .part.0]
     3006811    0.01%        3  OtherRegionsTable::occupied() const
     3006743    0.01%        3  vmSymbols::find_sid(Symbol const*)
     3006311    0.01%        3  LIR_OpVisitState::visit(LIR_Op*)
     3004781    0.01%        3  PhaseIdealLoop::split_if_with_blocks_post(Node*)
     3004452    0.01%        3  TypeInstPtr::add_offset(long) const
     3004282    0.01%        3  Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
     3004272    0.01%        3  Compile::final_graph_reshaping_walk(Node_Stack&, Node*, Final_Reshape_Counts&)
     3004220    0.01%        3  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
     3003581    0.01%        3  havlak.HavlakLoopFinder$$Lambda$2.0x0000000801008800.<init>
     3003580    0.01%        3  PhaseIdealLoop::try_sink_out_of_loop(Node*)
     3003172    0.01%        3  MemAllocator::Allocation::notify_allocation_jvmti_sampler()
     3002952    0.01%        3  G1Policy::preventive_collection_required(unsigned int)
     3002950    0.01%        3  ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray<PhiNode*>&, bool&)
