--- Execution profile ---
Total samples       : 214

--- 5900435740 ns (27.57%), 59 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 4900334549 ns (22.90%), 49 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 4800410647 ns (22.43%), 48 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 1400115500 ns (6.54%), 14 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 1000065286 ns (4.67%), 10 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 700040074 ns (3.27%), 7 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 500035311 ns (2.34%), 5 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 500034460 ns (2.34%), 5 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 500020499 ns (2.34%), 5 samples
  [ 0] Sieve.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 300024673 ns (1.40%), 3 samples
  [ 0] Sieve.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 100020039 ns (0.47%), 1 sample
  [ 0] Sieve.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 100016868 ns (0.47%), 1 sample
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 100012056 ns (0.47%), 1 sample
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 100011558 ns (0.47%), 1 sample
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 100008877 ns (0.47%), 1 sample
  [ 0] oopFactory::new_typeArray(BasicType, int, JavaThread*)
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 100002626 ns (0.47%), 1 sample
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 100001078 ns (0.47%), 1 sample
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 100000788 ns (0.47%), 1 sample
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 100000277 ns (0.47%), 1 sample
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 19301448906   90.19%      193  Sieve.sieve
  1100067912    5.14%       11  java.util.Arrays.fill
   900065211    4.21%        9  Sieve.benchmark
   100008877    0.47%        1  oopFactory::new_typeArray(BasicType, int, JavaThread*)
