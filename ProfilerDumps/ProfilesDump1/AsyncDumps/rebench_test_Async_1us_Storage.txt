--- Execution profile ---
Total samples       : 4561451
GC_active           : 1 (0.00%)
unknown_Java        : 6213 (0.14%)
not_walkable_Java   : 1268 (0.03%)
deoptimization      : 5 (0.00%)

--- 12464246545 ns (26.48%), 1220947 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 9912379352 ns (21.06%), 970851 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 4005926856 ns (8.51%), 392376 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 2818944302 ns (5.99%), 276217 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1800992034 ns (3.83%), 175626 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x00000008010030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 1569927505 ns (3.34%), 153020 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1172906495 ns (2.49%), 115006 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 994631213 ns (2.11%), 97418 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 824382644 ns (1.75%), 80464 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 778860744 ns (1.65%), 76317 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 760805996 ns (1.62%), 74376 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 684231341 ns (1.45%), 67066 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 594991702 ns (1.26%), 58268 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 498664999 ns (1.06%), 48630 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 463067941 ns (0.98%), 45163 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x00000008010030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 434988746 ns (0.92%), 42405 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 419929811 ns (0.89%), 40918 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 416473376 ns (0.88%), 40551 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 324158987 ns (0.69%), 31750 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 323744909 ns (0.69%), 31633 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 297604856 ns (0.63%), 29110 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 277439535 ns (0.59%), 27100 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 244031824 ns (0.52%), 23762 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 238484671 ns (0.51%), 23250 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 211924119 ns (0.45%), 20786 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 206758039 ns (0.44%), 20272 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 183023053 ns (0.39%), 17847 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 148406554 ns (0.32%), 14508 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 129984709 ns (0.28%), 12654 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 120323114 ns (0.26%), 11755 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 114258045 ns (0.24%), 8348 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 112552998 ns (0.24%), 10990 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 105061302 ns (0.22%), 10286 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 104004762 ns (0.22%), 10173 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x00000008010030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 95875293 ns (0.20%), 9344 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 68487547 ns (0.15%), 6712 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 66966555 ns (0.14%), 3891 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 4] .annobin__ZN6Thread8call_runEv.start
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 63514587 ns (0.13%), 6227 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 63393278 ns (0.13%), 6219 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 60951096 ns (0.13%), 5968 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 59214745 ns (0.13%), 5185 samples
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 56413659 ns (0.12%), 5508 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 54439617 ns (0.12%), 5336 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 51786934 ns (0.11%), 5093 samples
  [ 0] Storage.buildTreeDepth
  [ 1] [unknown_Java]

--- 50046400 ns (0.11%), 4870 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 47697804 ns (0.10%), 4674 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 46973886 ns (0.10%), 4605 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 38480679 ns (0.08%), 3768 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 38382807 ns (0.08%), 3749 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 36842046 ns (0.08%), 3619 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 35347967 ns (0.08%), 3462 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 35098469 ns (0.07%), 3425 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 34599747 ns (0.07%), 3388 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x00000008010030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x00000008010030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 33696018 ns (0.07%), 3295 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 33457497 ns (0.07%), 3271 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 32018360 ns (0.07%), 3138 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 31087758 ns (0.07%), 2258 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] .annobin__ZN17G1RemSetScanState20G1ClearCardTableTask7do_workEj.start
  [ 2] G1BatchedGangTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] .annobin__ZN6Thread8call_runEv.start
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 29713497 ns (0.06%), 2904 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 28125279 ns (0.06%), 2327 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 26005350 ns (0.06%), 2536 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 24623514 ns (0.05%), 2393 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 24036485 ns (0.05%), 2352 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 23510446 ns (0.05%), 2308 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.benchmark
  [17] Benchmark.innerBenchmarkLoop
  [18] Run.measure
  [19] Run.doRuns
  [20] Run.runBenchmark
  [21] Harness.main

--- 22800996 ns (0.05%), 2231 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 20883865 ns (0.04%), 1948 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 20759084 ns (0.04%), 2023 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x00000008010030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x00000008010030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x00000008010030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 20602140 ns (0.04%), 1957 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 4] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x00000008010030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 20295137 ns (0.04%), 1975 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 20078795 ns (0.04%), 1949 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 18258524 ns (0.04%), 1269 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] .annobin__ZN6Thread8call_runEv.start
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 14726791 ns (0.03%), 1442 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 14524144 ns (0.03%), 1413 samples
  [ 0] Storage.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 14111473 ns (0.03%), 1382 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 13672102 ns (0.03%), 1254 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 13323724 ns (0.03%), 773 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 4] VM_G1CollectForAllocation::doit()
  [ 5] VM_Operation::evaluate()
  [ 6] VMThread::evaluate_operation(VM_Operation*)
  [ 7] VMThread::inner_execute(VM_Operation*)
  [ 8] VMThread::run()
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 13079572 ns (0.03%), 438 samples
  [ 0] finish_task_switch.isra.0_[k]
  [ 1] __schedule_[k]
  [ 2] schedule_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_common

--- 12852263 ns (0.03%), 1242 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x00000008010030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 12370994 ns (0.03%), 591 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 12331933 ns (0.03%), 767 samples
  [ 0] .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 12222024 ns (0.03%), 1202 samples
  [ 0] Storage$$Lambda$2.0x00000008010030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x00000008010030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 11180945 ns (0.02%), 1089 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x00000008010030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 11085523 ns (0.02%), 631 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] SafepointSynchronize::do_cleanup_tasks()
  [11] SafepointSynchronize::begin()
  [12] VMThread::inner_execute(VM_Operation*)
  [13] VMThread::run()
  [14] .annobin__ZN6Thread8call_runEv.start
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 11077111 ns (0.02%), 678 samples
  [ 0] G1FromCardCache::clear(unsigned int)
  [ 1] HeapRegionRemSet::clear_locked(bool)
  [ 2] HeapRegion::hr_clear(bool)
  [ 3] G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*)
  [ 4] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 6] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 7] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 8] G1BatchedGangTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] .annobin__ZN6Thread8call_runEv.start
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 10642232 ns (0.02%), 532 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] HeapRegionManager::rebuild_free_list(WorkGang*)
  [11] G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [13] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [14] VM_G1CollectForAllocation::doit()
  [15] VM_Operation::evaluate()
  [16] VMThread::evaluate_operation(VM_Operation*)
  [17] VMThread::inner_execute(VM_Operation*)
  [18] VMThread::run()
  [19] .annobin__ZN6Thread8call_runEv.start
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 10638483 ns (0.02%), 1036 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x00000008010030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x00000008010030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x00000008010030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 10373464 ns (0.02%), 512 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1CollectedHeap::post_evacuate_cleanup_2(PreservedMarksSet*, G1RedirtyCardsQueueSet*, G1EvacuationInfo*, unsigned long const*)
  [11] G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [13] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [14] VM_G1CollectForAllocation::doit()
  [15] VM_Operation::evaluate()
  [16] VMThread::evaluate_operation(VM_Operation*)
  [17] VMThread::inner_execute(VM_Operation*)
  [18] VMThread::run()
  [19] .annobin__ZN6Thread8call_runEv.start
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 10179333 ns (0.02%), 591 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1CollectedHeap::pre_evacuate_collection_set(G1EvacuationInfo&, G1ParScanThreadStateSet*)
  [11] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [13] VM_G1CollectForAllocation::doit()
  [14] VM_Operation::evaluate()
  [15] VMThread::evaluate_operation(VM_Operation*)
  [16] VMThread::inner_execute(VM_Operation*)
  [17] VMThread::run()
  [18] .annobin__ZN6Thread8call_runEv.start
  [19] thread_native_entry(Thread*)
  [20] start_thread

--- 10094042 ns (0.02%), 944 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 9820402 ns (0.02%), 949 samples
  [ 0] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 1] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x00000008010030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x00000008010030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda$2.0x00000008010030f0.apply
  [25] java.util.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.benchmark
  [28] Benchmark.innerBenchmarkLoop
  [29] Run.measure
  [30] Run.doRuns
  [31] Run.runBenchmark
  [32] Harness.main

--- 9636401 ns (0.02%), 835 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 9210421 ns (0.02%), 456 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [11] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [13] VM_G1CollectForAllocation::doit()
  [14] VM_Operation::evaluate()
  [15] VMThread::evaluate_operation(VM_Operation*)
  [16] VMThread::inner_execute(VM_Operation*)
  [17] VMThread::run()
  [18] .annobin__ZN6Thread8call_runEv.start
  [19] thread_native_entry(Thread*)
  [20] start_thread

--- 8955086 ns (0.02%), 521 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1RemSet::merge_heap_roots(bool)
  [11] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [13] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [14] VM_G1CollectForAllocation::doit()
  [15] VM_Operation::evaluate()
  [16] VMThread::evaluate_operation(VM_Operation*)
  [17] VMThread::inner_execute(VM_Operation*)
  [18] VMThread::run()
  [19] .annobin__ZN6Thread8call_runEv.start
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 8258464 ns (0.02%), 803 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000801007000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x00000008010030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 8205242 ns (0.02%), 791 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 7844582 ns (0.02%), 771 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x00000008010030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 7761873 ns (0.02%), 363 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] ___pthread_cond_broadcast

--- 7538824 ns (0.02%), 737 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x00000008010030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 7519200 ns (0.02%), 489 samples
  [ 0] G1BlockOffsetTablePart::zero_bottom_entry_raw()
  [ 1] G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*)
  [ 2] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 3] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 4] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 5] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 6] G1BatchedGangTask::work(unsigned int)
  [ 7] GangWorker::loop()
  [ 8] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 9] .annobin__ZN6Thread8call_runEv.start
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 7365703 ns (0.02%), 477 samples
  [ 0] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 4] G1BatchedGangTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] .annobin__ZN6Thread8call_runEv.start
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 7310011 ns (0.02%), 325 samples
  [ 0] malloc

          ns  percent  samples  top
  ----------  -------  -------  ---
 20080460791   42.67%  1965784  Storage.buildTreeDepth
 16648569751   35.38%  1629029  java.util.Arrays.setAll
  4987962145   10.60%   488506  som.Random.next
  1999920596    4.25%   195358  Storage.lambda$buildTreeDepth$0
   650835815    1.38%    63524  java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial
   292702621    0.62%    28695  Storage$$Lambda$2.0x00000008010030f0.<init>
   227854472    0.48%    22346  java.lang.invoke.DirectMethodHandle.allocateInstance
   185950961    0.40%    18109  Storage$$Lambda$2.0x00000008010030f0.apply
   152552625    0.32%    11559  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
   106880452    0.23%     5522  _raw_spin_unlock_irqrestore_[k]
    80353295    0.17%     6369  __memset_avx2_unaligned_erms
    67124425    0.14%     3895  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
    59214745    0.13%     5185  SpinPause
    37010999    0.08%     3481  Benchmark.innerBenchmarkLoop
    32603962    0.07%     1721  [vdso]
    25807580    0.05%     2491  Storage.benchmark
    18962494    0.04%     1324  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
    18939512    0.04%     1357  G1FromCardCache::clear(unsigned int)
    17039908    0.04%     1644  InstanceKlass::allocate_objArray(int, int, JavaThread*)
    16736798    0.04%     1254  generic_exec_single_[k]
    13749012    0.03%     1261  Interpreter
    13723653    0.03%      463  finish_task_switch.isra.0_[k]
    13245903    0.03%      818  .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
    12958483    0.03%     1185  ObjArrayAllocator::initialize(HeapWordImpl**) const
    12842606    0.03%      920  __tls_get_addr
    12221214    0.03%     1177  OptoRuntime::new_array_C(Klass*, int, JavaThread*)
    11991654    0.03%     1132  G1Allocator::unsafe_max_tlab_alloc()
    11046791    0.02%      635  syscall_enter_from_user_mode_[k]
    10529185    0.02%      957  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
    10305641    0.02%      981  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
     9917481    0.02%      931  G1Policy::preventive_collection_required(unsigned int)
     9199311    0.02%      677  exit_to_user_mode_loop_[k]
     8941922    0.02%      389  clock_gettime@GLIBC_2.2.5
     8803203    0.02%      828  ClassLoaderData::holder_phantom() const
     8652621    0.02%      432  malloc
     8327102    0.02%      791  MemAllocator::allocate() const
     8287890    0.02%      797  Storage.verifyResult
     8049131    0.02%      442  os::free(void*)
     7906363    0.02%      512  FreeCSetClosure::do_heap_region(HeapRegion*)
     7883230    0.02%      439  HeapRegionClaimer::claim_region(unsigned int)
     7717672    0.02%      357  _int_malloc
     7541021    0.02%      440  futex_wake_[k]
     7519200    0.02%      489  G1BlockOffsetTablePart::zero_bottom_entry_raw()
     7395913    0.02%      698  G1CollectedHeap::attempt_allocation_slow(unsigned long)
     7172082    0.02%      309  native_queued_spin_lock_slowpath_[k]
     6995962    0.01%      657  G1CardTable::g1_mark_as_young(MemRegion const&)
     6981242    0.01%      663  __GI___pthread_mutex_trylock
     6461703    0.01%      293  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*)
     6192671    0.01%      305  Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
     6188564    0.01%      580  G1CollectionSet::add_eden_region(HeapRegion*)
     6069021    0.01%      575  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
     5692342    0.01%      542  MemAllocator::Allocation::notify_allocation_jfr_sampler()
     5636003    0.01%      539  CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*)
     5599770    0.01%      413  copy_user_generic_string_[k]
     5591430    0.01%      449  pthread_mutex_lock@@GLIBC_2.2.5
     5563631    0.01%      452  restore_fpregs_from_user_[k]
     5490622    0.01%      517  HSpaceCounters::update_used(unsigned long)
     5379520    0.01%      513  G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
     5260460    0.01%      500  G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const
     5055724    0.01%      448  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     5047651    0.01%      241  plist_add_[k]
     4806750    0.01%      457  G1NUMA::index_of_current_thread() const
     4737291    0.01%      447  ObjArrayKlass::array_klass(int, JavaThread*)
     4630211    0.01%      381  .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
     4602342    0.01%      328  __vfprintf_internal
     4452951    0.01%      151  __futex_abstimed_wait_common
     4430911    0.01%      210  GangWorker::loop()
     4398990    0.01%      209  G1RemSet::prepare_region_for_scan(HeapRegion*)
     4376802    0.01%      434  _dl_update_slotinfo
     4299972    0.01%      405  ObjectSampler::is_created()
     4262130    0.01%      368  CollectedHeap::fill_with_dummy_object(HeapWordImpl**, HeapWordImpl**, bool)
     4129891    0.01%      267  futex_wake_mark_[k]
     4110611    0.01%      337  HandleMark::initialize(Thread*)
     4102321    0.01%      329  OtherRegionsTable::occupied() const
     4081660    0.01%      236  JNIHandleBlock::oops_do(OopClosure*)
     4020010    0.01%      196  futex_q_lock_[k]
     3990400    0.01%      377  .annobin__ZN25JfrObjectAllocationSample10send_eventEPK5KlassmbP6Thread.start
     3962500    0.01%      352  AbsSeq::davg() const
     3892753    0.01%      311  __memset_avx2_unaligned
     3873921    0.01%      343  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     3736810    0.01%      179  G1RebuildFreeListTask::work(unsigned int)
     3699920    0.01%      231  sem_post@GLIBC_2.2.5
     3686961    0.01%      346  java.lang.Integer.valueOf
     3629960    0.01%      171  __schedule_[k]
     3505930    0.01%      220  G1ParCopyClosure<(G1Barrier)0, false>::do_oop(oopDesc**)
     3497142    0.01%      334  .annobin__ZN11AllocTracer27send_allocation_in_new_tlabEP5KlassPP12HeapWordImplmmP10JavaThread.start
     3481943    0.01%      198  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker()
     3479062    0.01%      330  ThreadLocalAllocBuffer::retire_before_allocation()
     3427892    0.01%      193  __x64_sys_futex_[k]
     3411620    0.01%      323  .annobin__ZNK11G1CardTable11is_in_youngEP7oopDesc.start
     3392702    0.01%      188  os::javaTimeNanos()
     3370620    0.01%      193  TruncatedSeq::add(double)
     3253551    0.01%      171  G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
     3235751    0.01%      299  MutatorAllocRegion::retire(bool)
     3208962    0.01%      261  CollectedHeap::tlab_alloc_reserve() const
     3167610    0.01%      256  HeapRegionType::get_trace_type()
     3155870    0.01%      288  HeapRegion::set_eden()
     3012100    0.01%      179  CodeCache::find_blob(void*)
     2995051    0.01%      267  LinearScan::build_intervals()
     2984833    0.01%      145  futex_wait_[k]
     2940480    0.01%      133  .annobin__ZN13WeakProcessor4Task4workI19G1STWIsAliveClosure18G1KeepAliveClosureEEvjPT_PT0_.start
     2901483    0.01%      226  void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
     2901432    0.01%      265  [no_Java_frame]
     2840741    0.01%      207  G1RemSet::prepare_for_scan_heap_roots()
     2822272    0.01%      206  _IO_default_xsputn
     2819590    0.01%      171  __get_user_nocheck_4_[k]
     2751930    0.01%      259  .annobin__ZN12LeakProfiler10is_runningEv.start
     2726192    0.01%      215  ConstantPool::impl_signature_ref_at(int, bool)
     2687781    0.01%      254  G1MonitoringSupport::update_eden_size()
     2682141    0.01%      243  I2C/C2I adapters(0xb)
     2651361    0.01%       74  GCIdMark::GCIdMark(unsigned int)
     2638600    0.01%      188  frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) const
     2634380    0.01%      148  os::elapsed_counter()
     2612260    0.01%      241  DebugInformationRecorder::find_sharable_decode_offset(int)
     2595942    0.01%      184  CodeHeap::find_blob_unsafe(void*) const
     2592082    0.01%      250  sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop
     2559192    0.01%      213  G1DirtyCardQueueSet::num_par_ids()
     2501981    0.01%      103  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*)
     2486751    0.01%      214  LinearScan::allocate_registers()
     2444410    0.01%      234  Run.measure
     2414710    0.01%      106  __new_sem_wait_slow64.constprop.0
     2382250    0.01%      188  __GI___pthread_mutex_unlock_usercnt
     2366922    0.01%      200  SymbolTable::lookup_shared(char const*, int, unsigned int)
     2352580    0.00%      138  G1GCPhaseTimes::reset()
     2348301    0.00%      176  ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
     2300460    0.00%      206  G1Analytics::predict_scan_card_num(unsigned long, bool) const
     2284720    0.00%      138  HeapRegionRemSet::clear_locked(bool)
     2260680    0.00%      214  MemAllocator::Allocation::notify_allocation_jvmti_sampler()
     2243460    0.00%      163  stringStream::write(char const*, unsigned long)
     2242790    0.00%      194  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
     2227511    0.00%      117  .annobin__ZN24G1GCParPhaseTimesTrackerC2EP14G1GCPhaseTimesNS0_11GCParPhasesEjb.start
     2212041    0.00%      140  .annobin__ZN17G1RemSetScanState20G1ClearCardTableTask7do_workEj.start
     2204080    0.00%      139  rmqueue_[k]
     2200270    0.00%       98  G1GCPhaseTimes::record_or_add_thread_work_item(G1GCPhaseTimes::GCParPhases, unsigned int, unsigned long, unsigned int)
     2195241    0.00%      110  futex_hash_[k]
     2191561    0.00%      182  vmSymbols::find_sid(Symbol const*)
     2180961    0.00%       99  __list_add_valid_[k]
     2152650    0.00%      111  G1SurvRateGroup::record_surviving_words(int, unsigned long)
     2143590    0.00%      190  LIR_OpVisitState::visit(LIR_Op*)
     2112770    0.00%      203  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     2098370    0.00%       89  CompositeElapsedCounterSource::seconds(PairRep<long, long>)
     2066151    0.00%      144  void QuickSort::inner_sort<true, unsigned int, int (*)(unsigned int, unsigned int)>(unsigned int*, unsigned long, int (*)(unsigned int, unsigned int)) [clone .constprop.0]
     2064920    0.00%      172  ciObjectFactory::get_metadata(Metadata*)
     2004901    0.00%      185  G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*)
     2004070    0.00%      158  __memmove_avx_unaligned_erms
     1997132    0.00%       90  __audit_syscall_entry_[k]
     1964380    0.00%      152  AbsSeq::dsd() const
     1959440    0.00%      101  G1GCPhaseTimes::phase_name(G1GCPhaseTimes::GCParPhases)
     1948840    0.00%      144  G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*, unsigned int)
     1946360    0.00%      193  _invokeBasic
     1940240    0.00%      146  _raw_spin_unlock_irq_[k]
     1929321    0.00%       80  G1BatchedGangTask::work(unsigned int)
     1926521    0.00%      174  InstanceKlass::array_klass(int, JavaThread*)
     1909891    0.00%      102  do_futex_[k]
     1907830    0.00%      164  LinearScanWalker::alloc_free_reg(Interval*)
     1904251    0.00%      140  __GI___printf_fp_l
     1903730    0.00%      160  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
     1902510    0.00%      112  _int_free
     1895860    0.00%      177  JfrAllocationTracer::JfrAllocationTracer(Klass const*, HeapWordImpl**, unsigned long, bool, JavaThread*)
     1884590    0.00%      181  ThreadLocalAllocBuffer::thread()
     1880622    0.00%       89  .annobin__ZN20G1MergeHeapRootsTask4workEj.start
     1842780    0.00%      182  java.lang.invoke.LambdaForm$MH.0x0000000801009400.invoke
     1842742    0.00%      165  LinearScan::compute_local_live_sets()
     1836570    0.00%      176  ThreadLocalAllocBuffer::insert_filler()
     1833961    0.00%      164  PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
     1811020    0.00%      161  I2C/C2I adapters(0xbb)
     1803921    0.00%       98  AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum)
     1778590    0.00%       90  get_futex_key_[k]
     1766541    0.00%      119  __strlen_avx2
     1764081    0.00%      143  methodHandle::~methodHandle()
     1742490    0.00%      159  G1Policy::predict_region_non_copy_time_ms(HeapRegion*, bool) const
     1742141    0.00%      126  Method::bcp_from(unsigned char*) const
     1740470    0.00%       96  wake_q_add_safe_[k]
     1735190    0.00%      128  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
     1730000    0.00%      149  G1Analytics::predict_young_other_time_ms(unsigned long) const
     1721751    0.00%      150  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
     1703271    0.00%      101  do_syscall_64_[k]
     1701990    0.00%      157  som.Random.<init>
     1686960    0.00%      138  G1ConcurrentRefine::max_num_threads()
     1681700    0.00%      158  HeapRegionRemSet::clear_fcc()
     1673110    0.00%      163  PhaseChaitin::gather_lrg_masks(bool)
     1667350    0.00%      119  G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord)
     1665990    0.00%      156  G1RegionsOnNodes::add(HeapRegion*)
     1623950    0.00%      138  __get_user_nocheck_8_[k]
     1620741    0.00%      148  G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool, unsigned int)
     1594250    0.00%      135  jdk.internal.org.objectweb.asm.Frame.execute
     1587090    0.00%       80  JavaThread::oops_do_no_frames(OopClosure*, CodeBlobClosure*)
     1577270    0.00%      109  .annobin__ZN21OopOopIterateDispatchI17G1ScanCardClosureE5Table15oop_oop_iterateI19InstanceMirrorKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
     1563580    0.00%       92  Mutex::lock_without_safepoint_check()
     1559081    0.00%       85  ___pthread_mutex_unlock
     1526580    0.00%      131  Dictionary::find(unsigned int, Symbol*, Handle)
     1522750    0.00%       82  pthread_cond_timedwait@@GLIBC_2.3.2
     1512281    0.00%      112  OopMapCache::lookup(methodHandle const&, int, InterpreterOopMap*)
     1495830    0.00%      134  InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const
     1488242    0.00%      134  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
     1487680    0.00%       67  JvmtiThreadState::oops_do(OopClosure*, CodeBlobClosure*)
     1475671    0.00%       75  HeapRegion::hr_clear(bool)
     1465852    0.00%      126  GraphBuilder::iterate_bytecodes_for_block(int)
     1426462    0.00%       78  os::elapsedTime()
     1402870    0.00%       70  PLABStats::desired_plab_sz(unsigned int)
