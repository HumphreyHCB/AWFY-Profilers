--- Execution profile ---
Total samples       : 2251420
unknown_Java        : 240 (0.01%)
not_walkable_Java   : 673 (0.03%)
deoptimization      : 15 (0.00%)

--- 11501505743 ns (50.63%), 1141849 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 6922932258 ns (30.48%), 687267 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1764285482 ns (7.77%), 175133 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1159650699 ns (5.11%), 115153 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 606107700 ns (2.67%), 60185 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 96150615 ns (0.42%), 9547 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 55395776 ns (0.24%), 5493 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 42188727 ns (0.19%), 4186 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 36408105 ns (0.16%), 3614 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 30884728 ns (0.14%), 3069 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 24023574 ns (0.11%), 2376 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 23184656 ns (0.10%), 2301 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 21471975 ns (0.09%), 2123 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 15930423 ns (0.07%), 1576 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 15373490 ns (0.07%), 1527 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 13966465 ns (0.06%), 1388 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 12247374 ns (0.05%), 1215 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 11460253 ns (0.05%), 1138 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 8461173 ns (0.04%), 838 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 6917470 ns (0.03%), 660 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 6627332 ns (0.03%), 656 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 5493492 ns (0.02%), 543 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 2661380 ns (0.01%), 217 samples
  [ 0] [no_Java_frame]

--- 2546010 ns (0.01%), 218 samples
  [ 0] LinearScan::build_intervals()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 2446261 ns (0.01%), 243 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1955231 ns (0.01%), 173 samples
  [ 0] LinearScan::allocate_registers()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1684870 ns (0.01%), 149 samples
  [ 0] LinearScanWalker::alloc_free_reg(Interval*)
  [ 1] LinearScanWalker::activate_current()
  [ 2] LinearScan::allocate_registers()
  [ 3] LinearScan::do_linear_scan()
  [ 4] Compilation::emit_lir()
  [ 5] Compilation::compile_java_method()
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 1611080 ns (0.01%), 160 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1573840 ns (0.01%), 139 samples
  [ 0] LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1495080 ns (0.01%), 131 samples
  [ 0] LinearScan::compute_local_live_sets()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1264380 ns (0.01%), 126 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1087610 ns (0.00%), 108 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1082510 ns (0.00%), 96 samples
  [ 0] LinearScanWalker::free_collect_inactive_fixed(Interval*)
  [ 1] LinearScanWalker::alloc_free_reg(Interval*)
  [ 2] LinearScanWalker::activate_current()
  [ 3] LinearScan::allocate_registers()
  [ 4] LinearScan::do_linear_scan()
  [ 5] Compilation::emit_lir()
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 1055681 ns (0.00%), 104 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 913561 ns (0.00%), 89 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 896340 ns (0.00%), 88 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 852760 ns (0.00%), 72 samples
  [ 0] LIR_OpVisitState::visit(LIR_Op*)
  [ 1] LinearScan::compute_local_live_sets()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 823321 ns (0.00%), 55 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]

--- 811410 ns (0.00%), 7 samples
  [ 0] Mutex::lock_without_safepoint_check()
  [ 1] .annobin__ZN12PeriodicTask14real_time_tickEi.start
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 793900 ns (0.00%), 65 samples
  [ 0] GrowableArrayWithAllocator<int, GrowableArray<int> >::grow(int)
  [ 1] Dependencies::assert_evol_method(ciMethod*)
  [ 2] Compilation::compile_method()
  [ 3] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 4] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 736000 ns (0.00%), 71 samples
  [ 0] java.lang.Long.getChars
  [ 1] java.lang.StringConcatHelper.prepend
  [ 2] java.lang.StringConcatHelper.prepend
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic

--- 720900 ns (0.00%), 72 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 660320 ns (0.00%), 61 samples
  [ 0] PhiResolver::create_node(LIR_OprDesc*, bool)
  [ 1] LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*)
  [ 2] LIRGenerator::move_to_phi(ValueStack*)
  [ 3] LIRGenerator::do_Goto(Goto*)
  [ 4] non-virtual thunk to LIRGenerator::block_do(BlockBegin*)
  [ 5] BlockList::iterate_forward(BlockClosure*)
  [ 6] Compilation::emit_lir()
  [ 7] Compilation::compile_java_method()
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 659650 ns (0.00%), 65 samples
  [ 0] I2C/C2I adapters(0xb)
  [ 1] [unknown_Java]

--- 636381 ns (0.00%), 57 samples
  [ 0] NullCheckEliminator::iterate_one(BlockBegin*)
  [ 1] Optimizer::eliminate_null_checks()
  [ 2] IR::eliminate_null_checks()
  [ 3] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 608690 ns (0.00%), 54 samples
  [ 0] LIR_OpVisitState::visit(LIR_Op*)
  [ 1] LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 605790 ns (0.00%), 51 samples
  [ 0] LIR_OpVisitState::visit(LIR_Op*)
  [ 1] LinearScan::build_intervals()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 542780 ns (0.00%), 54 samples
  [ 0] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 1] PhaseIdealLoop::build_and_optimize()
  [ 2] .annobin__ZN14PhaseIdealLoop8optimizeER12PhaseIterGVN12LoopOptsMode.start
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 532580 ns (0.00%), 52 samples
  [ 0] _invokeBasic
  [ 1] [unknown_Java]

--- 531120 ns (0.00%), 52 samples
  [ 0] .annobin__ZN14PhaseIdealLoop16build_loop_earlyER9VectorSetR9Node_ListR10Node_Stack.start
  [ 1] PhaseIdealLoop::build_and_optimize()
  [ 2] .annobin__ZN14PhaseIdealLoop8optimizeER12PhaseIterGVN12LoopOptsMode.start
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 516580 ns (0.00%), 51 samples
  [ 0] PhaseChaitin::gather_lrg_masks(bool)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 514740 ns (0.00%), 45 samples
  [ 0] DebugInformationRecorder::find_sharable_decode_offset(int)
  [ 1] DebugInformationRecorder::describe_scope(int, methodHandle const&, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*)
  [ 2] .annobin__ZN13LIR_Assembler31record_non_safepoint_debug_infoEv.start
  [ 3] LIR_Assembler::process_debug_info(LIR_Op*)
  [ 4] LIR_Assembler::emit_lir_list(LIR_List*)
  [ 5] .annobin__ZN13LIR_Assembler9emit_codeEP9BlockList.start
  [ 6] .annobin__ZN11Compilation14emit_code_bodyEv.start
  [ 7] Compilation::compile_java_method()
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 505190 ns (0.00%), 46 samples
  [ 0] IntervalWalker::walk_to(int)
  [ 1] LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool)
  [ 2] LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&, LIR_Op*)
  [ 3] LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
  [ 4] LinearScan::do_linear_scan()
  [ 5] Compilation::emit_lir()
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 504260 ns (0.00%), 46 samples
  [ 0] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 1] GraphBuilder::iterate_all_blocks(bool)
  [ 2] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 3] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 4] IR::IR(Compilation*, ciMethod*, int)
  [ 5] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 484210 ns (0.00%), 43 samples
  [ 0] LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind)
  [ 1] LinearScan::build_intervals()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 482252 ns (0.00%), 9 samples
  [ 0] WatcherThread::sleep() const
  [ 1] WatcherThread::run()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] start_thread

--- 480560 ns (0.00%), 48 samples
  [ 0] PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
  [ 1] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 2] PhaseIdealLoop::build_and_optimize()
  [ 3] .annobin__ZN14PhaseIdealLoop8optimizeER12PhaseIterGVN12LoopOptsMode.start
  [ 4] Compile::Optimize()
  [ 5] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 6] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 469540 ns (0.00%), 46 samples
  [ 0] PhaseChaitin::post_allocate_copy_removal()
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 468551 ns (0.00%), 6 samples
  [ 0] PerfLongVariant::sample()
  [ 1] .annobin__ZN12PeriodicTask14real_time_tickEi.start
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 461020 ns (0.00%), 39 samples
  [ 0] LinearScan::eliminate_spill_moves()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 436330 ns (0.00%), 42 samples
  [ 0] Run.measure
  [ 1] Run.doRuns
  [ 2] Run.runBenchmark
  [ 3] Harness.main

--- 433970 ns (0.00%), 38 samples
  [ 0] GlobalValueNumbering::GlobalValueNumbering(IR*)
  [ 1] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 2] Compilation::compile_java_method()
  [ 3] Compilation::compile_method()
  [ 4] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 5] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 425830 ns (0.00%), 42 samples
  [ 0] PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
  [ 1] .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
  [ 2] PhaseChaitin::Register_Allocate()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 412670 ns (0.00%), 37 samples
  [ 0] .annobin__ZN8Interval9add_rangeEii.start
  [ 1] LinearScan::build_intervals()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 412161 ns (0.00%), 37 samples
  [ 0] Relocation::pd_call_destination(unsigned char*)
  [ 1] CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*)
  [ 2] CodeBuffer::relocate_code_to(CodeBuffer*) const
  [ 3] CodeBuffer::copy_code_to(CodeBlob*)
  [ 4] nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView<RuntimeStub*> const&, char*, int, int)
  [ 5] .annobin__ZN7nmethod11new_nmethodERK12methodHandleiiP11CodeOffsetsiP24DebugInformationRecorderP12DependenciesP10CodeBufferiP9OopMapSetP21ExceptionHandlerTableP22ImplicitExceptionTableP16AbstractCompileriRK17GrowableArrayViewIP11RuntimeStubEPciiPKcPP17FailedSpeculation.start
  [ 6] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView<RuntimeStub*> const&)
  [ 7] Compilation::install_code(int)
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 409070 ns (0.00%), 34 samples
  [ 0] LinearScan::sort_intervals_before_allocation()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 403640 ns (0.00%), 40 samples
  [ 0] sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop
  [ 1] sun.nio.cs.US_ASCII$Encoder.encodeLoop
  [ 2] java.nio.charset.CharsetEncoder.encode
  [ 3] sun.nio.cs.StreamEncoder.implWrite
  [ 4] sun.nio.cs.StreamEncoder.implWrite
  [ 5] sun.nio.cs.StreamEncoder.write
  [ 6] java.io.OutputStreamWriter.write
  [ 7] java.io.BufferedWriter.flushBuffer
  [ 8] java.io.PrintStream.writeln
  [ 9] java.io.PrintStream.println
  [10] Run.printResult
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 393751 ns (0.00%), 39 samples
  [ 0] PhaseLive::compute(unsigned int)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 393730 ns (0.00%), 35 samples
  [ 0] LIR_Assembler::emit_lir_list(LIR_List*)
  [ 1] .annobin__ZN13LIR_Assembler9emit_codeEP9BlockList.start
  [ 2] .annobin__ZN11Compilation14emit_code_bodyEv.start
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 388590 ns (0.00%), 33 samples
  [ 0] Optimizer::eliminate_null_checks()
  [ 1] IR::eliminate_null_checks()
  [ 2] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 388361 ns (0.00%), 35 samples
  [ 0] ___pthread_mutex_trylock
  [ 1] [unknown]

--- 387870 ns (0.00%), 35 samples
  [ 0] LIR_Assembler::process_debug_info(LIR_Op*)
  [ 1] LIR_Assembler::emit_lir_list(LIR_List*)
  [ 2] .annobin__ZN13LIR_Assembler9emit_codeEP9BlockList.start
  [ 3] .annobin__ZN11Compilation14emit_code_bodyEv.start
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 383560 ns (0.00%), 31 samples
  [ 0] DebugInformationRecorder::find_sharable_decode_offset(int)
  [ 1] DebugInformationRecorder::describe_scope(int, methodHandle const&, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*)
  [ 2] CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int)
  [ 3] LIR_Assembler::add_call_info(int, CodeEmitInfo*)
  [ 4] CounterOverflowStub::emit_code(LIR_Assembler*)
  [ 5] LIR_Assembler::emit_slow_case_stubs()
  [ 6] .annobin__ZN11Compilation14emit_code_bodyEv.start
  [ 7] Compilation::compile_java_method()
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 382990 ns (0.00%), 34 samples
  [ 0] LIRGenerator::do_Base(Base*)
  [ 1] non-virtual thunk to LIRGenerator::block_do(BlockBegin*)
  [ 2] BlockList::iterate_forward(BlockClosure*)
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 373160 ns (0.00%), 34 samples
  [ 0] DebugInformationRecorder::describe_scope(int, methodHandle const&, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*)
  [ 1] .annobin__ZN13LIR_Assembler31record_non_safepoint_debug_infoEv.start
  [ 2] LIR_Assembler::process_debug_info(LIR_Op*)
  [ 3] LIR_Assembler::emit_lir_list(LIR_List*)
  [ 4] .annobin__ZN13LIR_Assembler9emit_codeEP9BlockList.start
  [ 5] .annobin__ZN11Compilation14emit_code_bodyEv.start
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 367311 ns (0.00%), 30 samples
  [ 0] LinearScan::number_instructions()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 364380 ns (0.00%), 26 samples
  [ 0] ciObjectFactory::ciObjectFactory(Arena*, int)
  [ 1] ciEnv::ciEnv(CompileTask*)
  [ 2] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 3] CompileBroker::compiler_thread_loop()
  [ 4] JavaThread::thread_main_inner()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 363710 ns (0.00%), 35 samples
  [ 0] java.lang.StringCoding.implEncodeAsciiArray
  [ 1] java.lang.System$2.encodeASCII
  [ 2] sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop
  [ 3] sun.nio.cs.US_ASCII$Encoder.encodeLoop
  [ 4] java.nio.charset.CharsetEncoder.encode
  [ 5] sun.nio.cs.StreamEncoder.implWrite
  [ 6] sun.nio.cs.StreamEncoder.implWrite
  [ 7] sun.nio.cs.StreamEncoder.write
  [ 8] java.io.OutputStreamWriter.write
  [ 9] java.io.BufferedWriter.flushBuffer
  [10] java.io.PrintStream.writeln
  [11] java.io.PrintStream.println
  [12] Run.printResult
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 350590 ns (0.00%), 35 samples
  [ 0] .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 349270 ns (0.00%), 32 samples
  [ 0] I2C/C2I adapters(0xba)
  [ 1] [unknown_Java]

--- 339591 ns (0.00%), 22 samples
  [ 0] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 1] CompileBroker::compiler_thread_loop()
  [ 2] JavaThread::thread_main_inner()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 336890 ns (0.00%), 32 samples
  [ 0] java.lang.Long.stringSize
  [ 1] java.lang.StringConcatHelper.mix
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic

--- 330681 ns (0.00%), 33 samples
  [ 0] .annobin__ZN14PhaseIdealLoop15build_loop_treeEv.start
  [ 1] PhaseIdealLoop::build_and_optimize()
  [ 2] .annobin__ZN14PhaseIdealLoop8optimizeER12PhaseIterGVN12LoopOptsMode.start
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 324480 ns (0.00%), 27 samples
  [ 0] .annobin__ZN14IntervalWalker19append_to_unhandledEPP8IntervalS1_.start
  [ 1] LinearScanWalker::activate_current()
  [ 2] LinearScan::allocate_registers()
  [ 3] LinearScan::do_linear_scan()
  [ 4] Compilation::emit_lir()
  [ 5] Compilation::compile_java_method()
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 321560 ns (0.00%), 32 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 321430 ns (0.00%), 4 samples
  [ 0] ChunkPoolCleaner::task()
  [ 1] .annobin__ZN12PeriodicTask14real_time_tickEi.start
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 311400 ns (0.00%), 27 samples
  [ 0] ValueStack::pin_stack_for_linear_scan()
  [ 1] IR::compute_use_counts()
  [ 2] Compilation::compile_java_method()
  [ 3] Compilation::compile_method()
  [ 4] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 5] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 310550 ns (0.00%), 29 samples
  [ 0] Mandelbrot.verifyResult
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 307060 ns (0.00%), 27 samples
  [ 0] Dependencies::assert_evol_method(ciMethod*)
  [ 1] Compilation::compile_method()
  [ 2] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 3] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 4] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 5] CompileBroker::compiler_thread_loop()
  [ 6] JavaThread::thread_main_inner()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 305630 ns (0.00%), 25 samples
  [ 0] InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
  [ 1] InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const
  [ 2] LinkResolver::lookup_method_in_klasses(LinkInfo const&, bool, bool)
  [ 3] LinkResolver::resolve_method(LinkInfo const&, Bytecodes::Code, JavaThread*)
  [ 4] LinkResolver::linktime_resolve_virtual_method(LinkInfo const&, JavaThread*)
  [ 5] LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&)
  [ 6] ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag)
  [ 7] ciEnv::get_method_by_index_impl(constantPoolHandle const&, int, Bytecodes::Code, ciInstanceKlass*)
  [ 8] ciBytecodeStream::get_method(bool&, ciSignature**)
  [ 9] GraphBuilder::invoke(Bytecodes::Code)
  [10] GraphBuilder::iterate_bytecodes_for_block(int)
  [11] GraphBuilder::iterate_all_blocks(bool)
  [12] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [13] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [14] IR::IR(Compilation*, ciMethod*, int)
  [15] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [16] Compilation::compile_java_method()
  [17] Compilation::compile_method()
  [18] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [19] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [20] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [21] CompileBroker::compiler_thread_loop()
  [22] JavaThread::thread_main_inner()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 299780 ns (0.00%), 27 samples
  [ 0] Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode)
  [ 1] LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&)
  [ 2] LinearScan::resolve_data_flow()
  [ 3] LinearScan::do_linear_scan()
  [ 4] Compilation::emit_lir()
  [ 5] Compilation::compile_java_method()
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 299190 ns (0.00%), 27 samples
  [ 0] ValueStack::values_do(ValueVisitor*)
  [ 1] non-virtual thunk to UseCountComputer::block_do(BlockBegin*)
  [ 2] BlockList::iterate_backward(BlockClosure*)
  [ 3] IR::compute_use_counts()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 299100 ns (0.00%), 26 samples
  [ 0] GraphBuilder::invoke(Bytecodes::Code)
  [ 1] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 2] GraphBuilder::iterate_all_blocks(bool)
  [ 3] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [ 4] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [ 5] IR::IR(Compilation*, ciMethod*, int)
  [ 6] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 7] Compilation::compile_java_method()
  [ 8] Compilation::compile_method()
  [ 9] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [10] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 298561 ns (0.00%), 26 samples
  [ 0] .annobin__ZN8Interval9add_rangeEii.start
  [ 1] LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind)
  [ 2] LinearScan::build_intervals()
  [ 3] LinearScan::do_linear_scan()
  [ 4] Compilation::emit_lir()
  [ 5] Compilation::compile_java_method()
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 298240 ns (0.00%), 29 samples
  [ 0] Matcher::xform(Node*, int)
  [ 1] Matcher::match()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 298170 ns (0.00%), 24 samples
  [ 0] CodeBuffer::finalize_oop_references(methodHandle const&)
  [ 1] .annobin__ZN7nmethod11new_nmethodERK12methodHandleiiP11CodeOffsetsiP24DebugInformationRecorderP12DependenciesP10CodeBufferiP9OopMapSetP21ExceptionHandlerTableP22ImplicitExceptionTableP16AbstractCompileriRK17GrowableArrayViewIP11RuntimeStubEPciiPKcPP17FailedSpeculation.start
  [ 2] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView<RuntimeStub*> const&)
  [ 3] Compilation::install_code(int)
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 295990 ns (0.00%), 27 samples
  [ 0] Range::intersects_at(Range*) const
  [ 1] LinearScanWalker::alloc_free_reg(Interval*)
  [ 2] LinearScanWalker::activate_current()
  [ 3] LinearScan::allocate_registers()
  [ 4] LinearScan::do_linear_scan()
  [ 5] Compilation::emit_lir()
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 293430 ns (0.00%), 22 samples
  [ 0] CodeBuffer::relocate_code_to(CodeBuffer*) const
  [ 1] CodeBuffer::copy_code_to(CodeBlob*)
  [ 2] nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView<RuntimeStub*> const&, char*, int, int)
  [ 3] .annobin__ZN7nmethod11new_nmethodERK12methodHandleiiP11CodeOffsetsiP24DebugInformationRecorderP12DependenciesP10CodeBufferiP9OopMapSetP21ExceptionHandlerTableP22ImplicitExceptionTableP16AbstractCompileriRK17GrowableArrayViewIP11RuntimeStubEPciiPKcPP17FailedSpeculation.start
  [ 4] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView<RuntimeStub*> const&)
  [ 5] Compilation::install_code(int)
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 281110 ns (0.00%), 19 samples
  [ 0] PhaseChaitin::gather_lrg_masks(bool)
  [ 1] PhaseCFG::global_code_motion()
  [ 2] PhaseCFG::do_global_code_motion()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 279950 ns (0.00%), 28 samples
  [ 0] PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
  [ 1] PhaseIdealLoop::build_and_optimize()
  [ 2] .annobin__ZN14PhaseIdealLoop8optimizeER12PhaseIterGVN12LoopOptsMode.start
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

          ns  percent  samples  top
  ----------  -------  -------  ---
 22385704734   98.55%  2222358  Mandelbrot.mandelbrot
     6927300    0.03%      661  Interpreter
     3505500    0.02%      284  __tls_get_addr
     3105542    0.01%      268  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     2662482    0.01%      237  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     2661380    0.01%      217  [no_Java_frame]
     2574020    0.01%      220  LinearScan::build_intervals()
     2140721    0.01%      183  DebugInformationRecorder::find_sharable_decode_offset(int)
     2118140    0.01%      182  LIR_OpVisitState::visit(LIR_Op*)
     1983071    0.01%      175  LinearScan::allocate_registers()
     1731990    0.01%      153  LinearScanWalker::alloc_free_reg(Interval*)
     1595800    0.01%      141  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
     1579750    0.01%      128  vmSymbols::find_sid(Symbol const*)
     1495080    0.01%      131  LinearScan::compute_local_live_sets()
     1389621    0.01%      112  ciObjectFactory::get_metadata(Metadata*)
     1364270    0.01%       75  [vdso]
     1175680    0.01%      114  jdk.internal.org.objectweb.asm.Frame.execute
     1166103    0.01%      103  SymbolTable::lookup_shared(char const*, int, unsigned int)
     1145471    0.01%      104  InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const
     1122710    0.00%      100  LinearScanWalker::free_collect_inactive_fixed(Interval*)
     1114360    0.00%      108  sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop
     1077160    0.00%       96  ValueStack::values_do(ValueVisitor*)
     1070743    0.00%      106  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
     1064910    0.00%       27  Mutex::lock_without_safepoint_check()
     1040371    0.00%       66  __vfprintf_internal
     1022991    0.00%      100  I2C/C2I adapters(0xb)
      973161    0.00%       93  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
      954160    0.00%       82  Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode)
      944920    0.00%       82  GraphBuilder::iterate_bytecodes_for_block(int)
      896310    0.00%       74  GrowableArrayWithAllocator<int, GrowableArray<int> >::grow(int)
      880640    0.00%       75  __memset_avx2_unaligned_erms
      873730    0.00%       84  java.lang.Long.getChars
      871320    0.00%       75  ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int)
      861910    0.00%       67  __GI___libc_malloc
      860180    0.00%       84  java.lang.invoke.LambdaForm$MH.0x0000000800c08400.invoke
      848430    0.00%       81  java.lang.invoke.MethodType.equals
      846771    0.00%       64  AdapterHandlerLibrary::get_adapter(methodHandle const&)
      839730    0.00%       47  clock_gettime@GLIBC_2.2.5
      832770    0.00%       62  ___pthread_mutex_lock
      813460    0.00%       73  DebugInformationRecorder::describe_scope(int, methodHandle const&, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*)
      797690    0.00%       70  PhaseChaitin::gather_lrg_masks(bool)
      786170    0.00%       66  Dictionary::find(unsigned int, Symbol*, Handle)
      777561    0.00%       66  __memmove_avx_unaligned_erms
      773661    0.00%       69  .annobin__ZN8Interval9add_rangeEii.start
      768710    0.00%       77  java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke
      759180    0.00%       75  java.lang.invoke.MethodType.insertParameterTypes
      758441    0.00%       71  ___pthread_mutex_trylock
      743070    0.00%       68  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
      725090    0.00%       66  ConstantPool::klass_at_impl(constantPoolHandle const&, int, JavaThread*)
      712120    0.00%       71  java.lang.AbstractStringBuilder.append
      690750    0.00%       68  jdk.internal.org.objectweb.asm.Frame.push
      690242    0.00%       61  CodeHeap::find_blob_unsafe(void*) const
      674530    0.00%       61  java.lang.invoke.MethodType.checkPtypes
      666290    0.00%       65  java.lang.StringConcatHelper.prepend
      663510    0.00%       55  __tls_get_addr@plt
      661850    0.00%       57  GraphBuilder::append_with_bci(Instruction*, int)
      660320    0.00%       61  PhiResolver::create_node(LIR_OprDesc*, bool)
      659570    0.00%       56  Run.measure
      651790    0.00%       64  .annobin__ZN14PhaseIdealLoop16build_loop_earlyER9VectorSetR9Node_ListR10Node_Stack.start
      646541    0.00%       58  NullCheckEliminator::iterate_one(BlockBegin*)
      617591    0.00%        9  PerfLongVariant::sample()
      612750    0.00%       61  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
      606290    0.00%       52  methodHandle::~methodHandle()
      605440    0.00%       57  jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes
      602560    0.00%       60  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
      599260    0.00%       53  GraphBuilder::invoke(Bytecodes::Code)
      597210    0.00%       59  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
      596530    0.00%       51  CodeCache::find_blob(void*)
      593080    0.00%       57  java.lang.invoke.LambdaForm.useCount
      592040    0.00%       58  java.lang.invoke.LambdaForm$Name.<init>
      591430    0.00%       58  _dl_update_slotinfo
      586641    0.00%       55  jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType
      583880    0.00%       55  java.lang.invoke.MemberName$Factory.resolve
      581340    0.00%       55  I2C/C2I adapters(0xba)
      560710    0.00%       46  _int_malloc
      555650    0.00%       55  sun.nio.cs.StreamEncoder.implWrite
      555341    0.00%       50  Relocation::pd_call_destination(unsigned char*)
      552160    0.00%       50  LIR_OpVisitState::append(LIR_OprDesc*&, LIR_OpVisitState::OprMode) [clone .constprop.0]
      551920    0.00%       53  java.io.BufferedWriter.write
      550310    0.00%       43  __GI___pthread_mutex_unlock_usercnt
      550140    0.00%       46  RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*)
      549980    0.00%       45  LIR_OpVisitState::append(LIR_OprDesc*&, LIR_OpVisitState::OprMode)
      546860    0.00%       53  jdk.internal.org.objectweb.asm.SymbolTable.hash
      544600    0.00%       53  java.lang.invoke.InvokerBytecodeGenerator.addMethod
      543200    0.00%       47  LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind)
      538200    0.00%       46  ValueMap::find_insert(Instruction*)
      532580    0.00%       52  _invokeBasic
      529750    0.00%       51  java.util.concurrent.ConcurrentHashMap.putVal
      525750    0.00%       48  InterpreterRuntime::ldc(JavaThread*, bool)
      522610    0.00%       49  java.lang.invoke.LambdaForm.normalize
      521292    0.00%       42  os::free(void*)
      519490    0.00%       47  __memmove_avx_unaligned
      517870    0.00%       50  jdk.internal.org.objectweb.asm.Frame.pop
      516920    0.00%       50  java.util.Arrays.copyOf
      515290    0.00%       47  IntervalWalker::walk_to(int)
      508930    0.00%       48  java.lang.invoke.MethodType.hashCode
      503970    0.00%       49  jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
      502121    0.00%       50  PhaseLive::compute(unsigned int)
      496361    0.00%       48  java.lang.StringCoding.implEncodeAsciiArray
      483990    0.00%       47  jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn
      482252    0.00%        9  WatcherThread::sleep() const
      478520    0.00%       42  metaspace::MetaspaceArena::allocate(unsigned long)
      474610    0.00%       47  jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init>
      474520    0.00%       43  java.lang.invoke.MethodType.makeImpl
      470980    0.00%       40  LinearScan::eliminate_spill_moves()
      469540    0.00%       46  PhaseChaitin::post_allocate_copy_removal()
      465500    0.00%       46  java.lang.AbstractStringBuilder.putStringAt
      463290    0.00%       40  LIRGenerator::is_vreg_flag_set(int, LIRGenerator::VregFlag)
      456940    0.00%       42  jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
      454020    0.00%       44  java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument
      453300    0.00%       45  jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
      452830    0.00%       40  GlobalValueNumbering::GlobalValueNumbering(IR*)
      452090    0.00%       44  sun.nio.cs.StreamEncoder.writeBytes
      448230    0.00%       34  AdapterHandlerLibrary::get_simple_adapter(methodHandle const&)
      446980    0.00%       42  constantPoolHandle::~constantPoolHandle()
      446740    0.00%       18  ThreadCritical::ThreadCritical()
      441991    0.00%       38  MethodData::compute_allocation_size_in_bytes(methodHandle const&)
      426960    0.00%       36  __memset_avx2_unaligned
      424820    0.00%       38  MethodData::initialize()
      423030    0.00%       41  java.io.PrintStream.writeln
      422031    0.00%        8  __lll_lock_wake
      419160    0.00%       35  LinearScan::sort_intervals_before_allocation()
      415860    0.00%       37  LIR_Assembler::process_debug_info(LIR_Op*)
      413020    0.00%       39  java.lang.invoke.MethodType$ConcurrentWeakInternSet.add
      411230    0.00%       40  java.lang.invoke.MethodTypeForm.canonicalize
      410590    0.00%       37  InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code)
      409800    0.00%       30  ciObjectFactory::ciObjectFactory(Arena*, int)
      408490    0.00%       38  java.lang.String.getBytes
      406050    0.00%       38  MemAllocator::allocate() const
      405170    0.00%       36  java.nio.Buffer.<init>
      403600    0.00%       36  LIR_Assembler::emit_lir_list(LIR_List*)
      403270    0.00%       39  java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments
      403050    0.00%       36  LIRGenerator::do_Base(Base*)
      402990    0.00%       35  GraphBuilder::access_field(Bytecodes::Code)
      402630    0.00%       40  jdk.internal.org.objectweb.asm.SymbolTable.put
      401241    0.00%       40  .annobin__ZN14PhaseIdealLoop15build_loop_treeEv.start
      400450    0.00%       40  IndexSetIterator::advance_and_next()
      396990    0.00%       34  BlockBegin::try_merge(ValueStack*)
      393190    0.00%       39  jdk.internal.org.objectweb.asm.ClassWriter.toByteArray
      392990    0.00%       38  java.lang.invoke.LambdaForm$Name.replaceNames
      391850    0.00%       37  jdk.internal.org.objectweb.asm.SymbolTable.get
      388590    0.00%       33  Optimizer::eliminate_null_checks()
      385470    0.00%       38  java.lang.invoke.MemberName.<init>
      385200    0.00%       35  ciMethodBlocks::do_analysis()
      384440    0.00%       26  AbstractInterpreter::method_kind(methodHandle const&)
      380481    0.00%       37  TypeArrayKlass::allocate_common(int, bool, JavaThread*)
      380270    0.00%       32  __strlen_avx2
      377490    0.00%       33  Dependencies::assert_evol_method(ciMethod*)
      377391    0.00%       31  LinearScan::number_instructions()
      375930    0.00%       34  BlockBegin::iterate_preorder(GrowableArray<bool>&, BlockClosure*)
      375700    0.00%       33  Interval::add_use_pos(int, IntervalUseKind)
      373960    0.00%       36  java.lang.invoke.DirectMethodHandle.make
      373511    0.00%       28  MethodLiveness::BasicBlock::compute_gen_kill_single(ciBytecodeStream*)
      373230    0.00%       37  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
      372920    0.00%       36  java.lang.invoke.MethodTypeForm.canonicalizeAll
      372290    0.00%       37  jdk.internal.org.objectweb.asm.Frame.getAbstractTypeFromDescriptor
      370230    0.00%       32  .annobin__ZN9ChunkPool8allocateEmN17AllocFailStrategy13AllocFailEnumE.start
      366060    0.00%       33  update_get_addr
      363890    0.00%       32  GrowableArrayWithAllocator<LIR_Op*, GrowableArray<LIR_Op*> >::grow(int)
      360550    0.00%       36  .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
      360490    0.00%       30  CodeBuffer::finalize_oop_references(methodHandle const&)
      359820    0.00%       28  GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*)
      358791    0.00%       31  JavaFrameAnchor::make_walkable()
      357800    0.00%       33  java.lang.Long.stringSize
      357111    0.00%       35  jdk.internal.org.objectweb.asm.ByteVector.put12
      356740    0.00%       32  java.util.concurrent.ConcurrentHashMap.addCount
      352340    0.00%       33  Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
      351660    0.00%       32  LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*)
      350500    0.00%       35  jdk.internal.org.objectweb.asm.MethodWriter.computeAllFrames
      346660    0.00%       33  PhaseIdealLoop::Dominators()
      346641    0.00%       30  .annobin__ZN26GrowableArrayWithAllocatorIP11Instruction13GrowableArrayIS1_EE4growEi.start
      344490    0.00%       28  _IO_default_xsputn
      344350    0.00%       33  jdk.internal.org.objectweb.asm.MethodWriter.visitTypeInsn
      343370    0.00%       18  VMError::is_error_reported()
      342830    0.00%       29  MethodLiveness::init_basic_blocks()
      342470    0.00%       33  java.lang.StringLatin1.replace
      342280    0.00%       33  java.util.concurrent.ConcurrentHashMap.get
      341920    0.00%       21  __strchr_avx2
      339591    0.00%       22  CompileBroker::invoke_compiler_on_method(CompileTask*)
      339060    0.00%       34  java.nio.charset.CharsetEncoder.encode
      338030    0.00%       31  jdk.internal.org.objectweb.asm.MethodWriter.<init>
      335700    0.00%       33  java.lang.String.substring
      334010    0.00%       32  java.lang.String.indexOf
      330700    0.00%       32  java.nio.CharBuffer.wrap
      329620    0.00%       33  jdk.internal.org.objectweb.asm.MethodWriter.putMethodInfo
      329430    0.00%       33  PhaseIterGVN::remove_globally_dead_node(Node*)
      329091    0.00%       33  java.lang.invoke.InvokerBytecodeGenerator.clinit
      327240    0.00%        3  JvmtiEventControllerPrivate::recompute_thread_enabled(JvmtiThreadState*)
      326110    0.00%       32  java.lang.String.getChars
      325070    0.00%       30  LinkResolver::resolve_method(LinkInfo const&, Bytecodes::Code, JavaThread*)
      324880    0.00%       32  PhaseIterGVN::transform_old(Node*)
      324480    0.00%       27  .annobin__ZN14IntervalWalker19append_to_unhandledEPP8IntervalS1_.start
      324180    0.00%        7  __GI___pthread_cond_timedwait
      321700    0.00%       24  MethodLiveness::get_liveness_at(int)
      321430    0.00%        4  ChunkPoolCleaner::task()
      321380    0.00%       30  GraphBuilder::method_return(Instruction*, bool)
      321290    0.00%       32  java.lang.invoke.MemberName.getMethodOrFieldType
      321160    0.00%       28  ValueStack::pin_stack_for_linear_scan()
      321080    0.00%       28  Assembler::emit_operand_helper(int, int, int, Address::ScaleFactor, int, RelocationHolder const&, int) [clone .constprop.0]
      320100    0.00%       29  BitMap::set_from(BitMap const&)
