--- Execution profile ---
Total samples       : 1536504
unknown_Java        : 10005 (0.65%)
not_walkable_Java   : 711 (0.05%)
deoptimization      : 5 (0.00%)

--- 94142830 ns (0.61%), 9407 samples
  [ 0] Towers.moveDisks
  [ 1] [unknown_Java]

--- 14465871 ns (0.09%), 1418 samples
  [ 0] Towers.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 7404353 ns (0.05%), 703 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 7220642 ns (0.05%), 700 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 4440881 ns (0.03%), 429 samples
  [ 0] Towers.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 3758532 ns (0.02%), 358 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 2638140 ns (0.02%), 259 samples
  [ 0] Towers.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 2598980 ns (0.02%), 259 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2542881 ns (0.02%), 220 samples
  [ 0] [no_Java_frame]

--- 2537041 ns (0.02%), 251 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 2326931 ns (0.01%), 231 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2301260 ns (0.01%), 221 samples
  [ 0] Towers.verifyResult
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 2298141 ns (0.01%), 234 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 2288080 ns (0.01%), 225 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2268260 ns (0.01%), 225 samples
  [ 0] Towers.moveTopDisk
  [ 1] Towers.moveDisks
  [ 2] Towers.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2257460 ns (0.01%), 222 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2206921 ns (0.01%), 216 samples
  [ 0] Towers.moveDisks
  [ 1] Towers.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 2193692 ns (0.01%), 218 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2190130 ns (0.01%), 217 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 2155081 ns (0.01%), 214 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2152980 ns (0.01%), 214 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2150300 ns (0.01%), 212 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2148470 ns (0.01%), 211 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2092170 ns (0.01%), 208 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2080610 ns (0.01%), 207 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2037151 ns (0.01%), 198 samples
  [ 0] PhaseChaitin::post_allocate_copy_removal()
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 2000140 ns (0.01%), 197 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1993442 ns (0.01%), 195 samples
  [ 0] PhaseChaitin::gather_lrg_masks(bool)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 1984530 ns (0.01%), 197 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1978321 ns (0.01%), 196 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1965481 ns (0.01%), 194 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.buildTowerAt
  [ 2] Towers.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 1952990 ns (0.01%), 193 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1935070 ns (0.01%), 192 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1900120 ns (0.01%), 189 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1894380 ns (0.01%), 188 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1868042 ns (0.01%), 184 samples
  [ 0] PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
  [ 1] .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
  [ 2] PhaseChaitin::Register_Allocate()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 1844421 ns (0.01%), 183 samples
  [ 0] PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
  [ 1] PhaseChaitin::post_allocate_copy_removal()
  [ 2] PhaseChaitin::Register_Allocate()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 1842560 ns (0.01%), 183 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1841771 ns (0.01%), 182 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1835981 ns (0.01%), 181 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 1834501 ns (0.01%), 179 samples
  [ 0] PhaseLive::compute(unsigned int)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 1828390 ns (0.01%), 181 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1823980 ns (0.01%), 181 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1818410 ns (0.01%), 180 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1803202 ns (0.01%), 173 samples
  [ 0] I2C/C2I adapters(0xb)
  [ 1] [unknown_Java]

--- 1800861 ns (0.01%), 179 samples
  [ 0] LinearScan::build_intervals()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1780461 ns (0.01%), 177 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1768710 ns (0.01%), 175 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 1759780 ns (0.01%), 175 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1749961 ns (0.01%), 174 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1739721 ns (0.01%), 171 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 1736780 ns (0.01%), 172 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1717350 ns (0.01%), 170 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1712321 ns (0.01%), 170 samples
  [ 0] LinearScan::allocate_registers()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1709201 ns (0.01%), 148 samples
  [ 0] Towers.buildTowerAt
  [ 1] Towers.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 1708930 ns (0.01%), 170 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1692402 ns (0.01%), 168 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1688910 ns (0.01%), 168 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1685391 ns (0.01%), 167 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1684711 ns (0.01%), 167 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1683210 ns (0.01%), 167 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1671680 ns (0.01%), 167 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 1670051 ns (0.01%), 166 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1667631 ns (0.01%), 165 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1666160 ns (0.01%), 148 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 1665690 ns (0.01%), 148 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1637210 ns (0.01%), 162 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1628310 ns (0.01%), 162 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1619541 ns (0.01%), 154 samples
  [ 0] I2C/C2I adapters(0xbb)
  [ 1] [unknown_Java]

--- 1591581 ns (0.01%), 158 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1590010 ns (0.01%), 158 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1585361 ns (0.01%), 157 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1578700 ns (0.01%), 157 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1576610 ns (0.01%), 156 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1562820 ns (0.01%), 155 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1558190 ns (0.01%), 154 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1544040 ns (0.01%), 153 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1540180 ns (0.01%), 153 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1523141 ns (0.01%), 151 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1520300 ns (0.01%), 151 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1517111 ns (0.01%), 151 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1513610 ns (0.01%), 150 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1511850 ns (0.01%), 150 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1509890 ns (0.01%), 150 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 1506770 ns (0.01%), 148 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1505311 ns (0.01%), 149 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1505220 ns (0.01%), 149 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1503160 ns (0.01%), 147 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1497680 ns (0.01%), 148 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1486272 ns (0.01%), 147 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1478610 ns (0.01%), 146 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1467350 ns (0.01%), 146 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1467313 ns (0.01%), 145 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1467140 ns (0.01%), 145 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1463571 ns (0.01%), 144 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1459111 ns (0.01%), 145 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1454850 ns (0.01%), 144 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1454350 ns (0.01%), 144 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1453461 ns (0.01%), 144 samples
  [ 0] Towers$TowersDisk.setNext
  [ 1] Towers.pushDisk
  [ 2] Towers.moveTopDisk
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.moveDisks
  [10] Towers.moveDisks
  [11] Towers.moveDisks
  [12] Towers.moveDisks
  [13] Towers.moveDisks
  [14] Towers.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1444890 ns (0.01%), 144 samples
  [ 0] Towers.pushDisk
  [ 1] Towers.moveTopDisk
  [ 2] Towers.moveDisks
  [ 3] Towers.moveDisks
  [ 4] Towers.moveDisks
  [ 5] Towers.moveDisks
  [ 6] Towers.moveDisks
  [ 7] Towers.moveDisks
  [ 8] Towers.moveDisks
  [ 9] Towers.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
  6603116549   42.54%   655906  Towers.pushDisk
  2923786210   18.84%   289646  Towers.popDiskFrom
  2754043109   17.74%   273506  Towers$TowersDisk.setNext
  1375573782    8.86%   137491  Towers.moveDisks
   752949735    4.85%    74544  Towers.moveTopDisk
   582951386    3.76%    57758  Towers$TowersDisk.getNext
    62573920    0.40%     6164  Towers$TowersDisk.getSize
    24220922    0.16%     2366  Towers.benchmark
    11887325    0.08%     1130  Benchmark.innerBenchmarkLoop
     7301342    0.05%      706  Interpreter
     5743711    0.04%      393  __tls_get_addr
     4551232    0.03%      427  Towers.buildTowerAt
     3655230    0.02%      351  Towers.verifyResult
     2931440    0.02%      264  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     2830850    0.02%      280  IndexSetIterator::advance_and_next()
     2781332    0.02%      265  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     2542881    0.02%      220  [no_Java_frame]
     2537041    0.02%      251  PhaseChaitin::Split(unsigned int, ResourceArea*)
     2456282    0.02%      239  PhaseChaitin::gather_lrg_masks(bool)
     2357131    0.02%      225  PhaseLive::compute(unsigned int)
     2333252    0.02%      225  I2C/C2I adapters(0xb)
     2312710    0.01%      222  DebugInformationRecorder::find_sharable_decode_offset(int)
     2268411    0.01%      216  I2C/C2I adapters(0xbb)
     2111061    0.01%      110  [vdso]
     2109412    0.01%      208  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
     2047601    0.01%      199  PhaseChaitin::post_allocate_copy_removal()
     1844421    0.01%      183  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
     1821091    0.01%      181  LinearScan::build_intervals()
     1810250    0.01%      157  .annobin__ZN14PhaseIdealLoop16build_loop_earlyER9VectorSetR9Node_ListR10Node_Stack.start
     1749960    0.01%      172  LIR_OpVisitState::visit(LIR_Op*)
     1732651    0.01%      172  LinearScan::allocate_registers()
     1634240    0.01%      142  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
     1581861    0.01%      136  vmSymbols::find_sid(Symbol const*)
     1515470    0.01%      128  ciObjectFactory::get_metadata(Metadata*)
     1513213    0.01%      109  __memset_avx2_unaligned_erms
     1381110    0.01%       82  CodeHeap::find_blob_unsafe(void*) const
     1357730    0.01%      109  Dict::Insert(void*, void*, bool)
     1238440    0.01%      123  LinearScanWalker::alloc_free_reg(Interval*)
     1224631    0.01%      112  Matcher::xform(Node*, int)
     1195370    0.01%       70  _int_malloc
     1190430    0.01%      104  SymbolTable::lookup_shared(char const*, int, unsigned int)
     1181950    0.01%      117  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
     1154070    0.01%      114  .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
     1139910    0.01%      109  sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop
     1129870    0.01%      101  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
     1110930    0.01%      103  InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const
     1102960    0.01%      110  LinearScanWalker::free_collect_inactive_fixed(Interval*)
     1076282    0.01%       93  .annobin__ZN14PhaseIdealLoop15build_loop_treeEv.start
     1075450    0.01%      104  ValueStack::values_do(ValueVisitor*)
     1068930    0.01%      106  jdk.internal.org.objectweb.asm.Frame.execute
     1056290    0.01%       91  PhaseIdealLoop::Dominators()
     1042710    0.01%       24  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
     1029541    0.01%       95  methodHandle::~methodHandle()
     1029440    0.01%       88  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
     1013550    0.01%       96  LinearScan::compute_local_live_sets()
     1007350    0.01%       98  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
      997490    0.01%       91  PhaseCCP::analyze()
      993520    0.01%       87  PhaseIterGVN::transform_old(Node*)
      960830    0.01%       61  __GI___pthread_mutex_unlock_usercnt
      960730    0.01%       17  Monitor::wait_without_safepoint_check(long)
      955410    0.01%       65  __vfprintf_internal
      947950    0.01%       94  PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&)
      919920    0.01%       91  PhaseOutput::BuildOopMaps()
      913080    0.01%       78  NodeHash::hash_find_insert(Node*)
      877390    0.01%       69  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
      873060    0.01%       85  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
      869160    0.01%       69  Compile::identify_useful_nodes(Unique_Node_List&)
      851260    0.01%       85  GraphBuilder::iterate_bytecodes_for_block(int)
      851210    0.01%        4  G1ParCopyClosure<(G1Barrier)0, false>::do_oop(oopDesc**)
      850891    0.01%       84  DebugInformationRecorder::describe_scope(int, methodHandle const&, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*)
      839891    0.01%       25  __futex_abstimed_wait_common
      839170    0.01%       69  ___pthread_mutex_lock
      838670    0.01%       72  __GI___libc_malloc
      825521    0.01%       63  Type::cmp(Type const*, Type const*)
      820360    0.01%       80  Matcher::Label_Root(Node const*, State*, Node*, Node*&)
      815801    0.01%       81  Matcher::find_shared(Node*)
      811350    0.01%       67  PhaseIterGVN::add_users_to_worklist(Node*)
      805550    0.01%       79  ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int)
      798022    0.01%       73  Dictionary::find(unsigned int, Symbol*, Handle)
      797212    0.01%       72  __memmove_avx_unaligned_erms
      793240    0.01%       79  PhaseAggressiveCoalesce::insert_copies(Matcher&)
      790270    0.01%        1  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker()
      785330    0.01%       71  Matcher::match_tree(Node const*)
      783541    0.01%       68  GrowableArrayWithAllocator<int, GrowableArray<int> >::grow(int)
      775221    0.00%       66  Compile::remove_useless_nodes(Unique_Node_List&)
      770120    0.00%       74  java.lang.Long.getChars
      760320    0.00%       69  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
      748930    0.00%       74  PhaseChaitin::merge_multidefs()
      744630    0.00%       74  PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&, PhaseChaitin::Pressure&)
      743001    0.00%       13  _int_free
      742610    0.00%       68  java.lang.invoke.LambdaForm$MH.0x0000000800c08400.invoke
      740470    0.00%       61  __memset_avx2_unaligned
      729761    0.00%       62  PhaseIdealLoop::get_ctrl(Node*) [clone .isra.0]
      727810    0.00%       69  java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke
      718200    0.00%       70  IndexSet::alloc_block_containing(unsigned int)
      715080    0.00%       13  WatcherThread::sleep() const
      707300    0.00%       68  java.lang.AbstractStringBuilder.append
      702220    0.00%       65  Run.measure
      693950    0.00%       62  .annobin__ZNK4Node6is_CFGEv.start
      687990    0.00%       61  Node::clone() const
      686861    0.00%       67  java.lang.invoke.InvokerBytecodeGenerator.addMethod
      677550    0.00%        2  .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI19InstanceMirrorKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
      673991    0.00%       66  Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode)
      664710    0.00%       63  java.lang.invoke.MethodType.insertParameterTypes
      661030    0.00%       62  .annobin__ZN8Interval9add_rangeEii.start
      657120    0.00%       64  ___pthread_mutex_trylock
      652900    0.00%       63  .annobin__ZN22Node_Backward_Iterator4nextEv.start
      650380    0.00%       62  RegionNode::is_unreachable_from_root(PhaseGVN const*) const
      649261    0.00%       62  NullCheckEliminator::iterate_one(BlockBegin*)
      641740    0.00%       63  jdk.internal.org.objectweb.asm.Frame.push
      640880    0.00%       63  sun.nio.cs.StreamEncoder.implWrite
      635580    0.00%       62  java.lang.invoke.LambdaForm$Name.<init>
      633391    0.00%       53  Node::out_grow(unsigned int)
      631850    0.00%       59  ConstantPool::klass_at_impl(constantPoolHandle const&, int, JavaThread*)
      629440    0.00%       62  PhaseCFG::schedule_local(Block*, GrowableArray<int>&, VectorSet&, long*)
      628800    0.00%       37  clock_gettime@GLIBC_2.2.5
      624560    0.00%       51  AdapterHandlerLibrary::get_adapter(methodHandle const&)
      623720    0.00%       59  InterpreterRuntime::ldc(JavaThread*, bool)
      623530    0.00%       61  java.lang.Integer.valueOf
      622991    0.00%       60  PhaseOutput::fill_buffer(CodeBuffer*, unsigned int*)
      617540    0.00%       61  PhaseChaitin::Select()
      612420    0.00%       56  PhaseCFG::sched_call(Block*, unsigned int, Node_List&, GrowableArray<int>&, MachCallNode*, VectorSet&)
      605040    0.00%       60  PhiResolver::create_node(LIR_OprDesc*, bool)
      600860    0.00%       52  ciMethodBlocks::do_analysis()
      593420    0.00%       54  java.lang.invoke.MethodType.equals
      584370    0.00%       58  java.lang.invoke.MethodType.hashCode
      581780    0.00%       58  java.lang.invoke.MethodType.checkPtypes
      579700    0.00%       50  PhaseIterGVN::remove_globally_dead_node(Node*)
      579581    0.00%       44  Node::Node(unsigned int)
      578170    0.00%       56  java.lang.invoke.LambdaForm.useCount
      575750    0.00%       51  __memmove_avx_unaligned
      573790    0.00%       57  _dl_update_slotinfo
      563410    0.00%       54  java.lang.invoke.LambdaForm.normalize
      549001    0.00%       38  os::free(void*)
      544471    0.00%       51  jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
      535650    0.00%       48  .annobin__ZN17CompilationPolicy6commonI13LoopPredicateEE9CompLevelRK12methodHandleS2_b.start
      535090    0.00%       53  jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes
      534140    0.00%       53  jdk.internal.org.objectweb.asm.SymbolTable.hash
      530400    0.00%       45  MultiNode::is_CFG() const
      529730    0.00%       44  Node::add_req(Node*)
      529620    0.00%       51  jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType
      527430    0.00%       51  I2C/C2I adapters(0xba)
      527260    0.00%       36  PhaseGVN::transform_no_reclaim(Node*)
      525020    0.00%       47  CodeCache::find_blob(void*)
      524540    0.00%       52  ValueMap::find_insert(Instruction*)
      524050    0.00%       28  IndexSet::initialize(unsigned int)
      522412    0.00%       24  os::javaTimeNanos()
      518490    0.00%       51  LIR_OpVisitState::append(LIR_OprDesc*&, LIR_OpVisitState::OprMode) [clone .constprop.0]
      515850    0.00%       32  _IO_default_xsputn
      514830    0.00%       51  java.util.Arrays.copyOf
      509210    0.00%       43  __tls_get_addr@plt
      504960    0.00%       21  __strlen_avx2
      502950    0.00%       50  PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&, IndexSet*, unsigned int&) [clone .part.0]
      500511    0.00%       50  java.lang.invoke.LambdaForm$Name.replaceNames
      499851    0.00%       46  PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*)
      499180    0.00%       50  GraphBuilder::append_with_bci(Instruction*, int)
      495880    0.00%       48  PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.0]
      495820    0.00%       30  MemAllocator::allocate() const
      493070    0.00%       46  Compile::final_graph_reshaping_walk(Node_Stack&, Node*, Final_Reshape_Counts&)
      492831    0.00%       42  Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
      491770    0.00%       42  Relocation::pd_call_destination(unsigned char*)
      490571    0.00%       39  Type::hashcons()
      489950    0.00%       49  jdk.internal.org.objectweb.asm.Frame.pop
      489380    0.00%       45  LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind)
      486940    0.00%       48  java.lang.StringConcatHelper.prepend
      482580    0.00%       48  jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn
      482020    0.00%       46  InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code)
      480071    0.00%       44  CompLevel CompilationPolicy::common<CallPredicate>(methodHandle const&, CompLevel, bool)
      479281    0.00%       44  java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument
      474870    0.00%       39  PhaseIdealLoop::get_late_ctrl_with_anti_dep(LoadNode*, Node*, Node*)
      473840    0.00%       43  java.lang.Long.stringSize
      469640    0.00%       43  constantPoolHandle::~constantPoolHandle()
      467040    0.00%       40  PhaseIdealLoop::build_loop_tree_impl(Node*, int)
      463970    0.00%       45  IntervalWalker::walk_to(int)
      461180    0.00%       36  Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)
      458960    0.00%       43  LIR_OpVisitState::append(LIR_OprDesc*&, LIR_OpVisitState::OprMode)
      457960    0.00%       44  BlockBegin::try_merge(ValueStack*)
      454340    0.00%       43  java.lang.invoke.MethodType.makeImpl
      453950    0.00%       15  CompilationPolicy::select_task(CompileQueue*)
      451190    0.00%       45  MachNode::ideal_reg() const
      450160    0.00%       22  __strchrnul_avx2
      450150    0.00%       43  Run.printResult
      445420    0.00%       40  Unique_Node_List::remove(Node*)
      442660    0.00%       43  java.lang.invoke.MethodTypeForm.canonicalize
      441611    0.00%       43  jdk.internal.org.objectweb.asm.SymbolTable.put
      439310    0.00%       44  java.lang.String.getBytes
      437151    0.00%       44  java.lang.invoke.InvokerBytecodeGenerator.clinit
      427160    0.00%       36  .annobin__ZNK7PhiNode5ValueEP8PhaseGVN.start
      425510    0.00%       38  Dependencies::assert_evol_method(ciMethod*)
      424710    0.00%       43  sun.nio.cs.StreamEncoder.writeBytes
      421680    0.00%       42  GlobalValueNumbering::GlobalValueNumbering(IR*)
      418080    0.00%       33  PhiNode::Ideal(PhaseGVN*, bool)
      417320    0.00%        2  ChunkPoolCleaner::task()
      417141    0.00%       35  LinkResolver::check_method_loader_constraints(LinkInfo const&, methodHandle const&, char const*, JavaThread*)
      416821    0.00%       40  LinearScan::eliminate_spill_moves()
      414791    0.00%       37  msort_with_tmp.part.0
      411710    0.00%       40  _invokeBasic
      410310    0.00%       17  ___pthread_mutex_unlock
      410270    0.00%       40  java.nio.charset.CharsetEncoder.encode
      407150    0.00%       32  TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int)
