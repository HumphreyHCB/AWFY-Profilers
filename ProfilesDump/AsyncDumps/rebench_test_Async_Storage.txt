--- Execution profile ---
Total samples       : 3319849
unknown_Java        : 5734 (0.17%)
not_walkable_Java   : 724 (0.02%)
deoptimization      : 6 (0.00%)
skipped             : 2 (0.00%)

--- 8461773374 ns (25.03%), 839111 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 7176694400 ns (21.23%), 711907 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 2744249030 ns (8.12%), 272318 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 2242590989 ns (6.63%), 222456 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1596927671 ns (4.72%), 157717 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x0000000800c030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 1352650239 ns (4.00%), 133666 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 915379775 ns (2.71%), 90795 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 673361899 ns (1.99%), 66652 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 667466314 ns (1.97%), 66127 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 505647937 ns (1.50%), 50174 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 470519332 ns (1.39%), 46662 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 452328238 ns (1.34%), 44893 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 435870670 ns (1.29%), 43193 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 351079548 ns (1.04%), 34698 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 331401449 ns (0.98%), 32668 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 278514335 ns (0.82%), 27571 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 255706444 ns (0.76%), 25362 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x0000000800c030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 255239730 ns (0.75%), 25154 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x0000000800c030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 230574428 ns (0.68%), 22858 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 228168178 ns (0.67%), 22634 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 212927776 ns (0.63%), 21028 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 209029957 ns (0.62%), 20688 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 181100825 ns (0.54%), 17943 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 168923854 ns (0.50%), 16690 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 143787883 ns (0.43%), 14255 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 142893709 ns (0.42%), 14112 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 131565567 ns (0.39%), 13063 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 121577709 ns (0.36%), 12043 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 104995220 ns (0.31%), 10329 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 93882119 ns (0.28%), 9294 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 87227859 ns (0.26%), 6871 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 84331918 ns (0.25%), 8351 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 81909488 ns (0.24%), 8132 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 80045507 ns (0.24%), 7931 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x0000000800c030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 73744903 ns (0.22%), 7319 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 63822015 ns (0.19%), 6336 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 63091636 ns (0.19%), 5567 samples
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 62667169 ns (0.19%), 3215 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] .annobin__ZN23G1PrepareEvacuationTask4workEj.start
  [ 2] GangWorker::loop()
  [ 3] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 61759630 ns (0.18%), 6090 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 58425988 ns (0.17%), 5777 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 57115736 ns (0.17%), 5676 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 56979151 ns (0.17%), 5626 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x0000000800c030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 51275637 ns (0.15%), 5083 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 48555276 ns (0.14%), 4828 samples
  [ 0] Storage.buildTreeDepth
  [ 1] [unknown_Java]

--- 38917478 ns (0.12%), 3851 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 35336399 ns (0.10%), 3503 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x0000000800c030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 35272318 ns (0.10%), 3497 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 34306461 ns (0.10%), 3409 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 34087144 ns (0.10%), 3382 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 29847948 ns (0.09%), 2948 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 29341907 ns (0.09%), 2906 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 25857720 ns (0.08%), 2540 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 24839575 ns (0.07%), 2475 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 24205626 ns (0.07%), 2401 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 23062626 ns (0.07%), 2279 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 21901406 ns (0.06%), 2156 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 21056729 ns (0.06%), 2097 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.benchmark
  [17] Benchmark.innerBenchmarkLoop
  [18] Run.measure
  [19] Run.doRuns
  [20] Run.runBenchmark
  [21] Harness.main

--- 20969716 ns (0.06%), 1832 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 20939092 ns (0.06%), 2076 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 20245741 ns (0.06%), 1994 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 18491916 ns (0.05%), 1809 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 17060563 ns (0.05%), 1119 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1RemSetScanState::G1ClearCardTableTask::do_work(unsigned int)
  [ 2] G1BatchedGangTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 16986564 ns (0.05%), 1682 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 16821562 ns (0.05%), 1666 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 14779787 ns (0.04%), 1467 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 13669105 ns (0.04%), 1300 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 13116221 ns (0.04%), 1301 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 12362741 ns (0.04%), 911 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 12101942 ns (0.04%), 1178 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 11191654 ns (0.03%), 1104 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 11056373 ns (0.03%), 434 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 4] VM_G1CollectForAllocation::doit()
  [ 5] VM_Operation::evaluate()
  [ 6] VMThread::evaluate_operation(VM_Operation*)
  [ 7] VMThread::inner_execute(VM_Operation*)
  [ 8] VMThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 10676832 ns (0.03%), 1053 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 9952820 ns (0.03%), 889 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 4] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x0000000800c030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 9553561 ns (0.03%), 944 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 9200403 ns (0.03%), 916 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 8961422 ns (0.03%), 889 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 8298963 ns (0.02%), 454 samples
  [ 0] G1FromCardCache::clear(unsigned int)
  [ 1] HeapRegionRemSet::clear_locked(bool)
  [ 2] HeapRegion::hr_clear(bool)
  [ 3] G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*)
  [ 4] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 6] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 7] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 8] G1BatchedGangTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 7628844 ns (0.02%), 469 samples
  [ 0] .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 7538800 ns (0.02%), 666 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 7499940 ns (0.02%), 713 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 7060550 ns (0.02%), 685 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 7032952 ns (0.02%), 696 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 6585901 ns (0.02%), 646 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 6239351 ns (0.02%), 621 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 5963580 ns (0.02%), 563 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 5810080 ns (0.02%), 578 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 5796223 ns (0.02%), 287 samples
  [ 0] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 4] G1BatchedGangTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 5730020 ns (0.02%), 304 samples
  [ 0] [vdso]
  [ 1] clock_gettime@GLIBC_2.2.5
  [ 2] os::elapsed_counter()
  [ 3] CompositeElapsedCounterSource::now()
  [ 4] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 6] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 7] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 8] G1BatchedGangTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 5674341 ns (0.02%), 560 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 5243790 ns (0.02%), 497 samples
  [ 0] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 1] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x0000000800c030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda$2.0x0000000800c030f0.apply
  [25] java.util.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.benchmark
  [28] Benchmark.innerBenchmarkLoop
  [29] Run.measure
  [30] Run.doRuns
  [31] Run.runBenchmark
  [32] Harness.main

--- 5098424 ns (0.02%), 507 samples
  [ 0] Storage.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 4974421 ns (0.01%), 74 samples
  [ 0] G1CollectedHeap::start_new_collection_set()
  [ 1] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 3] VM_G1CollectForAllocation::doit()
  [ 4] VM_Operation::evaluate()
  [ 5] VMThread::evaluate_operation(VM_Operation*)
  [ 6] VMThread::inner_execute(VM_Operation*)
  [ 7] VMThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 4882891 ns (0.01%), 187 samples
  [ 0] HeapRegionClaimer::claim_region(unsigned int)
  [ 1] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 2] .annobin__ZN20G1MergeHeapRootsTask4workEj.start
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 4729680 ns (0.01%), 248 samples
  [ 0] G1BlockOffsetTablePart::zero_bottom_entry_raw()
  [ 1] G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*)
  [ 2] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 3] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 4] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 5] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 6] G1BatchedGangTask::work(unsigned int)
  [ 7] GangWorker::loop()
  [ 8] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 4410650 ns (0.01%), 436 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 4149161 ns (0.01%), 413 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 3981142 ns (0.01%), 394 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 3976391 ns (0.01%), 393 samples
  [ 0] java.util.Arrays.setAll
  [ 1] [unknown_Java]

--- 3920111 ns (0.01%), 375 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3868790 ns (0.01%), 385 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 14725786852   43.56%  1459435  Storage.buildTreeDepth
 12006128353   35.51%  1189666  java.util.Arrays.setAll
  3541389959   10.48%   351353  som.Random.next
  1379755958    4.08%   136726  Storage.lambda$buildTreeDepth$0
   373347901    1.10%    36835  java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
   192048156    0.57%    19044  Storage$$Lambda$2.0x0000000800c030f0.<init>
   185754458    0.55%    18409  Storage$$Lambda$2.0x0000000800c030f0.apply
   142758139    0.42%    14173  java.lang.invoke.DirectMethodHandle.allocateInstance
   116522285    0.34%     9438  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
    63091636    0.19%     5567  SpinPause
    62719339    0.19%     3217  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
    47902960    0.14%     3230  __memset_avx2_unaligned_erms
    25321176    0.07%     1220  [vdso]
    22900437    0.07%     2183  Benchmark.innerBenchmarkLoop
    13354122    0.04%      949  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
    11565553    0.03%      715  G1FromCardCache::clear(unsigned int)
    11554435    0.03%     1135  Storage.benchmark
    10142512    0.03%      652  __tls_get_addr
     8431170    0.02%      776  InstanceKlass::allocate_objArray(int, int, JavaThread*)
     8219204    0.02%      502  .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
     7806291    0.02%      373  HeapRegionClaimer::claim_region(unsigned int)
     7520130    0.02%      715  Interpreter
     6479941    0.02%      584  MemAllocator::allocate() const
     6468991    0.02%      581  ObjArrayAllocator::initialize(HeapWordImpl**) const
     6367722    0.02%      600  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
     6172223    0.02%      161  sem_post@@GLIBC_2.34
     6159363    0.02%      300  FreeCSetClosure::do_heap_region(HeapRegion*)
     5979720    0.02%      223  _int_malloc
     5919630    0.02%      303  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
     5286492    0.02%      511  MemAllocator::Allocation::notify_allocation_jfr_sampler()
     5235893    0.02%      492  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
     4974421    0.01%       74  G1CollectedHeap::start_new_collection_set()
     4930931    0.01%      474  G1Policy::preventive_collection_required(unsigned int)
     4851201    0.01%      468  G1Allocator::unsafe_max_tlab_alloc()
     4729680    0.01%      248  G1BlockOffsetTablePart::zero_bottom_entry_raw()
     4646972    0.01%      394  OptoRuntime::new_array_C(Klass*, int, JavaThread*)
     4504591    0.01%      209  __GI___libc_malloc
     4477741    0.01%      215  os::free(void*)
     4303634    0.01%      415  ___pthread_mutex_trylock
     4264100    0.01%      336  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
     3972995    0.01%      346  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     3967131    0.01%      174  clock_gettime@GLIBC_2.2.5
     3833492    0.01%      311  ___pthread_mutex_lock
     3772230    0.01%      366  Storage.verifyResult
     3691841    0.01%      343  G1NUMA::index_of_current_thread() const
     3504023    0.01%      307  _dl_update_slotinfo
     3461740    0.01%      297  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     3455101    0.01%      281  CollectedHeap::tlab_alloc_reserve() const
     3337620    0.01%      207  void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
     3296530    0.01%      227  __vfprintf_internal
     3262651    0.01%      236  __memset_avx2_unaligned
     3219760    0.01%      289  .annobin__ZN15G1CollectedHeap17allocate_new_tlabEmmPm.start
     3133441    0.01%      153  os::javaTimeNanos()
     3109760    0.01%      157  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker()
     3108450    0.01%      255  InstanceKlass::array_klass(int, JavaThread*)
     2983710    0.01%      254  AbsSeq::davg() const
     2959382    0.01%       86  G1GCPhaseTimes::reset()
     2915133    0.01%      253  LinearScan::build_intervals()
     2879242    0.01%      128  Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
     2807060    0.01%      136  TruncatedSeq::add(double)
     2789282    0.01%      116  G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
     2786162    0.01%      148  G1ParCopyClosure<(G1Barrier)0, false>::do_oop(oopDesc**)
     2651042    0.01%      252  MemAllocator::Allocation::notify_allocation_jvmti_sampler()
     2565061    0.01%      117  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*)
     2554650    0.01%      210  [no_Java_frame]
     2543571    0.01%      224  CollectedHeap::fill_with_dummy_object(HeapWordImpl**, HeapWordImpl**, bool)
     2538130    0.01%       68  .annobin__ZN13WeakProcessor4Task4workI19G1STWIsAliveClosure18G1KeepAliveClosureEEvjPT_PT0_.start
     2463240    0.01%      157  __GI___pthread_mutex_unlock_usercnt
     2444761    0.01%       94  G1RemSet::prepare_region_for_scan(HeapRegion*)
     2420081    0.01%      232  G1MonitoringSupport::update_eden_size()
     2396960    0.01%      231  G1CollectedHeap::attempt_allocation_slow(unsigned long)
     2384770    0.01%       94  G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord)
     2377132    0.01%      211  DebugInformationRecorder::find_sharable_decode_offset(int)
     2348250    0.01%      195  CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*)
     2337600    0.01%      229  Klass::check_array_allocation_length(int, int, JavaThread*)
     2325851    0.01%      224  MutatorAllocRegion::retire(bool)
     2310700    0.01%      167  _IO_default_xsputn
     2298131    0.01%      222  ThreadLocalAllocBuffer::insert_filler()
     2220362    0.01%       94  G1SurvRateGroup::record_surviving_words(int, unsigned long)
     2209551    0.01%      115  G1CodeRootSet::clear()
     2201770    0.01%      146  G1DirtyCardQueueSet::num_par_ids()
     2199330    0.01%      210  I2C/C2I adapters(0xb)
     2167151    0.01%      184  LinearScan::allocate_registers()
     2128651    0.01%      185  LIR_OpVisitState::visit(LIR_Op*)
     2085670    0.01%      198  HeapRegion::set_eden()
     2076710    0.01%       99  G1RebuildFreeListTask::work(unsigned int)
     2051751    0.01%       98  JNIHandleBlock::oops_do(OopClosure*)
     2033940    0.01%      180  ClassLoaderData::holder_phantom() const
     2026961    0.01%      193  I2C/C2I adapters(0xbb)
     2023431    0.01%       70  VMError::is_error_reported()
     2008211    0.01%      182  ThreadLocalAllocBuffer::fill(HeapWordImpl**, HeapWordImpl**, unsigned long)
     1994770    0.01%       66  .annobin__ZN24G1GCParPhaseTimesTrackerC2EP14G1GCPhaseTimesNS0_11GCParPhasesEjb.start
     1992500    0.01%      187  G1CardTable::g1_mark_as_young(MemRegion const&)
     1986312    0.01%       69  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*)
     1980821    0.01%      191  ThreadLocalAllocBuffer::retire_before_allocation()
     1978732    0.01%      166  OtherRegionsTable::occupied() const
     1957291    0.01%      191  update_get_addr
     1944331    0.01%      131  CodeHeap::find_blob_unsafe(void*) const
     1938253    0.01%       67  __futex_abstimed_wait_common
     1935762    0.01%      146  G1RemSet::prepare_for_scan_heap_roots()
     1933490    0.01%      189  oopFactory::new_objArray(Klass*, int, JavaThread*)
     1926743    0.01%      109  ConstantPool::impl_signature_ref_at(int, bool)
     1919700    0.01%      159  ciObjectFactory::get_metadata(Metadata*)
     1893430    0.01%       86  Mutex::lock_without_safepoint_check()
     1868720    0.01%      181  PhaseChaitin::gather_lrg_masks(bool)
     1841501    0.01%      152  vmSymbols::find_sid(Symbol const*)
     1832030    0.01%      147  __memmove_avx_unaligned_erms
     1822160    0.01%      155  LinearScanWalker::alloc_free_reg(Interval*)
     1812390    0.01%       59  .annobin__ZN12PeriodicTask14real_time_tickEi.start
     1801580    0.01%      172  G1CollectionSet::add_eden_region(HeapRegion*)
     1791040    0.01%      150  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
     1782801    0.01%      171  HSpaceCounters::update_used(unsigned long)
     1777030    0.01%       79  G1GCPhaseTimes::record_or_add_thread_work_item(G1GCPhaseTimes::GCParPhases, unsigned int, unsigned long, unsigned int)
     1739660    0.01%       95  CodeCache::find_blob(void*)
     1722830    0.01%      123  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
     1720530    0.01%      126  AbsSeq::dsd() const
     1700350    0.01%       87  GangWorker::loop()
     1700340    0.01%      165  G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const
     1674911    0.00%      146  LinearScan::compute_local_live_sets()
     1640361    0.00%      154  .annobin__ZN25JfrObjectAllocationSample10send_eventEPK5KlassmbP6Thread.start
     1629851    0.00%      143  HandleMark::initialize(Thread*)
     1618411    0.00%      158  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
     1594291    0.00%      150  G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*)
     1583270    0.00%       94  frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) const
     1555470    0.00%      128  SymbolTable::lookup_shared(char const*, int, unsigned int)
     1553660    0.00%      128  HeapRegionTracer::send_region_type_change(unsigned int, G1HeapRegionTraceType::Type, G1HeapRegionTraceType::Type, unsigned long, unsigned long)
     1550660    0.00%      116  G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*, unsigned int)
     1525791    0.00%      149  ObjArrayKlass::array_klass(int, JavaThread*)
     1519341    0.00%       77  _int_free
     1509921    0.00%       30  OopStorage::BasicParState::BasicParState(OopStorage const*, unsigned int, bool)
     1502211    0.00%      107  stringStream::write(char const*, unsigned long)
     1477531    0.00%       87  ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
     1475070    0.00%       77  G1GCPhaseTimes::phase_name(G1GCPhaseTimes::GCParPhases)
     1470500    0.00%      108  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
     1465660    0.00%      141  .annobin__ZN14PhaseIdealLoop16build_loop_earlyER9VectorSetR9Node_ListR10Node_Stack.start
     1439380    0.00%       44  JavaThread::oops_do_no_frames(OopClosure*, CodeBlobClosure*)
     1390030    0.00%       80  HeapRegionRemSet::clear_locked(bool)
     1384160    0.00%       83  HeapRegionType::get_trace_type()
     1377711    0.00%      127  .annobin__ZN12ResourceArea11rollback_toERKNS_10SavedStateE.start
     1376940    0.00%      136  PhaseLive::compute(unsigned int)
     1359250    0.00%      131  sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop
     1355680    0.00%       91  __strlen_avx2
     1330730    0.00%      100  ObjectSampler::is_created()
     1324110    0.00%       98  void QuickSort::inner_sort<true, unsigned int, int (*)(unsigned int, unsigned int)>(unsigned int*, unsigned long, int (*)(unsigned int, unsigned int)) [clone .constprop.0]
     1316630    0.00%      129  IndexSetIterator::advance_and_next()
     1308960    0.00%      125  jdk.internal.org.objectweb.asm.Frame.execute
     1296730    0.00%      128  Unsafe_AllocateInstance
     1289422    0.00%      106  GraphBuilder::iterate_bytecodes_for_block(int)
     1289000    0.00%      113  LinearScanWalker::free_collect_inactive_fixed(Interval*)
     1286090    0.00%      126  PhaseChaitin::post_allocate_copy_removal()
     1278960    0.00%       44  G1GCPhaseTimes::average_time_ms(G1GCPhaseTimes::GCParPhases)
     1266740    0.00%      109  methodHandle::~methodHandle()
     1256561    0.00%      119  G1RegionsOnNodes::add(HeapRegion*)
     1253880    0.00%      104  Run.measure
     1237700    0.00%      110  G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool, unsigned int)
     1206480    0.00%      105  InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const
     1205280    0.00%       60  G1GCPhaseTimes::record_or_add_time_secs(G1GCPhaseTimes::GCParPhases, unsigned int, double)
     1201600    0.00%       90  GrowableArrayWithAllocator<int, GrowableArray<int> >::grow(int)
     1194160    0.00%       37  PosixSemaphore::signal(unsigned int)
     1193560    0.00%      115  java.lang.Integer.valueOf
     1191290    0.00%      118  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
     1189940    0.00%      118  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
     1175770    0.00%       80  G1CardTable::is_in_young(oopDesc*) const
     1174400    0.00%       89  G1CollectedHeap::capacity() const
     1160451    0.00%       95  .annobin__ZN11AllocTracer27send_allocation_in_new_tlabEP5KlassPP12HeapWordImplmmP10JavaThread.start
     1158770    0.00%       70  ___pthread_mutex_unlock
     1156730    0.00%      110  HeapRegionRemSet::clear_fcc()
     1151250    0.00%      114  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
     1146490    0.00%      109  som.Random.<init>
     1140611    0.00%      100  Dictionary::find(unsigned int, Symbol*, Handle)
     1133400    0.00%      106  NodeHash::hash_find_insert(Node*)
     1132731    0.00%       61  HeapRegion::hr_clear(bool)
     1126361    0.00%       98  ValueStack::values_do(ValueVisitor*)
     1126251    0.00%       86  JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum)
     1124341    0.00%       32  WeakProcessorTimes::reset()
     1122640    0.00%      101  Dict::Insert(void*, void*, bool)
     1121571    0.00%      106  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     1113510    0.00%       97  PhaseIdealLoop::Dominators()
     1099471    0.00%      104  ThreadLocalAllocBuffer::print_stats(char const*)
     1082972    0.00%      106  PhaseChaitin::Split(unsigned int, ResourceArea*)
     1066141    0.00%      104  ObjAllocator::initialize(HeapWordImpl**) const
     1031911    0.00%       47  __GI___pthread_cond_timedwait
     1028790    0.00%       44  G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
     1028420    0.00%       52  .annobin__ZN20G1MergeHeapRootsTask4workEj.start
     1007270    0.00%       26  ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
      997870    0.00%       50  os::elapsed_counter()
      997431    0.00%       96  java.lang.invoke.LambdaForm$MH.0x0000000800c09400.invoke
      990750    0.00%       45  AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum)
      988330    0.00%       92  java.lang.invoke.MethodType.insertParameterTypes
      982710    0.00%       95  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
      979360    0.00%       48  G1CodeRootSet::contains(nmethod*)
      975210    0.00%       90  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
      967420    0.00%       80  __memmove_avx_unaligned
      956381    0.00%       27  pthread_testcancel@@GLIBC_2.34
      945820    0.00%       44  GCId::current()
      939831    0.00%       92  java.lang.Long.getChars
      935941    0.00%       38  sem_wait@@GLIBC_2.34
      934612    0.00%       26  G1CollectedHeap::reset_hot_card_cache()
      934100    0.00%       58  Method::bcp_from(unsigned char*) const
      928480    0.00%       29  os::malloc(unsigned long, MEMFLAGS, NativeCallStack const&)
