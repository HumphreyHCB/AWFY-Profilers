--- Execution profile ---
Total samples       : 11538558
GC_active           : 8 (0.00%)
unknown_Java        : 7800 (0.07%)
not_walkable_Java   : 1531 (0.01%)
deoptimization      : 7 (0.00%)
skipped             : 3 (0.00%)

--- 34202478773 ns (29.27%), 3396448 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 28797233792 ns (24.65%), 2860001 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 11288446253 ns (9.66%), 1121495 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 9455446918 ns (8.09%), 939391 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 3790924979 ns (3.24%), 376519 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 2249540784 ns (1.93%), 223572 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 1881258165 ns (1.61%), 186932 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 1830030866 ns (1.57%), 181780 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 1715860170 ns (1.47%), 170439 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 1626145656 ns (1.39%), 161177 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x0000000800c030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 1450514927 ns (1.24%), 143434 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 1385103168 ns (1.19%), 137250 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1250036385 ns (1.07%), 123735 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x0000000800c030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 1145725255 ns (0.98%), 113375 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 953531814 ns (0.82%), 94674 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 873160234 ns (0.75%), 86674 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 801725126 ns (0.69%), 79463 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 689556329 ns (0.59%), 68630 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 657464596 ns (0.56%), 65360 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 559318355 ns (0.48%), 55318 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 548007086 ns (0.47%), 54331 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 542174627 ns (0.46%), 53858 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 390064984 ns (0.33%), 38660 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 360659528 ns (0.31%), 35759 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 297222960 ns (0.25%), 29542 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 283901746 ns (0.24%), 28201 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 265339107 ns (0.23%), 26403 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x0000000800c030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 264496806 ns (0.23%), 26133 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 262358378 ns (0.22%), 23999 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 255494466 ns (0.22%), 25359 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 245373284 ns (0.21%), 24270 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x0000000800c030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 238167771 ns (0.20%), 23694 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 216020473 ns (0.18%), 21400 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 189242488 ns (0.16%), 18280 samples
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 159543656 ns (0.14%), 15820 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 154225458 ns (0.13%), 15291 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 152113645 ns (0.13%), 9926 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 141363645 ns (0.12%), 14034 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 140326036 ns (0.12%), 13975 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 126078815 ns (0.11%), 12548 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 124056742 ns (0.11%), 12271 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 117702036 ns (0.10%), 11678 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 105281688 ns (0.09%), 10422 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 105038533 ns (0.09%), 10427 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 98886215 ns (0.08%), 9785 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 92089841 ns (0.08%), 9143 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 91458286 ns (0.08%), 9060 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 90510155 ns (0.08%), 9009 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 87457537 ns (0.07%), 8688 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x0000000800c030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 68988471 ns (0.06%), 5855 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1RemSetScanState::G1ClearCardTableTask::do_work(unsigned int)
  [ 2] G1BatchedGangTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 65151619 ns (0.06%), 6445 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 60252542 ns (0.05%), 5788 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 4] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda$2.0x0000000800c030f0.apply
  [28] java.util.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.benchmark
  [31] Benchmark.innerBenchmarkLoop
  [32] Run.measure
  [33] Run.doRuns
  [34] Run.runBenchmark
  [35] Harness.main

--- 56542807 ns (0.05%), 5612 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 56039600 ns (0.05%), 5575 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 54414694 ns (0.05%), 5412 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 53788767 ns (0.05%), 5353 samples
  [ 0] Storage.buildTreeDepth
  [ 1] [unknown_Java]

--- 53255255 ns (0.05%), 5297 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 52307923 ns (0.04%), 5179 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda$2.0x0000000800c030f0.apply
  [19] java.util.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda$2.0x0000000800c030f0.apply
  [23] java.util.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 43963639 ns (0.04%), 4347 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 43943737 ns (0.04%), 4203 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 42048631 ns (0.04%), 4174 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda$2.0x0000000800c030f0.apply
  [15] java.util.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 41249336 ns (0.04%), 4108 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 40346834 ns (0.03%), 3484 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 37992440 ns (0.03%), 3768 samples
  [ 0] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 35487011 ns (0.03%), 3525 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 31767266 ns (0.03%), 1863 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@@GLIBC_2.34
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 31310406 ns (0.03%), 3094 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 30714856 ns (0.03%), 2069 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@@GLIBC_2.34
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] SafepointSynchronize::do_cleanup_tasks()
  [11] SafepointSynchronize::begin()
  [12] VMThread::inner_execute(VM_Operation*)
  [13] VMThread::run()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 30562658 ns (0.03%), 2822 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 30325885 ns (0.03%), 3001 samples
  [ 0] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 1] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.benchmark
  [20] Benchmark.innerBenchmarkLoop
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 27600532 ns (0.02%), 1989 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 4] VM_G1CollectForAllocation::doit()
  [ 5] VM_Operation::evaluate()
  [ 6] VMThread::evaluate_operation(VM_Operation*)
  [ 7] VMThread::inner_execute(VM_Operation*)
  [ 8] VMThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 25735815 ns (0.02%), 2541 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 1] java.util.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 25362136 ns (0.02%), 1665 samples
  [ 0] G1FromCardCache::clear(unsigned int)
  [ 1] HeapRegionRemSet::clear_locked(bool)
  [ 2] .annobin__ZN10HeapRegion8hr_clearEb.start
  [ 3] G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*)
  [ 4] .annobin__ZN15FreeCSetClosure14do_heap_regionEP10HeapRegion.start
  [ 5] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 6] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 7] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 8] G1BatchedGangTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 25207143 ns (0.02%), 1661 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@@GLIBC_2.34
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] HeapRegionManager::rebuild_free_list(WorkGang*)
  [11] G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [13] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [14] VM_G1CollectForAllocation::doit()
  [15] VM_Operation::evaluate()
  [16] VMThread::evaluate_operation(VM_Operation*)
  [17] VMThread::inner_execute(VM_Operation*)
  [18] VMThread::run()
  [19] Thread::call_run()
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 23832441 ns (0.02%), 1815 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@@GLIBC_2.34
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1CollectedHeap::pre_evacuate_collection_set(G1EvacuationInfo&, G1ParScanThreadStateSet*)
  [11] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [13] VM_G1CollectForAllocation::doit()
  [14] VM_Operation::evaluate()
  [15] VMThread::evaluate_operation(VM_Operation*)
  [16] VMThread::inner_execute(VM_Operation*)
  [17] VMThread::run()
  [18] Thread::call_run()
  [19] thread_native_entry(Thread*)
  [20] start_thread

--- 23703323 ns (0.02%), 1560 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@@GLIBC_2.34
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1CollectedHeap::post_evacuate_cleanup_2(PreservedMarksSet*, G1RedirtyCardsQueueSet*, G1EvacuationInfo*, unsigned long const*)
  [11] G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [13] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [14] VM_G1CollectForAllocation::doit()
  [15] VM_Operation::evaluate()
  [16] VMThread::evaluate_operation(VM_Operation*)
  [17] VMThread::inner_execute(VM_Operation*)
  [18] VMThread::run()
  [19] Thread::call_run()
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 23364385 ns (0.02%), 2325 samples
  [ 0] Storage.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 23130284 ns (0.02%), 2302 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 22254337 ns (0.02%), 2215 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 22200496 ns (0.02%), 2171 samples
  [ 0] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 1] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 5] java.util.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 9] java.util.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x0000000800c030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda$2.0x0000000800c030f0.apply
  [25] java.util.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.benchmark
  [28] Benchmark.innerBenchmarkLoop
  [29] Run.measure
  [30] Run.doRuns
  [31] Run.runBenchmark
  [32] Harness.main

--- 22192256 ns (0.02%), 2203 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 22161256 ns (0.02%), 2146 samples
  [ 0] MemAllocator::allocate() const
  [ 1] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 2] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x0000000800c030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.lambda$buildTreeDepth$0
  [25] Storage$$Lambda$2.0x0000000800c030f0.apply
  [26] java.util.Arrays.setAll
  [27] Storage.buildTreeDepth
  [28] Storage.benchmark
  [29] Benchmark.innerBenchmarkLoop
  [30] Run.measure
  [31] Run.doRuns
  [32] Run.runBenchmark
  [33] Harness.main

--- 22077715 ns (0.02%), 1683 samples
  [ 0] G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*)
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 21911184 ns (0.02%), 1723 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@@GLIBC_2.34
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1RemSet::merge_heap_roots(bool)
  [11] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [13] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [14] VM_G1CollectForAllocation::doit()
  [15] VM_Operation::evaluate()
  [16] VMThread::evaluate_operation(VM_Operation*)
  [17] VMThread::inner_execute(VM_Operation*)
  [18] VMThread::run()
  [19] Thread::call_run()
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 21824556 ns (0.02%), 2161 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 3] java.util.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 7] java.util.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda$2.0x0000000800c030f0.apply
  [11] java.util.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 21780234 ns (0.02%), 1500 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@@GLIBC_2.34
  [ 9] WorkGang::run_task(AbstractGangTask*, unsigned int, bool)
  [10] G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*, bool)
  [11] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [12] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [13] VM_G1CollectForAllocation::doit()
  [14] VM_Operation::evaluate()
  [15] VMThread::evaluate_operation(VM_Operation*)
  [16] VMThread::inner_execute(VM_Operation*)
  [17] VMThread::run()
  [18] Thread::call_run()
  [19] thread_native_entry(Thread*)
  [20] start_thread

--- 20649200 ns (0.02%), 2050 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.benchmark
  [17] Benchmark.innerBenchmarkLoop
  [18] Run.measure
  [19] Run.doRuns
  [20] Run.runBenchmark
  [21] Harness.main

--- 20538504 ns (0.02%), 2036 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda$2.0x0000000800c030f0.apply
  [24] java.util.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 19189223 ns (0.02%), 1311 samples
  [ 0] [vdso]
  [ 1] clock_gettime@GLIBC_2.2.5
  [ 2] os::elapsed_counter()
  [ 3] CompositeElapsedCounterSource::now()
  [ 4] .annobin__ZN15FreeCSetClosure14do_heap_regionEP10HeapRegion.start
  [ 5] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 6] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 7] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 8] G1BatchedGangTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 18738878 ns (0.02%), 1770 samples
  [ 0] HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
  [ 1] G1CollectedHeap::new_region(unsigned long, HeapRegionType, bool, unsigned int)
  [ 2] G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool, unsigned int)
  [ 3] G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool)
  [ 4] G1CollectedHeap::attempt_allocation_slow(unsigned long)
  [ 5] G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
  [ 6] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 7] MemAllocator::allocate() const
  [ 8] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 9] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda$2.0x0000000800c030f0.apply
  [13] java.util.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda$2.0x0000000800c030f0.apply
  [17] java.util.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda$2.0x0000000800c030f0.apply
  [21] java.util.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda$2.0x0000000800c030f0.apply
  [25] java.util.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.lambda$buildTreeDepth$0
  [28] Storage$$Lambda$2.0x0000000800c030f0.apply
  [29] java.util.Arrays.setAll
  [30] Storage.buildTreeDepth
  [31] Storage.lambda$buildTreeDepth$0
  [32] Storage$$Lambda$2.0x0000000800c030f0.apply
  [33] java.util.Arrays.setAll
  [34] Storage.buildTreeDepth
  [35] Storage.benchmark
  [36] Benchmark.innerBenchmarkLoop
  [37] Run.measure
  [38] Run.doRuns
  [39] Run.runBenchmark
  [40] Harness.main

--- 18256839 ns (0.02%), 1808 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 2] java.util.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x0000000800c030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 17843536 ns (0.02%), 1700 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 17214052 ns (0.01%), 1119 samples
  [ 0] .annobin__ZN15FreeCSetClosure14do_heap_regionEP10HeapRegion.start
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 4] G1BatchedGangTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 17181225 ns (0.01%), 1707 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 16580116 ns (0.01%), 915 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_broadcast@@GLIBC_2.3.2

--- 16052548 ns (0.01%), 1599 samples
  [ 0] java.util.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 4] java.util.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 8] java.util.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda$2.0x0000000800c030f0.apply
  [12] java.util.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda$2.0x0000000800c030f0.apply
  [16] java.util.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda$2.0x0000000800c030f0.apply
  [20] java.util.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 15601516 ns (0.01%), 1518 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 15403496 ns (0.01%), 1470 samples
  [ 0] G1Policy::preventive_collection_required(unsigned int)
  [ 1] G1CollectedHeap::attempt_allocation_slow(unsigned long)
  [ 2] G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
  [ 3] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 4] MemAllocator::allocate() const
  [ 5] InstanceKlass::allocate_objArray(int, int, JavaThread*)
  [ 6] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda$2.0x0000000800c030f0.apply
  [14] java.util.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda$2.0x0000000800c030f0.apply
  [18] java.util.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda$2.0x0000000800c030f0.apply
  [22] java.util.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.lambda$buildTreeDepth$0
  [25] Storage$$Lambda$2.0x0000000800c030f0.apply
  [26] java.util.Arrays.setAll
  [27] Storage.buildTreeDepth
  [28] Storage.lambda$buildTreeDepth$0
  [29] Storage$$Lambda$2.0x0000000800c030f0.apply
  [30] java.util.Arrays.setAll
  [31] Storage.buildTreeDepth
  [32] Storage.benchmark
  [33] Benchmark.innerBenchmarkLoop
  [34] Run.measure
  [35] Run.doRuns
  [36] Run.runBenchmark
  [37] Harness.main

--- 15179692 ns (0.01%), 767 samples
  [ 0] __GI___libc_malloc

--- 13590161 ns (0.01%), 1304 samples
  [ 0] Storage$$Lambda$2.0x0000000800c030f0.<init>
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
  [ 2] java.lang.invoke.LambdaForm$MH.0x0000000800c07000.linkToTargetMethod
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda$2.0x0000000800c030f0.apply
  [ 6] java.util.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda$2.0x0000000800c030f0.apply
  [10] java.util.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 50969932913   43.62%  5061475  Storage.buildTreeDepth
 40560365070   34.72%  4026671  java.util.Arrays.setAll
 14469244156   12.38%  1437508  som.Random.next
  3761490254    3.22%   373409  Storage.lambda$buildTreeDepth$0
  1446463928    1.24%   143208  java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial
   746491857    0.64%    74079  Storage$$Lambda$2.0x0000000800c030f0.<init>
   719255991    0.62%    71336  Storage$$Lambda$2.0x0000000800c030f0.apply
   588597098    0.50%    58357  java.lang.invoke.DirectMethodHandle.allocateInstance
   314674197    0.27%    29012  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
   250546130    0.21%    16146  _raw_spin_unlock_irqrestore_[k]
   189242488    0.16%    18280  SpinPause
   186607116    0.16%    16408  __memset_avx2_unaligned_erms
   152433535    0.13%     9937  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
    64247400    0.05%     4283  [vdso]
    41394714    0.04%     3578  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
    38450649    0.03%     2849  G1FromCardCache::clear(unsigned int)
    32229777    0.03%     3192  Storage.benchmark
    31126079    0.03%     3017  MemAllocator::allocate() const
    30986806    0.03%     3027  InstanceKlass::allocate_objArray(int, int, JavaThread*)
    29567391    0.03%     2819  ObjArrayAllocator::initialize(HeapWordImpl**) const
    29452952    0.03%     2777  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
    27868750    0.02%     2669  Benchmark.innerBenchmarkLoop
    26554419    0.02%     1824  generic_exec_single_[k]
    23520326    0.02%     1798  G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*)
    22035829    0.02%     2102  G1Policy::preventive_collection_required(unsigned int)
    21751541    0.02%     1548  __tls_get_addr
    20449396    0.02%     1982  G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
    19625122    0.02%     1298  syscall_enter_from_user_mode_[k]
    18327802    0.02%     1186  .annobin__ZN15FreeCSetClosure14do_heap_regionEP10HeapRegion.start
    18118385    0.02%     1748  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
    17606864    0.02%     1713  ___pthread_mutex_trylock
    16906764    0.01%     1129  os::free(void*)
    16857003    0.01%     1620  G1Allocator::unsafe_max_tlab_alloc()
    16537523    0.01%      869  __GI___libc_malloc
    15979294    0.01%      894  native_queued_spin_lock_slowpath_[k]
    15633002    0.01%     1010  HeapRegionClaimer::claim_region(unsigned int)
    15601516    0.01%     1518  Interpreter
    15440450    0.01%     1349  ___pthread_mutex_lock
    15215046    0.01%      756  _int_malloc
    14746073    0.01%      824  clock_gettime@GLIBC_2.2.5
    14654903    0.01%     1431  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
    14246593    0.01%     1362  G1CollectedHeap::attempt_allocation_slow(unsigned long)
    14211752    0.01%     1017  futex_wake_[k]
    13864307    0.01%     1356  CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*)
    12980233    0.01%      531  finish_task_switch.isra.0_[k]
    12846282    0.01%      832  queue_work_on_[k]
    12533032    0.01%     1207  G1NUMA::index_of_current_thread() const
    12490563    0.01%      479  __futex_abstimed_wait_common
    12157753    0.01%      567  G1RemSet::prepare_region_for_scan(HeapRegion*)
    11995983    0.01%      841  G1BlockOffsetTablePart::zero_bottom_entry_raw()
    11902500    0.01%     1032  __memset_avx2_unaligned
    11779926    0.01%     1134  MutatorAllocRegion::retire(bool)
    11147012    0.01%     1082  OptoRuntime::new_array_C(Klass*, int, JavaThread*)
    11029095    0.01%     1024  HandleMark::initialize(Thread*)
    10355297    0.01%      988  G1MonitoringSupport::update_eden_size()
    10103196    0.01%      900  CollectedHeap::tlab_alloc_reserve() const
    10082934    0.01%      698  JNIHandleBlock::oops_do(OopClosure*)
    10003003    0.01%      453  .annobin__ZN23G1PrepareEvacuationTask23G1PrepareRegionsClosure14do_heap_regionEP10HeapRegion.start
     9832395    0.01%      605  Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
     9559664    0.01%      888  AbsSeq::davg() const
     9045804    0.01%      706  futex_wake_mark_[k]
     9040452    0.01%      768  __vfprintf_internal
     8958253    0.01%      687  frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) const
     8832473    0.01%      838  G1CollectionSet::add_eden_region(HeapRegion*)
     8823563    0.01%      829  CollectedHeap::fill_with_dummy_object(HeapWordImpl**, HeapWordImpl**, bool)
     8494670    0.01%      545  os::javaTimeNanos()
     8457193    0.01%      659  .annobin__ZN16G1ParCopyClosureIL9G1Barrier0ELb0EE6do_oopEPP7oopDesc.start
     8289483    0.01%      798  Run.measure
     8280082    0.01%      537  TruncatedSeq::add(double)
     8220572    0.01%      719  ConstantPool::impl_signature_ref_at(int, bool)
     8138023    0.01%      550  G1CodeRootSet::clear()
     7976082    0.01%      778  ClassLoaderData::holder_phantom() const
     7947503    0.01%      765  G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const
     7898480    0.01%      748  HeapRegionRemSet::clear_fcc()
     7839892    0.01%      759  ThreadLocalAllocBuffer::insert_filler()
     7818513    0.01%      690  OtherRegionsTable::occupied() const
     7723980    0.01%      747  InstanceKlass::array_klass(int, JavaThread*)
     7695544    0.01%      734  G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool, unsigned int)
     7603983    0.01%      431  plist_add_[k]
     7596090    0.01%      474  futex_q_lock_[k]
     7472143    0.01%      599  sem_post@@GLIBC_2.34
     7444901    0.01%      708  G1CardTable::g1_mark_as_young(MemRegion const&)
     7428474    0.01%      535  restore_fpregs_from_user_[k]
     7345482    0.01%      380  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
     7221632    0.01%      682  HeapRegion::set_eden()
     7139522    0.01%      481  G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
     7099402    0.01%      412  GangWorker::loop()
     7073025    0.01%      610  ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
     7031936    0.01%      612  __GI___pthread_mutex_unlock_usercnt
     6697272    0.01%      665  sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
     6690192    0.01%      442  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker()
     6641162    0.01%      639  ObjectSampler::is_created()
     6495703    0.01%      624  HSpaceCounters::update_used(unsigned long)
     6493921    0.01%      373  __schedule_[k]
     6391113    0.01%      623  Storage.verifyResult
     6377152    0.01%      368  G1SurvRateGroup::record_surviving_words(int, unsigned long)
     6157132    0.01%      446  CodeHeap::find_blob_unsafe(void*) const
     5969441    0.01%      402  copy_user_generic_string_[k]
     5951104    0.01%      535  AbsSeq::dsd() const
     5761191    0.00%      305  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*)
     5752293    0.00%      524  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     5724612    0.00%      333  exit_to_user_mode_loop_[k]
     5589334    0.00%      374  __x64_sys_futex_[k]
     5467770    0.00%      518  G1RegionsOnNodes::add(HeapRegion*)
     5411720    0.00%      464  _IO_default_xsputn
     5381231    0.00%      509  G1Analytics::predict_scan_card_num(unsigned long, bool) const
     5365592    0.00%      317  os::elapsed_counter()
     5364162    0.00%      518  ThreadLocalAllocBuffer::retire_before_allocation()
     5285581    0.00%      442  OopMapCache::lookup(methodHandle const&, int, InterpreterOopMap*)
     5279940    0.00%      468  G1RemSet::prepare_for_scan_heap_roots()
     5243021    0.00%      430  ___pthread_mutex_unlock
     5207540    0.00%      489  ThreadLocalAllocBuffer::fill(HeapWordImpl**, HeapWordImpl**, unsigned long)
     5136594    0.00%      504  oopFactory::new_objArray(Klass*, int, JavaThread*)
     5125221    0.00%      373  HeapRegionType::get_trace_type()
     5106223    0.00%      321  CodeCache::find_blob(void*)
     4997000    0.00%      443  __strlen_avx2
     4960070    0.00%      285  __GI___pthread_cond_timedwait
     4946431    0.00%      480  ObjArrayKlass::array_klass(int, JavaThread*)
     4894470    0.00%      311  JavaThread::oops_do_no_frames(OopClosure*, CodeBlobClosure*)
     4888311    0.00%      271  __audit_syscall_entry_[k]
     4884953    0.00%      392  Method::bcp_from(unsigned char*) const
     4881890    0.00%      287  __new_sem_wait_slow64.constprop.0
     4863700    0.00%      327  HeapRegionRemSet::clear_locked(bool)
     4851541    0.00%      418  G1DirtyCardQueueSet::num_par_ids()
     4723850    0.00%      277  futex_wait_[k]
     4565911    0.00%      433  .annobin__ZN25JfrObjectAllocationSample10send_eventEPK5KlassmbP6Thread.start
     4445592    0.00%      376  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     4413520    0.00%      394  G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*, unsigned int)
     4404301    0.00%      215  G1MergeHeapRootsTask::work(unsigned int)
     4386590    0.00%      275  AllocateHeap(unsigned long, MEMFLAGS, AllocFailStrategy::AllocFailEnum)
     4337980    0.00%      242  __list_add_valid_[k]
     4327663    0.00%      253  .annobin__ZN24G1GCParPhaseTimesTrackerC2EP14G1GCPhaseTimesNS0_11GCParPhasesEjb.start
     4303591    0.00%      415  .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
     4299790    0.00%      275  __get_user_nocheck_4_[k]
     4257631    0.00%      343  G1GCPhaseTimes::reset()
     4157731    0.00%      224  Mutex::lock_without_safepoint_check()
     4135590    0.00%      390  G1Analytics::predict_card_merge_time_ms(unsigned long, bool) const
     4076243    0.00%      269  G1RebuildFreeListTask::work(unsigned int)
     4060542    0.00%      204  os::PlatformMonitor::wait(long)
     3993702    0.00%      357  void QuickSort::inner_sort<true, unsigned int, int (*)(unsigned int, unsigned int)>(unsigned int*, unsigned long, int (*)(unsigned int, unsigned int)) [clone .constprop.0]
     3953360    0.00%      385  MemAllocator::Allocation::notify_allocation_jvmti_sampler()
     3831022    0.00%      364  LeakProfiler::is_running()
     3769451    0.00%      217  SparsePRT::clear()
     3753710    0.00%      364  __printf_fp_l
     3742543    0.00%      258  do_futex_[k]
     3680263    0.00%      352  G1AllocRegion::fill_up_remaining_space(HeapRegion*)
     3672401    0.00%      240  .annobin__ZN10HeapRegion8hr_clearEb.start
     3625780    0.00%      348  G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord)
     3617270    0.00%      124  GCIdMark::GCIdMark(unsigned int)
     3610500    0.00%      157  WatcherThread::sleep() const
     3583100    0.00%      237  futex_hash_[k]
     3566762    0.00%      312  HeapRegion::clear_cardtable()
     3551432    0.00%      337  G1Policy::predict_region_non_copy_time_ms(HeapRegion*, bool) const
     3521942    0.00%      342  G1CodeRootSet::contains(nmethod*)
     3500721    0.00%      250  _int_free
     3394990    0.00%      324  G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long)
     3357391    0.00%      122  __GI___pthread_disable_asynccancel
     3338580    0.00%      241  G1GCPhaseTimes::phase_name(G1GCPhaseTimes::GCParPhases)
     3332481    0.00%      196  StatSamplerTask::task()
     3290611    0.00%      289  LinearScan::build_intervals()
     3195731    0.00%      293  [no_Java_frame]
     3154130    0.00%      298  ResourceArea::rollback_to(ResourceArea::SavedState const&)
     3152751    0.00%      312  java.lang.StringConcatHelper.prepend
     3142582    0.00%      185  .annobin__ZN15PerfLongVariant6sampleEv.start
     3130474    0.00%      299  I2C/C2I adapters(0xb)
     3114771    0.00%      310  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     3097480    0.00%      262  HeapRegionTracer::send_region_type_change(unsigned int, G1HeapRegionTraceType::Type, G1HeapRegionTraceType::Type, unsigned long, unsigned long)
     3079712    0.00%      277  G1CodeRootSet::nmethods_do(CodeBlobClosure*) const
     3052532    0.00%      229  G1RemSetScanState::G1ClearCardTableTask::do_work(unsigned int)
     3050710    0.00%      298  .annobin__ZNK11G1CardTable11is_in_youngEP7oopDesc.start
     3031310    0.00%      159  G1HotCardCache::drain(G1CardTableEntryClosure*, unsigned int)
     2943691    0.00%      179  CompositeElapsedCounterSource::seconds(PairRep<long, long>)
     2941443    0.00%      207  do_syscall_64_[k]
     2940721    0.00%      292  sun.nio.cs.StreamEncoder.implWrite
     2924790    0.00%      210  OopStorage::BasicParState::claim_next_segment(OopStorage::BasicParState::IterationData*)
     2907502    0.00%      240  G1ConcurrentRefine::max_num_threads()
     2852590    0.00%      190  get_futex_key_[k]
     2851241    0.00%      194  PeriodicTask::real_time_tick(int)
     2817230    0.00%      267  .annobin__ZN19JfrAllocationTracerC2EPK5KlassPP12HeapWordImplmbP10JavaThread.start
     2745951    0.00%      252  DebugInformationRecorder::find_sharable_decode_offset(int)
     2744101    0.00%      255  G1SurvivorRegions::length() const
     2741941    0.00%      259  .annobin__ZN11AllocTracer27send_allocation_in_new_tlabEP5KlassPP12HeapWordImplmmP10JavaThread.start
     2741780    0.00%      272  java.lang.Long.getChars
     2740390    0.00%      207  G1GCPhaseTimes::record_or_add_time_secs(G1GCPhaseTimes::GCParPhases, unsigned int, double)
     2695442    0.00%      172  ImmutableOopMapSet::find_map_at_offset(int) const
     2688631    0.00%      258  G1CollectedHeap::start_new_collection_set()
     2679190    0.00%      215  ciObjectFactory::get_metadata(Metadata*)
     2672100    0.00%      233  LinearScan::allocate_registers()
     2635300    0.00%      250  I2C/C2I adapters(0xbb)
     2631222    0.00%      229  stringStream::write(char const*, unsigned long)
     2618020    0.00%      173  G1GCPhaseTimes::record_or_add_thread_work_item(G1GCPhaseTimes::GCParPhases, unsigned int, unsigned long, unsigned int)
     2585460    0.00%      231  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
     2583730    0.00%      226  LIR_OpVisitState::visit(LIR_Op*)
     2572560    0.00%      207  G1NUMA::is_enabled() const
     2568290    0.00%      209  G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
     2542840    0.00%      146  VMError::is_error_reported()
     2513670    0.00%      101  __pthread_mutex_cond_lock
     2507770    0.00%      210  InstanceKlass::mask_for(methodHandle const&, int, InterpreterOopMap*)
     2467321    0.00%      141  OopStorage::BasicParState::BasicParState(OopStorage const*, unsigned int, bool)
     2447311    0.00%      217  __memmove_avx_unaligned_erms
