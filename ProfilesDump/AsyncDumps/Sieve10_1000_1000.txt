--- Execution profile ---
Total samples       : 2426567
unknown_Java        : 1105 (0.05%)
not_walkable_Java   : 1673 (0.07%)
deoptimization      : 307 (0.01%)

--- 7198962074 ns (29.33%), 714654 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 4734117347 ns (19.29%), 469819 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 4559843744 ns (18.58%), 450141 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 1221323192 ns (4.98%), 121133 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 840366910 ns (3.42%), 83633 samples
  [ 0] Sieve.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 811839367 ns (3.31%), 80524 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 692279835 ns (2.82%), 68731 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 612945194 ns (2.50%), 60902 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 592977330 ns (2.42%), 58238 samples
  [ 0] Sieve.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 512898213 ns (2.09%), 50866 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 313290171 ns (1.28%), 31083 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 286686843 ns (1.17%), 28510 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 271554808 ns (1.11%), 26878 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 196285830 ns (0.80%), 19437 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 105537954 ns (0.43%), 10483 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 91042372 ns (0.37%), 9037 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 84743972 ns (0.35%), 8384 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 78707278 ns (0.32%), 7815 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 69552018 ns (0.28%), 6896 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 54556941 ns (0.22%), 5418 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 51501907 ns (0.21%), 4926 samples
  [ 0] Sieve.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 51475662 ns (0.21%), 5114 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 48027903 ns (0.20%), 4769 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 47798747 ns (0.19%), 4736 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 40231941 ns (0.16%), 3785 samples
  [ 0] Sieve.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 33909255 ns (0.14%), 3364 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 21492443 ns (0.09%), 2123 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 19472809 ns (0.08%), 1936 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 16983115 ns (0.07%), 1655 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 12620196 ns (0.05%), 1252 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 11566855 ns (0.05%), 1140 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 9012883 ns (0.04%), 862 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 7893974 ns (0.03%), 780 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] .annobin__ZN24G1ScanHRForRegionClosure15scan_heap_rootsEP10HeapRegion.start
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] .annobin__ZN21G1EvacuateRegionsTask10scan_rootsEP20G1ParScanThreadStatej.start
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 6645633 ns (0.03%), 428 samples
  [ 0] queue_work_on_[k]
  [ 1] pty_write_[k]
  [ 2] process_output_block_[k]
  [ 3] n_tty_write_[k]
  [ 4] do_tty_write_[k]
  [ 5] file_tty_write.constprop.0_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __GI_write
  [12] writeBytes
  [13] Java_java_io_FileOutputStream_writeBytes
  [14] java.io.FileOutputStream.writeBytes
  [15] java.io.FileOutputStream.write
  [16] java.io.BufferedOutputStream.flushBuffer
  [17] java.io.BufferedOutputStream.flush
  [18] java.io.PrintStream.write
  [19] sun.nio.cs.StreamEncoder.writeBytes
  [20] sun.nio.cs.StreamEncoder.implFlushBuffer
  [21] sun.nio.cs.StreamEncoder.flushBuffer
  [22] java.io.OutputStreamWriter.flushBuffer
  [23] java.io.PrintStream.writeln
  [24] java.io.PrintStream.println
  [25] Run.printResult
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 6254352 ns (0.03%), 594 samples
  [ 0] Run.measure
  [ 1] Run.doRuns
  [ 2] Run.runBenchmark
  [ 3] Harness.main

--- 5421281 ns (0.02%), 533 samples
  [ 0] Sieve.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 4508261 ns (0.02%), 449 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 4369373 ns (0.02%), 451 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 4345442 ns (0.02%), 414 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 4246331 ns (0.02%), 420 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 3839063 ns (0.02%), 266 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 3760231 ns (0.02%), 374 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 3743520 ns (0.02%), 370 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 3186571 ns (0.01%), 314 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 4] Sieve.verifyResult
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 3120162 ns (0.01%), 312 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 3091111 ns (0.01%), 308 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 3090841 ns (0.01%), 294 samples
  [ 0] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 1] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 2] Sieve.verifyResult
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2895261 ns (0.01%), 285 samples
  [ 0] [no_Java_frame]

--- 2760541 ns (0.01%), 278 samples
  [ 0] SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
  [ 1] Sieve.verifyResult
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 2740890 ns (0.01%), 266 samples
  [ 0] LinearScan::build_intervals()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 2736460 ns (0.01%), 271 samples
  [ 0] Sieve.benchmark
  [ 1] Benchmark.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 2715632 ns (0.01%), 272 samples
  [ 0] _invokeBasic
  [ 1] [unknown_Java]

--- 2624073 ns (0.01%), 265 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 2579511 ns (0.01%), 102 samples
  [ 0] __futex_abstimed_wait_common

--- 2515543 ns (0.01%), 248 samples
  [ 0] sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
  [ 1] sun.nio.cs.UTF_8$Encoder.encodeLoop
  [ 2] java.nio.charset.CharsetEncoder.encode
  [ 3] sun.nio.cs.StreamEncoder.implWrite
  [ 4] sun.nio.cs.StreamEncoder.implWrite
  [ 5] sun.nio.cs.StreamEncoder.write
  [ 6] java.io.OutputStreamWriter.write
  [ 7] java.io.BufferedWriter.flushBuffer
  [ 8] java.io.PrintStream.writeln
  [ 9] java.io.PrintStream.println
  [10] Run.printResult
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2427321 ns (0.01%), 233 samples
  [ 0] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 1] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 2] PhaseIdealLoop::optimize(PhaseIterGVN&, LoopOptsMode)
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 2394140 ns (0.01%), 228 samples
  [ 0] G1Allocator::unsafe_max_tlab_alloc()
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 4] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 5] Sieve.verifyResult
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2286120 ns (0.01%), 147 samples
  [ 0] queue_work_on_[k]
  [ 1] pty_write_[k]
  [ 2] process_output_block_[k]
  [ 3] n_tty_write_[k]
  [ 4] do_tty_write_[k]
  [ 5] file_tty_write.constprop.0_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __GI_write
  [12] writeBytes
  [13] Java_java_io_FileOutputStream_writeBytes
  [14] java.io.FileOutputStream.writeBytes
  [15] java.io.FileOutputStream.write
  [16] java.io.BufferedOutputStream.flushBuffer
  [17] java.io.BufferedOutputStream.flush
  [18] java.io.PrintStream.write
  [19] sun.nio.cs.StreamEncoder.writeBytes
  [20] sun.nio.cs.StreamEncoder.implFlushBuffer
  [21] sun.nio.cs.StreamEncoder.flushBuffer
  [22] java.io.OutputStreamWriter.flushBuffer
  [23] java.io.PrintStream.writeln
  [24] java.io.PrintStream.println
  [25] Run.printResult
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 2245060 ns (0.01%), 223 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 2187000 ns (0.01%), 202 samples
  [ 0] Run.doRuns
  [ 1] Run.runBenchmark
  [ 2] Harness.main

--- 2149061 ns (0.01%), 201 samples
  [ 0] Run.measure
  [ 1] Run.doRuns
  [ 2] Run.runBenchmark
  [ 3] Harness.main

--- 2085822 ns (0.01%), 198 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 2056280 ns (0.01%), 203 samples
  [ 0] .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
  [ 1] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 2] .annobin__ZN24G1ScanHRForRegionClosure15scan_heap_rootsEP10HeapRegion.start
  [ 3] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 4] .annobin__ZN21G1EvacuateRegionsTask10scan_rootsEP20G1ParScanThreadStatej.start
  [ 5] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 2024370 ns (0.01%), 200 samples
  [ 0] .annobin__ZN16LinearScanWalker14alloc_free_regEP8Interval.start
  [ 1] LinearScanWalker::activate_current()
  [ 2] LinearScan::allocate_registers()
  [ 3] LinearScan::do_linear_scan()
  [ 4] Compilation::emit_lir()
  [ 5] Compilation::compile_java_method()
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 2007833 ns (0.01%), 198 samples
  [ 0] LinearScan::allocate_registers()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 2004882 ns (0.01%), 193 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 4] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 5] Sieve.verifyResult
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1920980 ns (0.01%), 106 samples
  [ 0] os::elapsed_counter()
  [ 1] StatSamplerTask::task()
  [ 2] PeriodicTask::real_time_tick(int)
  [ 3] WatcherThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 1892420 ns (0.01%), 183 samples
  [ 0] PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
  [ 1] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 2] PhaseIdealLoop::optimize(PhaseIterGVN&, LoopOptsMode)
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 1882891 ns (0.01%), 188 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 1878282 ns (0.01%), 185 samples
  [ 0] Benchmark.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 1859420 ns (0.01%), 160 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1RemSetScanState::G1ClearCardTableTask::do_work(unsigned int)
  [ 2] G1BatchedGangTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 1832831 ns (0.01%), 168 samples
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1828951 ns (0.01%), 180 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 1808520 ns (0.01%), 105 samples
  [ 0] generic_exec_single_[k]
  [ 1] smp_call_function_single_[k]
  [ 2] event_function_call_[k]
  [ 3] _perf_ioctl_[k]
  [ 4] perf_ioctl_[k]
  [ 5] __x64_sys_ioctl_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___ioctl_time64
  [ 9] __restore_rt
  [10] Sieve.sieve
  [11] Sieve.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1808001 ns (0.01%), 169 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1802800 ns (0.01%), 176 samples
  [ 0] LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1795251 ns (0.01%), 168 samples
  [ 0] Run.measure
  [ 1] Run.doRuns
  [ 2] Run.runBenchmark
  [ 3] Harness.main

--- 1789651 ns (0.01%), 95 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] futex_wait_queue_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_common

--- 1772362 ns (0.01%), 171 samples
  [ 0] PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
  [ 1] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 2] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 3] PhaseIdealLoop::optimize(PhaseIterGVN&, LoopOptsMode)
  [ 4] Compile::Optimize()
  [ 5] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 6] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1566350 ns (0.01%), 154 samples
  [ 0] LinearScan::compute_local_live_sets()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1560120 ns (0.01%), 152 samples
  [ 0] HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
  [ 1] G1CollectedHeap::new_region(unsigned long, HeapRegionType, bool, unsigned int)
  [ 2] G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool, unsigned int)
  [ 3] G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool)
  [ 4] G1CollectedHeap::attempt_allocation_slow(unsigned long)
  [ 5] G1CollectedHeap::mem_allocate(unsigned long, bool*)
  [ 6] MemAllocator::allocate() const
  [ 7] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 8] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 9] Sieve.verifyResult
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1531350 ns (0.01%), 150 samples
  [ 0] PhaseIdealLoop::Dominators()
  [ 1] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 2] PhaseIdealLoop::optimize(PhaseIterGVN&, LoopOptsMode)
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 1516171 ns (0.01%), 151 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 1489391 ns (0.01%), 102 samples
  [ 0] file_tty_write.constprop.0_[k]
  [ 1] new_sync_write_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __GI_write
  [ 7] writeBytes
  [ 8] Java_java_io_FileOutputStream_writeBytes
  [ 9] java.io.FileOutputStream.writeBytes
  [10] java.io.FileOutputStream.write
  [11] java.io.BufferedOutputStream.flushBuffer
  [12] java.io.BufferedOutputStream.flush
  [13] java.io.PrintStream.write
  [14] sun.nio.cs.StreamEncoder.writeBytes
  [15] sun.nio.cs.StreamEncoder.implFlushBuffer
  [16] sun.nio.cs.StreamEncoder.flushBuffer
  [17] java.io.OutputStreamWriter.flushBuffer
  [18] java.io.PrintStream.writeln
  [19] java.io.PrintStream.println
  [20] Run.printResult
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 1450900 ns (0.01%), 140 samples
  [ 0] java.lang.invoke.MethodHandle.invokeBasic
  [ 1] [unknown_Java]

--- 1391370 ns (0.01%), 138 samples
  [ 0] Sieve.sieve
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 1376710 ns (0.01%), 137 samples
  [ 0] sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
  [ 1] sun.nio.cs.UTF_8$Encoder.encodeLoop
  [ 2] java.nio.charset.CharsetEncoder.encode
  [ 3] sun.nio.cs.StreamEncoder.implWrite
  [ 4] sun.nio.cs.StreamEncoder.implWrite
  [ 5] sun.nio.cs.StreamEncoder.write
  [ 6] java.io.OutputStreamWriter.write
  [ 7] java.io.BufferedWriter.flushBuffer
  [ 8] java.io.PrintStream.writeln
  [ 9] java.io.PrintStream.println
  [10] Run.printResult
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1372280 ns (0.01%), 133 samples
  [ 0] G1Policy::preventive_collection_required(unsigned int)
  [ 1] G1CollectedHeap::attempt_allocation_slow(unsigned long)
  [ 2] G1CollectedHeap::mem_allocate(unsigned long, bool*)
  [ 3] MemAllocator::allocate() const
  [ 4] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 5] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 6] Sieve.verifyResult
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1371100 ns (0.01%), 77 samples
  [ 0] generic_exec_single_[k]
  [ 1] smp_call_function_single_[k]
  [ 2] event_function_call_[k]
  [ 3] _perf_ioctl_[k]
  [ 4] perf_ioctl_[k]
  [ 5] __x64_sys_ioctl_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___ioctl_time64
  [ 9] __restore_rt
  [10] Sieve.sieve
  [11] Sieve.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1362920 ns (0.01%), 132 samples
  [ 0] PhaseIdealLoop::build_loop_tree()
  [ 1] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 2] PhaseIdealLoop::optimize(PhaseIterGVN&, LoopOptsMode)
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 1310602 ns (0.01%), 128 samples
  [ 0] java.lang.Long.stringSize
  [ 1] java.lang.StringConcatHelper.mix
  [ 2] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic

--- 1300363 ns (0.01%), 128 samples
  [ 0] MemAllocator::allocate() const
  [ 1] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 2] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 3] Sieve.verifyResult
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1299300 ns (0.01%), 124 samples
  [ 0] G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 4] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 5] Sieve.verifyResult
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1293511 ns (0.01%), 127 samples
  [ 0] java.io.FileOutputStream.write
  [ 1] java.io.BufferedOutputStream.flushBuffer
  [ 2] java.io.BufferedOutputStream.flush
  [ 3] java.io.PrintStream.write
  [ 4] sun.nio.cs.StreamEncoder.writeBytes
  [ 5] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 6] sun.nio.cs.StreamEncoder.flushBuffer
  [ 7] java.io.OutputStreamWriter.flushBuffer
  [ 8] java.io.PrintStream.writeln
  [ 9] java.io.PrintStream.println
  [10] Run.printResult
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1283220 ns (0.01%), 123 samples
  [ 0] LinearScanWalker::free_collect_inactive_fixed(Interval*)
  [ 1] .annobin__ZN16LinearScanWalker14alloc_free_regEP8Interval.start
  [ 2] LinearScanWalker::activate_current()
  [ 3] LinearScan::allocate_registers()
  [ 4] LinearScan::do_linear_scan()
  [ 5] Compilation::emit_lir()
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 1282440 ns (0.01%), 128 samples
  [ 0] java.util.Arrays.fill
  [ 1] Sieve.benchmark
  [ 2] Benchmark.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 1274362 ns (0.01%), 74 samples
  [ 0] generic_exec_single_[k]
  [ 1] smp_call_function_single_[k]
  [ 2] event_function_call_[k]
  [ 3] _perf_ioctl_[k]
  [ 4] perf_ioctl_[k]
  [ 5] __x64_sys_ioctl_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___ioctl_time64
  [ 9] __restore_rt
  [10] Sieve.sieve
  [11] Sieve.benchmark
  [12] Benchmark.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 1272000 ns (0.01%), 67 samples
  [ 0] clock_gettime@GLIBC_2.2.5
  [ 1] WatcherThread::sleep() const
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 1270091 ns (0.01%), 120 samples
  [ 0] G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 4] Sieve.verifyResult
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1261700 ns (0.01%), 65 samples
  [ 0] Monitor::wait_without_safepoint_check(long)
  [ 1] WatcherThread::sleep() const
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

          ns  percent  samples  top
  ----------  -------  -------  ---
 20551955390   83.74%  2037457  Sieve.sieve
  1637019088    6.67%   162325  java.util.Arrays.fill
  1534471849    6.25%   151507  Sieve.benchmark
    16993545    0.07%     1656  Interpreter
    16091317    0.07%     1546  Benchmark.innerBenchmarkLoop
    11466504    0.05%      774  _raw_spin_unlock_irqrestore_[k]
    10803005    0.04%     1022  Run.measure
    10758155    0.04%     1054  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
     9842104    0.04%      926  __memset_avx2_unaligned_erms
     8987803    0.04%      579  queue_work_on_[k]
     7378643    0.03%      729  sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
     6376654    0.03%      371  generic_exec_single_[k]
     6217522    0.03%      540  __tls_get_addr
     4293511    0.02%      409  TypeArrayKlass::allocate_common(int, bool, JavaThread*)
     4193020    0.02%      325  [vdso]
     4162280    0.02%      394  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     3980101    0.02%      395  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     3839063    0.02%      266  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
     3601541    0.01%      345  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     3547032    0.01%      350  .annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start
     3406661    0.01%      339  java.lang.StringConcatHelper.prepend
     3147340    0.01%      312  sun.nio.cs.StreamEncoder.implWrite
     3100500    0.01%      301  I2C/C2I adapters(0xb)
     3039730    0.01%      229  clock_gettime@GLIBC_2.2.5
     3021001    0.01%      304  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
     2944751    0.01%      121  __futex_abstimed_wait_common
     2895261    0.01%      285  [no_Java_frame]
     2820820    0.01%      269  G1Allocator::unsafe_max_tlab_alloc()
     2791120    0.01%      271  LinearScan::build_intervals()
     2715632    0.01%      272  _invokeBasic
     2664721    0.01%      266  java.lang.invoke.LambdaForm$MH.0x0000000800c08400.invoke
     2640121    0.01%      251  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
     2565543    0.01%      252  java.lang.Long.stringSize
     2524860    0.01%      172  syscall_enter_from_user_mode_[k]
     2470060    0.01%      244  java.lang.Long.getChars
     2401310    0.01%      234  DebugInformationRecorder::find_sharable_decode_offset(int)
     2378701    0.01%      155  restore_fpregs_from_user_[k]
     2377600    0.01%      238  java.nio.charset.CharsetEncoder.encode
     2359402    0.01%      225  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
     2310122    0.01%      226  Run.printResult
     2200210    0.01%      213  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
     2187000    0.01%      202  Run.doRuns
     2133980    0.01%      205  PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
     2111281    0.01%      208  LIR_OpVisitState::visit(LIR_Op*)
     2102690    0.01%      122  os::elapsed_counter()
     2088621    0.01%      203  java.io.FileOutputStream.write
     2084871    0.01%      202  ObjArrayAllocator::initialize(HeapWordImpl**) const
     2074542    0.01%      198  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
     2065770    0.01%      203  .annobin__ZN16LinearScanWalker14alloc_free_regEP8Interval.start
     2062622    0.01%      200  Dict::Insert(void*, void*, bool)
     2037813    0.01%      201  LinearScan::allocate_registers()
     1957351    0.01%      191  java.io.PrintStream.write
     1945380    0.01%      190  Type::cmp(Type const*, Type const*)
     1938160    0.01%      180  vmSymbols::find_sid(Symbol const*)
     1928471    0.01%      183  sun.nio.cs.StreamEncoder.writeBytes
     1922853    0.01%      188  MemAllocator::allocate() const
     1908732    0.01%      186  void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
     1881580    0.01%      187  java.lang.Integer.valueOf
     1849933    0.01%      127  file_tty_write.constprop.0_[k]
     1848980    0.01%      176  ciObjectFactory::get_metadata(Metadata*)
     1841500    0.01%      180  OptoRuntime::new_array_C(Klass*, int, JavaThread*)
     1834690    0.01%      182  java.io.PrintStream.println
     1833810    0.01%      178  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
     1832831    0.01%      168  SpinPause
     1826250    0.01%      163  G1FromCardCache::clear(unsigned int)
     1782410    0.01%      163  ___pthread_mutex_lock
     1770590    0.01%      179  ___pthread_mutex_trylock
     1764430    0.01%      171  G1Policy::preventive_collection_required(unsigned int)
     1741332    0.01%      171  java.lang.StringConcatHelper.mix
     1727681    0.01%      110  copy_user_generic_string_[k]
     1720970    0.01%      167  PhaseIdealLoop::Dominators()
     1709640    0.01%      163  G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
     1672530    0.01%      160  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
     1653790    0.01%      159  SymbolTable::lookup_shared(char const*, int, unsigned int)
     1652880    0.01%       85  os::PlatformMonitor::wait(long)
     1648870    0.01%      160  java.io.PrintStream.writeln
     1620080    0.01%      159  Type::hashcons()
     1601601    0.01%      157  Sieve.verifyResult
     1581631    0.01%      109  inode_security_[k]
     1580640    0.01%      154  G1CardTable::g1_mark_as_young(MemRegion const&)
     1574380    0.01%      150  PhaseIterGVN::transform_old(Node*)
     1572850    0.01%      152  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
     1572291    0.01%       95  rmqueue_[k]
     1568602    0.01%      109  new_sync_write_[k]
     1566350    0.01%      154  LinearScan::compute_local_live_sets()
     1519490    0.01%      109  futex_wake_[k]
     1515860    0.01%      149  java.nio.Buffer.<init>
     1508751    0.01%      145  __memmove_avx_unaligned_erms
     1501940    0.01%       92  StatSamplerTask::task()
     1484080    0.01%      141  PhaseIterGVN::add_users_to_worklist(Node*)
     1465790    0.01%       77  Monitor::wait_without_safepoint_check(long)
     1461990    0.01%      141  PhaseIdealLoop::build_loop_tree()
     1450900    0.01%      140  java.lang.invoke.MethodHandle.invokeBasic
     1438341    0.01%      143  sun.nio.cs.StreamEncoder.write
     1419350    0.01%      142  GraphBuilder::iterate_bytecodes_for_block(int)
     1413770    0.01%      143  CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*)
     1411641    0.01%      136  NodeHash::hash_find_insert(Node*)
     1402120    0.01%      135  I2C/C2I adapters(0xba)
     1399762    0.01%      137  jni_GetObjectField
     1394691    0.01%      132  G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const
     1373110    0.01%      137  PhaseChaitin::gather_lrg_masks(bool)
     1363501    0.01%      134  java.nio.CharBuffer.wrap
     1357460    0.01%      134  sun.nio.cs.UTF_8.updatePositions
     1345100    0.01%      133  ObjectSampler::is_created()
     1341880    0.01%      132  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
     1331010    0.01%      129  G1CollectedHeap::mem_allocate(unsigned long, bool*)
     1323810    0.01%      127  LinearScanWalker::free_collect_inactive_fixed(Interval*)
     1319270    0.01%      131  java.lang.String.getChars
     1318270    0.01%      131  ConstantPool::klass_at_impl(constantPoolHandle const&, int, JavaThread*)
     1312451    0.01%      126  ValueStack::values_do(ValueVisitor*)
     1311300    0.01%      123  HandleMark::initialize(Thread*)
     1305860    0.01%      108  os::free(void*)
     1303430    0.01%      129  sun.nio.cs.UTF_8$Encoder.encodeLoop
     1291331    0.01%      125  AbsSeq::davg() const
     1288370    0.01%      126  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
     1276431    0.01%       71  __GI___pthread_cond_timedwait
     1272950    0.01%      125  jdk.internal.org.objectweb.asm.Frame.execute
     1267101    0.01%      123  oopFactory::new_typeArray(BasicType, int, JavaThread*)
     1260600    0.01%      126  java.io.BufferedWriter.write
     1252811    0.01%       85  process_echoes_[k]
     1252610    0.01%      123  java.io.BufferedOutputStream.write
     1247121    0.01%      122  I2C/C2I adapters(0xbb)
     1244351    0.01%      121  java.nio.CharBuffer.limit
     1240700    0.01%      121  __memmove_avx_unaligned
     1231830    0.01%      121  java.lang.String.length
     1225570    0.00%      119  G1CollectionSet::add_eden_region(HeapRegion*)
     1215561    0.00%      114  Dictionary::find(unsigned int, Symbol*, Handle)
     1213380    0.00%      120  java.nio.ByteBuffer.position
     1208101    0.00%      117  InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const
     1193630    0.00%      117  __vfprintf_internal
     1180010    0.00%      116  sun.nio.cs.StreamEncoder.flushBuffer
     1178811    0.00%      114  PhaseLive::compute(unsigned int)
     1173532    0.00%      111  java.io.FileOutputStream.writeBytes
     1159350    0.00%      115  java.lang.String.coder
     1136991    0.00%      113  java.lang.System$2.encodeASCII
     1135070    0.00%       91  __GI___libc_malloc
     1125370    0.00%      108  G1NUMA::index_of_current_thread() const
     1124840    0.00%       76  VMError::is_error_reported()
     1118010    0.00%      110  jdk.internal.misc.Unsafe.allocateUninitializedArray0
     1111051    0.00%       96  clear_page_rep_[k]
     1094171    0.00%       64  WatcherThread::sleep() const
     1082470    0.00%      107  java.lang.String.getBytes
     1080281    0.00%      106  .annobin__ZN25JfrObjectAllocationSample10send_eventEPK5KlassmbP6Thread.start
     1079840    0.00%      106  PhaseIdealLoop::get_ctrl(Node*) [clone .isra.0]
     1078160    0.00%      107  java.io.BufferedWriter.flushBuffer
     1070640    0.00%       47  __GI___pthread_disable_asynccancel
     1069530    0.00%       49  __pthread_mutex_cond_lock
     1067550    0.00%      105  G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool, unsigned int)
     1060270    0.00%       62  .annobin__ZN15PerfLongVariant6sampleEv.start
     1060040    0.00%       71  os::javaTimeNanos()
     1051280    0.00%       73  n_tty_write_[k]
     1051160    0.00%       98  _int_malloc
     1050890    0.00%      103  java.nio.HeapCharBuffer.<init>
     1041690    0.00%      101  .annobin__ZN11AllocTracer27send_allocation_in_new_tlabEP5KlassPP12HeapWordImplmmP10JavaThread.start
     1030010    0.00%      100  RegisterMap::pd_location(VMRegImpl*) const
     1026420    0.00%      101  java.lang.String.checkBoundsBeginEnd
     1012210    0.00%       98  DebugInformationRecorder::describe_scope(int, methodHandle const&, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*)
      998820    0.00%       84  __GI___pthread_mutex_unlock_usercnt
      992190    0.00%       93  G1CollectedHeap::attempt_allocation_slow(unsigned long)
      990620    0.00%       96  jni_GetArrayLength
      989030    0.00%       98  java.nio.CharBuffer.<init>
      988740    0.00%       95  Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
      962920    0.00%       95  java.nio.Buffer.position
      959580    0.00%       94  java.nio.Buffer.limit
      958620    0.00%       45  __condvar_dec_grefs
      949300    0.00%       93  java.lang.StringConcatHelper.newArray
      947410    0.00%       94  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
      936710    0.00%       93  java.nio.CharBuffer.arrayOffset
      924870    0.00%       91  java.lang.StringConcatHelper.stringOf
      924730    0.00%       90  ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int)
      923310    0.00%       90  .annobin__ZN8Interval9add_rangeEii.start
      923161    0.00%       91  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
      922650    0.00%       88  .annobin__ZN24G1ScanHRForRegionClosure15scan_heap_rootsEP10HeapRegion.start
      922390    0.00%       90  PhaseIterGVN::remove_globally_dead_node(Node*)
      911570    0.00%       85  Node::is_CFG() const
      908450    0.00%       88  jni_GetByteArrayRegion
      905790    0.00%       90  LIR_OpVisitState::append(LIR_OprDesc*&, LIR_OpVisitState::OprMode) [clone .constprop.0]
      900770    0.00%       89  .annobin__ZN19JfrAllocationTracerC2EPK5KlassPP12HeapWordImplmbP10JavaThread.start
      899920    0.00%       87  .annobin__ZN12methodHandleD2Ev.start
      894520    0.00%       86  java_lang_ref_Reference::is_referent_field(oopDesc*, long)
      893580    0.00%       87  Java_java_io_FileOutputStream_writeBytes
      892660    0.00%       86  java.io.BufferedOutputStream.flush
      887970    0.00%       87  java.lang.StringConcatHelper.newString
      883630    0.00%       88  java.lang.StringCoding.implEncodeAsciiArray
      882710    0.00%       86  java.lang.AbstractStringBuilder.append
      880701    0.00%       88  java.lang.StringLatin1.inflate
      879590    0.00%       34  finish_task_switch.isra.0_[k]
      879000    0.00%       59  tty_paranoia_check_[k]
      876660    0.00%       41  Mutex::lock_without_safepoint_check()
      875131    0.00%       84  HSpaceCounters::update_used(unsigned long)
      873040    0.00%       86  jdk.internal.misc.Unsafe.allocateUninitializedArray
      872920    0.00%       86  IndexSetIterator::advance_and_next()
      868761    0.00%       86  java.nio.CharBuffer.position
      868450    0.00%       86  NullCheckEliminator::iterate_one(BlockBegin*)
      866161    0.00%       85  .annobin__ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm2646116ES1_EELNS_11BarrierTypeE0ELm2646116EE18oop_access_barrierEPvP7oopDesc.start
      862030    0.00%       85  java.lang.String.isLatin1
      857040    0.00%       81  OtherRegionsTable::occupied() const
      851341    0.00%       79  CodeCache::find_blob(void*)
      848651    0.00%       85  java.lang.String.<init>
      838450    0.00%       83  Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode)
