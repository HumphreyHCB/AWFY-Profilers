--- Execution profile ---
Total samples       : 8423527
unknown_Java        : 725 (0.01%)
not_walkable_Java   : 1297 (0.02%)
deoptimization      : 56 (0.00%)

--- 43561572221 ns (51.30%), 4324869 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 26072591416 ns (30.70%), 2588368 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 6574325349 ns (7.74%), 652808 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 4300992291 ns (5.06%), 427088 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 2288786728 ns (2.70%), 227231 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 395431450 ns (0.47%), 39235 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 181779291 ns (0.21%), 18041 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 157708929 ns (0.19%), 15655 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 105220898 ns (0.12%), 10434 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 97069102 ns (0.11%), 9638 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 91756607 ns (0.11%), 9103 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 89582195 ns (0.11%), 8891 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 89349959 ns (0.11%), 8872 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 75114033 ns (0.09%), 7439 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 65073099 ns (0.08%), 6463 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 53383532 ns (0.06%), 5296 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 33685727 ns (0.04%), 3341 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 26484728 ns (0.03%), 2634 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 12907371 ns (0.02%), 1279 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 9996721 ns (0.01%), 706 samples
  [ 0] generic_exec_single_[k]
  [ 1] smp_call_function_single_[k]
  [ 2] event_function_call_[k]
  [ 3] _perf_ioctl_[k]
  [ 4] perf_ioctl_[k]
  [ 5] __x64_sys_ioctl_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___ioctl_time64
  [ 9] __restore_rt
  [10] Mandelbrot.mandelbrot
  [11] Mandelbrot.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 8287293 ns (0.01%), 823 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 6918493 ns (0.01%), 681 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 6761484 ns (0.01%), 474 samples
  [ 0] generic_exec_single_[k]
  [ 1] smp_call_function_single_[k]
  [ 2] event_function_call_[k]
  [ 3] _perf_ioctl_[k]
  [ 4] perf_ioctl_[k]
  [ 5] __x64_sys_ioctl_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___ioctl_time64
  [ 9] __restore_rt
  [10] Mandelbrot.mandelbrot
  [11] Mandelbrot.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 6211685 ns (0.01%), 616 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 6128761 ns (0.01%), 609 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 5982623 ns (0.01%), 389 samples
  [ 0] queue_work_on_[k]
  [ 1] pty_write_[k]
  [ 2] process_output_block_[k]
  [ 3] n_tty_write_[k]
  [ 4] do_tty_write_[k]
  [ 5] file_tty_write.constprop.0_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __GI_write
  [12] writeBytes
  [13] Java_java_io_FileOutputStream_writeBytes
  [14] java.io.FileOutputStream.writeBytes
  [15] java.io.FileOutputStream.write
  [16] java.io.BufferedOutputStream.flushBuffer
  [17] java.io.BufferedOutputStream.flush
  [18] java.io.PrintStream.write
  [19] sun.nio.cs.StreamEncoder.writeBytes
  [20] sun.nio.cs.StreamEncoder.implFlushBuffer
  [21] sun.nio.cs.StreamEncoder.flushBuffer
  [22] java.io.OutputStreamWriter.flushBuffer
  [23] java.io.PrintStream.writeln
  [24] java.io.PrintStream.println
  [25] Run.printResult
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 5963240 ns (0.01%), 591 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 5949481 ns (0.01%), 388 samples
  [ 0] queue_work_on_[k]
  [ 1] pty_write_[k]
  [ 2] process_output_block_[k]
  [ 3] n_tty_write_[k]
  [ 4] do_tty_write_[k]
  [ 5] file_tty_write.constprop.0_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __GI_write
  [12] writeBytes
  [13] Java_java_io_FileOutputStream_writeBytes
  [14] java.io.FileOutputStream.writeBytes
  [15] java.io.FileOutputStream.write
  [16] java.io.BufferedOutputStream.flushBuffer
  [17] java.io.BufferedOutputStream.flush
  [18] java.io.PrintStream.write
  [19] sun.nio.cs.StreamEncoder.writeBytes
  [20] sun.nio.cs.StreamEncoder.implFlushBuffer
  [21] sun.nio.cs.StreamEncoder.flushBuffer
  [22] java.io.OutputStreamWriter.flushBuffer
  [23] java.io.PrintStream.writeln
  [24] java.io.PrintStream.println
  [25] Run.printResult
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 5794730 ns (0.01%), 262 samples
  [ 0] clock_gettime@GLIBC_2.2.5
  [ 1] WatcherThread::sleep() const
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 5057052 ns (0.01%), 180 samples
  [ 0] __futex_abstimed_wait_common

--- 4022421 ns (0.00%), 204 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] futex_wait_queue_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_common

--- 3161251 ns (0.00%), 144 samples
  [ 0] WatcherThread::sleep() const
  [ 1] WatcherThread::run()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] start_thread

--- 2954771 ns (0.00%), 288 samples
  [ 0] Run.measure
  [ 1] Run.doRuns
  [ 2] Run.runBenchmark
  [ 3] Harness.main

--- 2935300 ns (0.00%), 289 samples
  [ 0] [no_Java_frame]

--- 2844151 ns (0.00%), 321 samples
  [ 0] Run.doRuns
  [ 1] Run.runBenchmark
  [ 2] Harness.main

--- 2780822 ns (0.00%), 146 samples
  [ 0] .annobin__ZN15PerfLongVariant6sampleEv.start
  [ 1] PeriodicTask::real_time_tick(int)
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 2644100 ns (0.00%), 192 samples
  [ 0] restore_fpregs_from_user_[k]
  [ 1] fpu__restore_sig_[k]
  [ 2] restore_sigcontext_[k]
  [ 3] __x64_sys_rt_sigreturn_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] Mandelbrot.mandelbrot
  [ 7] Mandelbrot.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2420240 ns (0.00%), 240 samples
  [ 0] LinearScan::build_intervals()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 2280381 ns (0.00%), 90 samples
  [ 0] __GI___pthread_disable_asynccancel

--- 2153081 ns (0.00%), 114 samples
  [ 0] StatSamplerTask::task()
  [ 1] PeriodicTask::real_time_tick(int)
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 2010680 ns (0.00%), 201 samples
  [ 0] _invokeBasic
  [ 1] [unknown_Java]

--- 1996961 ns (0.00%), 197 samples
  [ 0] LinearScan::allocate_registers()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1973701 ns (0.00%), 114 samples
  [ 0] os::elapsed_counter()
  [ 1] StatSamplerTask::task()
  [ 2] PeriodicTask::real_time_tick(int)
  [ 3] WatcherThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 1963281 ns (0.00%), 113 samples
  [ 0] StatSamplerTask::task()
  [ 1] WatcherThread::run()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] start_thread

--- 1860800 ns (0.00%), 94 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] futex_wait_queue_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_common

--- 1824730 ns (0.00%), 179 samples
  [ 0] LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1760503 ns (0.00%), 132 samples
  [ 0] PeriodicTask::real_time_tick(int)
  [ 1] WatcherThread::run()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] start_thread

--- 1688760 ns (0.00%), 131 samples
  [ 0] VMError::is_error_reported()
  [ 1] Thread::call_run()
  [ 2] thread_native_entry(Thread*)
  [ 3] start_thread

--- 1655560 ns (0.00%), 164 samples
  [ 0] .annobin__ZN16LinearScanWalker14alloc_free_regEP8Interval.start
  [ 1] LinearScanWalker::activate_current()
  [ 2] LinearScan::allocate_registers()
  [ 3] LinearScan::do_linear_scan()
  [ 4] Compilation::emit_lir()
  [ 5] Compilation::compile_java_method()
  [ 6] Compilation::compile_method()
  [ 7] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 8] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 1648021 ns (0.00%), 90 samples
  [ 0] os::PlatformMonitor::wait(long)
  [ 1] Monitor::wait_without_safepoint_check(long)
  [ 2] WatcherThread::sleep() const
  [ 3] WatcherThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 1635520 ns (0.00%), 77 samples
  [ 0] Monitor::wait_without_safepoint_check(long)
  [ 1] WatcherThread::sleep() const
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 1626001 ns (0.00%), 119 samples
  [ 0] restore_fpregs_from_user_[k]
  [ 1] fpu__restore_sig_[k]
  [ 2] restore_sigcontext_[k]
  [ 3] __x64_sys_rt_sigreturn_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] Mandelbrot.mandelbrot
  [ 7] Mandelbrot.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1616520 ns (0.00%), 79 samples
  [ 0] [vdso]
  [ 1] WatcherThread::sleep() const
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 1486760 ns (0.00%), 144 samples
  [ 0] sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
  [ 1] sun.nio.cs.UTF_8$Encoder.encodeLoop
  [ 2] java.nio.charset.CharsetEncoder.encode
  [ 3] sun.nio.cs.StreamEncoder.implWrite
  [ 4] sun.nio.cs.StreamEncoder.implWrite
  [ 5] sun.nio.cs.StreamEncoder.write
  [ 6] java.io.OutputStreamWriter.write
  [ 7] java.io.BufferedWriter.flushBuffer
  [ 8] java.io.PrintStream.writeln
  [ 9] java.io.PrintStream.println
  [10] Run.printResult
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1435561 ns (0.00%), 98 samples
  [ 0] generic_exec_single_[k]
  [ 1] smp_call_function_single_[k]
  [ 2] event_function_call_[k]
  [ 3] _perf_ioctl_[k]
  [ 4] perf_ioctl_[k]
  [ 5] __x64_sys_ioctl_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___ioctl_time64
  [ 9] __restore_rt
  [10] Mandelbrot.mandelbrot
  [11] Mandelbrot.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1330560 ns (0.00%), 133 samples
  [ 0] LinearScan::compute_local_live_sets()
  [ 1] LinearScan::do_linear_scan()
  [ 2] Compilation::emit_lir()
  [ 3] Compilation::compile_java_method()
  [ 4] Compilation::compile_method()
  [ 5] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 6] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 1322800 ns (0.00%), 60 samples
  [ 0] __pthread_mutex_cond_lock
  [ 1] [unknown]

--- 1307410 ns (0.00%), 130 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1278461 ns (0.00%), 127 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 1266150 ns (0.00%), 75 samples
  [ 0] __GI___pthread_cond_timedwait
  [ 1] Monitor::wait_without_safepoint_check(long)
  [ 2] WatcherThread::sleep() const
  [ 3] WatcherThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 1257201 ns (0.00%), 97 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __restore_rt
  [ 4] Mandelbrot.mandelbrot
  [ 5] Mandelbrot.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1246522 ns (0.00%), 62 samples
  [ 0] __GI___pthread_cond_timedwait
  [ 1] [unknown]

--- 1223260 ns (0.00%), 120 samples
  [ 0] java.lang.invoke.MethodHandle.invokeBasic
  [ 1] [unknown_Java]

--- 1182280 ns (0.00%), 50 samples
  [ 0] Mutex::lock_without_safepoint_check()
  [ 1] PeriodicTask::real_time_tick(int)
  [ 2] WatcherThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 1097730 ns (0.00%), 52 samples
  [ 0] __condvar_dec_grefs
  [ 1] [unknown]

--- 1085510 ns (0.00%), 107 samples
  [ 0] LinearScanWalker::free_collect_inactive_fixed(Interval*)
  [ 1] .annobin__ZN16LinearScanWalker14alloc_free_regEP8Interval.start
  [ 2] LinearScanWalker::activate_current()
  [ 3] LinearScan::allocate_registers()
  [ 4] LinearScan::do_linear_scan()
  [ 5] Compilation::emit_lir()
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 1037300 ns (0.00%), 43 samples
  [ 0] os::javaTimeNanos()
  [ 1] WatcherThread::run()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] start_thread

--- 1014240 ns (0.00%), 46 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __lll_lock_wake
  [ 6] WatcherThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 1013391 ns (0.00%), 53 samples
  [ 0] __x64_sys_futex_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_common

--- 1010030 ns (0.00%), 70 samples
  [ 0] generic_exec_single_[k]
  [ 1] smp_call_function_single_[k]
  [ 2] event_function_call_[k]
  [ 3] _perf_ioctl_[k]
  [ 4] perf_ioctl_[k]
  [ 5] __x64_sys_ioctl_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___ioctl_time64
  [ 9] __restore_rt
  [10] Mandelbrot.mandelbrot
  [11] Mandelbrot.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 992040 ns (0.00%), 89 samples
  [ 0] PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
  [ 1] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 2] PhaseIdealLoop::optimize(PhaseIterGVN&, LoopOptsMode)
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 984360 ns (0.00%), 98 samples
  [ 0] java.lang.Long.getChars
  [ 1] java.lang.StringConcatHelper.prepend
  [ 2] java.lang.StringConcatHelper.prepend
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic

--- 981820 ns (0.00%), 74 samples
  [ 0] __get_user_nocheck_8_[k]
  [ 1] __x64_sys_rt_sigreturn_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __restore_rt
  [ 5] Mandelbrot.mandelbrot
  [ 6] Mandelbrot.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 940830 ns (0.00%), 90 samples
  [ 0] PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
  [ 1] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 2] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 3] PhaseIdealLoop::optimize(PhaseIterGVN&, LoopOptsMode)
  [ 4] Compile::Optimize()
  [ 5] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 6] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 935381 ns (0.00%), 93 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 918880 ns (0.00%), 44 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_common

--- 884860 ns (0.00%), 86 samples
  [ 0] Mandelbrot.innerBenchmarkLoop
  [ 1] Run.measure
  [ 2] Run.doRuns
  [ 3] Run.runBenchmark
  [ 4] Harness.main

--- 882681 ns (0.00%), 87 samples
  [ 0] PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
  [ 1] .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
  [ 2] PhaseChaitin::Register_Allocate()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 874750 ns (0.00%), 53 samples
  [ 0] [vdso]
  [ 1] clock_gettime@GLIBC_2.2.5
  [ 2] WatcherThread::sleep() const
  [ 3] WatcherThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 867950 ns (0.00%), 62 samples
  [ 0] PeriodicTask::real_time_tick(int)
  [ 1] Thread::call_run()
  [ 2] thread_native_entry(Thread*)
  [ 3] start_thread

--- 864250 ns (0.00%), 78 samples
  [ 0] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 1] .annobin__ZN14PhaseIdealLoop18build_and_optimizeEv.start
  [ 2] PhaseIdealLoop::optimize(PhaseIterGVN&, LoopOptsMode)
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 864040 ns (0.00%), 85 samples
  [ 0] java.lang.StringConcatHelper.mix
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 2] java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L
  [ 3] java.lang.invoke.LambdaForm$MH.0x0000000800c08400.invoke
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000800c08800.linkToTargetMethod
  [ 5] Run.printResult
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 843500 ns (0.00%), 46 samples
  [ 0] futex_wait_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_common

--- 808481 ns (0.00%), 46 samples
  [ 0] ___pthread_mutex_unlock
  [ 1] WatcherThread::run()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] start_thread

--- 805910 ns (0.00%), 85 samples
  [ 0] Run.measure
  [ 1] Run.doRuns
  [ 2] Run.runBenchmark
  [ 3] Harness.main

--- 799961 ns (0.00%), 66 samples
  [ 0] file_tty_write.constprop.0_[k]
  [ 1] new_sync_write_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __GI_write
  [ 7] writeBytes
  [ 8] Java_java_io_FileOutputStream_writeBytes
  [ 9] java.io.FileOutputStream.writeBytes
  [10] java.io.FileOutputStream.write
  [11] java.io.BufferedOutputStream.flushBuffer
  [12] java.io.BufferedOutputStream.flush
  [13] java.io.PrintStream.write
  [14] sun.nio.cs.StreamEncoder.writeBytes
  [15] sun.nio.cs.StreamEncoder.implFlushBuffer
  [16] sun.nio.cs.StreamEncoder.flushBuffer
  [17] java.io.OutputStreamWriter.flushBuffer
  [18] java.io.PrintStream.writeln
  [19] java.io.PrintStream.println
  [20] Run.printResult
  [21] Run.measure
  [22] Run.doRuns
  [23] Run.runBenchmark
  [24] Harness.main

--- 797700 ns (0.00%), 80 samples
  [ 0] sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
  [ 1] sun.nio.cs.UTF_8$Encoder.encodeLoop
  [ 2] java.nio.charset.CharsetEncoder.encode
  [ 3] sun.nio.cs.StreamEncoder.implWrite
  [ 4] sun.nio.cs.StreamEncoder.implWrite
  [ 5] sun.nio.cs.StreamEncoder.write
  [ 6] java.io.OutputStreamWriter.write
  [ 7] java.io.BufferedWriter.flushBuffer
  [ 8] java.io.PrintStream.writeln
  [ 9] java.io.PrintStream.println
  [10] Run.printResult
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 797250 ns (0.00%), 77 samples
  [ 0] PhaseChaitin::gather_lrg_masks(bool)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 783842 ns (0.00%), 77 samples
  [ 0] LIR_OpVisitState::visit(LIR_Op*)
  [ 1] LinearScan::compute_local_live_sets()
  [ 2] LinearScan::do_linear_scan()
  [ 3] Compilation::emit_lir()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 782711 ns (0.00%), 67 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]

--- 781320 ns (0.00%), 77 samples
  [ 0] java.io.FileOutputStream.write
  [ 1] java.io.BufferedOutputStream.flushBuffer
  [ 2] java.io.BufferedOutputStream.flush
  [ 3] java.io.PrintStream.write
  [ 4] sun.nio.cs.StreamEncoder.writeBytes
  [ 5] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 6] sun.nio.cs.StreamEncoder.flushBuffer
  [ 7] java.io.OutputStreamWriter.flushBuffer
  [ 8] java.io.PrintStream.writeln
  [ 9] java.io.PrintStream.println
  [10] Run.printResult
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 753540 ns (0.00%), 73 samples
  [ 0] java.lang.Long.getChars
  [ 1] java.lang.StringConcatHelper.prepend
  [ 2] java.lang.StringConcatHelper.prepend
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000800c06c00.invoke
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000800c08400.invoke
  [ 6] java.lang.invoke.LambdaForm$MH.0x0000000800c08800.linkToTargetMethod
  [ 7] Run.printResult
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 752510 ns (0.00%), 53 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] _copy_from_user_[k]
  [ 2] restore_altstack_[k]
  [ 3] __x64_sys_rt_sigreturn_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] Mandelbrot.mandelbrot
  [ 7] Mandelbrot.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 749720 ns (0.00%), 32 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] _copy_from_user_[k]
  [ 2] get_timespec64_[k]
  [ 3] __x64_sys_futex_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __futex_abstimed_wait_common

--- 747850 ns (0.00%), 40 samples
  [ 0] getrusage_[k]
  [ 1] __do_sys_getrusage_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __getrusage
  [ 5] G1ServiceThread::run_task(G1ServiceTask*)
  [ 6] G1ServiceThread::run_service()
  [ 7] .annobin__ZN18ConcurrentGCThread3runEv.start
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 732050 ns (0.00%), 73 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 728261 ns (0.00%), 74 samples
  [ 0] NullCheckEliminator::iterate_one(BlockBegin*)
  [ 1] Optimizer::eliminate_null_checks()
  [ 2] IR::eliminate_null_checks()
  [ 3] .annobin__ZN11Compilation9build_hirEv.part.0.start
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 725280 ns (0.00%), 72 samples
  [ 0] Mandelbrot.mandelbrot
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

--- 724250 ns (0.00%), 35 samples
  [ 0] __hrtimer_init_[k]
  [ 1] hrtimer_init_sleeper_[k]
  [ 2] futex_setup_timer_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_common

--- 710020 ns (0.00%), 69 samples
  [ 0] Mandelbrot.verifyResult
  [ 1] Mandelbrot.innerBenchmarkLoop
  [ 2] Run.measure
  [ 3] Run.doRuns
  [ 4] Run.runBenchmark
  [ 5] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 84302056679   99.27%  8369584  Mandelbrot.mandelbrot
    20746526    0.02%     1455  generic_exec_single_[k]
    12947211    0.02%     1283  Interpreter
    11991334    0.01%      781  queue_work_on_[k]
     8679472    0.01%      526  _raw_spin_unlock_irqrestore_[k]
     7693261    0.01%      406  clock_gettime@GLIBC_2.2.5
     5597721    0.01%      361  syscall_enter_from_user_mode_[k]
     5456402    0.01%      395  restore_fpregs_from_user_[k]
     5450472    0.01%      204  __futex_abstimed_wait_common
     5387941    0.01%      309  [vdso]
     5353820    0.01%      354  copy_user_generic_string_[k]
     4936581    0.01%      405  __tls_get_addr
     4599731    0.01%      461  Run.measure
     4197391    0.00%      395  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     4116362    0.00%      227  StatSamplerTask::task()
     3664750    0.00%      360  sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
     3471152    0.00%      340  java.lang.StringConcatHelper.prepend
     3236340    0.00%      322  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     3161251    0.00%      144  WatcherThread::sleep() const
     2985841    0.00%      184  os::PlatformMonitor::wait(long)
     2945600    0.00%      131  Monitor::wait_without_safepoint_check(long)
     2935300    0.00%      289  [no_Java_frame]
     2915682    0.00%      282  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     2875632    0.00%      151  .annobin__ZN15PerfLongVariant6sampleEv.start
     2844151    0.00%      321  Run.doRuns
     2720962    0.00%      154  __GI___pthread_cond_timedwait
     2628453    0.00%      194  PeriodicTask::real_time_tick(int)
     2485891    0.00%      141  os::elapsed_counter()
     2482150    0.00%      246  LinearScan::build_intervals()
     2290361    0.00%       91  __GI___pthread_disable_asynccancel
     2124900    0.00%      212  sun.nio.cs.StreamEncoder.implWrite
     2120610    0.00%      209  DebugInformationRecorder::find_sharable_decode_offset(int)
     2101200    0.00%      205  java.lang.StringConcatHelper.mix
     2071781    0.00%      204  java.lang.Long.getChars
     2034562    0.00%      201  LIR_OpVisitState::visit(LIR_Op*)
     2027181    0.00%      200  LinearScan::allocate_registers()
     2010680    0.00%      201  _invokeBasic
     2006890    0.00%       99  __schedule_[k]
     1982810    0.00%       96  Mutex::lock_without_safepoint_check()
     1907721    0.00%      189  java.lang.invoke.LambdaForm$MH.0x0000000800c08400.invoke
     1868390    0.00%      141  __get_user_nocheck_8_[k]
     1860620    0.00%      181  Mandelbrot.innerBenchmarkLoop
     1841210    0.00%       99  futex_wake_[k]
     1824730    0.00%      179  LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*, IntervalWalker*)
     1767100    0.00%      129  __GI___pthread_mutex_unlock_usercnt
     1758350    0.00%      174  I2C/C2I adapters(0xb)
     1745910    0.00%      137  VMError::is_error_reported()
     1736780    0.00%      172  .annobin__ZN16LinearScanWalker14alloc_free_regEP8Interval.start
     1709850    0.00%      166  ciObjectFactory::get_metadata(Metadata*)
     1577221    0.00%      148  vmSymbols::find_sid(Symbol const*)
     1576790    0.00%      147  SymbolTable::lookup_shared(char const*, int, unsigned int)
     1520630    0.00%      150  Run.printResult
     1487291    0.00%      148  java.io.PrintStream.writeln
     1476101    0.00%      119  file_tty_write.constprop.0_[k]
     1456281    0.00%       78  os::javaTimeNanos()
     1439031    0.00%      142  sun.nio.cs.StreamEncoder.write
     1424831    0.00%       87  ___pthread_mutex_unlock
     1350780    0.00%      135  LinearScan::compute_local_live_sets()
     1322800    0.00%       60  __pthread_mutex_cond_lock
     1298960    0.00%      129  jdk.internal.org.objectweb.asm.Frame.execute
     1267610    0.00%      122  ValueStack::values_do(ValueVisitor*)
     1253741    0.00%       90  ___pthread_mutex_lock
     1238870    0.00%       68  __audit_syscall_entry_[k]
     1223260    0.00%      120  java.lang.invoke.MethodHandle.invokeBasic
     1219810    0.00%      123  java.nio.charset.CharsetEncoder.encode
     1212480    0.00%      120  java.lang.String.getChars
     1198170    0.00%      117  java.io.FileOutputStream.write
     1193000    0.00%      118  java.nio.Buffer.<init>
     1167560    0.00%      111  Dictionary::find(unsigned int, Symbol*, Handle)
     1165150    0.00%      115  sun.nio.cs.StreamEncoder.writeBytes
     1162800    0.00%      113  Mandelbrot.verifyResult
     1159620    0.00%      116  GraphBuilder::iterate_bytecodes_for_block(int)
     1151001    0.00%      111  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
     1148480    0.00%      103  PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
     1136640    0.00%      112  ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int)
     1129191    0.00%      113  java.lang.StringCoding.implEncodeAsciiArray
     1121001    0.00%       61  __x64_sys_futex_[k]
     1115370    0.00%      110  LinearScanWalker::free_collect_inactive_fixed(Interval*)
     1114061    0.00%      112  java.io.PrintStream.println
     1112310    0.00%       53  __condvar_dec_grefs
     1094960    0.00%      101  PhaseChaitin::gather_lrg_masks(bool)
     1094560    0.00%      104  InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const
     1066691    0.00%       79  _raw_spin_unlock_irq_[k]
     1062390    0.00%       74  exit_to_user_mode_loop_[k]
     1052791    0.00%      104  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
     1046421    0.00%      103  java.io.PrintStream.write
     1045720    0.00%       87  clear_page_rep_[k]
     1045450    0.00%      103  jdk.internal.misc.Unsafe.allocateUninitializedArray0
     1043300    0.00%      103  java.lang.Long.stringSize
     1043200    0.00%      100  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
     1036590    0.00%       99  jni_GetObjectField
     1015140    0.00%      101  java.io.BufferedWriter.write
     1012190    0.00%       99  java.lang.StringConcatHelper.newArray
     1009870    0.00%       90  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
     1004470    0.00%       99  jdk.internal.misc.Unsafe.allocateUninitializedArray
     1003011    0.00%       99  java.lang.String.getBytes
      995320    0.00%       79  process_echoes_[k]
      983330    0.00%       97  java.lang.String.length
      979882    0.00%       95  jni_GetByteArrayRegion
      967510    0.00%       96  Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode)
      965130    0.00%       95  java.lang.String.coder
      962630    0.00%       95  java.nio.CharBuffer.arrayOffset
      960590    0.00%       95  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
      948591    0.00%       91  ConstantPool::klass_at_impl(constantPoolHandle const&, int, JavaThread*)
      940021    0.00%       79  new_sync_write_[k]
      939071    0.00%       83  __vfprintf_internal
      923410    0.00%       79  do_user_addr_fault_[k]
      918960    0.00%       88  __memmove_avx_unaligned
      914320    0.00%       66  __get_user_nocheck_4_[k]
      904180    0.00%       88  check_bounds(int, int, int, JavaThread*)
      896880    0.00%       84  __GI___ioctl_time64
      889160    0.00%       89  java.nio.ByteBuffer.position
      872870    0.00%       48  futex_wait_[k]
      861130    0.00%       84  jdk.internal.org.objectweb.asm.Frame.push
      858270    0.00%       85  java.lang.String.<init>
      856840    0.00%       81  PhaseLive::compute(unsigned int)
      854980    0.00%       80  PhaseIdealLoop::Dominators()
      853640    0.00%       48  getrusage_[k]
      834820    0.00%       82  DebugInformationRecorder::describe_scope(int, methodHandle const&, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*)
      830051    0.00%       82  java.io.FileOutputStream.writeBytes
      823200    0.00%       82  .annobin__ZN8Interval9add_rangeEii.start
      821440    0.00%       81  java.nio.Buffer.position
      817740    0.00%       80  java.lang.String.isLatin1
      816170    0.00%       81  sun.nio.cs.UTF_8$Encoder.encodeLoop
      814530    0.00%       81  java.lang.StringConcatHelper.newString
      814150    0.00%       81  java.nio.HeapCharBuffer.<init>
      813550    0.00%       82  java.lang.StringLatin1.inflate
      791721    0.00%       82  __GI___libc_malloc
      790800    0.00%       78  sun.nio.cs.UTF_8.updatePositions
      789390    0.00%       77  .annobin__ZN12methodHandleD2Ev.start
      777790    0.00%       77  java.nio.ByteBuffer.arrayOffset
      773870    0.00%       75  TypeArrayKlass::allocate_common(int, bool, JavaThread*)
      772490    0.00%       73  __memset_avx2_unaligned_erms
      768881    0.00%       61  n_tty_write_[k]
      758651    0.00%       77  NullCheckEliminator::iterate_one(BlockBegin*)
      753040    0.00%       75  java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke
      752870    0.00%       60  inode_security_[k]
      749790    0.00%       73  jni_GetArrayLength
      729670    0.00%       72  Java_java_io_FileOutputStream_writeBytes
      727830    0.00%       72  LIR_OpVisitState::append(LIR_OprDesc*&, LIR_OpVisitState::OprMode)
      724250    0.00%       35  __hrtimer_init_[k]
      713200    0.00%       69  java.nio.CharBuffer.wrap
      711830    0.00%       71  java.io.BufferedWriter.flushBuffer
      705160    0.00%       53  rmqueue_[k]
      703200    0.00%       68  jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn
      702620    0.00%       43  G1Policy::use_adaptive_young_list_length() const
      700340    0.00%       37  G1ServiceThread::sleep_before_next_cycle() [clone .part.0]
      694190    0.00%       68  .annobin__ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm2646116ES1_EELNS_11BarrierTypeE0ELm2646116EE18oop_access_barrierEPvP7oopDesc.start
      694080    0.00%       68  JavaThread::check_and_handle_async_exceptions()
      693082    0.00%       68  CodeCache::find_blob(void*)
      691960    0.00%       69  java.lang.StringConcatHelper.newArrayWithSuffix
      690420    0.00%       54  tty_paranoia_check_[k]
      689610    0.00%       54  __x64_sys_rt_sigreturn_[k]
      689530    0.00%       69  jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes
      687300    0.00%       41  .annobin__ZN20G1RemSetSamplingTask7executeEv.start
      683100    0.00%       68  java.nio.CharBuffer.position
      676000    0.00%       67  LIR_OpVisitState::append(LIR_OprDesc*&, LIR_OpVisitState::OprMode) [clone .constprop.0]
      673580    0.00%       66  java.io.BufferedOutputStream.write
      668881    0.00%       66  java.lang.System$2.encodeASCII
      663980    0.00%       64  AdapterHandlerLibrary::get_adapter(methodHandle const&)
      658721    0.00%       64  GrowableArrayWithAllocator<int, GrowableArray<int> >::grow(int)
      658050    0.00%       65  java.io.BufferedOutputStream.flush
      653830    0.00%       58  PhaseIdealLoop::build_loop_tree()
      653490    0.00%       64  __memmove_avx_unaligned_erms
      649090    0.00%       64  IntervalWalker::walk_to(int)
      648080    0.00%       64  java.lang.String.checkBoundsOffCount
      639200    0.00%       41  do_syscall_64_[k]
      637530    0.00%       64  java.lang.invoke.MethodType.insertParameterTypes
      631420    0.00%       61  IndexSetIterator::advance_and_next()
      629850    0.00%       62  InterpreterRuntime::ldc(JavaThread*, bool)
      628510    0.00%       62  java.lang.String.checkBoundsBeginEnd
      627030    0.00%       63  GraphBuilder::append_with_bci(Instruction*, int)
      626750    0.00%       59  java.lang.invoke.LambdaForm.useCount
      625020    0.00%       61  java.lang.invoke.MethodType.checkPtypes
      618440    0.00%       62  ValueMap::find_insert(Instruction*)
      613160    0.00%       52  vfs_write_[k]
      609970    0.00%       57  PhaseIterGVN::transform_old(Node*)
      604100    0.00%       48  process_output_block_[k]
      603620    0.00%       60  java.lang.AbstractStringBuilder.append
      598910    0.00%       59  jdk.internal.org.objectweb.asm.SymbolTable.hash
      593850    0.00%       58  CodeHeap::find_blob_unsafe(void*) const
      582010    0.00%       34  __getrusage
      580990    0.00%       58  GraphBuilder::invoke(Bytecodes::Code)
      580681    0.00%       57  java.lang.invoke.LambdaForm$MH.0x0000000800c08800.linkToTargetMethod
      578010    0.00%       57  Relocation::pd_call_destination(unsigned char*)
      571490    0.00%       24  futex_hash_[k]
      568570    0.00%       57  java.lang.invoke.InvokerBytecodeGenerator.addMethod
      564450    0.00%       57  BlockBegin::try_merge(ValueStack*)
      563221    0.00%       56  java.nio.ByteBuffer.array
      562730    0.00%       55  java.nio.CharBuffer.limit
      562700    0.00%       56  java.nio.CharBuffer.<init>
      559380    0.00%       54  java_lang_ref_Reference::is_referent_field(oopDesc*, long)
      558130    0.00%       48  __fget_light_[k]
      556590    0.00%       58  ___pthread_mutex_trylock
      552080    0.00%       54  java.lang.StringLatin1.hashCode
      551140    0.00%       54  java.nio.ByteBuffer.flip
      545240    0.00%       52  PhaseChaitin::post_allocate_copy_removal()
      544981    0.00%       54  java.io.Writer.write
      544500    0.00%       54  jdk.internal.org.objectweb.asm.Frame.pop
      541950    0.00%       41  tty_buffer_space_avail_[k]
