--- Execution profile ---
Total samples       : 10660293
GC_active           : 2 (0.00%)
unknown_Java        : 6595 (0.06%)
not_walkable_Java   : 1529 (0.01%)
deoptimization      : 160 (0.00%)

--- 34539604352 ns (31.63%), 3429254 samples
  [ 0] som.IdentitySet.lambda$contains$0
  [ 1] som.IdentitySet$$Lambda$10.0x0000000800c09b40.test
  [ 2] som.Vector.hasSome
  [ 3] som.Set.hasSome
  [ 4] som.IdentitySet.contains
  [ 5] som.Set.add
  [ 6] havlak.SimpleLoop.addChildLoop
  [ 7] havlak.SimpleLoop.setParent
  [ 8] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 9] havlak.LoopStructureGraph$$Lambda$12.0x0000000800c09f90.apply
  [10] som.Vector.forEach
  [11] havlak.LoopStructureGraph.calculateNestingLevel
  [12] havlak.LoopTesterApp.main
  [13] Havlak.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 9312419885 ns (8.53%), 824908 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 7816330180 ns (7.16%), 775212 samples
  [ 0] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 1] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 5065559656 ns (4.64%), 502387 samples
  [ 0] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 1] havlak.HavlakLoopFinder$$Lambda$3.0x0000000800c08a28.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.processEdges
  [ 4] havlak.HavlakLoopFinder.identifyEdges
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 4716942990 ns (4.32%), 467404 samples
  [ 0] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 1] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.addDummyLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2424372100 ns (2.22%), 240566 samples
  [ 0] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 1] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 2] som.Vector.forEach
  [ 3] som.Set.forEach
  [ 4] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2203193074 ns (2.02%), 217480 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2181916633 ns (2.00%), 216428 samples
  [ 0] havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply
  [ 1] som.Vector.forEach
  [ 2] havlak.HavlakLoopFinder.stepD
  [ 3] havlak.HavlakLoopFinder.findLoops
  [ 4] havlak.LoopTesterApp.findLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1620660971 ns (1.48%), 160045 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.addDummyLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1275087687 ns (1.17%), 111524 samples
  [ 0] void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
  [ 1] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 2] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 3] G1ParEvacuateFollowersClosure::do_void()
  [ 4] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 5] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 1225504174 ns (1.12%), 121801 samples
  [ 0] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 1] havlak.HavlakLoopFinder$$Lambda$3.0x0000000800c08a28.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.processEdges
  [ 4] havlak.HavlakLoopFinder.identifyEdges
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 944483438 ns (0.86%), 93663 samples
  [ 0] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 1] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 2] som.Vector.forEach
  [ 3] som.Set.forEach
  [ 4] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 820571244 ns (0.75%), 81404 samples
  [ 0] havlak.LoopStructureGraph$$Lambda$12.0x0000000800c09f90.apply
  [ 1] som.Vector.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevel
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 770356817 ns (0.71%), 76313 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 770212398 ns (0.71%), 76504 samples
  [ 0] som.Dictionary.transferEntries
  [ 1] som.Dictionary.resize
  [ 2] som.Dictionary.atPut
  [ 3] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 4] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.initAllNodes
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 703881267 ns (0.64%), 69371 samples
  [ 0] havlak.HavlakLoopFinder.stepD
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 568018109 ns (0.52%), 56409 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 5] havlak.HavlakLoopFinder$$Lambda$3.0x0000000800c08a28.apply
  [ 6] som.Vector.forEach
  [ 7] havlak.HavlakLoopFinder.processEdges
  [ 8] havlak.HavlakLoopFinder.identifyEdges
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 557066926 ns (0.51%), 55126 samples
  [ 0] som.Vector.<init>
  [ 1] som.Set.<init>
  [ 2] som.Set.<init>
  [ 3] som.IdentitySet.<init>
  [ 4] havlak.SimpleLoop.<init>
  [ 5] havlak.LoopStructureGraph.createNewLoop
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 521668498 ns (0.48%), 51776 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 5] havlak.HavlakLoopFinder$$Lambda$3.0x0000000800c08a28.apply
  [ 6] som.Vector.forEach
  [ 7] havlak.HavlakLoopFinder.processEdges
  [ 8] havlak.HavlakLoopFinder.identifyEdges
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 412879704 ns (0.38%), 40982 samples
  [ 0] som.Vector.forEach
  [ 1] som.Set.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 3] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 4] havlak.LoopStructureGraph$$Lambda$13.0x0000000800c0a1b8.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 8] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 9] havlak.LoopStructureGraph$$Lambda$13.0x0000000800c0a1b8.apply
  [10] som.Vector.forEach
  [11] som.Set.forEach
  [12] havlak.LoopStructureGraph.calculateNestingLevelRec
  [13] havlak.LoopStructureGraph.calculateNestingLevel
  [14] havlak.LoopTesterApp.main
  [15] Havlak.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 390765058 ns (0.36%), 36801 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 389397119 ns (0.36%), 38808 samples
  [ 0] havlak.HavlakLoopFinder.doDFS
  [ 1] havlak.HavlakLoopFinder.doDFS
  [ 2] havlak.HavlakLoopFinder.doDFS
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.addDummyLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 377736084 ns (0.35%), 37593 samples
  [ 0] havlak.HavlakLoopFinder.doDFS
  [ 1] havlak.HavlakLoopFinder.doDFS
  [ 2] havlak.HavlakLoopFinder.doDFS
  [ 3] havlak.HavlakLoopFinder.doDFS
  [ 4] havlak.HavlakLoopFinder.doDFS
  [ 5] havlak.HavlakLoopFinder.initAllNodes
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.addDummyLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 377376194 ns (0.35%), 37503 samples
  [ 0] havlak.HavlakLoopFinder.doDFS
  [ 1] havlak.HavlakLoopFinder.initAllNodes
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.addDummyLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 367453247 ns (0.34%), 36200 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.addDummyLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 359958951 ns (0.33%), 35719 samples
  [ 0] som.Vector.forEach
  [ 1] som.Set.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 3] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 4] havlak.LoopStructureGraph$$Lambda$13.0x0000000800c0a1b8.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 8] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 9] havlak.LoopStructureGraph$$Lambda$13.0x0000000800c0a1b8.apply
  [10] som.Vector.forEach
  [11] som.Set.forEach
  [12] havlak.LoopStructureGraph.calculateNestingLevelRec
  [13] havlak.LoopStructureGraph.calculateNestingLevel
  [14] havlak.LoopTesterApp.main
  [15] Havlak.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 355271504 ns (0.33%), 35104 samples
  [ 0] havlak.UnionFindNode.findSet
  [ 1] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 2] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 3] som.Vector.forEach
  [ 4] som.Set.forEach
  [ 5] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 341113752 ns (0.31%), 33766 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 339602258 ns (0.31%), 33565 samples
  [ 0] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 1] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 2] som.Vector.forEach
  [ 3] som.Set.forEach
  [ 4] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 336372034 ns (0.31%), 33455 samples
  [ 0] havlak.UnionFindNode.union
  [ 1] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 2] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.setLoopAttributes
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 326596759 ns (0.30%), 32340 samples
  [ 0] som.Vector.<init>
  [ 1] som.Set.<init>
  [ 2] som.Set.<init>
  [ 3] som.IdentitySet.<init>
  [ 4] havlak.SimpleLoop.<init>
  [ 5] havlak.LoopStructureGraph.createNewLoop
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.addDummyLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 325886531 ns (0.30%), 32437 samples
  [ 0] havlak.HavlakLoopFinder.doDFS
  [ 1] havlak.HavlakLoopFinder.doDFS
  [ 2] havlak.HavlakLoopFinder.doDFS
  [ 3] havlak.HavlakLoopFinder.doDFS
  [ 4] havlak.HavlakLoopFinder.doDFS
  [ 5] havlak.HavlakLoopFinder.doDFS
  [ 6] havlak.HavlakLoopFinder.doDFS
  [ 7] havlak.HavlakLoopFinder.initAllNodes
  [ 8] havlak.HavlakLoopFinder.findLoops
  [ 9] havlak.LoopTesterApp.findLoops
  [10] havlak.LoopTesterApp.addDummyLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 311968429 ns (0.29%), 30805 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.addDummyLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 305757576 ns (0.28%), 30361 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.IdentitySet.contains
  [ 3] som.Set.add
  [ 4] havlak.SimpleLoop.addChildLoop
  [ 5] havlak.SimpleLoop.setParent
  [ 6] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 7] havlak.LoopStructureGraph$$Lambda$12.0x0000000800c09f90.apply
  [ 8] som.Vector.forEach
  [ 9] havlak.LoopStructureGraph.calculateNestingLevel
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 305215489 ns (0.28%), 30169 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 285163325 ns (0.26%), 28094 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 275995262 ns (0.25%), 24255 samples
  [ 0] void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] .annobin__ZN21G1EvacuateRegionsTask21evacuate_live_objectsEP20G1ParScanThreadStatej.start
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 256482064 ns (0.23%), 25351 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 2] havlak.HavlakLoopFinder$$Lambda$3.0x0000000800c08a28.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.processEdges
  [ 5] havlak.HavlakLoopFinder.identifyEdges
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 240242192 ns (0.22%), 23847 samples
  [ 0] som.Vector.<init>
  [ 1] som.Set.<init>
  [ 2] som.Set.<init>
  [ 3] havlak.HavlakLoopFinder.findLoops
  [ 4] havlak.LoopTesterApp.findLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 224237658 ns (0.21%), 22243 samples
  [ 0] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 1] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 223945236 ns (0.21%), 22231 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.IdentitySet.contains
  [ 3] som.Set.add
  [ 4] havlak.SimpleLoop.addChildLoop
  [ 5] havlak.SimpleLoop.setParent
  [ 6] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 7] havlak.LoopStructureGraph$$Lambda$12.0x0000000800c09f90.apply
  [ 8] som.Vector.forEach
  [ 9] havlak.LoopStructureGraph.calculateNestingLevel
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 221187816 ns (0.20%), 21846 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.addDummyLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 207046661 ns (0.19%), 20464 samples
  [ 0] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 1] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 2] som.Vector.forEach
  [ 3] som.Set.forEach
  [ 4] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 203124438 ns (0.19%), 20173 samples
  [ 0] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 1] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 202477984 ns (0.19%), 19963 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepD$6
  [ 4] havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.stepD
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 200990010 ns (0.18%), 19918 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.addDummyLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 181295235 ns (0.17%), 18014 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 170233348 ns (0.16%), 16804 samples
  [ 0] havlak.UnionFindNode.findSet
  [ 1] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 2] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 3] som.Vector.forEach
  [ 4] som.Set.forEach
  [ 5] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.addDummyLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 159340590 ns (0.15%), 15704 samples
  [ 0] som.Vector.forEach
  [ 1] havlak.HavlakLoopFinder.stepD
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 157200117 ns (0.14%), 15473 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.HavlakLoopFinder.<init>
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.addDummyLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 150490927 ns (0.14%), 14827 samples
  [ 0] havlak.HavlakLoopFinder.stepD
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.addDummyLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 149209395 ns (0.14%), 14839 samples
  [ 0] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 1] som.Vector.forEach
  [ 2] havlak.HavlakLoopFinder.setLoopAttributes
  [ 3] havlak.HavlakLoopFinder.findLoops
  [ 4] havlak.LoopTesterApp.findLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 140727852 ns (0.13%), 13874 samples
  [ 0] som.Vector.at
  [ 1] havlak.HavlakLoopFinder.stepD
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 134313858 ns (0.12%), 13377 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.addDummyLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 128023460 ns (0.12%), 12746 samples
  [ 0] havlak.UnionFindNode.union
  [ 1] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 2] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.setLoopAttributes
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 127301917 ns (0.12%), 12595 samples
  [ 0] som.Dictionary.insertBucketEntry
  [ 1] som.Dictionary.atPut
  [ 2] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 3] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 4] som.Vector.forEach
  [ 5] havlak.HavlakLoopFinder.initAllNodes
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 123718484 ns (0.11%), 12203 samples
  [ 0] havlak.SimpleLoop.addNode
  [ 1] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 2] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.setLoopAttributes
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 122286536 ns (0.11%), 12066 samples
  [ 0] som.Vector.forEach
  [ 1] havlak.HavlakLoopFinder.stepD
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 122047674 ns (0.11%), 12082 samples
  [ 0] som.Vector.append
  [ 1] som.Set.add
  [ 2] havlak.SimpleLoop.addNode
  [ 3] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 4] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.setLoopAttributes
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 113175971 ns (0.10%), 11272 samples
  [ 0] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 1] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 5] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 6] som.Vector.forEach
  [ 7] som.Set.forEach
  [ 8] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 112455732 ns (0.10%), 11073 samples
  [ 0] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 1] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.initAllNodes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.addDummyLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 112342429 ns (0.10%), 11188 samples
  [ 0] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 1] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 5] havlak.HavlakLoopFinder$$Lambda$3.0x0000000800c08a28.apply
  [ 6] som.Vector.forEach
  [ 7] havlak.HavlakLoopFinder.processEdges
  [ 8] havlak.HavlakLoopFinder.identifyEdges
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.addDummyLoops
  [12] havlak.LoopTesterApp.main
  [13] Havlak.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 109147273 ns (0.10%), 10781 samples
  [ 0] som.Vector.at
  [ 1] havlak.HavlakLoopFinder.stepD
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.addDummyLoops
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 103236139 ns (0.09%), 10209 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepD$6
  [ 4] havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.stepD
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.addDummyLoops
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 101996069 ns (0.09%), 10120 samples
  [ 0] havlak.HavlakLoopFinder.lambda$processEdges$1
  [ 1] havlak.HavlakLoopFinder$$Lambda$3.0x0000000800c08a28.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.processEdges
  [ 4] havlak.HavlakLoopFinder.identifyEdges
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 96709443 ns (0.09%), 9526 samples
  [ 0] som.Vector.<init>
  [ 1] som.Set.<init>
  [ 2] som.Set.<init>
  [ 3] havlak.HavlakLoopFinder.findLoops
  [ 4] havlak.LoopTesterApp.findLoops
  [ 5] havlak.LoopTesterApp.addDummyLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 96381797 ns (0.09%), 9563 samples
  [ 0] havlak.SimpleLoop.setParent
  [ 1] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 2] havlak.LoopStructureGraph$$Lambda$12.0x0000000800c09f90.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.LoopStructureGraph.calculateNestingLevel
  [ 5] havlak.LoopTesterApp.main
  [ 6] Havlak.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 94628109 ns (0.09%), 9374 samples
  [ 0] som.Vector.append
  [ 1] som.Set.add
  [ 2] havlak.SimpleLoop.addNode
  [ 3] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 4] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.setLoopAttributes
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.addDummyLoops
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 94589503 ns (0.09%), 9353 samples
  [ 0] som.Vector.<init>
  [ 1] som.Set.<init>
  [ 2] som.Set.<init>
  [ 3] som.IdentitySet.<init>
  [ 4] havlak.SimpleLoop.<init>
  [ 5] havlak.LoopStructureGraph.createNewLoop
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 92790587 ns (0.08%), 9245 samples
  [ 0] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 1] som.Vector.forEach
  [ 2] havlak.HavlakLoopFinder.setLoopAttributes
  [ 3] havlak.HavlakLoopFinder.findLoops
  [ 4] havlak.LoopTesterApp.findLoops
  [ 5] havlak.LoopTesterApp.addDummyLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 91343496 ns (0.08%), 9082 samples
  [ 0] som.Vector.forEach
  [ 1] som.Set.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 3] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 4] havlak.LoopStructureGraph$$Lambda$13.0x0000000800c0a1b8.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.LoopStructureGraph.calculateNestingLevelRec
  [ 8] havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
  [ 9] havlak.LoopStructureGraph$$Lambda$13.0x0000000800c0a1b8.apply
  [10] som.Vector.forEach
  [11] som.Set.forEach
  [12] havlak.LoopStructureGraph.calculateNestingLevelRec
  [13] havlak.LoopStructureGraph.calculateNestingLevel
  [14] havlak.LoopTesterApp.main
  [15] Havlak.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 91169699 ns (0.08%), 9000 samples
  [ 0] havlak.HavlakLoopFinder.initAllNodes
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 89304001 ns (0.08%), 8866 samples
  [ 0] som.Dictionary.removeAll
  [ 1] havlak.HavlakLoopFinder.findLoops
  [ 2] havlak.LoopTesterApp.findLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 88103205 ns (0.08%), 8697 samples
  [ 0] som.Dictionary.insertBucketEntry
  [ 1] som.Dictionary.atPut
  [ 2] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 3] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 4] som.Vector.forEach
  [ 5] havlak.HavlakLoopFinder.initAllNodes
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.addDummyLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 86567867 ns (0.08%), 8546 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepD$6
  [ 4] havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.stepD
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 85882168 ns (0.08%), 8532 samples
  [ 0] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 1] havlak.LoopStructureGraph$$Lambda$12.0x0000000800c09f90.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.LoopStructureGraph.calculateNestingLevel
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 85449458 ns (0.08%), 8330 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 81333738 ns (0.07%), 8078 samples
  [ 0] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 1] som.Vector.forEach
  [ 2] som.Set.forEach
  [ 3] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 79935293 ns (0.07%), 7954 samples
  [ 0] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 1] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 2] som.Set.contains
  [ 3] som.Set.add
  [ 4] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 5] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 6] som.Vector.forEach
  [ 7] som.Set.forEach
  [ 8] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 9] havlak.HavlakLoopFinder.findLoops
  [10] havlak.LoopTesterApp.findLoops
  [11] havlak.LoopTesterApp.addDummyLoops
  [12] havlak.LoopTesterApp.main
  [13] Havlak.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 79107048 ns (0.07%), 7831 samples
  [ 0] havlak.SimpleLoop.addNode
  [ 1] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 2] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.setLoopAttributes
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.addDummyLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 78920879 ns (0.07%), 7761 samples
  [ 0] som.Vector.append
  [ 1] havlak.HavlakLoopFinder.lambda$stepD$6
  [ 2] havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply
  [ 3] som.Vector.forEach
  [ 4] havlak.HavlakLoopFinder.stepD
  [ 5] havlak.HavlakLoopFinder.findLoops
  [ 6] havlak.LoopTesterApp.findLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 78003641 ns (0.07%), 7705 samples
  [ 0] havlak.UnionFindNode.findSet
  [ 1] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 2] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 3] som.Vector.forEach
  [ 4] som.Set.forEach
  [ 5] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 77703603 ns (0.07%), 7722 samples
  [ 0] havlak.HavlakLoopFinder$$Lambda$3.0x0000000800c08a28.apply
  [ 1] som.Vector.forEach
  [ 2] havlak.HavlakLoopFinder.processEdges
  [ 3] havlak.HavlakLoopFinder.identifyEdges
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 77276746 ns (0.07%), 7666 samples
  [ 0] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 1] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.setLoopAttributes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.main
  [ 7] Havlak.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 74222432 ns (0.07%), 7332 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.addDummyLoops
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 74114686 ns (0.07%), 7342 samples
  [ 0] havlak.HavlakLoopFinder.findLoops
  [ 1] havlak.LoopTesterApp.findLoops
  [ 2] havlak.LoopTesterApp.main
  [ 3] Havlak.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 73550132 ns (0.07%), 6346 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1RemSetScanState::G1ClearCardTableTask::do_work(unsigned int)
  [ 2] G1BatchedGangTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 72663167 ns (0.07%), 7178 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.IdentitySet.contains
  [ 3] som.Set.add
  [ 4] havlak.SimpleLoop.<init>
  [ 5] havlak.LoopStructureGraph.createNewLoop
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 72521394 ns (0.07%), 7181 samples
  [ 0] som.Dictionary.insertBucketEntry
  [ 1] som.Dictionary.atPut
  [ 2] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 3] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 4] som.Vector.forEach
  [ 5] havlak.HavlakLoopFinder.initAllNodes
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 72397806 ns (0.07%), 7190 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.IdentitySet.contains
  [ 3] som.Set.add
  [ 4] havlak.SimpleLoop.addChildLoop
  [ 5] havlak.SimpleLoop.setParent
  [ 6] havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
  [ 7] havlak.LoopStructureGraph$$Lambda$12.0x0000000800c09f90.apply
  [ 8] som.Vector.forEach
  [ 9] havlak.LoopStructureGraph.calculateNestingLevel
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 71794774 ns (0.07%), 7113 samples
  [ 0] havlak.SimpleLoop.<init>
  [ 1] havlak.LoopStructureGraph.createNewLoop
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 71753724 ns (0.07%), 7091 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 4] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 8] havlak.HavlakLoopFinder.findLoops
  [ 9] havlak.LoopTesterApp.findLoops
  [10] havlak.LoopTesterApp.main
  [11] Havlak.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 71744359 ns (0.07%), 4202 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] .annobin__ZN23G1PrepareEvacuationTask4workEj.start
  [ 2] GangWorker::loop()
  [ 3] .annobin__ZN19WorkGangBarrierSyncC2Ev.start
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 71715077 ns (0.07%), 7086 samples
  [ 0] som.Vector.forEach
  [ 1] havlak.HavlakLoopFinder.initAllNodes
  [ 2] havlak.HavlakLoopFinder.findLoops
  [ 3] havlak.LoopTesterApp.findLoops
  [ 4] havlak.LoopTesterApp.main
  [ 5] Havlak.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 70901015 ns (0.06%), 7028 samples
  [ 0] itable stub
  [ 1] som.Vector.forEach
  [ 2] havlak.LoopStructureGraph.calculateNestingLevel
  [ 3] havlak.LoopTesterApp.main
  [ 4] Havlak.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 66029351 ns (0.06%), 6568 samples
  [ 0] havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
  [ 1] havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
  [ 2] som.Vector.forEach
  [ 3] havlak.HavlakLoopFinder.setLoopAttributes
  [ 4] havlak.HavlakLoopFinder.findLoops
  [ 5] havlak.LoopTesterApp.findLoops
  [ 6] havlak.LoopTesterApp.addDummyLoops
  [ 7] havlak.LoopTesterApp.main
  [ 8] Havlak.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 65810169 ns (0.06%), 6551 samples
  [ 0] som.Dictionary.transferEntries
  [ 1] som.Dictionary.resize
  [ 2] som.Dictionary.atPut
  [ 3] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 4] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.initAllNodes
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 65640500 ns (0.06%), 6485 samples
  [ 0] som.Vector.hasSome
  [ 1] som.Set.hasSome
  [ 2] som.IdentitySet.contains
  [ 3] som.Set.add
  [ 4] havlak.SimpleLoop.<init>
  [ 5] havlak.LoopStructureGraph.createNewLoop
  [ 6] havlak.HavlakLoopFinder.findLoops
  [ 7] havlak.LoopTesterApp.findLoops
  [ 8] havlak.LoopTesterApp.main
  [ 9] Havlak.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 65602110 ns (0.06%), 6519 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] havlak.UnionFindNode.findSet
  [ 3] havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  [ 4] havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
  [ 5] som.Vector.forEach
  [ 6] som.Set.forEach
  [ 7] havlak.HavlakLoopFinder.stepEProcessNonBackPreds
  [ 8] havlak.HavlakLoopFinder.findLoops
  [ 9] havlak.LoopTesterApp.findLoops
  [10] havlak.LoopTesterApp.addDummyLoops
  [11] havlak.LoopTesterApp.main
  [12] Havlak.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 65216719 ns (0.06%), 6482 samples
  [ 0] som.Dictionary.transferEntries
  [ 1] som.Dictionary.resize
  [ 2] som.Dictionary.atPut
  [ 3] havlak.HavlakLoopFinder.lambda$initAllNodes$0
  [ 4] havlak.HavlakLoopFinder$$Lambda$2.0x0000000800c08800.apply
  [ 5] som.Vector.forEach
  [ 6] havlak.HavlakLoopFinder.initAllNodes
  [ 7] havlak.HavlakLoopFinder.findLoops
  [ 8] havlak.LoopTesterApp.findLoops
  [ 9] havlak.LoopTesterApp.main
  [10] Havlak.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 34600780549   31.69%  3435322  som.IdentitySet.lambda$contains$0
 13087910194   11.99%  1297540  havlak.HavlakLoopFinder.lambda$initAllNodes$0
  9715085674    8.90%   862801  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  6824950110    6.25%   677583  havlak.HavlakLoopFinder.doDFS
  6445227674    5.90%   639500  havlak.HavlakLoopFinder.lambda$processEdges$1
  5564175866    5.10%   549450  havlak.HavlakLoopFinder.findLoops
  4108098325    3.76%   407384  havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4
  3648541324    3.34%   360909  som.Vector.append
  2474011735    2.27%   245490  som.Vector.hasSome
  2375377704    2.18%   234739  som.Vector.<init>
  2289034218    2.10%   227053  havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply
  2062635705    1.89%   204324  som.Vector.forEach
  1611033242    1.48%   141338  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
  1055971080    0.97%   104928  som.Dictionary.transferEntries
  1028264943    0.94%   101335  havlak.HavlakLoopFinder.stepD
   860800255    0.79%    85389  havlak.LoopStructureGraph$$Lambda$12.0x0000000800c09f90.apply
   859848610    0.79%    85356  som.Dictionary.atPut
   788698339    0.72%    77888  havlak.UnionFindNode.findSet
   471597909    0.43%    46919  havlak.UnionFindNode.union
   388056988    0.36%    38265  som.Vector.at
   383814663    0.35%    37996  som.Dictionary.insertBucketEntry
   358502226    0.33%    35651  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
   351249598    0.32%    34971  havlak.HavlakLoopFinder$$Lambda$11.0x0000000800c09d68.apply
   205495934    0.19%    20300  havlak.SimpleLoop.addNode
   194162632    0.18%    19320  havlak.HavlakLoopFinder$$Lambda$3.0x0000000800c08a28.apply
   194088507    0.18%    19037  java.util.Arrays.copyOf
   184891251    0.17%    15323  __memset_avx2_unaligned_erms
   181899208    0.17%    17812  jint_disjoint_arraycopy
   173807062    0.16%    17293  som.Vector.removeAll
   169453804    0.16%    16829  havlak.HavlakLoopFinder.lambda$setLoopAttributes$5
   164506621    0.15%    16278  som.Dictionary.removeAll
   157002342    0.14%    15498  havlak.HavlakLoopFinder.initAllNodes
   142751731    0.13%    14119  havlak.SimpleLoop.<init>
   142588968    0.13%    14135  havlak.HavlakLoopFinder$$Lambda$8.0x0000000800c096f0.apply
   140889949    0.13%    13994  havlak.SimpleLoop.setParent
   129867173    0.12%    12909  havlak.BasicBlock.customHash
   124983519    0.11%    12395  itable stub
   115349203    0.11%    11440  havlak.LoopStructureGraph.createNewLoop
   114632516    0.10%    11394  som.Set.hasSome
   103925664    0.10%     9908  Node::dominates(Node*, Node_List&)
    95519150    0.09%     9502  havlak.HavlakLoopFinder.isAncestor
    94929667    0.09%     9400  som.IdentityDictionary$IdEntry.match
    87467228    0.08%     8690  havlak.LoopStructureGraph.lambda$calculateNestingLevel$0
    71840933    0.07%     7122  havlak.UnionFindNode.getLoop
    71779009    0.07%     4204  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
    61232620    0.06%     5272  __memmove_avx_unaligned_erms
    60943587    0.06%     5631  __memset_avx2_unaligned
    60200484    0.06%     5910  havlak.LoopTesterApp.findLoops
    55993022    0.05%     5551  havlak.HavlakLoopFinder.lambda$stepD$6
    54695344    0.05%     5429  havlak.SimpleLoop.addChildLoop
    50251686    0.05%     4974  PhaseChaitin::Split(unsigned int, ResourceArea*)
    49872790    0.05%     4945  havlak.UnionFindNode.getBb
    49555350    0.05%     3151  [vdso]
    49423910    0.05%     4863  java.lang.invoke.DirectMethodHandle.allocateInstance
    46122340    0.04%     4581  havlak.LoopStructureGraph$$Lambda$13.0x0000000800c0a1b8.apply
    45453966    0.04%     4486  IndexSetIterator::advance_and_next()
    44778075    0.04%     4391  som.Set.<init>
    44664844    0.04%     4437  havlak.UnionFindNode.initNode
    44127322    0.04%     3661  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
    42662414    0.04%     3174  __tls_get_addr
    41407352    0.04%     4110  som.IdentityDictionary.newEntry
    40091316    0.04%     3822  MemAllocator::allocate() const
    38134982    0.03%     3794  som.Dictionary.at
    37446925    0.03%     3705  som.Dictionary$Entry.<init>
    36816297    0.03%     3446  Unsafe_AllocateInstance
    34367130    0.03%     3385  PhaseChaitin::gather_lrg_masks(bool)
    33574666    0.03%     3298  PhaseLive::compute(unsigned int)
    30990258    0.03%     3066  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
    30715240    0.03%     3044  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
    30486246    0.03%     2930  havlak.LoopTesterApp.addDummyLoops
    29737755    0.03%     2497  G1FromCardCache::clear(unsigned int)
    28828929    0.03%     2843  .annobin__ZN14PhaseIdealLoop16build_loop_earlyER9VectorSetR9Node_ListR10Node_Stack.start
    26657108    0.02%     2626  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
    25695440    0.02%     2547  PhaseChaitin::post_allocate_copy_removal()
    24615739    0.02%     2452  som.Vector.atPut
    24527460    0.02%     1917  .annobin__ZN32G1ScanCollectionSetRegionClosure14do_heap_regionEP10HeapRegion.start
    23795873    0.02%     2195  SpinPause
    23303825    0.02%     2230  jdk.internal.misc.Unsafe.allocateInstance
    22312817    0.02%     2203  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
    21379855    0.02%     2016  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
    20324660    0.02%     1579  FreeCSetClosure::do_heap_region(HeapRegion*)
    20156564    0.02%     2004  havlak.BasicBlock.<init>
    20126822    0.02%     1901  _dl_update_slotinfo
    20090510    0.02%     1987  PhaseAggressiveCoalesce::insert_copies(Matcher&)
    19946395    0.02%     1971  java.lang.Integer.valueOf
    19772888    0.02%     1928  Arena::contains(void const*) const
    19739369    0.02%     1956  havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1
    19381231    0.02%     1638  __memmove_avx_unaligned
    18641374    0.02%     1669  PhaseIdealLoop::Dominators()
    18623004    0.02%     1461  G1BlockOffsetTablePart::zero_bottom_entry_raw()
    18456097    0.02%     1728  InstanceKlass::allocate_objArray(int, int, JavaThread*)
    18210947    0.02%     1721  Dict::Insert(void*, void*, bool)
    17595505    0.02%     1747  .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
    17278134    0.02%     1696  havlak.ControlFlowGraph.createNode
    17274394    0.02%     1588  ObjAllocator::initialize(HeapWordImpl**) const
    17268235    0.02%     1701  PhaseIdealLoop::is_dominator(Node*, Node*)
    17111567    0.02%     1160  HeapRegionClaimer::claim_region(unsigned int)
    16995004    0.02%     1691  som.IdentitySet$$Lambda$10.0x0000000800c09b40.<init>
    16801954    0.02%     1581  G1Allocator::unsafe_max_tlab_alloc()
    16433989    0.02%      801  G1RemSet::prepare_region_for_scan(HeapRegion*)
    16422825    0.02%     1632  havlak.UnionFindNode$$Lambda$7.0x0000000800c094c8.<init>
    16318848    0.01%     1573  NodeHash::hash_find_insert(Node*)
    16222716    0.01%     1523  Interpreter
    15864543    0.01%     1556  Matcher::xform(Node*, int)
    15833394    0.01%     1309  ObjArrayAllocator::initialize(HeapWordImpl**) const
    15803674    0.01%     1570  java.lang.Object.<init>
    15732464    0.01%     1542  PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&)
    14653243    0.01%     1428  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
    14406831    0.01%     1429  som.IdentitySet$$Lambda$10.0x0000000800c09b40.test
    14277875    0.01%     1396  .annobin__ZN14PhaseIdealLoop15build_loop_treeEv.start
    14183544    0.01%     1313  Compile::identify_useful_nodes(Unique_Node_List&)
    14075925    0.01%     1383  som.Dictionary.getBucketIdx
    13963558    0.01%     1351  JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum)
    13942323    0.01%     1332  .annobin__ZN15G1CollectedHeap17allocate_new_tlabEmmPm.start
    13720595    0.01%     1286  PhaseOutput::BuildOopMaps()
    13522292    0.01%     1330  som.Dictionary.<init>
    13436713    0.01%      643  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*)
    13123212    0.01%     1261  G1Policy::preventive_collection_required(unsigned int)
    13062065    0.01%     1064  OtherRegionsTable::occupied() const
    12406214    0.01%     1214  Unique_Node_List::remove(Node*)
    12074066    0.01%     1156  ThreadLocalAllocBuffer::fill(HeapWordImpl**, HeapWordImpl**, unsigned long)
    11992881    0.01%     1176  PhaseIterGVN::transform_old(Node*)
    11990116    0.01%     1132  MemAllocator::Allocation::notify_allocation_jvmti_sampler()
    11723620    0.01%     1141  PhaseIterGVN::add_users_to_worklist(Node*)
    11665044    0.01%     1147  ___pthread_mutex_trylock
    11618871    0.01%      934  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
    11606261    0.01%      994  ___pthread_mutex_lock
    11287927    0.01%      607  _int_malloc
    11144040    0.01%     1101  PhaseCCP::analyze()
    10922275    0.01%     1081  PhaseIterGVN::subsume_node(Node*, Node*)
    10914901    0.01%     1053  havlak.HavlakLoopFinder.<init>
    10901784    0.01%      842  IndexSet::initialize(unsigned int)
    10767043    0.01%     1040  Matcher::Label_Root(Node const*, State*, Node*, Node*&)
    10744901    0.01%      538  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region(HeapRegion*)
    10735492    0.01%     1059  PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&, PhaseChaitin::Pressure&)
    10671110    0.01%     1048  PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*)
    10408114    0.01%     1035  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
    10368612    0.01%      590  os::free(void*)
    10298333    0.01%     1019  Matcher::find_shared(Node*)
    10207082    0.01%     1008  PhaseChaitin::merge_multidefs()
    10173290    0.01%      999  IndexSet::alloc_block_containing(unsigned int)
    10097593    0.01%     1006  havlak.UnionFindNode.getDfsNumber
     9948673    0.01%      956  .annobin__ZNK4Node6is_CFGEv.start
     9936253    0.01%      939  OptoRuntime::new_array_C(Klass*, int, JavaThread*)
     9686351    0.01%      940  DebugInformationRecorder::find_sharable_decode_offset(int)
     9506863    0.01%      915  InstanceKlass::check_valid_for_instantiation(bool, JavaThread*)
     9500254    0.01%      908  Node::clone() const
     9467495    0.01%      938  PhaseIdealLoop::get_late_ctrl_with_anti_dep(LoadNode*, Node*, Node*)
     9347682    0.01%      906  Compile::remove_useless_nodes(Unique_Node_List&)
     9297643    0.01%      907  Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
     9177894    0.01%      488  __GI___libc_malloc
     9097943    0.01%      854  G1NUMA::index_of_current_thread() const
     9090352    0.01%      678  AbsSeq::davg() const
     9046233    0.01%      887  PhaseIdealLoop::get_ctrl(Node*) [clone .isra.0]
     9028363    0.01%      322  __futex_abstimed_wait_common
     9016341    0.01%      879  som.Vector.size
     8882332    0.01%      849  Type::cmp(Type const*, Type const*)
     8658893    0.01%      857  .annobin__ZN22Node_Backward_Iterator4nextEv.start
     8601833    0.01%      853  update_get_addr
     8579551    0.01%      796  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     8558010    0.01%      751  ClassLoaderData::holder_phantom() const
     8425412    0.01%      828  OptoRuntime::new_instance_C(Klass*, JavaThread*)
     8142443    0.01%      697  CollectedHeap::tlab_alloc_reserve() const
     8094694    0.01%      734  CollectedHeap::fill_with_dummy_object(HeapWordImpl**, HeapWordImpl**, bool)
     8093303    0.01%      703  InstanceKlass::array_klass(int, JavaThread*)
     7882771    0.01%      728  InstanceKlass::allocate_instance(JavaThread*)
     7737733    0.01%      760  PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.0]
     7696161    0.01%      750  Matcher::match_tree(Node const*)
     7654944    0.01%      758  PhaseChaitin::Select()
     7634411    0.01%      577  G1CodeRootSet::clear()
     7559154    0.01%      710  NTarjan::DFS(NTarjan*, VectorSet&, PhaseIdealLoop*, unsigned int*)
     7553813    0.01%      692  ciObjectFactory::get_metadata(Metadata*)
     7491270    0.01%      457  clock_gettime@GLIBC_2.2.5
     7451484    0.01%      730  PhaseCFG::schedule_local(Block*, GrowableArray<int>&, VectorSet&, long*)
     7420801    0.01%      714  som.Vector.isEmpty
     7383842    0.01%      729  PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&, IndexSet*, unsigned int&) [clone .part.0]
     7245953    0.01%      691  Node::out_grow(unsigned int)
     7218752    0.01%      687  MemAllocator::Allocation::check_out_of_memory()
     7167881    0.01%      714  havlak.SimpleLoop.setNestingLevel
     7084395    0.01%      690  PhaseCFG::sched_call(Block*, unsigned int, Node_List&, GrowableArray<int>&, MachCallNode*, VectorSet&)
     7066752    0.01%      702  PhaseIFG::effective_degree(unsigned int) const
     7043893    0.01%      674  Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.0]
     7014024    0.01%      657  havlak.LoopTesterApp.main
     6931302    0.01%      671  G1CollectedHeap::attempt_allocation_slow(unsigned long)
     6909134    0.01%      574  [no_Java_frame]
     6844261    0.01%      615  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     6771060    0.01%      421  G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
     6748642    0.01%      663  PhaseIdealLoop::get_early_ctrl(Node*)
     6744931    0.01%      660  PhiNode::Ideal(PhaseGVN*, bool)
     6654012    0.01%      472  __vfprintf_internal
     6592693    0.01%      650  Node::pinned() const
     6592271    0.01%      623  Node::Node(unsigned int)
     6590791    0.01%      226  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker()
     6400410    0.01%      605  HeapRegion::set_eden()
     6371833    0.01%      353  G1SurvRateGroup::record_surviving_words(int, unsigned long)
     6360941    0.01%      608  g1_post_barrier_slow
     6281074    0.01%      595  G1CardTable::is_in_young(oopDesc*) const
     6279862    0.01%      593  TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int)
     6254000    0.01%      436  TruncatedSeq::add(double)
     6193124    0.01%      602  havlak.BasicBlockEdge.<init>
