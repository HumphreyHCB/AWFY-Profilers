--- Execution profile ---
Total samples       : 3407958
unknown_Java        : 11864 (0.35%)
not_walkable_Java   : 1566 (0.05%)
deoptimization      : 104 (0.00%)

--- 2737460943 ns (7.90%), 271448 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 3] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2035368717 ns (5.88%), 202107 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.reduceCollisionSet
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1662546333 ns (4.80%), 164510 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1059421346 ns (3.06%), 105006 samples
  [ 0] Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
  [ 1] Node::replace_edge(Node*, Node*, PhaseGVN*)
  [ 2] PhaseIterGVN::remove_globally_dead_node(Node*)
  [ 3] PhaseIterGVN::subsume_node(Node*, Node*)
  [ 4] PhaseIterGVN::transform_old(Node*)
  [ 5] PhaseIterGVN::optimize()
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 504831356 ns (1.46%), 50088 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda$3.0x0000000800c0c000.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 501536084 ns (1.45%), 49759 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 1] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 417445506 ns (1.21%), 41412 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 321400556 ns (0.93%), 31890 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 309173795 ns (0.89%), 30719 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 304037457 ns (0.88%), 30171 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 251426762 ns (0.73%), 24983 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 250664787 ns (0.72%), 24884 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 243002628 ns (0.70%), 23992 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 232824796 ns (0.67%), 23075 samples
  [ 0] cd.CollisionDetector.lambda$reduceCollisionSet$5
  [ 1] cd.CollisionDetector$$Lambda$6.0x0000000800c0c678.apply
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 214571428 ns (0.62%), 21334 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] som.Vector.append
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 202466663 ns (0.58%), 20006 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 201797844 ns (0.58%), 20020 samples
  [ 0] Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
  [ 1] Node::replace_edge(Node*, Node*, PhaseGVN*)
  [ 2] PhaseIterGVN::remove_globally_dead_node(Node*)
  [ 3] PhaseIterGVN::optimize()
  [ 4] Compile::Optimize()
  [ 5] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 6] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 193620789 ns (0.56%), 19135 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 188553246 ns (0.54%), 18694 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 179903463 ns (0.52%), 17825 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 153338237 ns (0.44%), 14982 samples
  [ 0] PhaseIterGVN::subsume_node(Node*, Node*)
  [ 1] PhaseIterGVN::transform_old(Node*)
  [ 2] PhaseIterGVN::optimize()
  [ 3] Compile::Optimize()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 149092095 ns (0.43%), 14675 samples
  [ 0] libmSin
  [ 1] cd.Simulator.simulate
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 119665779 ns (0.35%), 11794 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 116161641 ns (0.34%), 11426 samples
  [ 0] libmCos
  [ 1] cd.Simulator.simulate
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 115185382 ns (0.33%), 11430 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 100108004 ns (0.29%), 9975 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 91815276 ns (0.27%), 9111 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 87600957 ns (0.25%), 8643 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 87389366 ns (0.25%), 8590 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 86078050 ns (0.25%), 8485 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 83443447 ns (0.24%), 8251 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 80335865 ns (0.23%), 7962 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 79195781 ns (0.23%), 7875 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 78150779 ns (0.23%), 7756 samples
  [ 0] Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
  [ 1] RegionNode::Ideal(PhaseGVN*, bool)
  [ 2] PhaseIterGVN::transform_old(Node*)
  [ 3] PhaseIterGVN::optimize()
  [ 4] Compile::Optimize()
  [ 5] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 6] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 75969854 ns (0.22%), 7473 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 75172840 ns (0.22%), 7489 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 73324409 ns (0.21%), 7246 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] cd.Simulator.simulate
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 72142103 ns (0.21%), 7154 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda$3.0x0000000800c0c000.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 71961707 ns (0.21%), 7176 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 69517520 ns (0.20%), 6884 samples
  [ 0] cd.CollisionDetector.putIntoMap
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 68712030 ns (0.20%), 6749 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 67405700 ns (0.19%), 6657 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 66350469 ns (0.19%), 6818 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 64268928 ns (0.19%), 6388 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 63858855 ns (0.18%), 6313 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 61731977 ns (0.18%), 6096 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.reduceCollisionSet
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 60968624 ns (0.18%), 5996 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.recurse
  [ 8] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 9] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [10] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [11] som.Vector.forEach
  [12] cd.CollisionDetector.reduceCollisionSet
  [13] cd.CollisionDetector.handleNewFrame
  [14] CD.benchmark
  [15] CD.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 60845393 ns (0.18%), 5976 samples
  [ 0] Arena::contains(void const*) const
  [ 1] Matcher::match()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 60604998 ns (0.18%), 6010 samples
  [ 0] cd.Motion.findIntersection
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$3
  [ 2] cd.CollisionDetector$$Lambda$7.0x0000000800c0c8a0.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 59702640 ns (0.17%), 5942 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 59210939 ns (0.17%), 5894 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 59205547 ns (0.17%), 5822 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 58457775 ns (0.17%), 5903 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 58361776 ns (0.17%), 5897 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 57474623 ns (0.17%), 5896 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 56601385 ns (0.16%), 5580 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 55213292 ns (0.16%), 5474 samples
  [ 0] cd.Motion.findIntersection
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$3
  [ 2] cd.CollisionDetector$$Lambda$7.0x0000000800c0c8a0.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 54571620 ns (0.16%), 5591 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 54384423 ns (0.16%), 5354 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.recurse
  [ 8] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 9] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [10] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [11] som.Vector.forEach
  [12] cd.CollisionDetector.reduceCollisionSet
  [13] cd.CollisionDetector.handleNewFrame
  [14] CD.benchmark
  [15] CD.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 52654982 ns (0.15%), 5416 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 52170552 ns (0.15%), 5114 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 51248225 ns (0.15%), 5055 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 51171677 ns (0.15%), 5257 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 50743523 ns (0.15%), 5047 samples
  [ 0] cd.RedBlackTree.rightRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 50490657 ns (0.15%), 5153 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 50249082 ns (0.15%), 4961 samples
  [ 0] Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.0]
  [ 1] ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray<PhiNode*>&, bool&)
  [ 2] ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray<PhiNode*>&)
  [ 3] ConnectionGraph::find_inst_mem(Node*, int, GrowableArray<PhiNode*>&)
  [ 4] ConnectionGraph::split_unique_types(GrowableArray<Node*>&, GrowableArray<ArrayCopyNode*>&)
  [ 5] ConnectionGraph::compute_escape()
  [ 6] ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*)
  [ 7] Compile::Optimize()
  [ 8] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 9] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 49232541 ns (0.14%), 4865 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 49037640 ns (0.14%), 4821 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 48710744 ns (0.14%), 4803 samples
  [ 0] cd.Vector2D.minus
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 48261806 ns (0.14%), 4774 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 48076883 ns (0.14%), 4751 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.RedBlackTree.findNode
  [ 3] cd.RedBlackTree.get
  [ 4] cd.CollisionDetector.putIntoMap
  [ 5] cd.CollisionDetector.recurse
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 47826127 ns (0.14%), 4726 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 47767984 ns (0.14%), 4876 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 46239342 ns (0.13%), 4588 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 45233483 ns (0.13%), 4458 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 45193882 ns (0.13%), 4484 samples
  [ 0] PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
  [ 1] PhaseChaitin::post_allocate_copy_removal()
  [ 2] PhaseChaitin::Register_Allocate()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 44955816 ns (0.13%), 4463 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.findNode
  [ 3] cd.RedBlackTree.get
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 5] cd.CollisionDetector$$Lambda$3.0x0000000800c0c000.apply
  [ 6] cd.RedBlackTree.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 44954190 ns (0.13%), 4443 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 44629925 ns (0.13%), 4394 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 43814826 ns (0.13%), 4332 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 43361653 ns (0.13%), 4283 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 42460152 ns (0.12%), 4338 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 42307562 ns (0.12%), 4162 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 42017075 ns (0.12%), 4175 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 41777255 ns (0.12%), 4121 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 40925569 ns (0.12%), 4040 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 40559741 ns (0.12%), 4012 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 40481525 ns (0.12%), 4015 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 40230955 ns (0.12%), 3953 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.recurse
  [ 8] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 9] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [10] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [11] som.Vector.forEach
  [12] cd.CollisionDetector.reduceCollisionSet
  [13] cd.CollisionDetector.handleNewFrame
  [14] CD.benchmark
  [15] CD.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 39895732 ns (0.12%), 3958 samples
  [ 0] Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
  [ 1] Node::replace_edge(Node*, Node*, PhaseGVN*)
  [ 2] PhaseIterGVN::remove_globally_dead_node(Node*)
  [ 3] PhaseIterGVN::subsume_node(Node*, Node*)
  [ 4] PhaseMacroExpand::generate_slow_arraycopy(ArrayCopyNode*, Node**, Node*, Node**, TypePtr const*, Node*, Node*, Node*, Node*, Node*, bool)
  [ 5] PhaseMacroExpand::generate_arraycopy(ArrayCopyNode*, AllocateArrayNode*, Node**, MergeMemNode*, Node**, TypePtr const*, BasicType, Node*, Node*, Node*, Node*, Node*, bool, bool, RegionNode*)
  [ 6] PhaseMacroExpand::expand_arraycopy_node(ArrayCopyNode*)
  [ 7] PhaseMacroExpand::expand_macro_nodes()
  [ 8] Compile::Optimize()
  [ 9] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [10] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [11] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [12] CompileBroker::compiler_thread_loop()
  [13] JavaThread::thread_main_inner()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 39867911 ns (0.12%), 3930 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 38873089 ns (0.11%), 3856 samples
  [ 0] Node::remove_dead_region(PhaseGVN*, bool)
  [ 1] CallStaticJavaNode::Ideal(PhaseGVN*, bool)
  [ 2] PhaseIterGVN::transform_old(Node*)
  [ 3] PhaseIterGVN::optimize()
  [ 4] PhaseMacroExpand::expand_macro_nodes()
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 38665533 ns (0.11%), 3805 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 38263861 ns (0.11%), 3759 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.recurse
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 38026024 ns (0.11%), 3764 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 37777441 ns (0.11%), 3750 samples
  [ 0] PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
  [ 1] .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
  [ 2] PhaseChaitin::Register_Allocate()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 37710879 ns (0.11%), 3732 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 37701565 ns (0.11%), 3788 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 3] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 37553635 ns (0.11%), 3694 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.recurse
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 36930570 ns (0.11%), 3622 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree.forEach
  [ 2] cd.CollisionDetector.reduceCollisionSet
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
  6662366572   19.24%   663487  cd.CollisionDetector.isInVoxel
  4485797239   12.95%   444670  cd.CollisionDetector.recurse
  4372414814   12.63%   432476  cd.RedBlackTree.treeInsert
  2302504773    6.65%   228439  cd.RedBlackTree.put
  2224263864    6.42%   220769  cd.RedBlackTree.forEach
  1867609855    5.39%   184752  cd.RedBlackTree.treeMinimum
  1389322133    4.01%   137727  Node::set_req_X(unsigned int, Node*, PhaseIterGVN*)
  1302774730    3.76%   128527  cd.Vector2D.compareNumbers
   960293993    2.77%    94934  cd.RedBlackTree.findNode
   750853652    2.17%    74313  cd.RedBlackTree.leftRotate
   601190138    1.74%    59605  cd.CollisionDetector.lambda$handleNewFrame$0
   482861010    1.39%    47796  cd.RedBlackTree.rightRotate
   479548233    1.38%    47488  som.Vector.append
   298799025    0.86%    29485  cd.Vector2D.compareTo
   283830096    0.82%    26436  Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.0]
   277943319    0.80%    27604  java.util.Arrays.copyOf
   272144164    0.79%    27003  cd.CollisionDetector.lambda$reduceCollisionSet$5
   268833590    0.78%    26656  cd.Motion.findIntersection
   238016585    0.69%    23592  cd.CollisionDetector.putIntoMap
   169924309    0.49%    16863  cd.Vector2D.plus
   160914799    0.46%    15706  PhaseIterGVN::subsume_node(Node*, Node*)
   153142076    0.44%    15070  libmSin
   139792235    0.40%    13781  som.Vector.<init>
   128085325    0.37%    12664  cd.Vector2D.minus
   120353982    0.35%    11834  libmCos
   108587148    0.31%    10772  cd.CallSign.compareTo
    93962354    0.27%     8710  ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray<PhiNode*>&, bool&)
    91845326    0.27%     9114  PhaseChaitin::Split(unsigned int, ResourceArea*)
    87792120    0.25%     8621  cd.Simulator.simulate
    80230185    0.23%     7954  cd.Vector2D.<init>
    75545929    0.22%     7496  cd.Vector3D.minus
    68452911    0.20%     6758  IndexSetIterator::advance_and_next()
    61768823    0.18%     6068  Arena::contains(void const*) const
    55014685    0.16%     4804  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
    50335138    0.15%     3752  __memset_avx2_unaligned_erms
    46596011    0.13%     4631  cd.CollisionDetector$$Lambda$2.0x0000000800c07618.apply
    45214092    0.13%     4486  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
    44884299    0.13%     4405  som.Vector.forEach
    43909512    0.13%     4320  PhaseChaitin::gather_lrg_masks(bool)
    43787111    0.13%     4100  ConnectionGraph::find_inst_mem(Node*, int, GrowableArray<PhiNode*>&)
    42469407    0.12%     4257  cd.CollisionDetector.voxelHash
    42140962    0.12%     4183  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0]
    41921001    0.12%     4153  Node::remove_dead_region(PhaseGVN*, bool)
    36791856    0.11%     3490  SpinPause
    35995991    0.10%     3524  PhaseLive::compute(unsigned int)
    35706140    0.10%     3543  PhaseAggressiveCoalesce::insert_copies(Matcher&)
    35332072    0.10%     3272  .annobin__ZNK7Compile18flatten_alias_typeEPK7TypePtr.start
    33744548    0.10%     3351  cd.RedBlackTree$Node.successor
    30985326    0.09%     3079  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
    30751528    0.09%     3035  PhaseChaitin::post_allocate_copy_removal()
    30364318    0.09%     2991  cd.RedBlackTree$Node.<init>
    28507134    0.08%     2813  java.lang.Object.<init>
    26948890    0.08%     2674  cd.CollisionDetector.lambda$handleNewFrame$1
    26881911    0.08%     1549  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
    26873048    0.08%     2666  RegionNode::is_unreachable_from_root(PhaseGVN const*) const
    26818140    0.08%     2265  __tls_get_addr
    26570907    0.08%     2641  cd.RedBlackTree.get
    26408920    0.08%     2607  .annobin__ZN14PhaseIdealLoop16build_loop_earlyER9VectorSetR9Node_ListR10Node_Stack.start
    26321128    0.08%     2595  PhaseIterGVN::add_users_to_worklist(Node*)
    25407510    0.07%     2501  Unique_Node_List::remove(Node*)
    23906238    0.07%     2352  jint_disjoint_arraycopy
    23501085    0.07%     2310  som.Vector.at
    22574345    0.07%     2159  PhiNode::unique_input(PhaseTransform*, bool)
    22090787    0.06%     2200  .annobin__ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea.start
    21154586    0.06%     2067  Node::dominates(Node*, Node_List&)
    20171572    0.06%     1989  cd.CollisionDetector.lambda$handleNewFrame$3
    19434115    0.06%     1890  NodeHash::hash_find_insert(Node*)
    19394576    0.06%     1924  itable stub
    18817724    0.05%     1877  Node::del_req(unsigned int)
    18785804    0.05%     1461  IndexSet::initialize(unsigned int)
    18718548    0.05%     1829  Matcher::xform(Node*, int)
    18690814    0.05%     1854  cd.Vector3D.plus
    18388354    0.05%     1435  PhaseIdealLoop::Dominators()
    17153183    0.05%     1683  PhiNode::Ideal(PhaseGVN*, bool)
    17103616    0.05%     1627  Interpreter
    16535775    0.05%     1639  PhaseIterGVN::transform_old(Node*)
    16255786    0.05%     1612  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
    16093798    0.05%     1577  cd.CollisionDetector$$Lambda$5.0x0000000800c0c450.apply
    15856046    0.05%     1557  PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&)
    15628144    0.05%     1480  CD.benchmark
    14961844    0.04%     1486  PhaseOutput::BuildOopMaps()
    14398123    0.04%     1420  PhaseIdealLoop::build_loop_late_post_work(Node*, bool)
    13975673    0.04%     1348  Dict::Insert(void*, void*, bool)
    13846945    0.04%     1353  cd.Vector3D.<init>
    13793456    0.04%     1283  ciInstanceKlass::get_field_by_offset(int, bool)
    13723523    0.04%     1335  .annobin__ZN14PhaseIdealLoop15build_loop_treeEv.start
    13685223    0.04%      748  [vdso]
    13485653    0.04%     1337  PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&, PhaseChaitin::Pressure&)
    13267965    0.04%     1299  IndexSet::alloc_block_containing(unsigned int)
    13238855    0.04%     1292  TypeNode::hash() const
    12306781    0.04%      986  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
    12210174    0.04%     1198  PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*)
    11546096    0.03%     1145  PhaseChaitin::merge_multidefs()
    11145914    0.03%     1110  .annobin__ZNK7PhiNode5ValueEP8PhaseGVN.start
    11119895    0.03%     1100  PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*)
    11081714    0.03%     1102  PhaseIFG::effective_degree(unsigned int) const
    11026592    0.03%     1091  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
    10976223    0.03%      974  __memmove_avx_unaligned_erms
    10944021    0.03%     1084  Matcher::find_shared(Node*)
    10821393    0.03%     1072  PhaseCCP::analyze()
    10679255    0.03%     1017  Node::Node(unsigned int)
    10587493    0.03%     1027  Compile::identify_useful_nodes(Unique_Node_List&)
    10430951    0.03%     1036  PhaseChaitin::Select()
    10334525    0.03%     1015  MergeMemNode::Ideal(PhaseGVN*, bool)
    10066972    0.03%      980  Matcher::Label_Root(Node const*, State*, Node*, Node*&)
     9827142    0.03%      977  IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&)
     9620511    0.03%      777  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
     9425122    0.03%      909  Node::clone() const
     9218122    0.03%      910  I2C/C2I adapters(0xbbb)
     9105532    0.03%      882  DebugInformationRecorder::find_sharable_decode_offset(int)
     9085656    0.03%      888  g1_post_barrier_slow
     9039003    0.03%      898  PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&, IndexSet*, unsigned int&) [clone .part.0]
     8706843    0.03%      864  PhaseIFG::remove_node(unsigned int)
     8693550    0.03%      865  Node::rematerialize() const
     8616062    0.02%      838  .annobin__ZNK4Node6is_CFGEv.start
     8575692    0.02%      787  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
     8526911    0.02%      850  PhaseIterGVN::optimize()
     8515462    0.02%      847  .annobin__ZN22Node_Backward_Iterator4nextEv.start
     8473292    0.02%      835  Compile::final_graph_reshaping_walk(Node_Stack&, Node*, Final_Reshape_Counts&)
     8325582    0.02%      821  PhaseIdealLoop::get_ctrl(Node*) [clone .isra.0]
     8237063    0.02%      817  PhaseIFG::SquareUp()
     8229802    0.02%      784  Node::add_req(Node*)
     8166742    0.02%      783  MultiNode::proj_out_or_null(unsigned int) const
     8118402    0.02%      805  Compile::remove_useless_nodes(Unique_Node_List&)
     7968402    0.02%      776  Node::out_grow(unsigned int)
     7788852    0.02%      767  PhaseIdealLoop::get_late_ctrl_with_anti_dep(LoadNode*, Node*, Node*)
     7678382    0.02%      757  Node::is_dead_loop_safe() const
     7658881    0.02%      745  Matcher::match_tree(Node const*)
     7633782    0.02%      703  MergeMemNode::memory_at(unsigned int) const
     7607862    0.02%      750  PhiNode::is_unsafe_data_reference(Node*) const [clone .part.0]
     7586160    0.02%      755  PhaseCFG::schedule_local(Block*, GrowableArray<int>&, VectorSet&, long*)
     7525073    0.02%      725  Type::cmp(Type const*, Type const*)
     7497482    0.02%      710  Compile::copy_node_notes_to(Node*, Node*)
     7430414    0.02%      732  PhaseIdealLoop::get_early_ctrl(Node*)
     7332171    0.02%      725  PhaseIFG::re_insert(unsigned int)
     7171563    0.02%      703  PhiNode::wait_for_region_igvn(PhaseGVN*)
     7062023    0.02%      691  PhaseIterGVN::remove_globally_dead_node(Node*)
     7057850    0.02%      700  ProjNode::pinned() const
     7026143    0.02%      605  NTarjan::DFS(NTarjan*, VectorSet&, PhaseIdealLoop*, unsigned int*)
     6950092    0.02%      671  Compile::start() const
     6782710    0.02%      674  PhaseOutput::fill_buffer(CodeBuffer*, unsigned int*)
     6701111    0.02%      634  TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int)
     6566573    0.02%      653  PhaseCFG::schedule_pinned_nodes(VectorSet&)
     6523774    0.02%      627  som.Vector.size
     6501773    0.02%      644  MachNode::rematerialize() const
     6403041    0.02%      635  IndexSet::IndexSet(IndexSet*)
     6370156    0.02%      630  PhaseCFG::sched_call(Block*, unsigned int, Node_List&, GrowableArray<int>&, MachCallNode*, VectorSet&)
     6311412    0.02%      629  PhaseChaitin::Simplify()
     6191821    0.02%      564  .annobin__ZN12MergeMemNode13set_memory_atEjP4Node.start
     6111132    0.02%      563  ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray<PhiNode*>&)
     6108423    0.02%      600  PhaseIdealLoop::is_dominator(Node*, Node*)
     6087191    0.02%      605  PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.0]
     5970392    0.02%      591  cd.Vector3D.dot
     5905142    0.02%      585  CProjNode::is_block_proj() const
     5887771    0.02%      577  MultiNode::is_CFG() const
     5818580    0.02%      527  InitializeNode::allocation()
     5749521    0.02%      550  Type::hashcons()
     5669222    0.02%      563  PhaseCFG::schedule_early(VectorSet&, Node_Stack&)
     5593632    0.02%      551  MachNode::ideal_reg() const
     5512711    0.02%      547  cd.Motion.delta
     5481182    0.02%      544  PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&, PhaseChaitin::Pressure&, double) [clone .part.0] [clone .isra.0]
     5371751    0.02%      441  [no_Java_frame]
     5364940    0.02%      480  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     5323603    0.02%      528  cd.CollisionDetector.drawMotionOnVoxelMap
     5194223    0.01%      517  PhaseChaitin::build_ifg_virtual()
     5161652    0.01%      511  Node::pinned() const
     5074152    0.01%      502  PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*)
     5009520    0.01%      337  G1FromCardCache::clear(unsigned int)
     4985920    0.01%      493  ProjNode::is_CFG() const
     4912920    0.01%      477  PhiNode::Opcode() const
     4836970    0.01%      474  Node::jvms() const
     4811541    0.01%      433  __memmove_avx_unaligned
     4800241    0.01%      265  _int_malloc
     4693662    0.01%      463  I2C/C2I adapters(0xbb)
     4627960    0.01%      268  os::free(void*)
     4595480    0.01%      254  __GI___libc_malloc
     4533713    0.01%      389  __memset_avx2_unaligned
     4530352    0.01%      435  MemAllocator::allocate() const
     4466712    0.01%      431  NodeHash::grow()
     4421633    0.01%      424  TypeInstPtr::add_offset(long) const
     4311842    0.01%      429  PhaseCFG::schedule_late(VectorSet&, Node_Stack&)
     4302671    0.01%      416  cd.CollisionDetector.handleNewFrame
     4241961    0.01%      362  ciObjectFactory::get_metadata(Metadata*)
     4216671    0.01%      411  TypeInstPtr::hash() const
     4200411    0.01%      410  PhaseIdealLoop::build_loop_tree_impl(Node*, int)
     4194781    0.01%      415  PhaseCFG::insert_anti_dependences(Block*, Node*, bool)
     4155461    0.01%      391  PhaseGVN::transform_no_reclaim(Node*)
     4080880    0.01%      399  RegionNode::Ideal(PhaseGVN*, bool)
     4076612    0.01%      397  I2C/C2I adapters(0xb)
     4046510    0.01%      330  ___pthread_mutex_lock
     4014920    0.01%      397  RegMask::is_misaligned_pair() const
     4009762    0.01%      391  TypeNode::bottom_type() const
     4004982    0.01%      392  MemNode::optimize_simple_memory_chain(Node*, TypeOopPtr const*, Node*, PhaseGVN*)
     4003591    0.01%      393  Node::replace_edge(Node*, Node*, PhaseGVN*)
     3992072    0.01%      394  .annobin__ZNK10jmpDirNode13is_block_projEv.start
     3958170    0.01%      395  PhaseOutput::shorten_branches(unsigned int*)
     3941001    0.01%      345  LinearScan::build_intervals()
     3901363    0.01%      378  Node::unique_ctrl_out() const
     3894980    0.01%      347  cd.Simulator.<init>
     3750100    0.01%      365  AddPNode::bottom_type() const
