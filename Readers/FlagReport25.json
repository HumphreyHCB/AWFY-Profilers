{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.08733624454148471",
            "jdk.jfr.internal.RequestEngine$RequestHook.execute()V": "0.08733624454148471",
            "Mandelbrot.mandelbrot(I)I": "99.65065502183405",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.08733624454148471",
            "jdk.internal.org.objectweb.asm.ClassWriter.toByteArray()[B": "0.08733624454148471"
        },
        "JavaFlightRecorder_Queens.jfr": {
            " ": "0",
            "Queens.placeQueen(I)Z": "15.1414309484193",
            "Queens.getRowColumn(II)Z": "56.07321131447587",
            "java.util.Arrays.fill([ZZ)V": "0.49916805324459235",
            "Queens.setRowColumn(IIZ)V": "27.121464226289515",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.33277870216306155",
            "Queens.queens()Z": "0.8319467554076538"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.1443001443001443",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.8658008658008658",
            "Bounce$Ball.bounce()Z": "81.38528138528137",
            "Bounce.benchmark()Ljava/lang/Object;": "15.584415584415583",
            "som.Random.next()I": "1.01010101010101",
            "Bounce$Ball.<init>(Lsom/Random;)V": "1.01010101010101"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.391102873030584",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "39.17979610750695",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.746061167747914",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.183503243744207",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.8498609823911027",
            "havlak.HavlakLoopFinder.findLoops()V": "5.607043558850788",
            "som.Vector.<init>(I)V": "3.753475440222428",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.077849860982391",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.340129749768304",
            "som.Vector.append(Ljava/lang/Object;)V": "2.0852641334569046"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "17.26739312657167",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "4.0234702430846605",
            "cd.RedBlackTree.rightRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "1.9279128248114",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.347024308466052",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.526404023470243",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "21.626152556580053",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "5.951383067896061",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.549874266554903",
            "cd.Vector2D.compareNumbers(DD)I": "5.2808046940486175",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "16.010058675607713"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.79761904761905",
            " ": "0",
            "jdk.internal.org.objectweb.asm.MethodWriter.endCurrentBasicBlockWithNoSuccessor()V": "0.1488095238095238",
            "List$Element.getNext()LList$Element;": "8.482142857142858",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.0833333333333335",
            "List.makeList(I)LList$Element;": "1.4880952380952381"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "6.148867313915857",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.883495145631068",
            "deltablue.UnaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "4.207119741100324",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "5.17799352750809",
            "deltablue.UnaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "18.122977346278315",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "14.88673139158576",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "3.559870550161812",
            "som.Vector.<init>(I)V": "3.883495145631068",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "6.796116504854369",
            "som.Vector.append(Ljava/lang/Object;)V": "5.825242718446602"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.30469226081657524",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.2437538086532602",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "37.47714808043876",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.0968921389396709",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.9000609384521634",
            "Storage.benchmark()Ljava/lang/Object;": "0.1218769043266301",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "43.631931748933575",
            "som.Random.next()I": "12.67519804996953",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1218769043266301",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.30469226081657524"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)J": "0.10351966873706005",
            "Sieve.benchmark()Ljava/lang/Object;": "6.728778467908903",
            "java.util.Arrays.fill([ZZ)V": "4.244306418219462",
            "Sieve.sieve([ZI)I": "88.92339544513457"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.buildTowerAt(II)V": "0.27100271002710025",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "15.176151761517614",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "5.691056910569105",
            "Towers.moveDisks(III)V": "3.252032520325203",
            "Towers$TowersDisk.getSize()I": "11.11111111111111",
            "Towers.benchmark()Ljava/lang/Object;": "0.27100271002710025",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.482384823848236",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.40921409214092",
            "Towers.moveTopDisk(II)V": "4.336043360433604"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.5797788309636651",
            "nbody.Body.getMass()D": "0.631911532385466",
            "nbody.Body.setVX(D)V": "30.173775671406005",
            "nbody.NBodySystem.advance(D)V": "42.812006319115326",
            "nbody.Body.getVX()D": "0.315955766192733",
            "nbody.Body.getY()D": "0.631911532385466",
            "nbody.Body.getZ()D": "7.740916271721959",
            "nbody.Body.setVZ(D)V": "7.424960505529226",
            "nbody.Body.setVY(D)V": "6.79304897314376",
            "nbody.Body.setX(D)V": "0.9478672985781991"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "6.215083798882681",
            "richards.Scheduler.schedule()V": "10.195530726256983",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "14.175977653631284",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.354748603351955",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.9106145251396645",
            "Richards.benchmark()Ljava/lang/Object;": "9.636871508379887",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.539106145251396",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.237430167597765",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.282122905027933",
            "richards.RBObject.<init>()V": "10.754189944134078"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "4.843304843304844",
            "json.JsonPureStringParser.isDigit()Z": "2.9439696106362776",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "20.7977207977208",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.555555555555556",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.96866096866097",
            "java.lang.String.<init>([BB)V": "4.510921177587845",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.988603988603989",
            "json.JsonPureStringParser.read()V": "15.147198480531815",
            "java.util.Arrays.copyOfRange([BII)[B": "5.84045584045584",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.751187084520418"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "42.926239419588875",
            "Permute.permute(I)V": "56.83192261185006",
            "Permute.benchmark()Ljava/lang/Object;": "0.12091898428053205",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.12091898428053205"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.8",
            "Richards::benchmark": "4.4",
            "richards.RBObject::append": "2.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "45.2",
            "richards.HandlerTaskDataRecord::workInAdd": "3.7",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.0",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.6"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.LambdaFormEditor::bindArgumentForm": "0.0",
            "java.io.PrintStream::write": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::visitTypeInsn": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "java.lang.StringConcatHelper::prepend": "0.0",
            "Mandelbrot::mandelbrot": "97.2"
        },
        "List.hpl": {
            "List$Element::getNext": "9.7",
            "List::makeList": "0.7",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "List::tail": "2.2",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "List::isShorterThan": "81.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "java.lang.invoke.LambdaForm::useCount": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.3",
            "json.JsonPureStringParser::read": "15.8",
            "java.lang.String::<init>": "5.0",
            "java.lang.String::length": "2.9",
            "java.util.Arrays::copyOfRange": "7.7",
            "java.lang.String::equals": "22.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "10.6",
            "java.lang.String::isLatin1": "2.8",
            "json.JsonPureStringParser::readStringInternal": "9.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.5",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.7",
            "havlak.HavlakLoopFinder::findLoops": "6.3",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "8.0",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.6",
            "havlak.HavlakLoopFinder::doDFS": "5.6",
            "som.Vector::<init>": "1.9",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "40.0",
            "Permute::permute": "49.5",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.BoundMethodHandle::speciesDataFor": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "6.3",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.1",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "1.2",
            "Queens::placeQueen": "13.5",
            "Queens::setRowColumn": "24.2",
            "Queens::queens": "0.8",
            "java.util.Arrays::fill": "0.4"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "39.2",
            "java.util.Arrays::setAll": "34.8",
            "som.Random::next": "11.4",
            "AGCT::Unknown not Java[ERR=-3]": "5.7",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Sieve::benchmark": "5.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "87.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0",
            "java.util.Arrays::fill": "4.3"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "6.2",
            "deltablue.Planner::addPropagate": "2.9",
            "som.Vector::append": "3.7",
            "AGCT::Unknown not Java[ERR=-3]": "12.1",
            "AGCT::Unknown Java[ERR=-5]": "17.4",
            "deltablue.Plan::lambda$execute$0": "4.0",
            "deltablue.AbstractConstraint::satisfy": "2.8",
            "deltablue.EqualityConstraint::execute": "1.9",
            "som.Vector::forEach": "28.0",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "1.5"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.8",
            "Bounce$Ball::bounce": "76.1",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.1",
            "nbody.Body::getY": "0.9",
            "nbody.Body::setVZ": "9.2",
            "nbody.Body::getZ": "7.7",
            "nbody.Body::setVX": "26.6",
            "nbody.Body::setVY": "5.4",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "nbody.NBodySystem::advance": "41.5"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.0",
            "Towers::popDiskFrom": "21.3",
            "Towers::moveDisks": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "Towers::pushDisk": "33.4",
            "Towers$TowersDisk::setNext": "14.8",
            "AGCT::Unknown Java[ERR=-5]": "4.0",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.4",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.0",
            "cd.RedBlackTree::forEach": "4.0",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "9.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "cd.Vector2D::compareNumbers": "4.6",
            "cd.CollisionDetector::isInVoxel": "21.4",
            "cd.RedBlackTree::treeInsert": "13.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.82%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "2.73%",
            "deltablue.AbstractConstraint.satisfy": "2.56%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "5.47%",
            "vtable": "3.40%",
            "som.Vector.<init>": "2.49%",
            "som.Vector.forEach": "23.63%",
            "itable": "3.21%",
            "deltablue.Planner.addPropagate": "2.94%",
            "deltablue.Strength.of": "2.36%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.38%",
            "som.Random.next": "0.91%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.71%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.34%",
            "__tls_get_addr": "0.05%",
            "Bounce$Ball.<init>": "1.82%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "Mandelbrot.mandelbrot": "98.61%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.46%",
            "som.Random.next": "10.30%",
            "java.util.Arrays.setAll": "35.98%",
            "Storage.lambda$buildTreeDepth$0": "4.28%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.33%",
            "SpinPause": "0.21%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.60%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.31%",
            "Storage.buildTreeDepth": "42.97%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.37%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.77%",
            "Towers.popDiskFrom": "19.15%",
            "Towers.moveDisks": "8.64%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "35.16%",
            "Towers.moveTopDisk": "3.96%",
            "Towers$TowersDisk.getSize": "10.48%",
            "Towers$TowersDisk.getNext": "3.77%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.17%",
            "cd.CollisionDetector.isInVoxel": "19.69%",
            "cd.RedBlackTree.forEach": "6.14%",
            "Node::set_req_X(unsigned": "1.95%",
            "cd.RedBlackTree.put": "6.90%",
            "cd.RedBlackTree.treeInsert": "12.60%",
            "cd.RedBlackTree.treeMinimum": "5.28%",
            "cd.RedBlackTree.findNode": "4.25%",
            "cd.Vector2D.compareNumbers": "5.56%",
            "cd.RedBlackTree.leftRotate": "2.31%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.06%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.13%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.60%",
            "som.Vector.append": "4.07%",
            "som.Vector.forEach": "1.98%",
            "som.IdentitySet.lambda$contains$0": "31.04%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.37%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.21%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.06%",
            "havlak.HavlakLoopFinder.doDFS": "5.56%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.18%",
            "Sieve.benchmark": "7.29%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "84.20%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.34%",
            "Permute.swap": "40.24%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.92%",
            "nbody.Body.getZ": "7.89%",
            "nbody.Body.getY": "0.69%",
            "nbody.Body.setX": "1.18%",
            "nbody.Body.setY": "1.75%",
            "nbody.Body.setVX": "27.55%",
            "nbody.Body.setVY": "5.52%",
            "nbody.Body.getMass": "0.50%",
            "nbody.Body.getVZ": "0.49%",
            "nbody.NBodySystem.advance": "41.66%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.11%",
            "Interpreter": "0.06%",
            "List.makeList": "1.20%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.59%",
            "List$Element.length": "0.14%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.35%",
            "List$Element.<init>": "0.17%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "6.38%",
            "java.lang.String.length": "2.96%",
            "json.JsonArray.<init>": "2.65%",
            "java.lang.String.<init>": "3.70%",
            "json.JsonPureStringParser.isWhiteSpace": "3.58%",
            "json.JsonPureStringParser.readStringInternal": "7.97%",
            "java.util.Arrays.copyOfRange": "8.21%",
            "java.lang.String.equals": "20.58%",
            "json.JsonPureStringParser.read": "13.71%",
            "json.JsonPureStringParser.readValue": "4.18%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.18%",
            "Queens.getRowColumn": "55.57%",
            "Queens.setRowColumn": "24.72%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.65%",
            "Queens.placeQueen": "14.37%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.15%",
            "Queens.benchmark": "0.07%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.60%",
            "Richards.benchmark": "5.04%",
            "richards.Packet.<init>": "6.68%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.94%",
            "itable": "37.03%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.34%",
            "richards.TaskControlBlock.<init>": "3.02%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.98%",
            "richards.RBObject.<init>": "6.16%",
            "richards.RBObject.append": "2.66%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.3",
            "Towers.moveDisks": "94.2",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "7.7",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "90.8",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.6",
            "deltablue.AbstractConstraint.satisfy": "10.4",
            "deltablue.Planner.removePropagateFrom": "8.4",
            "som.Vector.<init>": "31.5",
            "deltablue.Variable.<init>": "5.2",
            "som.Vector.forEach": "7.8",
            "deltablue.Planner.constraintsConsuming": "5.4",
            "deltablue.AbstractConstraint.<init>": "3.4",
            "deltablue.Plan.lambda$execute$0": "2.7",
            "deltablue.Planner.addConstraintsConsumingTo": "16.3"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Vector.hasSome": "3.3",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.3",
            "java.lang.Integer.valueOf": "8.5",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "14.3",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.Scheduler.createIdler": "0.0",
            "richards.TaskControlBlock.runTask": "84.4",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "Bounce$Ball.bounce": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.0",
            "Bounce.benchmark": "54.0",
            "Bounce$Ball.<init>": "44.1",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "5.7",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "1.9",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "45.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.8",
            "cd.RedBlackTree$Entry.<init>": "4.8",
            "cd.Motion.<init>": "1.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.4",
            "nbody.NBodySystem.advance": "98.9",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "1.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "75.7",
            "List$Element.<init>": "21.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.6",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.1",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.3",
            "Queens.getRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "26.7",
            "Queens.placeQueen": "72.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2",
            "java.util.Arrays.fill0": "0.2"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.316735787331602",
            "java.lang.String.<init>(byte[], byte) String.java": "7.053742390287045",
            "json.JsonPureStringParser.isWhiteSpace()": "1.987755767926294",
            "json.JsonPureStringParser.read()": "20.47860693954303",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.4045147385865038",
            "java.lang.String.length() String.java": "3.2113203334964755",
            "java.lang.String.substring(int, int) String.java": "9.586735701467418",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.929239329229025",
            "json.JsonPureStringParser.readStringInternal()": "4.224517657968625",
            "json.JsonPureStringParser.readValue()": "1.8933051698822805"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "4.082890876441893",
            "som.Vector.forEach(ForEachInterface)": "2.1406075186413935",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.2278097898841756",
            "havlak.HavlakLoopFinder.findLoops()": "11.864958492046556",
            "som.Vector.<init>(int)": "2.867077542591192",
            "som.Set.<init>(int)": "1.987553003209834",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "6.57918846615663",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.714510214772133",
            "som.Vector.removeAll()": "2.7248015141618547",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "36.77619765158326"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.337079551094245",
            "Queens.getRowColumn(int, int)": "60.5798632790612",
            "Queens.queens()": "1.4408529849671003",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.linkToTargetMethod(Object, long, Object) LambdaForm$MH": "0.14408529849671003",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.3522085074364023",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.12807582088596448",
            "Queens.setRowColumn(int, int, boolean)": "21.084482013351902",
            "java.lang.System.lineSeparator() System.java": "0.14408529849671003",
            "java.lang.invoke.LambdaForm$Name.internArguments() LambdaForm.java": "0.12807582088596448",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14408529849671003"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.207087810503579",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.830529572205239",
            "richards.TaskControlBlock.runTask()": "37.837046257482285",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.90635010708598",
            "richards.Scheduler.schedule()": "2.5224697504988196",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.510955719489648",
            "richards.RBObject.append(Packet, Packet)": "3.177799337348295",
            "richards.Packet.<init>(Packet, int, int)": "1.5046953083527064",
            "Richards.benchmark()": "28.519650734957626",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.8927675776602169"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.3433036711695757",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1443455705652523",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.17437646789565747",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.84756772073609",
            "som.Random.next()": "14.473246835339573",
            "Storage$$Lambda$12.0x00000008000c2aa0.apply(int)": "0.5885205791478441",
            "java.util.Collections$UnmodifiableCollection.containsAll(Collection) Collections.java": "0.38144852352175074",
            "Storage.buildTreeDepth(int, Random)": "35.71448033087935",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "4.016108026221862",
            "java.lang.Integer.valueOf(int) Integer.java": "0.04904338159565367"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "32.87142263606814",
            "Towers.pushDisk(Towers$TowersDisk, int)": "31.88161399907129",
            "Towers.moveDisks(int, int, int)": "9.128235207859813",
            "Towers.buildTowerAt(int, int)": "0.1221985971601046",
            "Towers$TowersDisk.getSize()": "2.0040569934257153",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.10997873744409414",
            "com.yourkit.probes.builtin.FilesLW$FileStreamsTelemetry$FileOutputStream_write_arrayRange_Probe.onReturn(int) a": "0.10997873744409414",
            "Towers.moveTopDisk(int, int)": "8.78607913581152",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "14.712711098076593",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.15885817630813598"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.ref.PhantomCleanable.<init>(Object, Cleaner) PhantomCleanable.java": "0.06764755623203111",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.10147133434804667",
            "Permute.verifyResult(Object)": "0.10147133434804667",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.06764755623203111",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.1127459270533852",
            "Permute.permute(int)": "56.79012345679012",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.27059022492812446",
            "java.nio.Buffer.limit() Buffer.java": "0.10147133434804667",
            "Permute.benchmark()": "0.3269631884548171",
            "Permute.swap(int, int)": "41.9753086419753"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "3.7312445420625053",
            "som.Vector.forEach(ForEachInterface)": "40.17041996348144",
            "deltablue.EqualityConstraint.execute()": "10.002910899997355",
            "deltablue.Planner.projectionTest(int)": "1.8523909074069176",
            "deltablue.BinaryConstraint.isSatisfied()": "1.8523909074069176",
            "som.Vector.<init>(int)": "6.298129085183521",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.6462727248670253",
            "deltablue.ScaleConstraint.execute()": "1.9847045436502688",
            "som.Vector.append(Object)": "5.345470904231391",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.715949085712775"
        },
        "YourKit_List.txt": {
            "java.lang.Long.valueOf(long) Long.java": "0.13439956992137625",
            "List.tail(List$Element, List$Element, List$Element)": "3.8035078287749475",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.12095961292923861",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.12095961292923861",
            "List.makeList(int)": "0.9139170754653585",
            "sun.invoke.util.VerifyType.isNullConversion(Class, Class, boolean) VerifyType.java": "0.24191922585847722",
            "List$Element.getNext()": "24.393521940729787",
            "List.isShorterThan(List$Element, List$Element)": "69.60553726228075",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.12095961292923861",
            "com.yourkit.probes.Table.createRow() a": "0.12095961292923861"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.394083194391005",
            "nbody.Body.getZ()": "6.27021789007168",
            "nbody.Body.setX(double)": "0.7552762458495432",
            "nbody.Body.getMass()": "0.8407792170777935",
            "nbody.Body.getX()": "0.8122782266683768",
            "nbody.NBodySystem.advance(double)": "41.79670243540963",
            "nbody.Body.setVY(double)": "6.426973337323472",
            "nbody.Body.setVZ(double)": "10.075100109728814",
            "nbody.Body.setVX(double)": "27.118692374560016",
            "nbody.Body.setY(double)": "1.254043578014336"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.42262877812946",
            "sun.nio.fs.LinuxFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.07825814754269417",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.06086744808876213",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.034781398907864074",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.06086744808876213",
            "java.security.Permissions.add(Permission) Permissions.java": "0.06956279781572815",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.12173489617752425",
            "com.yourkit.probes.Table.createRow() a": "0.07825814754269417",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.034781398907864074",
            "java.lang.Class.isInterface() Class.java (native)": "0.034781398907864074"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.0571495927663745",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.563252393590727",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.749363103340759",
            "cd.RedBlackTree.findNode(Comparable)": "7.726412009399454",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.85569252530476",
            "cd.Vector2D.compareTo(Object)": "2.448725065971087",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.311839813836057",
            "cd.RedBlackTree.put(Comparable, Object)": "7.003962067575687",
            "cd.Vector2D.compareNumbers(double, double)": "9.460291869776496",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.441165958158741"
        },
        "YourKit_Sieve.txt": {
            "java.util.ImmutableCollections$ListN.toArray(Object[]) ImmutableCollections.java": "0.21753815504745766",
            "java.lang.String.indexOf(int, int) String.java": "0.02289875316289028",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.8508947687798396",
            "java.nio.file.attribute.FileTime.from(long, TimeUnit) FileTime.java": "0.10304438923300625",
            "Sieve.benchmark()": "87.64497773096255",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.10304438923300625",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.3205825442804639",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.02289875316289028",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.01144937658144514",
            "Sieve.sieve(boolean[], int)": "8.701526201898306"
        },
        "YourKit_Bounce.txt": {
            "jdk.internal.loader.BuiltinClassLoader.getPermissions(CodeSource) BuiltinClassLoader.java": "0.5022019624507456",
            "Bounce.benchmark()": "61.230008498802434",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.17383914084833496",
            "Bounce.lambda$benchmark$0(Random, int)": "1.1396121455613073",
            "som.Random.next()": "0.7339874835818588",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.3090473615081511",
            "com.sun.management.internal.GcInfoCompositeData.<clinit>() GcInfoCompositeData.java": "0.057946380282778334",
            "Bounce$Ball.bounce()": "34.38151896778181",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.07726184037703777",
            "Bounce$Ball.<init>(Random)": "1.3327667465039015"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 20.6845,
        "JavaFlightRecorder_Bounce.jfr": 26.148,
        "rebench_test_Async_Bounce.txt": 64.9135,
        "Mandelbrot.hpl": 38.389,
        "JavaFlightRecorder_Storage.jfr": 58.649,
        "List.hpl": 22.16,
        "rebench_test_Async_Towers.txt": 77.6875,
        "JavaFlightRecorder_Sieve.jfr": 31.5545,
        "Queens.hpl": 20.997,
        "JavaFlightRecorder_NBody.jfr": 21.3125,
        "Permute.hpl": 29.371,
        "rebench_test_Async_Sieve.txt": 87.18350000000001,
        "JavaFlightRecorder_Richards.jfr": 90.958,
        "Storage.hpl": 60.460499999999996,
        "DeltaBlue.hpl": 14.767,
        "NBody.hpl": 21.322,
        "Towers.hpl": 26.337,
        "JavaFlightRecorder_Json.jfr": 81.029,
        "Bounce.hpl": 26.308,
        "rebench_test_Async_List.txt": 70.74799999999999,
        "rebench_test_Async_Richards.txt": 276.0235,
        "rebench_test_Async_DeltaBlue.txt": 45.47,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.939,
        "Richards.hpl": 90.7235,
        "JavaFlightRecorder_Havlak.jfr": 155.4475,
        "JavaFlightRecorder_List.jfr": 22.975,
        "JavaFlightRecorder_CD.jfr": 42.596000000000004,
        "rebench_test_Async_Mandelbrot.txt": 115.364,
        "rebench_test_Async_Storage.txt": 171.969,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.2095,
        "Json.hpl": 81.738,
        "JavaFlightRecorder_Towers.jfr": 26.116999999999997,
        "Havlak.hpl": 156.651,
        "rebench_test_Async_CD.txt": 153.31650000000002,
        "rebench_test_Async_Havlak.txt": 521.8655,
        "Sieve.hpl": 31.112000000000002,
        "rebench_test_Async_Permute.txt": 86.75550000000001,
        "rebench_test_Async_NBody.txt": 61.9265,
        "JavaFlightRecorder_Permute.jfr": 29.746499999999997,
        "CD.hpl": 42.1035,
        "rebench_test_Async_Queens.txt": 61.483,
        "rebench_test_Async_Json.txt": 308.67600000000004
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007f479cad5bfd": "19.08%",
            "[.] 0x00007f479cad5bf5": "23.13%",
            "[.] 0x00007f479cad5c10": "5.10%",
            "[.] 0x00007f479cad5c01": "4.41%",
            "[.] 0x00007f479cad5bf9": "4.96%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007fdee4ad3907": "2.63%",
            "[.] 0x00007fdee4ad3afc": "19.45%",
            "[.] 0x00007fdee4ad39d4": "10.84%",
            "[.] 0x00007fdee4ad3a90": "25.81%",
            "[.] 0x00007fdee4ad395c": "14.43%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007f7a8cb06553": "1.61%",
            "[.] 0x00007f7a8cb35afc": "16.65%",
            "[.] 0x00007f7a8cb35af5": "16.81%",
            "[.] 0x00007f7a8cb29a00": "1.51%",
            "[.] 0x00007f7a8cae02c3": "1.02%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007ff640b34dd3": "1.34%",
            "[.] 0x00007ff640b34e14": "21.78%",
            "[.] 0x00007ff640afae50": "3.15%",
            "[.] 0x00007ff640b34da5": "1.55%",
            "[.] 0x00007ff640afadc0": "1.67%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007f237cad3696": "4.29%",
            "[.] 0x00007f237cad35ff": "3.74%",
            "[.] 0x00007f237cad34d7": "4.03%",
            "[.] 0x00007f237cad362d": "24.73%",
            "[.] 0x00007f237cad361e": "6.10%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007fd744ad4f85": "6.74%",
            "[.] 0x00007fd744ad4ac6": "3.77%",
            "[.] 0x00007fd744ad4c5d": "3.06%",
            "[.] 0x00007fd744ad4f23": "3.82%",
            "[.] 0x00007fd744ad4f02": "9.87%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007f1a98646e2f": "8.19%",
            "[.] 0x00007f1a98646e1b": "4.81%",
            "[.] 0x00007f1a98646e3a": "10.06%",
            "[.] 0x00007f1a98646e9c": "6.70%",
            "[.] 0x00007f1a98af263a": "6.06%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f91b8ad5c5a": "6.08%",
            "[.] 0x00007f91b8ad5cad": "4.73%",
            "[.] 0x00007f91b8ad5c16": "6.90%",
            "[.] 0x00007f91b8ad5ca5": "4.47%",
            "[.] 0x00007f91b8ad5cc9": "5.19%"
        },
        "CD.data": {
            "[.] 0x00007f3708b0c6e8": "5.03%",
            " ": "0",
            "[.] 0x00007f3708adbac8": "2.25%",
            "[.] 0x00007f3708b0c700": "3.47%",
            "[.] 0x00007f3708b2163a": "3.05%",
            "[.] 0x00007f3708adba99": "2.36%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007fb964ad7d58": "5.87%",
            "[.] 0x00007fb964ad7d26": "6.13%",
            "[.] 0x00007fb964ad7cc2": "5.64%",
            "[.] 0x00007fb964ad7d00": "5.14%",
            "[.] 0x00007fb964ad7cf4": "6.04%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007fbb10ad40f5": "5.27%",
            "[.] 0x00007fbb10ad41d5": "6.01%",
            "[.] 0x00007fbb10ad4015": "5.27%",
            "[.] 0x00007fbb10ad3fb5": "26.74%",
            "[.] 0x00007fbb10ad3fc5": "10.45%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007ff97cada702": "3.98%",
            "[.] 0x00007ff97cada70e": "26.61%",
            "[.] 0x00007ff97cada6b8": "21.17%",
            "[.] 0x00007ff97cada70c": "14.06%",
            "[.] 0x00007ff97cad86d5": "3.57%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007f8930adc5c2": "9.85%",
            "[.] 0x00007f8930ad54e2": "7.89%",
            "[.] 0x00007f8930ad54ef": "5.12%",
            "[.] 0x00007f8930adc5c7": "26.48%",
            "[.] 0x00007f8930adc5d4": "16.18%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007faa58adb991": "1.08%",
            "[.] 0x00007faa5856ecc5": "1.15%",
            "[.] 0x00007faa58adb869": "1.36%",
            "[.] 0x00007faa58adbaa8": "1.88%",
            "[.] 0x00007faa58adb8f5": "1.47%"
        }
    }
}