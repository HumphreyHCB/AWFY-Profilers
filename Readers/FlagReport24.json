{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "99.9107939339875",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.08920606601248884"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.3241491085899514",
            " ": "0",
            "Queens.placeQueen(I)Z": "12.965964343598056",
            "java.lang.ref.Cleaner.register(Ljava/lang/Object;Ljava/lang/Runnable;)Ljava/lang/ref/Cleaner$Cleanable;": "0.1620745542949757",
            "Queens.getRowColumn(II)Z": "57.21231766612642",
            "java.util.Arrays.fill([ZZ)V": "0.1620745542949757",
            "Queens.setRowColumn(IIZ)V": "28.038897893030796",
            "Queens.queens()Z": "1.1345218800648298"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.31201248049922",
            "jdk.internal.org.objectweb.asm.ClassVisitor.<init>(I)V": "0.15600624024961",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.46801872074883",
            "Bounce$Ball.bounce()Z": "79.7191887675507",
            "java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner(Ljava/lang/String;[B)Ljava/lang/invoke/MethodHandles$Lookup$ClassDefiner;": "0.15600624024961",
            "Bounce.benchmark()Ljava/lang/Object;": "15.600624024960998",
            "som.Random.next()I": "0.93603744149766",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.15600624024961",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.3400936037441498",
            "java.lang.invoke.LambdaForm$MH+0x000000080100ec00.937773018.invoke(Ljava/lang/Object;J)J": "0.15600624024961"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.197653429602888",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "37.68050541516246",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.265342960288809",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.605595667870038",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "3.1814079422382675",
            "havlak.HavlakLoopFinder.findLoops()V": "5.054151624548737",
            "som.Vector.<init>(I)V": "2.1660649819494586",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.535198555956679",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.2788808664259927",
            "som.Vector.append(Ljava/lang/Object;)V": "4.490072202166065"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "15.687851971037812",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.9420756234915526",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.252614641995173",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "1.6894609814963797",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.470635559131134",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "24.617860016090106",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "5.631536604987932",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.48189863234111",
            "cd.Vector2D.compareNumbers(DD)I": "4.907481898632341",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "13.757039420756234"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.95180722891567",
            " ": "0",
            "List$Element.getNext()LList$Element;": "7.83132530120482",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.2590361445783134",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15060240963855423",
            "List.makeList(I)LList$Element;": "1.8072289156626509"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "5.64516129032258",
            "deltablue.Strength.stronger(Ldeltablue/Strength;)Z": "5.64516129032258",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.032258064516129",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "46.236559139784944",
            "deltablue.EqualityConstraint.execute()V": "3.494623655913978",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "1.3440860215053763",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.838709677419354",
            "deltablue.Variable.<init>()V": "2.6881720430107525",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "4.032258064516129",
            "som.Vector.append(Ljava/lang/Object;)V": "4.032258064516129"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.29744199881023203",
            " ": "0",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.4164187983343248",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "39.91671624033314",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.5466983938132064",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "4.699583581201666",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "40.57108863771565",
            "som.Random.next()I": "11.957168352171326",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.0594883997620464",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.5353955978584176"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "6.885919835560124",
            "java.util.Arrays.fill([ZZ)V": "4.419321685508736",
            "Sieve.sieve([ZI)I": "88.48920863309353",
            "java.lang.StringConcatHelper.prepend(J[BLjava/lang/String;Ljava/lang/String;)J": "0.10277492291880781",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.10277492291880781"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.53333333333333",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.133333333333333",
            "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Ljava/lang/Class;)Ljava/lang/String;": "0.13333333333333333",
            "Towers.moveDisks(III)V": "3.466666666666667",
            "Towers$TowersDisk.getSize()I": "9.333333333333334",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "42.13333333333333",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.466666666666665",
            "Towers.moveTopDisk(II)V": "2.8"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.932367149758454",
            "nbody.Body.getMass()D": "0.322061191626409",
            "nbody.Body.setVX(D)V": "28.824476650563607",
            "nbody.NBodySystem.advance(D)V": "43.15619967793881",
            "nbody.Body.getY()D": "0.644122383252818",
            "nbody.Body.getX()D": "0.322061191626409",
            "nbody.Body.getZ()D": "7.568438003220612",
            "nbody.Body.setVZ(D)V": "8.856682769726248",
            "nbody.Body.setVY(D)V": "6.763285024154589",
            "nbody.Body.setX(D)V": "1.288244766505636"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.871060171919771",
            "richards.Scheduler.schedule()V": "8.882521489971346",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.467048710601718",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.873925501432664",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.512893982808023",
            "Richards.benchmark()Ljava/lang/Object;": "8.3810888252149",
            "richards.Packet.setLink(Lrichards/Packet;)V": "5.945558739255014",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.441260744985673",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "3.8681948424068766",
            "richards.RBObject.<init>()V": "11.38968481375358"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "4.6555819477434675",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "2.9928741092636577",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "23.94299287410926",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.415676959619953",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.783847980997624",
            "java.lang.String.<init>([BB)V": "6.460807600950119",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.847980997624703",
            "json.JsonPureStringParser.read()V": "16.43705463182898",
            "java.util.Arrays.copyOfRange([BII)[B": "4.98812351543943",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "2.517814726840855"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "40.36585365853659",
            "java.lang.invoke.InvokerBytecodeGenerator.lookupPregenerated(Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.12195121951219512",
            "Permute.permute(I)V": "59.512195121951216"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "richards.Packet::setLink": "2.3",
            "Richards::benchmark": "5.5",
            "richards.RBObject::append": "2.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "45.2",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.6",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.5",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.InvokerBytecodeGenerator::storeInsnOpcode": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.1",
            "java.lang.invoke.MethodType::methodType": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::refKindOpcode": "0.0",
            "jdk.internal.loader.BuiltinClassLoader::defineClass": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "98.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.1",
            "List::makeList": "1.0",
            "List::tail": "1.7",
            "List::isShorterThan": "80.7",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "2.4",
            "jdk.internal.org.objectweb.asm.ByteVector::putUTF8": "0.0",
            "List$Element::setNext": "0.1",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.6",
            "json.JsonPureStringParser::read": "12.6",
            "java.lang.String::<init>": "5.3",
            "json.JsonPureStringParser::readArray": "2.9",
            "java.util.Arrays::copyOfRange": "8.6",
            "java.lang.String::equals": "19.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "java.lang.String::isLatin1": "2.9",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.4",
            "havlak.HavlakLoopFinder::findLoops": "5.8",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.1",
            "som.Vector::append": "4.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "5.7",
            "som.Vector::hasSome": "1.8",
            "som.Vector::<init>": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "40.0",
            "Permute::permute": "50.8",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.invoke.LambdaForm::compileToBytecode": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "6.1"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "66.1",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "8.5",
            "Queens::setRowColumn": "19.3",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.9",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.9",
            "java.util.Arrays::setAll": "33.0",
            "som.Random::next": "14.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.9",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.7",
            "Storage::lambda$buildTreeDepth$0": "2.7"
        },
        "Sieve.hpl": {
            "java.lang.invoke.InvokerBytecodeGenerator::classData": "0.0",
            "Sieve::benchmark": "6.5",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "85.8",
            "java.lang.invoke.InvokerBytecodeGenerator::emitPushArgument": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Run::lambda$getSuiteFromName$11": "0.0",
            "java.util.Arrays::fill": "5.2"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "4.8",
            "deltablue.BinaryConstraint::<init>": "3.4",
            "deltablue.Planner::addPropagate": "2.5",
            "deltablue.Variable::<init>": "2.7",
            "som.Vector::append": "4.3",
            "AGCT::Unknown not Java[ERR=-3]": "10.7",
            "AGCT::Unknown Java[ERR=-5]": "17.2",
            "deltablue.AbstractConstraint::satisfy": "2.7",
            "som.Vector::forEach": "29.4",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "2.3"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.6",
            "Bounce$Ball::bounce": "76.1",
            "java.util.Arrays::setAll": "0.8",
            "Bounce::lambda$benchmark$0": "0.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "1.7"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.0",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "9.0",
            "nbody.Body::getZ": "7.7",
            "nbody.Body::setVX": "26.9",
            "nbody.Body::setVY": "5.6",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "nbody.NBodySystem::advance": "42.3"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.0",
            "Towers::popDiskFrom": "22.6",
            "Towers::moveDisks": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.6",
            "Towers::pushDisk": "31.8",
            "Towers$TowersDisk::setNext": "15.1",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.9",
            "Towers$TowersDisk::getNext": "3.0"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.4",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "7.4",
            "cd.RedBlackTree::findNode": "3.0",
            "cd.RedBlackTree::treeMinimum": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "cd.Vector2D::compareNumbers": "4.9",
            "cd.CollisionDetector::isInVoxel": "21.4",
            "cd.RedBlackTree::treeInsert": "13.5"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.26%",
            "deltablue.AbstractConstraint.satisfy": "11.91%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "6.22%",
            "som.Vector.append": "2.34%",
            "deltablue.Variable.<init>": "4.57%",
            "som.Vector.forEach": "7.51%",
            "itable": "3.94%",
            "deltablue.Planner.addPropagate": "3.30%",
            "deltablue.Planner.chainTest": "1.86%",
            "deltablue.ScaleConstraint.execute": "1.90%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.50%",
            "som.Random.next": "0.90%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.71%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.12%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.82%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "malloc": "0.01%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "Mandelbrot.mandelbrot": "98.44%",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "__futex_abstimed_wait_common": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.61%",
            "java.util.Arrays.setAll": "35.42%",
            "Storage.lambda$buildTreeDepth$0": "4.09%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.56%",
            "SpinPause": "0.16%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.57%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.32%",
            "Storage.buildTreeDepth": "43.50%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.17%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.59%",
            "Towers.popDiskFrom": "19.21%",
            "Towers.moveDisks": "8.64%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.90%",
            "Towers.moveTopDisk": "4.09%",
            "Towers$TowersDisk.getSize": "10.48%",
            "Towers$TowersDisk.getNext": "3.84%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "14.02%",
            "cd.CollisionDetector.isInVoxel": "19.24%",
            "cd.RedBlackTree.forEach": "6.02%",
            "Node::set_req_X(unsigned": "2.26%",
            "cd.RedBlackTree.put": "6.40%",
            "cd.RedBlackTree.treeInsert": "11.84%",
            "cd.RedBlackTree.treeMinimum": "5.19%",
            "cd.RedBlackTree.findNode": "2.96%",
            "cd.Vector2D.compareNumbers": "3.97%",
            "cd.RedBlackTree.leftRotate": "2.08%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.39%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.09%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.66%",
            "som.Vector.append": "4.07%",
            "som.Vector.forEach": "2.08%",
            "som.IdentitySet.lambda$contains$0": "31.05%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.50%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.26%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.01%",
            "havlak.HavlakLoopFinder.doDFS": "5.60%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "8.03%",
            "Sieve.benchmark": "7.47%",
            "Interpreter": "0.07%",
            "Sieve.sieve": "81.49%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.32%",
            "Permute.swap": "40.26%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.81%",
            "nbody.Body.getZ": "7.82%",
            "nbody.Body.getY": "0.70%",
            "nbody.Body.setX": "1.19%",
            "nbody.Body.setY": "1.76%",
            "nbody.Body.setVX": "27.54%",
            "nbody.Body.setVY": "5.45%",
            "nbody.Body.getMass": "0.50%",
            "nbody.Body.getVZ": "0.50%",
            "nbody.NBodySystem.advance": "41.76%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.23%",
            "Interpreter": "0.06%",
            "List.makeList": "1.09%",
            "List.tail": "4.44%",
            "List$Element.length": "0.15%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "81.62%",
            "List$Element.<init>": "0.16%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.46%",
            "java.lang.String.length": "3.79%",
            "java.lang.String.substring": "2.40%",
            "java.lang.String.<init>": "4.67%",
            "java.lang.String.isLatin1": "3.15%",
            "json.JsonPureStringParser.readStringInternal": "6.66%",
            "java.util.Arrays.copyOfRange": "8.39%",
            "java.lang.String.equals": "20.64%",
            "json.JsonPureStringParser.read": "15.52%",
            "json.JsonPureStringParser.readValue": "3.13%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.11%",
            "Queens.getRowColumn": "56.28%",
            "Queens.setRowColumn": "24.39%",
            "Interpreter": "0.06%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.65%",
            "Queens.placeQueen": "13.89%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "Queens.benchmark": "0.07%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.64%",
            "Richards.benchmark": "4.70%",
            "richards.Packet.<init>": "6.90%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.73%",
            "itable": "36.59%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.35%",
            "richards.TaskControlBlock.<init>": "3.15%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.86%",
            "richards.RBObject.<init>": "6.03%",
            "richards.RBObject.append": "2.78%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.6",
            "Towers.moveDisks": "93.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "4.5",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.6",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.9",
            "deltablue.AbstractConstraint.satisfy": "15.0",
            "deltablue.Planner.removePropagateFrom": "9.2",
            "som.Vector.<init>": "26.4",
            "deltablue.Variable.<init>": "6.0",
            "som.Vector.forEach": "7.4",
            "deltablue.Planner.addPropagate": "1.6",
            "deltablue.Planner.constraintsConsuming": "4.2",
            "deltablue.AbstractConstraint.<init>": "4.2",
            "deltablue.Planner.addConstraintsConsumingTo": "17.5"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Vector.hasSome": "3.3",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.1",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "9.0",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.8",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.3"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "13.8",
            "richards.Scheduler.createWorker": "0.1",
            "richards.Packet.<init>": "0.2",
            "richards.Scheduler.lambda$createWorker$3": "0.0",
            "richards.Scheduler.queuePacket": "0.0",
            "richards.TaskControlBlock.runTask": "84.8",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "Run.runBenchmark": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "52.7",
            "Bounce$Ball.<init>": "46.4",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "8.0",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.5",
            "cd.RedBlackTree$InsertResult.<init>": "15.0",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "nbody.Body.getVZ": "0.1",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.5",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.9",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.6",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.4",
            "List$Element.length": "0.1",
            "List.isShorterThan": "72.1",
            "List$Element.<init>": "24.4",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "Queens.getRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "20.2",
            "Queens.placeQueen": "79.0",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "21.9968618665481",
            "java.lang.String.<init>(byte[], byte) String.java": "5.694814384109246",
            "json.JsonPureStringParser.isWhiteSpace()": "2.774725627092268",
            "json.JsonPureStringParser.read()": "19.65395024305571",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "5.609306660624123",
            "java.lang.String.length() String.java": "2.3813900990606984",
            "java.lang.String.substring(int, int) String.java": "9.179254116128043",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.417795012334491",
            "json.JsonPureStringParser.readValue()": "3.9034275770959024",
            "json.JsonPureStringParser.readStringInternal()": "2.9200887570169787"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.867462405612955",
            "som.Vector.hasSome(TestInterface)": "2.7166356499604274",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.113499754005434",
            "havlak.HavlakLoopFinder.findLoops()": "10.798091937795462",
            "som.Vector.append(Object)": "5.482470213266595",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.1283877730004925",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.206571263556441",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.184046717576847",
            "som.Vector.removeAll()": "2.526257246144303",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.23502106996941"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.800206872030252",
            "Queens.getRowColumn(int, int)": "59.200956783139915",
            "Queens.queens()": "0.9697126418204737",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.21010440572776928",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.14545689627307104",
            "Queens.setRowColumn(int, int, boolean)": "24.679186734331054",
            "jdk.internal.org.objectweb.asm.SymbolTable.addType(String) SymbolTable.java": "0.35556130200084035",
            "java.util.Arrays.equals(Object[], Object[]) Arrays.java": "0.40404693409186404",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.30707566990981666",
            "javax.management.openmbean.SimpleType.isValue(Object) SimpleType.java": "0.14545689627307104"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.9166453461597506",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9042258463022932",
            "richards.Scheduler$$Lambda$15.0x00000008000c7978.apply(Packet, RBObject)": "3.263865030226388",
            "richards.TaskControlBlock.runTask()": "37.94928399646202",
            "richards.Scheduler.<init>()": "1.8896060701310664",
            "richards.Scheduler.schedule()": "2.5621157740075002",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.7470632524616048",
            "richards.RBObject.append(Packet, Packet)": "2.8106519689183562",
            "Richards.benchmark()": "27.784884613416573",
            "richards.Scheduler$$Lambda$17.0x00000008000c7ba0.apply(Packet, RBObject)": "4.173946096885257"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$10.0x00000008000c2a98.<init>(Storage, int, Random)": "0.16103893116160833",
            "com.yourkit.probes.builtin.FilesLW.<clinit>() a": "0.132281979168464",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.569387649464258",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.2243042255465259",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.6269015534505467",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.9719849773682789",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.76733900420427",
            "som.Random.next()": "14.522260756537895",
            "Storage.buildTreeDepth(int, Random)": "37.04470555756855",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.6628937545651663"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.432953422809085",
            "Towers.popDiskFrom(int)": "32.24018698344618",
            "Towers.moveDisks(int, int, int)": "11.264788800269871",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2530059516638153",
            "Towers$TowersDisk.getSize()": "1.4216524903014383",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.10843112214163513",
            "Towers.moveTopDisk(int, int)": "5.132406448037397",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.1325269270619985",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "16.361051540926724",
            "com.yourkit.probes.Table.createRow() a": "0.10843112214163513"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType(String, String) SymbolTable.java": "0.11166821141025784",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.15633549597436097",
            "Benchmark.innerBenchmarkLoop(int)": "0.14516867483333518",
            "java.lang.invoke.LambdaForm.useCount(LambdaForm$Name) LambdaForm.java": "0.08933456912820627",
            "Harness.main(String[])": "0.0011166821141025784",
            "Permute.permute(int)": "57.68779801453919",
            "com.yourkit.probes.Table.createRow() a": "0.2121696016794899",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.1340018536923094",
            "Permute.benchmark()": "0.5471742359102634",
            "Permute.swap(int, int)": "40.91523266071847"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "9.757860498735091",
            "som.Vector.forEach(ForEachInterface)": "24.239764572254636",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "5.8856936341576755",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "5.137074707006041",
            "deltablue.Planner.incrementalAdd(AbstractConstraint)": "3.252620166245031",
            "som.Vector.<init>(int)": "3.020290154370386",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.1942278899272036",
            "som.Vector.append(Object)": "3.8721668645774177",
            "deltablue.Variable.addConstraint(AbstractConstraint)": "10.996953895399866",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.6791780680468795"
        },
        "YourKit_List.txt": {
            "com.yourkit.probes.builtin.FilesLW.<clinit>() a": "0.2153895859135211",
            "List.tail(List$Element, List$Element, List$Element)": "4.348177265629206",
            "List$Element.<init>(Object)": "0.1211566420763556",
            "List.makeList(int)": "1.1846427225243659",
            "List$Element.getNext()": "24.43325615206505",
            "List$Element.length()": "0.1211566420763556",
            "List.isShorterThan(List$Element, List$Element)": "69.0189004361639",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.17500403855473587",
            "jdk.internal.org.objectweb.asm.FieldWriter.computeFieldInfoSize() FieldWriter.java": "0.09423294383716546",
            "java.lang.StringConcatHelper.newString(byte[], long) StringConcatHelper.java": "0.1211566420763556"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.532251030485489",
            "nbody.Body.getZ()": "5.191114612495252",
            "nbody.Body.setX(double)": "0.9706962283527706",
            "nbody.Body.getX()": "0.8300156155480213",
            "nbody.Body.setZ(double)": "0.40797377713377314",
            "nbody.NBodySystem.advance(double)": "45.214748955446446",
            "nbody.Body.setVY(double)": "5.7819731862751995",
            "nbody.Body.setVZ(double)": "9.608485854564382",
            "nbody.Body.setVX(double)": "26.50422745241478",
            "nbody.Body.setY(double)": "1.0973087798770451"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.50138405848533",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2572929235573852",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "Run.runBenchmark()": "8.872169777840869E-4",
            "java.lang.StringConcatHelper.prepend(long, byte[], long) StringConcatHelper.java": "0.07984952800056781",
            "java.lang.System.nanoTime() System.java (native)": "0.07984952800056781",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.07984952800056781",
            "sun.nio.cs.StreamEncoder.write(char[], int, int) StreamEncoder.java": "0.0",
            "Run.measure(Benchmark)": "8.872169777840869E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.561401484558286",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.46836660128456",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.976385523633706",
            "cd.RedBlackTree.findNode(Comparable)": "8.822737587015883",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.668897350101917",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.0537671628014302",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "3.0844967501249947",
            "cd.RedBlackTree.put(Comparable, Object)": "5.007499711549555",
            "cd.Vector2D.compareNumbers(double, double)": "8.999653859466942",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.830583439098496"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.2437268044092394",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.359718606325818",
            "jdk.internal.org.objectweb.asm.MethodWriter.<init>(SymbolTable, int, String, String, String, String[], int) MethodWriter.java": "0.07754943776657618",
            "Sieve.benchmark()": "86.98831219187944",
            "java.nio.charset.CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean) CharsetEncoder.java": "0.09970641998559794",
            "java.nio.Buffer.limit(int) Buffer.java": "0.09970641998559794",
            "java.lang.String.substring(int, int) String.java": "0.2437268044092394",
            "com.yourkit.probes.Table.createRow() a": "0.21049133108070675",
            "Sieve.sieve(boolean[], int)": "9.228383094222565",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.15509887553315235"
        },
        "YourKit_Bounce.txt": {
            "Bounce.benchmark()": "69.8423047145593",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.16299254309115355",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.14261847520475934",
            "Bounce.lambda$benchmark$0(Random, int)": "0.7945886475693735",
            "som.Random.next()": "0.48897762927346067",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.24448881463673033",
            "com.yourkit.probes.ResourceCounter.open(Object, String) a": "0.22411474675033613",
            "Bounce$Ball.bounce()": "26.66965486329",
            "Bounce$Ball.<init>(Random)": "0.9779552585469213",
            "jdk.internal.org.objectweb.asm.SymbolTable.put(SymbolTable$Entry) SymbolTable.java": "0.12224440731836517"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.0285,
        "JavaFlightRecorder_Bounce.jfr": 23.127000000000002,
        "rebench_test_Async_Bounce.txt": 66.013,
        "Mandelbrot.hpl": 37.938500000000005,
        "rebench_test_Async_Towers.txt": 77.48150000000001,
        "List.hpl": 23.566499999999998,
        "JavaFlightRecorder_Storage.jfr": 59.438500000000005,
        "JavaFlightRecorder_Sieve.jfr": 31.6415,
        "Permute.hpl": 29.7705,
        "Queens.hpl": 22.1355,
        "JavaFlightRecorder_NBody.jfr": 20.929499999999997,
        "rebench_test_Async_Sieve.txt": 91.1685,
        "JavaFlightRecorder_Richards.jfr": 90.35849999999999,
        "Storage.hpl": 59.419,
        "DeltaBlue.hpl": 14.8505,
        "Bounce.hpl": 26.355,
        "NBody.hpl": 21.656,
        "Towers.hpl": 26.0305,
        "JavaFlightRecorder_Json.jfr": 81.3515,
        "rebench_test_Async_List.txt": 72.187,
        "rebench_test_Async_Richards.txt": 280.501,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.4885,
        "rebench_test_Async_DeltaBlue.txt": 36.075500000000005,
        "Richards.hpl": 91.7915,
        "JavaFlightRecorder_Havlak.jfr": 159.3745,
        "JavaFlightRecorder_List.jfr": 23.002499999999998,
        "JavaFlightRecorder_CD.jfr": 43.632,
        "JavaFlightRecorder_DeltaBlue.jfr": 15.058,
        "rebench_test_Async_Storage.txt": 169.809,
        "rebench_test_Async_Mandelbrot.txt": 117.813,
        "JavaFlightRecorder_Towers.jfr": 26.1505,
        "Json.hpl": 83.0815,
        "Havlak.hpl": 156.966,
        "rebench_test_Async_CD.txt": 153.0755,
        "rebench_test_Async_Havlak.txt": 509.709,
        "Sieve.hpl": 30.454,
        "rebench_test_Async_Permute.txt": 87.228,
        "rebench_test_Async_NBody.txt": 61.0625,
        "JavaFlightRecorder_Permute.jfr": 29.817,
        "CD.hpl": 42.6335,
        "rebench_test_Async_Queens.txt": 62.849000000000004,
        "rebench_test_Async_Json.txt": 272.5115
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007f8a08ad5c10": "5.37%",
            "[.] 0x00007f8a08ad5bfd": "19.22%",
            "[.] 0x00007f8a08ad5bf5": "23.06%",
            "[.] 0x00007f8a08ad5bf9": "4.69%",
            "[.] 0x00007f8a08ad5bb8": "4.50%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007fe3f8ad3554": "10.81%",
            "[.] 0x00007fe3f8ad34dc": "14.33%",
            "[.] 0x00007fe3f8ad3610": "25.94%",
            "[.] 0x00007fe3f8ad367c": "19.47%",
            "[.] 0x00007fe3f8ad3716": "2.66%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007f6e60af4ed3": "1.63%",
            "[.] 0x00007f6e60b28ef8": "1.42%",
            "[.] 0x00007f6e60b34efc": "16.76%",
            "[.] 0x00007f6e60adf2c3": "1.00%",
            "[.] 0x00007f6e60b34ef5": "16.94%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007f1e6cb2ebf0": "3.74%",
            "[.] 0x00007f1e6caf35c0": "1.89%",
            "[.] 0x00007f1e6caf3650": "3.70%",
            "[.] 0x00007f1e6cb2ec01": "7.01%",
            "[.] 0x00007f1e6cb2ec3d": "3.26%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007fa9a0ad3ef0": "6.23%",
            "[.] 0x00007fa9a0ad3dd2": "4.88%",
            "[.] 0x00007fa9a0ad3f22": "12.52%",
            "[.] 0x00007fa9a0ad3de8": "4.29%",
            "[.] 0x00007fa9a0ad3f64": "2.68%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007f1e84ad5382": "10.23%",
            "[.] 0x00007f1e84ad4c6b": "3.26%",
            "[.] 0x00007f1e84ad53a3": "3.81%",
            "[.] 0x00007f1e84ad5405": "6.97%",
            "[.] 0x00007f1e84ad4f46": "3.81%"
        },
        "Richards.data": {
            "[.] 0x00007f8f1c646eba": "10.20%",
            " ": "0",
            "[.] 0x00007f8f1c646f1c": "6.85%",
            "[.] 0x00007f8f1c646eaf": "8.12%",
            "[.] 0x00007f8f1c646e9b": "5.07%",
            "[.] 0x00007f8f1caf1f3a": "6.03%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f041cad5d22": "4.52%",
            "[.] 0x00007f041cad5e3d": "4.81%",
            "[.] 0x00007f041cad5dea": "6.02%",
            "[.] 0x00007f041cad5da6": "6.79%",
            "[.] 0x00007f041cad5e59": "4.79%"
        },
        "CD.data": {
            "[.] 0x00007fcc18b0abe8": "5.40%",
            " ": "0",
            "[.] 0x00007fcc18b0ac00": "3.63%",
            "[.] 0x00007fcc18ad9740": "2.11%",
            "[.] 0x00007fcc18b20e3a": "3.18%",
            "[.] 0x00007fcc18ad9711": "2.17%"
        },
        "Mandelbrot.data": {
            "[.] 0x00007ff3c0ad7833": "5.67%",
            " ": "0",
            "[.] 0x00007ff3c0ad7865": "6.26%",
            "[.] 0x00007ff3c0ad7897": "5.99%",
            "[.] 0x00007ff3c0ad78c9": "6.01%",
            "[.] 0x00007ff3c0ad7871": "4.99%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007f0228ad3b35": "24.48%",
            "[.] 0x00007f0228ad3d55": "6.21%",
            "[.] 0x00007f0228ad3b45": "11.88%",
            "[.] 0x00007f0228ad3c75": "4.92%",
            "[.] 0x00007f0228ad3c85": "4.94%"
        },
        "Sieve.data": {
            "[.] 0x00007f69fcada88e": "26.18%",
            " ": "0",
            "[.] 0x00007f69fcada832": "3.76%",
            "[.] 0x00007f69fcada882": "3.42%",
            "[.] 0x00007f69fcada88c": "14.14%",
            "[.] 0x00007f69fcada838": "20.95%"
        },
        "Bounce.data": {
            "[.] 0x00007f9364adcac7": "26.90%",
            " ": "0",
            "[.] 0x00007f9364ad5e62": "8.13%",
            "[.] 0x00007f9364adcad4": "16.12%",
            "[.] 0x00007f9364ad5e6f": "5.27%",
            "[.] 0x00007f9364adcac2": "9.84%"
        },
        "Json.data": {
            "[.] 0x00007f1834adb80b": "0.98%",
            " ": "0",
            "[.] 0x00007f1834adb716": "1.00%",
            "[.] 0x00007f1834adb674": "1.51%",
            "[.] 0x00007f1834adb5e6": "1.46%",
            "[.] 0x00007f1834adb82a": "2.59%"
        }
    }
}