{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.16155088852988692",
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.16155088852988692",
            "Queens.placeQueen(I)Z": "14.70113085621971",
            "Queens.getRowColumn(II)Z": "59.45072697899838",
            "java.util.Arrays.fill([ZZ)V": "0.48465266558966075",
            "Queens.verifyResult(Ljava/lang/Object;)Z": "0.16155088852988692",
            "Queens.setRowColumn(IIZ)V": "24.232633279483036",
            "Queens.queens()Z": "0.6462035541195477"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "Bounce$$Lambda$77+0x000000080100c618.1545242146.apply(I)Ljava/lang/Object;": "0.15552099533437014",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.4665629860031104",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.15552099533437014",
            "Bounce$Ball.bounce()Z": "79.78227060653188",
            "Bounce.benchmark()Ljava/lang/Object;": "16.174183514774494",
            "jdk.jfr.internal.PlatformEventType.isEveryChunk()Z": "0.15552099533437014",
            "som.Random.next()I": "0.6220839813374806",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.15552099533437014",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15552099533437014",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.177293934681182"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.616982836495032",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.527551942186086",
            "havlak.HavlakLoopFinder.stepD(ILsom/Vector;)V": "3.861788617886179",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.578139114724481",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "12.556458897922314",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.032520325203252",
            "havlak.HavlakLoopFinder.findLoops()V": "8.265582655826558",
            "som.Vector.<init>(I)V": "2.077687443541102",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "3.7262872628726287",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.5745257452574526"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "11.799163179916317",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.196652719665272",
            "cd.CollisionDetector.lambda$reduceCollisionSet$5(Lsom/Vector;Lcd/RedBlackTree$Entry;)V": "1.8410041841004183",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.426778242677824",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.853556485355648",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "24.518828451882843",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.2677824267782425",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "9.205020920502092",
            "cd.Vector2D.compareNumbers(DD)I": "7.02928870292887",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "14.309623430962343"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.98940998487141",
            " ": "0",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.15128593040847202",
            "List$Element.getNext()LList$Element;": "9.379727685325266",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.15128593040847202",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.361573373676248",
            "List$Element.length()I": "0.15128593040847202",
            "List$Element.setNext(LList$Element;)V": "0.15128593040847202",
            "List.makeList(I)LList$Element;": "1.6641452344931922"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "8.059701492537313",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.17910447761194",
            "deltablue.Variable.setDeterminedBy(Ldeltablue/AbstractConstraint;)V": "9.552238805970148",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "38.805970149253724",
            "java.lang.invoke.Invokers$Holder.linkToTargetMethod(ILjava/lang/Object;)Ljava/lang/Object;": "2.6865671641791042",
            "deltablue.Planner$$Lambda$85+0x0000000801012868.597190999.apply(Ljava/lang/Object;)V": "2.08955223880597",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "2.9850746268656714",
            "som.Vector.<init>(I)V": "3.2835820895522385",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "3.880597014925373",
            "som.Vector.append(Ljava/lang/Object;)V": "3.880597014925373"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.18633540372670807",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.43478260869565216",
            "java.lang.StringConcatHelper.checkOverflow(J)J": "0.062111801242236024",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "37.88819875776397",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.1180124223602483",
            "java.lang.invoke.DirectMethodHandle.internalMemberName(Ljava/lang/Object;)Ljava/lang/Object;": "0.062111801242236024",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.1055900621118013",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.47204968944099",
            "som.Random.next()I": "12.049689440993788",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6211180124223602"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.StringConcatHelper.newString([BJ)Ljava/lang/String;": "0.10822510822510822",
            "Sieve.benchmark()Ljava/lang/Object;": "5.8441558441558445",
            "sun.invoke.util.VerifyType.isNullType(Ljava/lang/Class;)Z": "0.10822510822510822",
            "java.util.Arrays.fill([ZZ)V": "4.761904761904762",
            "Sieve.sieve([ZI)I": "89.17748917748918"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/invoke/MemberName;)Ljava/lang/invoke/MemberName;": "0.13774104683195593",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "18.870523415977964",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.581267217630854",
            "Towers.moveDisks(III)V": "3.71900826446281",
            "Towers$TowersDisk.getSize()I": "10.192837465564738",
            "Towers.benchmark()Ljava/lang/Object;": "0.27548209366391185",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "40.633608815426996",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "18.732782369146005",
            "Towers.moveTopDisk(II)V": "3.8567493112947657"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "2.3510971786833856",
            "nbody.Body.getMass()D": "0.4702194357366771",
            "nbody.Body.setVX(D)V": "26.959247648902824",
            "nbody.NBodySystem.advance(D)V": "42.94670846394985",
            "nbody.Body.setZ(D)V": "0.7836990595611286",
            "nbody.Body.getY()D": "0.7836990595611286",
            "nbody.Body.getZ()D": "7.836990595611286",
            "nbody.Body.setVZ(D)V": "8.620689655172415",
            "nbody.Body.setVY(D)V": "6.112852664576803",
            "nbody.Body.setX(D)V": "2.0376175548589344"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.284831846259437",
            "richards.Scheduler.schedule()V": "10.638297872340425",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.628689087165409",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.5888812628689095",
            "Richards.benchmark()Ljava/lang/Object;": "10.775566231983529",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.9121482498284146",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.706245710363761",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.284831846259437",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.431708991077557",
            "richards.RBObject.<init>()V": "11.599176389842142"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.7968675842429995",
            "json.JsonPureStringParser.isWhiteSpace()Z": "2.2781205505457995",
            "java.lang.String.isLatin1()Z": "2.0408163265306123",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "6.027527289985762",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "30.944470811580445",
            "java.lang.String.<init>([BB)V": "5.980066445182724",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.7527289985761745",
            "java.lang.String.substring(II)Ljava/lang/String;": "2.5628856193640246",
            "json.JsonPureStringParser.read()V": "15.187470336971998",
            "java.util.Arrays.copyOfRange([BII)[B": "11.817750355956335"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "44.88567990373044",
            "java.lang.invoke.DirectMethodHandle.shouldBeInitialized(Ljava/lang/invoke/MemberName;)Z": "0.12033694344163658",
            "Permute.permute(I)V": "54.63297232250301",
            "Permute.benchmark()Ljava/lang/Object;": "0.24067388688327315",
            "java.util.ArrayList.get(I)Ljava/lang/Object;": "0.12033694344163658"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.8",
            "richards.Packet::setLink": "2.3",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.8",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.6",
            "richards.RBObject::<init>": "5.9"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.LambdaFormEditor$TransformKey::of": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantNameAndType": "0.0",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Mandelbrot::mandelbrot": "97.0",
            "java.lang.invoke.LambdaForm$MH.0x0000000801008400::invoke": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "8.5",
            "List::makeList": "0.8",
            "java.lang.invoke.LambdaForm$Name::useCount": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "1.8",
            "List::isShorterThan": "80.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.8",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.5",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.6",
            "json.JsonPureStringParser::read": "13.1",
            "java.lang.String::<init>": "4.8",
            "java.util.Arrays::copyOfRange": "7.5",
            "java.lang.String::equals": "23.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.7",
            "AGCT::Unknown Java[ERR=-5]": "9.7",
            "java.lang.String::isLatin1": "3.2",
            "json.JsonPureStringParser::isDigit": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.7"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.1",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.9",
            "havlak.HavlakLoopFinder::findLoops": "5.8",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "4.1",
            "AGCT::Unknown not Java[ERR=-3]": "7.9",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "5.1",
            "som.Vector::hasSome": "2.3",
            "som.Vector::forEach": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "39.6",
            "Permute::permute": "50.3",
            "Permute::benchmark": "0.1",
            "jdk.internal.org.objectweb.asm.SymbolTable::<init>": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.StringCoding::implEncodeAsciiArray": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "java.lang.invoke.LambdaForm$Name::replaceNames": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "6.0"
        },
        "Queens.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Queens::getRowColumn": "56.2",
            "Queens::benchmark": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "14.6",
            "Queens::setRowColumn": "23.0",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.1",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.7",
            "java.util.Arrays::setAll": "34.6",
            "som.Random::next": "11.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "6.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.util.ImmutableCollections$ListN::size": "0.0",
            "Sieve::sieve": "83.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "java.util.Arrays::fill": "7.8"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "3.8",
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "17.1",
            "deltablue.Planner::addPropagate": "3.3",
            "som.Vector::append": "4.2",
            "AGCT::Unknown not Java[ERR=-3]": "14.0",
            "AGCT::Unknown Java[ERR=-5]": "12.9",
            "deltablue.EqualityConstraint::execute": "2.9",
            "deltablue.BinaryConstraint::chooseMethod": "2.9",
            "som.Vector::forEach": "10.4",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "2.9"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "16.9",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "76.1",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.8"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.7",
            "nbody.Body::getVZ": "0.4",
            "nbody.Body::setVZ": "8.7",
            "nbody.Body::getZ": "7.8",
            "nbody.Body::setVX": "28.1",
            "nbody.Body::setVY": "5.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "nbody.NBodySystem::advance": "41.1"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.0",
            "Towers::popDiskFrom": "21.1",
            "Towers::moveDisks": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "Towers::pushDisk": "35.2",
            "Towers$TowersDisk::setNext": "15.0",
            "AGCT::Unknown Java[ERR=-5]": "4.5",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.4",
            "Towers$TowersDisk::getNext": "3.4"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "15.2",
            "cd.RedBlackTree::forEach": "3.5",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.3",
            "cd.CollisionDetector::isInVoxel": "22.6",
            "cd.RedBlackTree::treeInsert": "13.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.11%",
            "deltablue.EqualityConstraint.execute": "3.03%",
            "deltablue.AbstractConstraint.satisfy": "2.70%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "17.67%",
            "som.Vector.append": "2.68%",
            "som.Vector.<init>": "1.92%",
            "som.Vector.forEach": "7.48%",
            "itable": "4.67%",
            "deltablue.Planner.addPropagate": "3.09%",
            "deltablue.Variable.setValue": "3.63%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.16%",
            "som.Random.next": "0.93%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.75%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.35%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "1.89%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.54%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "LinearScanWalker::alloc_free_reg(Interval*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.43%",
            "som.Random.next": "10.46%",
            "java.util.Arrays.setAll": "35.26%",
            "Storage.lambda$buildTreeDepth$0": "4.21%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.57%",
            "SpinPause": "0.19%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.56%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.34%",
            "Storage.buildTreeDepth": "43.53%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.16%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.68%",
            "Towers.popDiskFrom": "18.95%",
            "Towers.moveDisks": "8.74%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "35.06%",
            "Towers.moveTopDisk": "4.02%",
            "Towers$TowersDisk.getSize": "10.52%",
            "Towers$TowersDisk.getNext": "3.84%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.33%",
            "cd.CollisionDetector.isInVoxel": "19.25%",
            "cd.RedBlackTree.forEach": "6.21%",
            "Node::set_req_X(unsigned": "2.11%",
            "cd.RedBlackTree.put": "6.43%",
            "cd.RedBlackTree.treeInsert": "12.80%",
            "cd.RedBlackTree.treeMinimum": "5.35%",
            "cd.RedBlackTree.findNode": "2.81%",
            "cd.Vector2D.compareNumbers": "3.90%",
            "cd.RedBlackTree.leftRotate": "2.17%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.09%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.19%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.63%",
            "som.Vector.append": "4.02%",
            "som.Vector.forEach": "2.12%",
            "som.IdentitySet.lambda$contains$0": "31.51%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.97%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.42%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.88%",
            "havlak.HavlakLoopFinder.doDFS": "5.64%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "7.70%",
            "Sieve.benchmark": "7.01%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "82.44%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.08%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.31%",
            "Permute.swap": "40.32%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "__futex_abstimed_wait_common": "0.04%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.85%",
            "nbody.Body.getZ": "7.79%",
            "nbody.Body.getY": "0.71%",
            "nbody.Body.setX": "1.19%",
            "nbody.Body.setY": "1.76%",
            "nbody.Body.setVX": "27.65%",
            "nbody.Body.setVY": "5.46%",
            "nbody.Body.getMass": "0.55%",
            "nbody.Body.getVZ": "0.49%",
            "nbody.NBodySystem.advance": "41.33%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.28%",
            "Interpreter": "0.05%",
            "List.makeList": "1.23%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.45%",
            "List$Element.length": "0.14%",
            "List.verifyResult": "0.06%",
            "List.isShorterThan": "81.67%",
            "List$Element.<init>": "0.17%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.52%",
            "java.lang.String.length": "3.48%",
            "java.lang.String.<init>": "4.81%",
            "json.JsonPureStringParser.readArray": "2.55%",
            "json.JsonPureStringParser.isWhiteSpace": "2.21%",
            "java.lang.String.isLatin1": "3.16%",
            "json.JsonPureStringParser.readStringInternal": "6.79%",
            "java.util.Arrays.copyOfRange": "8.26%",
            "java.lang.String.equals": "22.41%",
            "json.JsonPureStringParser.read": "14.47%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.98%",
            "Queens.verifyResult": "0.03%",
            "Queens.getRowColumn": "56.61%",
            "Queens.setRowColumn": "24.17%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.63%",
            "Queens.placeQueen": "14.24%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.15%",
            "Queens.benchmark": "0.06%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.20%",
            "Richards.benchmark": "5.00%",
            "richards.Packet.<init>": "6.78%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.80%",
            "itable": "37.11%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.31%",
            "richards.TaskControlBlock.<init>": "3.04%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.79%",
            "richards.RBObject.<init>": "5.83%",
            "richards.RBObject.append": "2.73%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "4.7",
            "Towers.moveDisks": "93.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.7"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.7",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.2",
            "deltablue.AbstractConstraint.satisfy": "11.1",
            "deltablue.Planner.removePropagateFrom": "9.9",
            "som.Vector.<init>": "26.4",
            "deltablue.Variable.<init>": "4.4",
            "som.Vector.forEach": "7.5",
            "deltablue.AbstractConstraint.<init>": "9.0",
            "deltablue.Planner.constraintsConsuming": "4.5",
            "deltablue.Plan.lambda$execute$0": "2.3",
            "deltablue.Planner.addConstraintsConsumingTo": "15.4"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "havlak.UnionFindNode.<init>": "3.4",
            "som.Vector.<init>": "42.8",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.6",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.6",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "13.9",
            "richards.Scheduler.createWorker": "0.0",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "84.8",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.5",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.4",
            "Bounce.benchmark": "55.4",
            "Bounce$Ball.<init>": "42.5",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.7",
            "som.Vector.<init>": "6.5",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "43.3",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "nbody.Body.getMass": "0.1",
            "nbody.NBodySystem.advance": "99.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.0",
            "List.isShorterThan": "76.9",
            "List$Element.<init>": "19.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "19.7",
            "Queens.placeQueen": "79.5",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.54649672938162",
            "java.lang.String.<init>(byte[], byte) String.java": "5.517061163935532",
            "json.JsonPureStringParser.isWhiteSpace()": "1.8460449119967632",
            "json.JsonPureStringParser.read()": "21.06935734034662",
            "java.lang.String.length() String.java": "3.0851709488165087",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.629981792433745",
            "java.lang.String.substring(int, int) String.java": "9.29765999055904",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.579169195495314",
            "json.JsonPureStringParser.readStringInternal()": "3.4139186728707265",
            "json.JsonPureStringParser.readValue()": "3.1526063793917327"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.608576602426714",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.607509338558845",
            "havlak.HavlakLoopFinder.findLoops()": "9.758465939410907",
            "som.Vector.<init>(int)": "2.8496820078557628",
            "som.Vector.append(Object)": "4.750199018467165",
            "havlak.HavlakLoopFinder$$Lambda$18.0x00000008000cc428.apply(Object)": "2.047047090831154",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.860135944922188",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.459325874150346",
            "som.Vector.removeAll()": "2.1629589453333455",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.80913472894124"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.308731959260511",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.14480861128541778",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.14480861128541778",
            "Queens.getRowColumn(int, int)": "65.74310952357966",
            "Queens.queens()": "0.6275039822368103",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.28961722257083555",
            "java.lang.invoke.DirectMethodHandle.make(byte, Class, MemberName, Class) DirectMethodHandle.java": "0.3057070682692153",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.22525783977731653",
            "Queens.setRowColumn(int, int, boolean)": "19.838779746102233",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3057070682692153"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.755288346273722",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.8442358408793318",
            "richards.TaskControlBlock.runTask()": "39.01296497796139",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.16797300038729",
            "richards.Scheduler.schedule()": "3.0134813639968283",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.3462921638419123",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.5003596259889718",
            "richards.RBObject.append(Packet, Packet)": "2.674141969275031",
            "Richards.benchmark()": "26.538553750253584",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.2425907825092675"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$7.0x00000008000c2aa0.apply(int)": "0.514133310482964",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2838444318291364",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.8354666295348164",
            "java.util.zip.ZipFile$Source.findEND() ZipFile.java": "0.08568888508049399",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.75339809984897",
            "java.lang.invoke.LambdaForm.normalize() LambdaForm.java": "0.13388888293827186",
            "som.Random.next()": "15.349021540043486",
            "Storage.buildTreeDepth(int, Random)": "36.101798395475626",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.422199847902229",
            "Storage$$Lambda$7.0x00000008000c2aa0.<init>(Storage, int, Random)": "0.36953331690963037"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "30.429702087675125",
            "Towers.pushDisk(Towers$TowersDisk, int)": "29.670766524918385",
            "Towers.moveDisks(int, int, int)": "8.023033091999855",
            "Towers$TowersDisk.getSize()": "1.9756417824143786",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.1445591548108082",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.16865234727927622",
            "Towers.moveTopDisk(int, int)": "8.263965016684535",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.1445591548108082",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "20.539446579369",
            "Towers.benchmark()": "0.22888532845044635"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.reflect.ClassFileAssembler.emitConstantPoolUTF8(String) ClassFileAssembler.java": "0.08981397280881973",
            "sun.nio.fs.LinuxFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.1347209592132296",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.12349421261212712",
            "com.yourkit.probes.ForeignKeyColumn.setValue(int, int) a": "0.10104071940992218",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.08981397280881973",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.23576167862315178",
            "Permute.permute(int)": "55.96533180649579",
            "sun.invoke.util.VerifyAccess.isTypeVisible(Class, Class) VerifyAccess.java": "0.11226746601102466",
            "Permute.benchmark()": "0.44906986404409865",
            "Permute.swap(int, int)": "42.43710215216731"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.89481366157439",
            "som.Vector.forEach(ForEachInterface)": "38.09477473971004",
            "deltablue.EqualityConstraint.execute()": "4.208426583633357",
            "deltablue.BinaryConstraint.getOutput()": "2.2380072005449065",
            "deltablue.BinaryConstraint.isSatisfied()": "2.043397878758393",
            "som.Vector.<init>(int)": "6.932957088644548",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.232752748856671",
            "som.Vector.append(Object)": "3.9165126009535864",
            "deltablue.Plan$$Lambda$24.0x00000008000ccd88.apply(Object)": "3.575946287827188",
            "deltablue.Planner$$Lambda$31.0x00000008000cd620.apply(Object)": "2.383964191884792"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "4.734772490169328",
            "java.util.zip.ZipUtils.LG(byte[], int) ZipUtils.java": "0.08025038118931063",
            "List.makeList(int)": "1.0566300189925901",
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.16050076237862126",
            "jdk.internal.loader.BuiltinClassLoader.getPermissions(CodeSource) BuiltinClassLoader.java": "0.0936254447208624",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.08025038118931063",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(int, int) MethodWriter.java": "0.10700050825241418",
            "List$Element.getNext()": "24.52986651686595",
            "java.lang.System.lineSeparator() System.java": "0.10700050825241418",
            "List.isShorterThan(List$Element, List$Element)": "68.74782655217611"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.9681973294818966",
            "nbody.Body.getZ()": "5.805474137320703",
            "nbody.Body.setX(double)": "0.5522280276963596",
            "nbody.Body.getMass()": "0.5522280276963596",
            "nbody.Body.getX()": "0.6938249578749133",
            "nbody.Body.setZ(double)": "1.2885320646248388",
            "nbody.NBodySystem.advance(double)": "43.20122339747674",
            "nbody.Body.setVY(double)": "6.895770499695566",
            "nbody.Body.setVZ(double)": "7.80199085283831",
            "nbody.Body.setVX(double)": "28.602579896067855"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.17521625427479",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07871743066306315",
            "java.nio.HeapCharBuffer.<init>(char[], int, int, MemorySegmentProxy) HeapCharBuffer.java": "0.07871743066306315",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.043731905923923974",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "8.746381184784796E-4",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.3586016285761766",
            "java.lang.invoke.ClassSpecializer$Factory.findGetters(Class, List) ClassSpecializer.java": "0.026239143554354385",
            "java.io.PrintStream.writeln(String) PrintStream.java": "8.746381184784796E-4",
            "com.yourkit.probes.Table.createRow() a": "0.1661812425109111",
            "java.lang.invoke.MemberName$Factory.resolve(byte, MemberName, Class, int, boolean) MemberName.java": "0.06997104947827835"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.08151193398598",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.113779539203215",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.390612522551832",
            "cd.RedBlackTree.findNode(Comparable)": "2.299547484546449",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "19.298453166129363",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.075922037206826",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "1.8485108396675636",
            "cd.RedBlackTree.put(Comparable, Object)": "6.144450031054982",
            "cd.Vector2D.compareNumbers(double, double)": "5.360681435035934",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.813522226494336"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.05059141362527952",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.53128067104451",
            "Sieve.benchmark()": "87.09817769728122",
            "jdk.internal.misc.Unsafe.weakCompareAndSetLong(Object, long, long, long) Unsafe.java": "0.09106454452550312",
            "java.lang.StringConcatHelper.prepend(long, byte[], String, String) StringConcatHelper.java": "0.09106454452550312",
            "java.util.concurrent.atomic.AtomicLong.addAndGet(long) AtomicLong.java": "0.09106454452550312",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.09106454452550312",
            "Run.measure(Benchmark)": "0.10118282725055903",
            "Sieve.sieve(boolean[], int)": "8.7421962744483",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.040473130900223614"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.05823998757546931",
            "Bounce.benchmark()": "61.65673351323018",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.368853254644639",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.15530663353458485",
            "Bounce.lambda$benchmark$0(Random, int)": "0.7765331676729241",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.3300265962609928",
            "java.util.jar.JarFile.<clinit>() JarFile.java": "0.03882665838364621",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.25237327949370036",
            "Bounce$Ball.bounce()": "35.00223253285706",
            "Bounce$Ball.<init>(Random)": "1.2424530682766788"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 20.934,
        "JavaFlightRecorder_Bounce.jfr": 22.82,
        "rebench_test_Async_Bounce.txt": 63.537,
        "Mandelbrot.hpl": 38.611999999999995,
        "List.hpl": 23.259,
        "rebench_test_Async_Towers.txt": 78.857,
        "JavaFlightRecorder_Storage.jfr": 57.421499999999995,
        "JavaFlightRecorder_Sieve.jfr": 30.798000000000002,
        "Permute.hpl": 29.9705,
        "Queens.hpl": 20.688499999999998,
        "JavaFlightRecorder_NBody.jfr": 21.457,
        "rebench_test_Async_Sieve.txt": 94.723,
        "JavaFlightRecorder_Richards.jfr": 92.161,
        "Storage.hpl": 60.413,
        "DeltaBlue.hpl": 12.0775,
        "Towers.hpl": 26.048499999999997,
        "JavaFlightRecorder_Json.jfr": 80.6555,
        "NBody.hpl": 21.48,
        "Bounce.hpl": 26.1785,
        "rebench_test_Async_List.txt": 72.64,
        "rebench_test_Async_Richards.txt": 278.6315,
        "rebench_test_Async_DeltaBlue.txt": 37.8875,
        "Richards.hpl": 93.0865,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.7645,
        "JavaFlightRecorder_Havlak.jfr": 158.474,
        "JavaFlightRecorder_List.jfr": 22.8735,
        "JavaFlightRecorder_CD.jfr": 41.878,
        "rebench_test_Async_Storage.txt": 171.663,
        "JavaFlightRecorder_DeltaBlue.jfr": 14.141,
        "rebench_test_Async_Mandelbrot.txt": 117.829,
        "JavaFlightRecorder_Towers.jfr": 25.7885,
        "Json.hpl": 81.531,
        "Havlak.hpl": 154.19,
        "rebench_test_Async_CD.txt": 151.9665,
        "rebench_test_Async_Havlak.txt": 503.3835,
        "Sieve.hpl": 31.162,
        "rebench_test_Async_Permute.txt": 86.5865,
        "rebench_test_Async_NBody.txt": 61.087,
        "JavaFlightRecorder_Permute.jfr": 29.8335,
        "CD.hpl": 42.3875,
        "rebench_test_Async_Json.txt": 279.164,
        "rebench_test_Async_Queens.txt": 62.7375
    },
    "Perf": {
        "NBody.data": {
            "[.] 0x00007f0790ad5c01": "4.34%",
            " ": "0",
            "[.] 0x00007f0790ad5bf9": "4.85%",
            "[.] 0x00007f0790ad5bfd": "19.25%",
            "[.] 0x00007f0790ad5c10": "5.20%",
            "[.] 0x00007f0790ad5bf5": "23.38%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007f6c6cad367c": "19.72%",
            "[.] 0x00007f6c6cad3554": "10.74%",
            "[.] 0x00007f6c6cad34dc": "13.89%",
            "[.] 0x00007f6c6cad3487": "2.56%",
            "[.] 0x00007f6c6cad3610": "25.70%"
        },
        "Havlak.data": {
            "[.] 0x00007fb9c0b2a700": "1.51%",
            " ": "0",
            "[.] 0x00007fb9c0b367fc": "16.62%",
            "[.] 0x00007fb9c0b06b53": "1.67%",
            "[.] 0x00007fb9c0b367f5": "16.66%",
            "[.] 0x00007fb9c0ae07c3": "1.18%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007f3608b30671": "7.10%",
            "[.] 0x00007f3608b30660": "3.75%",
            "[.] 0x00007f3608b306b5": "3.36%",
            "[.] 0x00007f3608af8dc0": "1.91%",
            "[.] 0x00007f3608af8e50": "3.62%"
        },
        "Queens.data": {
            "[.] 0x00007f8ec8ad396d": "3.46%",
            " ": "0",
            "[.] 0x00007f8ec8ad3b16": "4.28%",
            "[.] 0x00007f8ec8ad3aad": "26.37%",
            "[.] 0x00007f8ec8ad3a9e": "6.94%",
            "[.] 0x00007f8ec8ad3957": "3.48%"
        },
        "Towers.data": {
            "[.] 0x00007f510cad4746": "3.10%",
            " ": "0",
            "[.] 0x00007f510cad4b82": "10.98%",
            "[.] 0x00007f510cad4c05": "6.66%",
            "[.] 0x00007f510cad4ba3": "3.93%",
            "[.] 0x00007f510cad4b7d": "3.85%"
        },
        "Richards.data": {
            "[.] 0x00007f40a4646e3a": "10.05%",
            " ": "0",
            "[.] 0x00007f40a4646e9c": "6.77%",
            "[.] 0x00007f40a4af263a": "6.29%",
            "[.] 0x00007f40a4646e2f": "8.12%",
            "[.] 0x00007f40a4646e1b": "4.98%"
        },
        "Storage.data": {
            "[.] 0x00007f1984ad5c16": "6.88%",
            " ": "0",
            "[.] 0x00007f1984ad5cad": "4.72%",
            "[.] 0x00007f1984ad5b7f": "4.57%",
            "[.] 0x00007f1984ad5c5a": "6.03%",
            "[.] 0x00007f1984ad5cc9": "5.36%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007fd3c0b0dc00": "3.63%",
            "[.] 0x00007fd3c0b255ba": "3.04%",
            "[.] 0x00007fd3c0add919": "2.22%",
            "[.] 0x00007fd3c0addc17": "2.09%",
            "[.] 0x00007fd3c0b0dbe8": "5.30%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007f0768ad80f4": "6.05%",
            "[.] 0x00007f0768ad8158": "5.99%",
            "[.] 0x00007f0768ad8126": "6.04%",
            "[.] 0x00007f0768ad80c2": "5.68%",
            "[.] 0x00007f0768ad8100": "5.11%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007fa3a0ad43f5": "5.22%",
            "[.] 0x00007fa3a0ad42c5": "11.27%",
            "[.] 0x00007fa3a0ad42b5": "26.24%",
            "[.] 0x00007fa3a0ad44d5": "5.92%",
            "[.] 0x00007fa3a0ad4405": "5.05%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f8634adaf38": "20.53%",
            "[.] 0x00007f8634adaf82": "3.57%",
            "[.] 0x00007f8634adaf8c": "14.19%",
            "[.] 0x00007f8634adaf32": "3.59%",
            "[.] 0x00007f8634adaf8e": "27.44%"
        },
        "Bounce.data": {
            "[.] 0x00007fe2e0adffc0": "18.49%",
            " ": "0",
            "[.] 0x00007fe2e0ad5265": "4.39%",
            "[.] 0x00007fe2e0ad5277": "7.81%",
            "[.] 0x00007fe2e0adffb3": "11.29%",
            "[.] 0x00007fe2e0ad526a": "11.96%"
        },
        "Json.data": {
            "[.] 0x00007f49b0adcb2a": "2.67%",
            " ": "0",
            "[.] 0x00007f49b0adcb0b": "0.95%",
            "[.] 0x00007f49b0adc974": "1.48%",
            "[.] 0x00007f49b0adca16": "0.95%",
            "[.] 0x00007f49b0adc8e6": "1.46%"
        }
    }
}