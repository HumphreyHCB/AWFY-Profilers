{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "99.91103202846976",
            "java.security.SecureClassLoader$CodeSourceKey.<init>(Ljava/security/CodeSource;)V": "0.08896797153024912"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.322061191626409",
            " ": "0",
            "Queens.placeQueen(I)Z": "13.848631239935587",
            "Queens.getRowColumn(II)Z": "55.71658615136876",
            "java.util.Arrays.fill([ZZ)V": "0.644122383252818",
            "Queens.setRowColumn(IIZ)V": "29.146537842190014",
            "Queens.queens()Z": "0.322061191626409"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce$$Lambda$77+0x000000080100c618.1545242146.apply(I)Ljava/lang/Object;": "0.26490066225165565",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.13245033112582782",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.5298013245033113",
            "Bounce$Ball.bounce()Z": "77.48344370860927",
            "Bounce.benchmark()Ljava/lang/Object;": "17.6158940397351",
            "som.Random.next()I": "1.589403973509934",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.251655629139073",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet.add(Ljava/lang/Object;)Ljava/lang/Object;": "0.13245033112582782"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.864937388193202",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.10375670840787",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.238819320214669",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.864042933810376",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.5491949910554563",
            "havlak.HavlakLoopFinder$$Lambda$80+0x000000080100f7a8.331418503.apply(Ljava/lang/Object;)V": "1.9454382826475851",
            "havlak.HavlakLoopFinder.findLoops()V": "6.551878354203936",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.203935599284437",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.191413237924866",
            "som.Vector.append(Ljava/lang/Object;)V": "3.6001788908765655"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "17.4508126603935",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "2.5662959794696323",
            "cd.RedBlackTree.rightRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.2241231822070144",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.737382378100941",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.448246364414029",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "24.03763900769889",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.790419161676647",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.442258340461933",
            "cd.Vector2D.compareNumbers(DD)I": "6.757912745936698",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "15.654405474764756"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.75510204081633",
            " ": "0",
            "List$Element.getNext()LList$Element;": "8.309037900874635",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.2915451895043732",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.186588921282799",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/MemberName;": "0.1457725947521866",
            "java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;": "0.1457725947521866",
            "List$Element.setNext(LList$Element;)V": "0.1457725947521866",
            "List.makeList(I)LList$Element;": "1.0204081632653061"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "6.688963210702341",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.013377926421405",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "11.036789297658864",
            "deltablue.ScaleConstraint.execute()V": "3.678929765886288",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "5.68561872909699",
            "deltablue.Variable.<init>()V": "10.033444816053512",
            "som.Vector.<init>(I)V": "2.6755852842809364",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "3.0100334448160533",
            "som.Dictionary.hash(Lsom/Dictionary$CustomHash;)I": "17.05685618729097",
            "som.Vector.append(Ljava/lang/Object;)V": "9.364548494983278"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.7912355447352404",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.426049908703591",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "38.28362751065125",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.1564211807668898",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.06086427267194157",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "4.077906269020085",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.370054777845404",
            "som.Random.next()I": "10.407790626902008",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12172854534388314",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.30432136335970783"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.10893246187363835",
            "Sieve.benchmark()Ljava/lang/Object;": "5.882352941176471",
            "java.util.Arrays.fill([ZZ)V": "4.357298474945534",
            "Sieve.sieve([ZI)I": "89.54248366013073",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.10893246187363835"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.209150326797385",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.183006535947713",
            "Towers.moveDisks(III)V": "4.705882352941177",
            "Towers$TowersDisk.getSize()I": "10.84967320261438",
            "Towers.benchmark()Ljava/lang/Object;": "0.13071895424836602",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.13071895424836602",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "36.993464052287585",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.568627450980394",
            "Towers.moveTopDisk(II)V": "5.228758169934641"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "0.9404388714733543",
            "nbody.Body.getMass()D": "0.4702194357366771",
            "nbody.Body.setVX(D)V": "28.056426332288403",
            "nbody.NBodySystem.advance(D)V": "41.53605015673982",
            "nbody.Body.getY()D": "1.2539184952978057",
            "nbody.Body.getX()D": "0.4702194357366771",
            "nbody.Body.getZ()D": "8.934169278996865",
            "nbody.Body.setVZ(D)V": "8.777429467084641",
            "nbody.Body.setVY(D)V": "7.366771159874609",
            "nbody.Body.setX(D)V": "1.7241379310344829"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.957446808510639",
            "richards.Scheduler.schedule()V": "10.638297872340427",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "14.326241134751774",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.319148936170214",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.184397163120567",
            "Richards.benchmark()Ljava/lang/Object;": "7.872340425531916",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.539007092198582",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.822695035460994",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.900709219858156",
            "richards.RBObject.<init>()V": "10.0"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.333333333333333",
            "json.JsonPureStringParser.isDigit()Z": "4.084507042253521",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "23.568075117370892",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.070422535211267",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "12.065727699530516",
            "java.lang.String.<init>([BB)V": "4.553990610328638",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.272300469483568",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "3.0516431924882625",
            "json.JsonPureStringParser.read()V": "15.352112676056338",
            "java.util.Arrays.copyOfRange([BII)[B": "5.446009389671361"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "43.04715840386941",
            "Run.printTotal()V": "0.12091898428053205",
            "Permute.permute(I)V": "56.83192261185006"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.TaskControlBlock::runTask": "2.1",
            "richards.Packet::<init>": "6.5",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.2",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "46.5",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.1",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.9"
        },
        "Mandelbrot.hpl": {
            "java.lang.String::<init>": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "jdk.internal.org.objectweb.asm.ByteVector::putByte": "0.0",
            "Mandelbrot::mandelbrot": "98.1",
            "java.util.concurrent.ConcurrentHashMap$Node::<init>": "0.0",
            "jdk.internal.org.objectweb.asm.Type::getDescriptor": "0.0"
        },
        "List.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "List$Element::getNext": "9.2",
            "List::makeList": "0.8",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "List::tail": "2.2",
            "List::isShorterThan": "79.7",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.4",
            "json.JsonPureStringParser::read": "15.5",
            "java.lang.String::<init>": "6.1",
            "java.lang.String::length": "3.5",
            "java.util.Arrays::copyOfRange": "8.2",
            "java.lang.String::equals": "21.2",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "10.4",
            "java.lang.String::isLatin1": "2.8",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.9",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.1",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.1",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::hasSome": "1.9",
            "som.Vector::forEach": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "38.9",
            "Permute::permute": "52.0",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "6.1",
            "java.lang.invoke.MemberName::getFieldType": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "55.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "14.1",
            "Queens::setRowColumn": "25.2",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.2",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.2",
            "java.util.Arrays::setAll": "34.6",
            "som.Random::next": "11.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "6.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Sieve::sieve": "85.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0",
            "java.util.Arrays::fill": "5.2"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "4.7",
            "deltablue.Planner::addPropagate": "2.4",
            "som.Vector::append": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "10.0",
            "AGCT::Unknown Java[ERR=-5]": "19.3",
            "deltablue.AbstractConstraint::satisfy": "2.7",
            "deltablue.EqualityConstraint::execute": "2.3",
            "som.Vector::<init>": "2.9",
            "som.Vector::forEach": "24.4",
            "som.Dictionary::getBucketIdx": "4.1"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.3",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "76.7",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.3",
            "som.Random::next": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.4",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.7",
            "nbody.Body::getZ": "8.3",
            "nbody.Body::setVX": "27.2",
            "nbody.Body::setVY": "5.5",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "nbody.NBodySystem::advance": "41.7"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.9",
            "Towers::popDiskFrom": "22.8",
            "Towers::moveDisks": "3.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "Towers::pushDisk": "33.2",
            "Towers$TowersDisk::setNext": "14.5",
            "AGCT::Unknown Java[ERR=-5]": "3.7",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.7",
            "Towers$TowersDisk::getNext": "3.7"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "13.7",
            "cd.RedBlackTree::forEach": "4.0",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "9.9",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.6",
            "cd.CollisionDetector::isInVoxel": "21.4",
            "cd.RedBlackTree::treeInsert": "13.9"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "4.74%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "2.15%",
            "deltablue.AbstractConstraint.satisfy": "2.93%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "5.51%",
            "som.Vector.append": "3.85%",
            "som.Vector.forEach": "25.08%",
            "itable": "3.38%",
            "deltablue.Planner.addPropagate": "2.47%",
            "deltablue.Plan.lambda$execute$0": "3.45%",
            "deltablue.ScaleConstraint.execute": "2.43%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "72.19%",
            "som.Random.next": "0.94%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.77%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.86%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.95%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.13%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.53%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.65%",
            "java.util.Arrays.setAll": "35.00%",
            "Storage.lambda$buildTreeDepth$0": "3.83%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.51%",
            "SpinPause": "0.20%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.57%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.34%",
            "Storage.buildTreeDepth": "43.92%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.21%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.38%",
            "Towers.popDiskFrom": "19.71%",
            "Towers.moveDisks": "8.43%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.47%",
            "Towers.moveTopDisk": "4.22%",
            "Towers$TowersDisk.getSize": "10.56%",
            "Towers$TowersDisk.getNext": "3.81%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.13%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.38%",
            "cd.CollisionDetector.isInVoxel": "19.15%",
            "cd.RedBlackTree.forEach": "6.17%",
            "Node::set_req_X(unsigned": "2.10%",
            "cd.RedBlackTree.put": "6.61%",
            "cd.RedBlackTree.treeInsert": "12.50%",
            "cd.RedBlackTree.treeMinimum": "5.49%",
            "cd.RedBlackTree.findNode": "2.84%",
            "cd.Vector2D.compareNumbers": "3.84%",
            "cd.RedBlackTree.leftRotate": "2.15%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.24%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.42%",
            "som.Vector.hasSome": "2.32%",
            "som.Vector.append": "3.93%",
            "som.Vector.forEach": "2.14%",
            "som.IdentitySet.lambda$contains$0": "31.12%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.69%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.22%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.08%",
            "havlak.HavlakLoopFinder.doDFS": "5.58%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.28%",
            "Sieve.benchmark": "7.01%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "84.54%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.32%",
            "Permute.swap": "40.37%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "I2C/C2I": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.39%",
            "nbody.Body.getZ": "8.00%",
            "nbody.Body.getY": "0.75%",
            "nbody.Body.setX": "1.52%",
            "nbody.Body.setY": "1.55%",
            "nbody.Body.setZ": "0.36%",
            "nbody.Body.setVX": "28.83%",
            "nbody.Body.setVY": "6.08%",
            "nbody.Body.getMass": "0.58%",
            "nbody.NBodySystem.advance": "39.94%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.23%",
            "Interpreter": "0.05%",
            "List.makeList": "1.11%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.45%",
            "List$Element.length": "0.16%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.78%",
            "List$Element.<init>": "0.17%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.32%",
            "java.lang.String.length": "3.57%",
            "java.lang.String.substring": "2.54%",
            "java.lang.String.<init>": "4.75%",
            "java.lang.String.isLatin1": "3.17%",
            "json.JsonPureStringParser.readStringInternal": "7.01%",
            "java.util.Arrays.copyOfRange": "8.74%",
            "java.lang.String.equals": "20.31%",
            "json.JsonPureStringParser.read": "13.06%",
            "json.JsonPureStringParser.readValue": "2.93%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.01%",
            "Queens.getRowColumn": "56.75%",
            "Queens.setRowColumn": "23.99%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.63%",
            "Queens.placeQueen": "14.11%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.15%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.07%",
            "Richards.benchmark": "4.63%",
            "richards.Packet.<init>": "6.89%",
            "richards.HandlerTaskDataRecord.workInAdd": "3.84%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.72%",
            "itable": "37.01%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.42%",
            "richards.TaskControlBlock.<init>": "3.13%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.99%",
            "richards.RBObject.<init>": "5.37%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.7",
            "Towers.moveDisks": "93.7",
            "java.io.PrintStream.println": "0.2",
            "Towers.moveTopDisk": "0.3",
            "java.io.PrintStream.println0": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.7",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.6",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.5",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.1",
            "deltablue.AbstractConstraint.satisfy": "15.2",
            "deltablue.Planner.removePropagateFrom": "8.7",
            "som.Vector.<init>": "27.1",
            "deltablue.Variable.<init>": "5.1",
            "som.Vector.forEach": "8.0",
            "deltablue.Planner.addPropagate": "2.2",
            "deltablue.Planner.constraintsConsuming": "5.4",
            "deltablue.AbstractConstraint.<init>": "3.8",
            "deltablue.Planner.addConstraintsConsumingTo": "16.9"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.6",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.4",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "84.2",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "54.2",
            "Bounce$Ball.<init>": "44.6",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "8.0",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.6",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "14.4",
            "cd.RedBlackTree$Node.<init>": "8.4",
            "cd.RedBlackTree$Entry.<init>": "4.9"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "nbody.Body.<init>": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.swap": "0.1",
            "Permute.benchmark": "0.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.getSuiteFromName": "0.1",
            "List.tail": "3.3",
            "List$Element.length": "0.2",
            "Harness.processArguments": "0.1",
            "List.isShorterThan": "75.5",
            "List$Element.<init>": "20.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "som.Random.next": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.2",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "java.util.Arrays.fill": "0.2",
            "Queens.getRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "20.5",
            "Queens.placeQueen": "78.6",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "21.59073735117799",
            "java.lang.String.<init>(byte[], byte) String.java": "6.544810330640964",
            "json.JsonPureStringParser.read()": "22.111299558361747",
            "java.lang.String.length() String.java": "3.232523383318501",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.0310154321505944",
            "json.JsonArray.<init>()": "2.120031569579017",
            "java.lang.String.substring(int, int) String.java": "10.453224966835153",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "5.860522913133282",
            "json.JsonPureStringParser.readStringInternal()": "3.761481755134256",
            "json.JsonPureStringParser.readValue()": "1.7212137495592017"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "1.8200246783007232",
            "som.Vector.forEach(ForEachInterface)": "1.9566367001586469",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.526176626123746",
            "havlak.HavlakLoopFinder.findLoops()": "5.777366472765734",
            "som.Vector.<init>(int)": "2.1879957694341625",
            "som.Vector.append(Object)": "3.0561431341441927",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "13.352723426758335",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.379252600035258",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.120394852811565",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.588136788295444"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.01188799012236",
            "com.yourkit.probes.WriteCounter.update(long) a": "0.14246592689914994",
            "java.lang.invoke.LambdaForm$NamedFunction.returnType() LambdaForm.java": "0.2532727589318221",
            "Queens.getRowColumn(int, int)": "58.8700869042154",
            "Queens.queens()": "1.0130910357272884",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.2849318537982999",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.5671251958906494",
            "Queens.setRowColumn(int, int, boolean)": "24.1400598356893",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.22161366406534436",
            "com.yourkit.probes.builtin.Files$FileOutputStream_write_arrayRange_Probe.onExit(int, Throwable) a": "0.14246592689914994"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.081484077781916",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.0409355444076906",
            "richards.TaskControlBlock.runTask()": "37.01797045572375",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.767881005060352",
            "richards.Scheduler.schedule()": "2.8879785610491653",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "2.0263313544655963",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.5159587285592235",
            "richards.RBObject.append(Packet, Packet)": "3.161807122463435",
            "Richards.benchmark()": "27.3865071889125",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.8875915500156997"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.5753833627357852",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1127697109512826",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.1519880580811508",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "44.239381191477825",
            "som.Random.next()": "13.977473198534405",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.6459492468448909",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.2659791016420139",
            "Storage.buildTreeDepth(int, Random)": "35.755190663590724",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.790066494775411",
            "jdk.internal.misc.Unsafe.allocateInstance(Class) Unsafe.java (native)": "0.1357036232867418"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.06476158062987",
            "Towers.popDiskFrom(int)": "31.54209867389481",
            "Towers.moveDisks(int, int, int)": "9.796890763452492",
            "Towers$TowersDisk.getSize()": "0.9845510568730172",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.26740892902723923",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.12154951319419964",
            "Towers.moveTopDisk(int, int)": "7.6454643799151585",
            "Benchmark.innerBenchmarkLoop(int)": "0.352493588263179",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.02908679850737",
            "java.util.zip.ZipUtils.CENEXT(byte[], int) ZipUtils.java": "0.13370446451361961"
        },
        "YourKit_Permute.txt": {
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.10141759257172477",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.32679002050889094",
            "Benchmark.innerBenchmarkLoop(int)": "0.10141759257172477",
            "Permute.permute(int)": "56.083928692163795",
            "java.lang.String.getBytes(byte[], int, int, byte, int) String.java": "0.2704469135245994",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.12395483536544137",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.06761172838114984",
            "com.yourkit.probes.Table.createRow() a": "0.10141759257172477",
            "Permute.benchmark()": "0.43947623447747397",
            "Permute.swap(int, int)": "42.34747920939352"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.042678874695414",
            "som.Vector.forEach(ForEachInterface)": "27.689581333530235",
            "deltablue.EqualityConstraint.execute()": "4.116517758251495",
            "deltablue.BinaryConstraint.getOutput()": "3.1566122720224463",
            "deltablue.BinaryConstraint.isSatisfied()": "1.8459720889020155",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.079598316473454",
            "java.util.Arrays.copyOf(Object[], int) Arrays.java": "1.9382706933471165",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.621280366240862",
            "som.Vector.append(Object)": "2.3259248320165398",
            "deltablue.Plan$$Lambda$23.0x00000008000ccd88.apply(Object)": "27.929557705087493"
        },
        "YourKit_List.txt": {
            "jdk.internal.org.objectweb.asm.AnnotationWriter.create(SymbolTable, String, AnnotationWriter) AnnotationWriter.java": "0.12867694366523405",
            "List.tail(List$Element, List$Element, List$Element)": "5.069871580410222",
            "List$Element.<init>(Object)": "0.11580924929871066",
            "List.makeList(int)": "0.2444861929639447",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.34742774789613196",
            "List$Element.setNext(List$Element)": "0.11580924929871066",
            "List$Element.getNext()": "21.09015106673186",
            "java.lang.Long.stringSize(long) Long.java": "0.10294155493218723",
            "List.isShorterThan(List$Element, List$Element)": "72.34217772859458",
            "java.util.jar.JarFile$JarFileEntry.<init>(JarFile, String) JarFile.java": "0.11580924929871066"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.9406631762652697",
            "nbody.Body.getZ()": "5.5567190226876075",
            "nbody.Body.setX(double)": "0.8237347294938916",
            "nbody.Body.getX()": "0.3909249563699825",
            "nbody.Body.setZ(double)": "0.40488656195462475",
            "nbody.NBodySystem.advance(double)": "49.03315881326351",
            "nbody.Body.setVY(double)": "5.0541012216404875",
            "nbody.Body.setVZ(double)": "10.19197207678883",
            "nbody.Body.setVX(double)": "24.195462478184986",
            "nbody.Body.setY(double)": "0.30715532286212904"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.56404834625525",
            "jdk.internal.org.objectweb.asm.Frame.push(SymbolTable, String) Frame.java": "0.0",
            "java.lang.StringLatin1.charAt(byte[], int) StringLatin1.java": "0.09571792796790839",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(int, String, String, String) MethodWriter.java": "0.0",
            "java.util.ImmutableCollections$ListN.size() ImmutableCollections.java": "0.0087016298152644",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "8.701629815264399E-4",
            "sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.0",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.33066193298004715"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.228221737003147",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.440516441867423",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.284400855868025",
            "cd.RedBlackTree.findNode(Comparable)": "9.471508796015685",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.4413781519969024",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.599735644858584",
            "cd.RedBlackTree.put(Comparable, Object)": "6.579668022521304",
            "cd.Vector2D.compareNumbers(double, double)": "8.441838217574503",
            "cd.Simulator.simulate(double)": "1.7088150025194064",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.4473005834799935"
        },
        "YourKit_Sieve.txt": {
            "com.yourkit.probes.Table.shouldIgnoreRow(int) a": "0.09868096444195915",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.12061006765128339",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.30700744493053955",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.842044669583237",
            "Benchmark.innerBenchmarkLoop(int)": "0.1973619288839183",
            "Sieve.benchmark()": "90.33694067081126",
            "com.yourkit.probes.Table.createRow() a": "0.10964551604662126",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.03289365481398638",
            "Sieve.sieve(boolean[], int)": "6.798021994890519",
            "java.lang.ClassLoader.checkCerts(String, CodeSource) ClassLoader.java": "0.13157461925594552"
        },
        "YourKit_Bounce.txt": {
            "Bounce.benchmark()": "65.12806727852232",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.30720786452133175",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17280442379324912",
            "Bounce.lambda$benchmark$0(Random, int)": "0.7680196613033293",
            "som.Random.next()": "0.19200491532583233",
            "java.util.jar.Attributes.putValue(String, String) Attributes.java": "0.34560884758649824",
            "java.security.SecureClassLoader.getPermissions(CodeSource) SecureClassLoader.java": "0.19200491532583233",
            "jdk.internal.org.objectweb.asm.Frame.accept(MethodWriter) Frame.java": "0.34560884758649824",
            "Bounce$Ball.bounce()": "31.488806113436507",
            "Bounce$Ball.<init>(Random)": "0.65281671210783"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 20.984,
        "JavaFlightRecorder_Bounce.jfr": 26.438000000000002,
        "rebench_test_Async_Bounce.txt": 64.5535,
        "Mandelbrot.hpl": 37.8455,
        "rebench_test_Async_Towers.txt": 78.65899999999999,
        "JavaFlightRecorder_Storage.jfr": 58.914500000000004,
        "List.hpl": 22.3505,
        "JavaFlightRecorder_Sieve.jfr": 30.801000000000002,
        "Permute.hpl": 29.868499999999997,
        "Queens.hpl": 20.89,
        "JavaFlightRecorder_NBody.jfr": 21.484,
        "rebench_test_Async_Sieve.txt": 87.2705,
        "JavaFlightRecorder_Richards.jfr": 91.373,
        "Storage.hpl": 59.2595,
        "DeltaBlue.hpl": 15.204,
        "Towers.hpl": 25.8475,
        "Bounce.hpl": 26.33,
        "JavaFlightRecorder_Json.jfr": 81.3145,
        "NBody.hpl": 21.471,
        "rebench_test_Async_List.txt": 71.9325,
        "rebench_test_Async_Richards.txt": 272.198,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.8475,
        "Richards.hpl": 90.668,
        "rebench_test_Async_DeltaBlue.txt": 45.204,
        "JavaFlightRecorder_Havlak.jfr": 158.94549999999998,
        "JavaFlightRecorder_List.jfr": 23.447,
        "JavaFlightRecorder_CD.jfr": 42.266999999999996,
        "rebench_test_Async_Storage.txt": 165.80700000000002,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.413499999999999,
        "rebench_test_Async_Mandelbrot.txt": 106.056,
        "Json.hpl": 79.9315,
        "JavaFlightRecorder_Towers.jfr": 26.359,
        "Havlak.hpl": 154.8965,
        "rebench_test_Async_CD.txt": 146.8375,
        "rebench_test_Async_Havlak.txt": 515.806,
        "Sieve.hpl": 30.567,
        "rebench_test_Async_Permute.txt": 85.862,
        "rebench_test_Async_NBody.txt": 61.4565,
        "JavaFlightRecorder_Permute.jfr": 29.632,
        "CD.hpl": 42.431,
        "rebench_test_Async_Queens.txt": 61.480999999999995,
        "rebench_test_Async_Json.txt": 272.0855
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007fe250ad5881": "4.40%",
            "[.] 0x00007fe250ad5890": "5.53%",
            "[.] 0x00007fe250ad5838": "4.47%",
            "[.] 0x00007fe250ad587d": "19.22%",
            "[.] 0x00007fe250ad5875": "22.50%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007fe044ad3807": "2.61%",
            "[.] 0x00007fe044ad38d4": "10.82%",
            "[.] 0x00007fe044ad39fc": "19.54%",
            "[.] 0x00007fe044ad385c": "14.16%",
            "[.] 0x00007fe044ad3990": "25.57%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007f5200ae0643": "1.15%",
            "[.] 0x00007f5200af79d1": "1.73%",
            "[.] 0x00007f5200b3417c": "16.71%",
            "[.] 0x00007f5200b34175": "16.79%",
            "[.] 0x00007f5200b21910": "1.60%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007f54d0b2fa05": "3.61%",
            "[.] 0x00007f54d0b2f9c4": "7.17%",
            "[.] 0x00007f54d0b2f9b3": "3.77%",
            "[.] 0x00007f54d0af8450": "3.34%",
            "[.] 0x00007f54d0af83c0": "1.83%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007f81c0ad34e8": "4.32%",
            "[.] 0x00007f81c0ad3622": "13.82%",
            "[.] 0x00007f81c0ad35de": "3.12%",
            "[.] 0x00007f81c0ad34d2": "4.95%",
            "[.] 0x00007f81c0ad35f0": "4.95%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007f8034ad4ac6": "3.64%",
            "[.] 0x00007f8034ad4f85": "6.77%",
            "[.] 0x00007f8034ad4efd": "3.01%",
            "[.] 0x00007f8034ad4f02": "9.43%",
            "[.] 0x00007f8034ad4f23": "3.57%"
        },
        "Richards.data": {
            "[.] 0x00007f0550646aaf": "8.29%",
            " ": "0",
            "[.] 0x00007f0550646b1c": "6.73%",
            "[.] 0x00007f0550646a9b": "4.94%",
            "[.] 0x00007f0550646aba": "10.64%",
            "[.] 0x00007f0550af293a": "6.01%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f304cad5e49": "5.04%",
            "[.] 0x00007f304cad5d96": "6.77%",
            "[.] 0x00007f304cad5dda": "6.03%",
            "[.] 0x00007f304cad5e2d": "4.83%",
            "[.] 0x00007f304cad5e25": "4.68%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007f96f8adbb11": "2.21%",
            "[.] 0x00007f96f8b01e68": "5.11%",
            "[.] 0x00007f96f8b0763a": "3.28%",
            "[.] 0x00007f96f8b01e80": "3.36%",
            "Node::set_req_X": "3.03%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007fac7cad77fc": "5.23%",
            "[.] 0x00007fac7cad77f0": "6.18%",
            "[.] 0x00007fac7cad7854": "5.93%",
            "[.] 0x00007fac7cad7822": "6.12%",
            "[.] 0x00007fac7cad77be": "5.34%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007f147cad3f75": "5.03%",
            "[.] 0x00007f147cad3e45": "11.13%",
            "[.] 0x00007f147cad3e35": "26.10%",
            "[.] 0x00007f147cad4055": "6.20%",
            "[.] 0x00007f147cad3f85": "4.84%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f55bcadab38": "19.88%",
            "[.] 0x00007f55bcadab32": "3.53%",
            "[.] 0x00007f55bcadab8c": "15.04%",
            "[.] 0x00007f55bcadab82": "3.45%",
            "[.] 0x00007f55bcadab8e": "28.15%"
        },
        "Bounce.data": {
            "[.] 0x00007fed48ad5a06": "8.42%",
            " ": "0",
            "[.] 0x00007fed48adc747": "26.48%",
            "[.] 0x00007fed48ad5a13": "5.41%",
            "[.] 0x00007fed48adc742": "9.89%",
            "[.] 0x00007fed48adc754": "15.89%"
        },
        "Json.data": {
            "[.] 0x00007f1768ada0e6": "1.41%",
            " ": "0",
            "[.] 0x00007f1768ada32a": "2.74%",
            "[.] 0x00007f1768ada30b": "0.91%",
            "[.] 0x00007f1768ada216": "1.04%",
            "[.] 0x00007f1768ada174": "1.41%"
        }
    }
}