{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.32",
            " ": "0",
            "Queens.placeQueen(I)Z": "15.84",
            "Queens.getRowColumn(II)Z": "57.6",
            "java.util.Arrays.fill([ZZ)V": "0.8",
            "Queens.setRowColumn(IIZ)V": "24.16",
            "Queens.queens()Z": "1.28"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.2893982808022921",
            "Bounce$Ball.bounce()Z": "79.65616045845272",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.14326647564469913",
            "Bounce.benchmark()Ljava/lang/Object;": "16.189111747851",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitEnd()V": "0.14326647564469913",
            "som.Random.next()I": "1.002865329512894",
            "Bounce$Ball.<init>(Lsom/Random;)V": "1.5759312320916905"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.99523052464229",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "39.109697933227345",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "4.92845786963434",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "12.877583465818761",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.4982966159436746",
            "havlak.HavlakLoopFinder$$Lambda$80+0x000000080100f7a8.331418503.apply(Ljava/lang/Object;)V": "1.97592550533727",
            "havlak.HavlakLoopFinder.findLoops()V": "6.813536225300931",
            "som.Vector.<init>(I)V": "2.475584828526005",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.133545310015898",
            "som.Vector.append(Ljava/lang/Object;)V": "5.246422893481717"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "16.902581182348044",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.0807660283097418",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.4979184013322233",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.328892589508743",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "26.56119900083264",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.8293089092422985",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "6.07826810990841",
            "cd.Vector2D.compareNumbers(DD)I": "4.746044962531224",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "15.237302248126563",
            "som.Vector.append(Ljava/lang/Object;)V": "2.0815986677768525"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "88.05513016845329",
            " ": "0",
            "List$Element.getNext()LList$Element;": "8.422664624808576",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.4594180704441041",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.5313935681470137",
            "List$Element.length()I": "0.15313935681470137",
            "List.makeList(I)LList$Element;": "1.3782542113323122"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "9.49367088607595",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.4810126582278484",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "12.341772151898734",
            "deltablue.Planner.chainTest(I)V": "2.848101265822785",
            "deltablue.Planner$$Lambda$85+0x0000000801012868.597190999.apply(Ljava/lang/Object;)V": "2.5316455696202533",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.113924050632912",
            "deltablue.Variable.<init>()V": "8.860759493670887",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "4.113924050632912",
            "som.Dictionary.hash(Lsom/Dictionary$CustomHash;)I": "18.67088607594937",
            "som.Vector.append(Ljava/lang/Object;)V": "8.860759493670887"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.9673518742442564",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.3022974607013301",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "34.46191051995164",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.0278113663845225",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "2.5392986698911733",
            "Storage.benchmark()Ljava/lang/Object;": "0.060459492140266025",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "46.553808948004836",
            "som.Random.next()I": "13.180169286577993",
            "Storage.verifyResult(Ljava/lang/Object;)Z": "0.060459492140266025",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.7859733978234583"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.1026694045174538",
            "Sieve.benchmark()Ljava/lang/Object;": "6.262833675564681",
            "java.util.Arrays.fill([ZZ)V": "6.262833675564681",
            "Sieve.sieve([ZI)I": "87.16632443531827",
            "java.io.PrintStream.println(Ljava/lang/String;)V": "0.1026694045174538",
            "java.nio.HeapCharBuffer.<init>([CIILjdk/internal/access/foreign/MemorySegmentProxy;)V": "0.1026694045174538"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "java.lang.String.charAt(I)C": "0.1297016861219196",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.21271076523995",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.24254215304799",
            "Towers.moveDisks(III)V": "3.7613488975356684",
            "Towers$TowersDisk.getSize()I": "8.430609597924773",
            "Towers.benchmark()Ljava/lang/Object;": "0.3891050583657588",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1297016861219196",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "40.07782101167316",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "23.476005188067447",
            "Towers.moveTopDisk(II)V": "4.020752269779507"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "0.9316770186335404",
            "nbody.Body.getMass()D": "0.3105590062111801",
            "nbody.Body.setVX(D)V": "29.6583850931677",
            "nbody.NBodySystem.advance(D)V": "42.857142857142854",
            "nbody.Body.getY()D": "1.3975155279503104",
            "NBody.innerBenchmarkLoop(I)Z": "0.6211180124223602",
            "nbody.Body.getZ()D": "7.453416149068323",
            "nbody.Body.setVZ(D)V": "9.006211180124224",
            "nbody.Body.setVY(D)V": "6.521739130434782",
            "nbody.Body.setX(D)V": "0.3105590062111801"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.401662049861496",
            "richards.Scheduler.schedule()V": "11.772853185595569",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.326869806094184",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "8.933518005540167",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.717451523545707",
            "Richards.benchmark()Ljava/lang/Object;": "9.349030470914128",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.1855955678670362",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.7091412742382275",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.4626038781163437",
            "richards.RBObject.<init>()V": "10.734072022160666"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.4386617100371746",
            "json.JsonPureStringParser.isDigit()Z": "3.62453531598513",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "2.8345724907063197",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "24.395910780669144",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.204460966542751",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "12.546468401486988",
            "java.lang.String.<init>([BB)V": "3.578066914498141",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.321561338289962",
            "json.JsonPureStringParser.read()V": "15.148698884758364",
            "java.util.Arrays.copyOfRange([BII)[B": "5.390334572490706"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "43.16546762589928",
            "Permute.permute(I)V": "56.83453237410072"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.6",
            "richards.Packet::setLink": "2.1",
            "Richards::benchmark": "5.5",
            "richards.RBObject::append": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "42.0",
            "richards.HandlerTaskDataRecord::workInAdd": "2.7",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "7.7",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "7.0"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.ClassSpecializer$SpeciesData::getterFunctions": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.1",
            "java.lang.invoke.LambdaForm::forceInterpretation": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "java.lang.invoke.LambdaForm$MH.0x0000000801007c00::invoke": "0.0",
            "java.lang.Class::initClassName": "0.0",
            "Mandelbrot::mandelbrot": "97.9",
            "java.lang.StringLatin1::hashCode": "0.0"
        },
        "List.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "List$Element::getNext": "9.0",
            "List::makeList": "0.9",
            "java.lang.Integer::valueOf": "0.1",
            "List::tail": "2.1",
            "List::isShorterThan": "81.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "List$Element::setNext": "0.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.3",
            "json.JsonPureStringParser::read": "14.9",
            "java.lang.String::<init>": "6.1",
            "java.lang.String::length": "3.2",
            "java.util.Arrays::copyOfRange": "7.7",
            "java.lang.String::equals": "21.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "10.5",
            "java.lang.String::isLatin1": "2.3",
            "json.JsonPureStringParser::readStringInternal": "9.3"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.7",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.1",
            "havlak.HavlakLoopFinder::findLoops": "5.6",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.9",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.6",
            "havlak.HavlakLoopFinder::doDFS": "5.6",
            "som.Vector::hasSome": "2.2",
            "som.Vector::<init>": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "40.0",
            "Permute::permute": "50.2",
            "Permute::benchmark": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "jdk.internal.org.objectweb.asm.ByteVector::putByte": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "5.9",
            "java.io.PrintStream::println": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.3",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "13.2",
            "Queens::setRowColumn": "23.7",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.2",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.2",
            "java.util.Arrays::setAll": "34.4",
            "som.Random::next": "12.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.8",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.3",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.7"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "sun.nio.cs.StreamEncoder::write": "0.0",
            "Sieve::sieve": "83.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "7.9",
            "java.lang.invoke.ClassSpecializer$SpeciesData::transformHelper": "0.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "5.0",
            "deltablue.Planner::addPropagate": "3.3",
            "deltablue.Variable::<init>": "5.1",
            "som.Vector::append": "5.1",
            "AGCT::Unknown not Java[ERR=-3]": "12.1",
            "AGCT::Unknown Java[ERR=-5]": "15.8",
            "deltablue.AbstractConstraint::satisfy": "2.5",
            "som.Dictionary::hash": "13.2",
            "som.Vector::forEach": "7.3",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.7",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "75.2",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "Bounce$Ball::<init>": "1.9"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.5",
            "nbody.Body::setX": "1.7",
            "nbody.Body::getY": "0.5",
            "nbody.Body::setVZ": "8.3",
            "nbody.Body::getZ": "8.2",
            "nbody.Body::setVX": "28.4",
            "nbody.Body::setVY": "6.0",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "nbody.NBodySystem::advance": "40.6"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.6",
            "Towers::popDiskFrom": "23.2",
            "Towers::moveDisks": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "Towers::pushDisk": "31.6",
            "Towers$TowersDisk::setNext": "15.1",
            "AGCT::Unknown Java[ERR=-5]": "3.8",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.0",
            "Towers$TowersDisk::getNext": "3.6"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.6",
            "cd.RedBlackTree::forEach": "4.0",
            "cd.RedBlackTree::put": "6.4",
            "cd.RedBlackTree::findNode": "3.0",
            "cd.RedBlackTree::treeMinimum": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "9.5",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.4",
            "cd.CollisionDetector::isInVoxel": "22.2",
            "cd.RedBlackTree::treeInsert": "13.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.10%",
            "deltablue.EqualityConstraint.execute": "3.00%",
            "deltablue.AbstractConstraint.satisfy": "2.83%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "16.89%",
            "som.Vector.append": "2.73%",
            "som.Vector.<init>": "2.47%",
            "som.Vector.forEach": "9.16%",
            "itable": "4.72%",
            "deltablue.Planner.chainTest": "4.09%",
            "deltablue.Planner.addPropagate": "2.90%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "75.35%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.04%",
            "som.Random.next": "0.84%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.64%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "17.69%",
            "Bounce$Ball.<init>": "1.71%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.04%",
            "clock_gettime@GLIBC_2.2.5": "0.02%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.34%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__futex_abstimed_wait_common": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.74%",
            "java.util.Arrays.setAll": "35.60%",
            "Storage.lambda$buildTreeDepth$0": "4.09%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.56%",
            "SpinPause": "0.22%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.57%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.31%",
            "Storage.buildTreeDepth": "43.30%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.12%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.59%",
            "Towers.popDiskFrom": "19.27%",
            "Towers.moveDisks": "8.57%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.87%",
            "Towers.moveTopDisk": "4.06%",
            "Towers$TowersDisk.getSize": "10.52%",
            "Towers$TowersDisk.getNext": "3.77%",
            "Towers.benchmark": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.15%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.85%",
            "cd.CollisionDetector.isInVoxel": "19.31%",
            "cd.RedBlackTree.forEach": "6.15%",
            "Node::set_req_X(unsigned": "2.36%",
            "cd.RedBlackTree.put": "6.72%",
            "cd.RedBlackTree.treeInsert": "12.64%",
            "cd.RedBlackTree.treeMinimum": "5.47%",
            "cd.RedBlackTree.findNode": "3.10%",
            "cd.Vector2D.compareNumbers": "3.76%",
            "cd.RedBlackTree.leftRotate": "2.15%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.43%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "10.84%",
            "som.Vector.hasSome": "2.84%",
            "som.Vector.append": "2.92%",
            "som.Vector.forEach": "1.93%",
            "som.IdentitySet.lambda$contains$0": "30.92%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.78%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.81%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.07%",
            "havlak.HavlakLoopFinder.doDFS": "5.81%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.76%",
            "Sieve.benchmark": "7.54%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "83.61%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.03%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.20%",
            "Permute.swap": "40.22%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "__futex_abstimed_wait_common": "0.02%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.79%",
            "nbody.Body.getZ": "7.85%",
            "nbody.Body.getY": "0.70%",
            "nbody.Body.setX": "1.20%",
            "nbody.Body.setY": "1.74%",
            "nbody.Body.setVX": "27.47%",
            "nbody.Body.setVY": "5.49%",
            "nbody.Body.getMass": "0.50%",
            "nbody.Body.getVZ": "0.49%",
            "nbody.NBodySystem.advance": "41.82%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.23%",
            "Interpreter": "0.05%",
            "List.makeList": "1.18%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.40%",
            "List$Element.length": "0.16%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.71%",
            "List$Element.<init>": "0.19%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.62%",
            "java.lang.String.length": "3.25%",
            "java.lang.String.<init>": "5.89%",
            "json.JsonPureStringParser.readArray": "2.70%",
            "java.lang.String.isLatin1": "3.11%",
            "json.JsonPureStringParser.readStringInternal": "6.76%",
            "java.util.Arrays.copyOfRange": "7.83%",
            "java.lang.String.equals": "21.43%",
            "json.JsonPureStringParser.read": "15.57%",
            "json.JsonPureStringParser.readValue": "2.30%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.04%",
            "Queens.getRowColumn": "55.69%",
            "Queens.setRowColumn": "24.46%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.60%",
            "Queens.placeQueen": "14.40%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.06%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.13%",
            "Richards.benchmark": "4.23%",
            "richards.Packet.<init>": "7.62%",
            "itable": "35.71%",
            "richards.TaskControlBlock.<init>": "3.26%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.02%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.63%",
            "richards.RBObject.<init>": "6.68%",
            "richards.RBObject.append": "3.04%",
            "richards.Packet.setLink": "2.60%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "5.1",
            "Towers.moveDisks": "93.0",
            "java.io.PrintStream.println": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.7",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.5",
            "java.io.PrintStream.println": "0.1",
            "Sieve.sieve": "92.6",
            "java.lang.Integer.valueOf": "0.3",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.4",
            "deltablue.AbstractConstraint.satisfy": "9.7",
            "deltablue.Planner.removePropagateFrom": "10.0",
            "som.Vector.<init>": "28.2",
            "deltablue.Variable.<init>": "5.1",
            "som.Vector.forEach": "7.5",
            "deltablue.Planner.addPropagate": "2.2",
            "deltablue.AbstractConstraint.<init>": "8.5",
            "deltablue.Planner.constraintsConsuming": "3.9",
            "deltablue.Planner.addConstraintsConsumingTo": "16.8"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0",
            "java.lang.System.nanoTime": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.5",
            "richards.Scheduler.createWorker": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.1",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.5",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.9",
            "Bounce.benchmark": "55.5",
            "Bounce$Ball.<init>": "43.0",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "3.0",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.4",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "43.3",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "97.8",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.3",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.1",
            "Run.printTotal": "0.1",
            "List.isShorterThan": "74.9",
            "List$Element.<init>": "21.1",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.6",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.5",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "Queens.setRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "18.4",
            "Queens.placeQueen": "80.8",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.935231146462534",
            "java.lang.String.<init>(byte[], byte) String.java": "6.450400266559588",
            "json.JsonPureStringParser.read()": "22.260288602014576",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.874913496287816",
            "java.lang.String.length() String.java": "2.6057908361598336",
            "json.JsonArray.<init>()": "1.973566174271874",
            "java.lang.String.substring(int, int) String.java": "10.068604919391356",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.2624415832956",
            "json.JsonPureStringParser.readStringInternal()": "3.404615240031782",
            "json.JsonPureStringParser.readValue()": "3.2593744393277917"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.488156802094914",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.067689225348093",
            "havlak.HavlakLoopFinder.findLoops()": "10.957868883430951",
            "som.Vector.<init>(int)": "2.4472866752490137",
            "som.Vector.append(Object)": "2.1968462075843926",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.102381820658264",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.300119947802937",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.318999644110916",
            "som.Vector.removeAll()": "2.9240023022948267",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.555085918655195"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.312093628088427",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "Queens.getRowColumn(int, int)": "60.7444733420026",
            "Queens.queens()": "1.3166449934980495",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.47139141742522755",
            "Queens.setRowColumn(int, int, boolean)": "21.81404421326398",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.14629388816644995",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14629388816644995",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.04876462938881665"
        },
        "YourKit_Richards.txt": {
            "richards.Scheduler$$Lambda$17.0x00000008000c7b98.apply(Packet, RBObject)": "3.4059331716265953",
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.124808528889162",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.823706015706939",
            "richards.Scheduler$$Lambda$16.0x00000008000c7970.apply(Packet, RBObject)": "3.496037223786029",
            "richards.TaskControlBlock.runTask()": "38.08878492883583",
            "richards.Scheduler.schedule()": "3.312224957380784",
            "richards.RBObject.append(Packet, Packet)": "2.7896214548560687",
            "Richards.benchmark()": "28.667505235045436",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.5966438042651658",
            "richards.Packet.setLink(Packet)": "1.5317688867103736"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.33533778176899215",
            "Storage$$Lambda$7.0x00000008000c2a98.<init>(Storage, int, Random)": "0.1136738243284719",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.250412067613191",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.449011606097464",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.38262609268964",
            "som.Random.next()": "14.788964545134196",
            "java.util.AbstractCollection.containsAll(Collection) AbstractCollection.java": "0.12504120676131908",
            "Storage.buildTreeDepth(int, Random)": "38.88213161155382",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.194234463630061",
            "jdk.internal.perf.Perf.createLong(String, int, int, long) Perf.java (native)": "0.07388798581350674"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "34.18607180404336",
            "Towers.popDiskFrom(int)": "29.146979565695506",
            "Towers.moveDisks(int, int, int)": "9.510229236402306",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.10875738643916233",
            "Towers.buildTowerAt(int, int)": "0.22959892692712047",
            "Towers$TowersDisk.getSize()": "1.631360796587435",
            "Towers.moveTopDisk(int, int)": "7.347165661667855",
            "java.io.RandomAccessFile.open(String, int) RandomAccessFile.java": "0.10875738643916233",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.17158290333885",
            "java.lang.Class.descriptorString() Class.java": "0.3746087755126703"
        },
        "YourKit_Permute.txt": {
            "javax.management.openmbean.OpenType.isAssignableFrom(OpenType) OpenType.java": "0.04541222951340795",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "0.001135305737835199",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.15894280329692784",
            "Permute.permute(int)": "56.84475829340842",
            "java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(Class, Object) InvokerBytecodeGenerator.java": "0.03405917213505597",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.022706114756703977",
            "java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls() LambdaFormBuffer.java": "0.0908244590268159",
            "Run.measure(Benchmark)": "0.001135305737835199",
            "Permute.benchmark()": "0.2157080901886878",
            "Permute.swap(int, int)": "42.58531822619831"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "7.363438274851605",
            "som.Vector.forEach(ForEachInterface)": "39.0462594234478",
            "deltablue.EqualityConstraint.execute()": "3.982267638440154",
            "deltablue.Plan$$Lambda$27.0x00000008000ccd88.apply(Object)": "2.9303478848899247",
            "deltablue.BinaryConstraint.isSatisfied()": "1.9786109650111456",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "7.689032484283819",
            "som.Vector.<init>(int)": "5.810604352944123",
            "deltablue.ScaleConstraint.execute()": "3.531444886918627",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.0287023818468706",
            "som.Vector.append(Object)": "2.078793798682596"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "3.7586360747941536",
            "List$Element.<init>(Object)": "0.24336492570609627",
            "List.makeList(int)": "0.39208793585982177",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.10816218920270944",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.04056082095101604",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.10816218920270944",
            "List$Element.getNext()": "24.05256682395251",
            "sun.nio.fs.UnixNativeDispatcher.stat(UnixPath, UnixFileAttributes) UnixNativeDispatcher.java": "0.0013520273650338682",
            "java.util.concurrent.ConcurrentHashMap$ValueIterator.<init>(ConcurrentHashMap$Node[], int, int, int, ConcurrentHashMap) ConcurrentHashMap.java": "0.02704054730067736",
            "List.isShorterThan(List$Element, List$Element)": "71.26536241093518"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.3343364515167428",
            "nbody.Body.getZ()": "5.848368276860618",
            "nbody.Body.setX(double)": "1.4053117946825269",
            "nbody.Body.getX()": "0.6955583630246851",
            "nbody.Body.setZ(double)": "0.6813632943915282",
            "nbody.NBodySystem.advance(double)": "44.203443723650395",
            "nbody.Body.setVY(double)": "7.196899797010517",
            "nbody.Body.setVZ(double)": "7.807287748236261",
            "nbody.Body.setVX(double)": "27.52423807969111",
            "nbody.Body.setY(double)": "0.6955583630246851"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.53809406723101",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.11415926095050756",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.05268888966946503",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.05268888966946503",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.026344444834732514",
            "java.nio.DirectByteBuffer.<init>(long, int) DirectByteBuffer.java": "0.01756296322315501",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.07903333450419754",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.026344444834732514",
            "java.lang.String.substring(int, int) String.java": "0.03512592644631002",
            "java.security.BasicPermission.newPermissionCollection() BasicPermission.java": "0.04390740805788752"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.0952864751700995",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.69135802469136",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.562944490625288",
            "cd.RedBlackTree.findNode(Comparable)": "7.4812967581047385",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "5.92654167051507",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.1326005972722517",
            "cd.RedBlackTree$Node.successor()": "2.1089252178196483",
            "cd.RedBlackTree.put(Comparable, Object)": "5.880360826329238",
            "cd.Vector2D.compareNumbers(double, double)": "11.345094054985992",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.271143129829747"
        },
        "YourKit_Sieve.txt": {
            "java.lang.AbstractStringBuilder.append(int) AbstractStringBuilder.java": "0.18673942588000952",
            "com.yourkit.probes.Table.ensureCreated() a": "0.09336971294000476",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.03112323764666826",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.2593603137222355",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.888143083897874",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, Object, Object) DirectMethodHandle$Holder": "0.09336971294000476",
            "Sieve.benchmark()": "91.27408160512911",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.05187206274444709",
            "com.yourkit.probes.Table.createRow() a": "0.09336971294000476",
            "Sieve.sieve(boolean[], int)": "6.006784865806973"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.fs.NativeBuffers.allocNativeBuffer(int) NativeBuffers.java": "0.3124145741398836",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.17573319795368453",
            "Bounce.benchmark()": "62.67817393681414",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.7419846135822236",
            "som.Random.next()": "0.17573319795368453",
            "Bounce.lambda$benchmark$0(Random, int)": "0.17573319795368453",
            "java.lang.Object.hashCode() Object.java (native)": "0.21478501972116998",
            "Bounce$Ball.bounce()": "34.20939586831725",
            "java.lang.StringConcatHelper.newArray(long) StringConcatHelper.java": "0.19525910883742723",
            "Bounce$Ball.<init>(Random)": "0.5662514156285391"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.0805,
        "JavaFlightRecorder_Bounce.jfr": 26.141,
        "rebench_test_Async_Bounce.txt": 71.941,
        "Mandelbrot.hpl": 37.695,
        "JavaFlightRecorder_Storage.jfr": 56.873999999999995,
        "List.hpl": 22.3965,
        "rebench_test_Async_Towers.txt": 76.12549999999999,
        "JavaFlightRecorder_Sieve.jfr": 31.907,
        "Queens.hpl": 21.0985,
        "JavaFlightRecorder_NBody.jfr": 21.669,
        "Permute.hpl": 29.889000000000003,
        "rebench_test_Async_Sieve.txt": 86.422,
        "JavaFlightRecorder_Richards.jfr": 92.6765,
        "Storage.hpl": 60.2515,
        "DeltaBlue.hpl": 12.120999999999999,
        "Towers.hpl": 26.2895,
        "JavaFlightRecorder_Json.jfr": 81.713,
        "Bounce.hpl": 25.813499999999998,
        "NBody.hpl": 21.29,
        "rebench_test_Async_List.txt": 74.0205,
        "rebench_test_Async_Richards.txt": 287.0005,
        "Richards.hpl": 97.8685,
        "rebench_test_Async_DeltaBlue.txt": 38.0525,
        "JavaFlightRecorder_Mandelbrot.jfr": 38.2345,
        "JavaFlightRecorder_Havlak.jfr": 157.9475,
        "JavaFlightRecorder_CD.jfr": 42.0925,
        "JavaFlightRecorder_List.jfr": 22.8405,
        "rebench_test_Async_Mandelbrot.txt": 113.0735,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.6105,
        "rebench_test_Async_Storage.txt": 174.5365,
        "Json.hpl": 79.00649999999999,
        "JavaFlightRecorder_Towers.jfr": 27.4465,
        "Havlak.hpl": 155.7825,
        "rebench_test_Async_CD.txt": 149.5675,
        "rebench_test_Async_Havlak.txt": 542.8915,
        "Sieve.hpl": 31.692500000000003,
        "rebench_test_Async_Permute.txt": 86.676,
        "JavaFlightRecorder_Permute.jfr": 29.990499999999997,
        "rebench_test_Async_NBody.txt": 60.667500000000004,
        "CD.hpl": 42.9915,
        "rebench_test_Async_Json.txt": 280.6785,
        "rebench_test_Async_Queens.txt": 60.07
    },
    "Perf": {
        "NBody.data": {
            "[.] 0x00007fc054ad607d": "19.23%",
            " ": "0",
            "[.] 0x00007fc054ad6075": "23.55%",
            "[.] 0x00007fc054ad6079": "4.67%",
            "[.] 0x00007fc054ad6081": "4.47%",
            "[.] 0x00007fc054ad6090": "5.14%"
        },
        "Permute.data": {
            "[.] 0x00007f068cad3610": "25.60%",
            " ": "0",
            "[.] 0x00007f068cad3554": "10.94%",
            "[.] 0x00007f068cad34dc": "14.32%",
            "[.] 0x00007f068cad3487": "2.58%",
            "[.] 0x00007f068cad367c": "19.69%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007f6224af5153": "1.83%",
            "[.] 0x00007f6224b286e0": "1.46%",
            "G1ParScanThreadState::trim_queue_to_threshold": "1.01%",
            "[.] 0x00007f6224b34a75": "16.92%",
            "[.] 0x00007f6224b34a7c": "16.70%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007f9bbcb199ec": "1.71%",
            "[.] 0x00007f9bbcb31125": "1.57%",
            "[.] 0x00007f9bbcae2fc0": "2.58%",
            "[.] 0x00007f9bbcb3118c": "21.13%",
            "[.] 0x00007f9bbcafbb04": "3.32%"
        },
        "Queens.data": {
            "[.] 0x00007f2058ad3ef0": "5.21%",
            " ": "0",
            "[.] 0x00007f2058ad3de8": "4.32%",
            "[.] 0x00007f2058ad3f22": "13.63%",
            "[.] 0x00007f2058ad3ede": "3.18%",
            "[.] 0x00007f2058ad3dd2": "4.46%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007fa8a0ad4f02": "10.77%",
            "[.] 0x00007fa8a0ad4f23": "4.25%",
            "[.] 0x00007fa8a0ad4ac6": "3.55%",
            "[.] 0x00007fa8a0ad4f85": "6.75%",
            "[.] 0x00007fa8a0ad4efd": "3.25%"
        },
        "Richards.data": {
            "[.] 0x00007f9010646eaf": "8.15%",
            " ": "0",
            "[.] 0x00007f9010646f1c": "6.91%",
            "[.] 0x00007f9010646eba": "10.35%",
            "[.] 0x00007f9010af29ba": "5.79%",
            "[.] 0x00007f9010646e9b": "4.97%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f2eb4ad5522": "4.51%",
            "[.] 0x00007f2eb4ad563d": "4.82%",
            "[.] 0x00007f2eb4ad55ea": "5.89%",
            "[.] 0x00007f2eb4ad55a6": "6.81%",
            "[.] 0x00007f2eb4ad5659": "4.91%"
        },
        "CD.data": {
            "[.] 0x00007fd814aed8e8": "5.23%",
            " ": "0",
            "[.] 0x00007fd814aed900": "3.49%",
            "[.] 0x00007fd814adaf99": "2.15%",
            "[.] 0x00007fd814afa03a": "3.10%",
            "Node::set_req_X": "2.51%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007f0570ad8470": "6.21%",
            "[.] 0x00007f0570ad847c": "4.95%",
            "[.] 0x00007f0570ad84d4": "5.98%",
            "[.] 0x00007f0570ad84a2": "5.86%",
            "[.] 0x00007f0570ad843e": "5.59%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007fcce8ad42b5": "25.30%",
            "[.] 0x00007fcce8ad44d5": "5.81%",
            "[.] 0x00007fcce8ad42c5": "11.37%",
            "[.] 0x00007fcce8ad43f5": "5.20%",
            "[.] 0x00007fcce8ad4405": "4.89%"
        },
        "Sieve.data": {
            "[.] 0x00007f9eb4ada28c": "15.42%",
            " ": "0",
            "[.] 0x00007f9eb4ada282": "3.27%",
            "[.] 0x00007f9eb4ada28e": "31.08%",
            "[.] 0x00007f9eb4ada238": "18.17%",
            "[.] 0x00007f9eb4ad8255": "3.20%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007f9348ad56e2": "8.28%",
            "[.] 0x00007f9348adc0c2": "9.88%",
            "[.] 0x00007f9348adc0d4": "15.95%",
            "[.] 0x00007f9348ad56ef": "5.22%",
            "[.] 0x00007f9348adc0c7": "26.35%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007f8ee0adb169": "1.30%",
            "[.] 0x00007f8ee056ecc5": "1.03%",
            "[.] 0x00007f8ee0adb1f5": "1.31%",
            "[.] 0x00007f8ee0adb3a8": "2.57%",
            "[.] 0x00007f8ee0adb291": "1.08%"
        }
    }
}