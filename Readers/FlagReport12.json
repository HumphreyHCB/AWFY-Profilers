{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4918032786885246",
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.classData(Ljava/lang/Object;)Ljava/lang/String;": "0.16393442622950818",
            "jdk.internal.misc.Unsafe.allocateUninitializedArray0(Ljava/lang/Class;I)Ljava/lang/Object;": "0.16393442622950818",
            "Queens.placeQueen(I)Z": "16.557377049180328",
            "Queens.getRowColumn(II)Z": "56.721311475409834",
            "Queens.setRowColumn(IIZ)V": "25.24590163934426",
            "Queens.queens()Z": "0.6557377049180327"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "1.088646967340591",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.7776049766718507",
            "Bounce$Ball.bounce()Z": "77.6049766718507",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.15552099533437014",
            "Bounce.benchmark()Ljava/lang/Object;": "16.951788491446344",
            "som.Random.next()I": "0.9331259720062208",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.3110419906687403",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.177293934681182"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.909008805599458",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.56400993452247",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.925039512305261",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "12.937457665387221",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.4384736960939266",
            "havlak.HavlakLoopFinder.findLoops()V": "5.983291939489727",
            "som.Vector.<init>(I)V": "1.8965906525174985",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "3.8383382253330325",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.7094152178821407",
            "som.Vector.append(Ljava/lang/Object;)V": "4.041544366674193"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "15.586546349466778",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "4.7579983593109105",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.543068088597211",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.4610336341263332",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.070549630844956",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "22.969647251845778",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "3.9376538146021334",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.875307629204267",
            "cd.Vector2D.compareNumbers(DD)I": "3.5274815422477444",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "17.30926989335521"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "84.6969696969697",
            " ": "0",
            "List$Element.getNext()LList$Element;": "11.666666666666668",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.121212121212121",
            "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Ljava/lang/Class;)Ljava/lang/String;": "0.15151515151515152",
            "List.makeList(I)LList$Element;": "1.3636363636363638"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "5.379746835443038",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.4303797468354436",
            "deltablue.UnaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "18.037974683544306",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "12.658227848101266",
            "deltablue.Planner$$Lambda$85+0x0000000801012868.597190999.apply(Ljava/lang/Object;)V": "1.89873417721519",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "6.962025316455697",
            "deltablue.Variable.<init>()V": "7.278481012658228",
            "som.Vector.<init>(I)V": "4.113924050632912",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "7.278481012658228",
            "som.Vector.append(Ljava/lang/Object;)V": "5.063291139240507"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.4239854633555421",
            " ": "0",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.5451241671714112",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "37.371290127195635",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "0.9691096305269533",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "4.239854633555421",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "42.39854633555421",
            "som.Random.next()I": "13.688673531193215",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12113870381586916",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.24227740763173833"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "6.564551422319475",
            "java.nio.charset.CharsetEncoder.encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;": "0.10940919037199125",
            "java.util.Arrays.fill([ZZ)V": "5.142231947483588",
            "Sieve.sieve([ZI)I": "88.18380743982495"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "java.util.zip.ZipFile.getZipEntry(Ljava/lang/String;I)Ljava/util/zip/ZipEntry;": "0.13513513513513514",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.62162162162162",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.1891891891891895",
            "Towers.moveDisks(III)V": "2.837837837837838",
            "java.io.BufferedOutputStream.flushBuffer()V": "0.13513513513513514",
            "Towers$TowersDisk.getSize()I": "10.945945945945947",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.13513513513513514",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "35.40540540540541",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "25.81081081081081",
            "Towers.moveTopDisk(II)V": "3.783783783783784"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "2.056962025316456",
            "nbody.Body.setVX(D)V": "25.632911392405067",
            "nbody.NBodySystem.advance(D)V": "43.67088607594937",
            "nbody.Body.setZ(D)V": "0.31645569620253167",
            "nbody.Body.getY()D": "0.7911392405063291",
            "nbody.Body.getZ()D": "8.860759493670887",
            "nbody.Body.setVZ(D)V": "11.075949367088608",
            "nbody.Body.getVZ()D": "0.4746835443037975",
            "nbody.Body.setVY(D)V": "4.746835443037975",
            "nbody.Body.setX(D)V": "1.5822784810126582"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.718370264474625",
            "richards.Scheduler.schedule()V": "10.578984989278055",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.866333095067906",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.433166547533953",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.145818441744103",
            "Richards.benchmark()Ljava/lang/Object;": "8.36311651179414",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.8606147248034315",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.9313795568263044",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.432451751250894",
            "richards.RBObject.<init>()V": "10.150107219442459"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.3874045801526718",
            "json.JsonPureStringParser.isDigit()Z": "3.1011450381679393",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "22.328244274809162",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.2958015267175576",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.973282442748092",
            "java.lang.String.<init>([BB)V": "3.2442748091603058",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.532442748091603",
            "json.JsonPureStringParser.read()V": "16.078244274809162",
            "java.util.Arrays.copyOfRange([BII)[B": "6.6793893129771",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.530534351145038"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "47.01670644391408",
            "sun.net.www.protocol.jar.Handler.indexOfBangSlash(Ljava/lang/String;)I": "0.11933174224343675",
            "Permute.permute(I)V": "52.38663484486873",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.11933174224343675",
            "Permute.benchmark()Ljava/lang/Object;": "0.2386634844868735",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.11933174224343675"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.2",
            "Richards::benchmark": "4.3",
            "richards.RBObject::append": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.6",
            "richards.RBObject::<init>": "6.1"
        },
        "Mandelbrot.hpl": {
            "java.io.BufferedWriter::write": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::push": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "jdk.internal.perf.Perf::createLong": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.LambdaForm::useCount": "0.0",
            "Mandelbrot::mandelbrot": "98.2",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.9",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "79.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "List$Element::setNext": "0.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "15.6",
            "java.lang.String::<init>": "5.2",
            "json.JsonPureStringParser::readArray": "2.4",
            "java.lang.String::length": "3.1",
            "java.util.Arrays::copyOfRange": "7.0",
            "java.lang.String::equals": "21.7",
            "AGCT::Unknown not Java[ERR=-3]": "5.9",
            "AGCT::Unknown Java[ERR=-5]": "9.6",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "8.8"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "33.7",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.4",
            "havlak.HavlakLoopFinder::findLoops": "5.7",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.2",
            "som.Vector::append": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.9",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "6.2",
            "som.Dictionary::atPut": "2.2",
            "som.Vector::<init>": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "40.5",
            "Permute::permute": "51.6",
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.invoke.LambdaForm$MH.0x0000000801009800::<clinit>": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.3",
            "AGCT::Unknown Java[ERR=-5]": "6.3",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Run::measure": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "55.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Queens::benchmark": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "14.1",
            "Queens::setRowColumn": "24.1",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.2",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.1",
            "java.util.Arrays::setAll": "34.7",
            "som.Random::next": "11.9",
            "AGCT::Unknown not Java[ERR=-3]": "5.3",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "6.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Sieve::verifyResult": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "86.4",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "4.4"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "4.5",
            "deltablue.Planner::addPropagate": "3.6",
            "som.Vector::append": "8.5",
            "AGCT::Unknown not Java[ERR=-3]": "12.8",
            "som.Dictionary::getBucket": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "15.3",
            "deltablue.AbstractConstraint::satisfy": "3.1",
            "deltablue.AbstractConstraint::<init>": "13.6",
            "som.Vector::forEach": "6.7",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.7"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.5",
            "Bounce$Ball::bounce": "76.6",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "som.Random::next": "0.6",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.6",
            "nbody.Body::setVZ": "9.2",
            "nbody.Body::getZ": "8.7",
            "nbody.Body::setVX": "26.4",
            "nbody.Body::setVY": "5.4",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "nbody.NBodySystem::advance": "40.8"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.0",
            "Towers::popDiskFrom": "20.5",
            "java.lang.ClassLoader::defineClass0": "0.1",
            "Towers::moveDisks": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "Towers::pushDisk": "34.7",
            "Towers$TowersDisk::setNext": "15.2",
            "AGCT::Unknown Java[ERR=-5]": "4.0",
            "Towers::moveTopDisk": "4.0",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "13.6",
            "cd.RedBlackTree::forEach": "3.6",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "10.0",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "cd.Vector2D::compareNumbers": "4.7",
            "cd.CollisionDetector::isInVoxel": "21.7",
            "cd.RedBlackTree::treeInsert": "14.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.satisfy": "3.51%",
            "som.Dictionary.at": "3.78%",
            "deltablue.BinaryConstraint.<init>": "3.10%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "2.63%",
            "som.Vector.append": "5.76%",
            "som.Vector.forEach": "4.78%",
            "itable": "3.89%",
            "deltablue.Planner.addPropagate": "2.37%",
            "deltablue.AbstractConstraint.<init>": "11.12%",
            "deltablue.Variable.getValue": "3.60%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.50%",
            "som.Random.next": "0.91%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.72%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.33%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "1.87%",
            "Bounce.lambda$benchmark$0": "0.17%",
            "Benchmark.innerBenchmarkLoop": "0.14%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.41%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.43%",
            "som.Random.next": "10.41%",
            "java.util.Arrays.setAll": "35.55%",
            "Storage.lambda$buildTreeDepth$0": "4.27%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.37%",
            "SpinPause": "0.21%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.59%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.34%",
            "Storage.buildTreeDepth": "43.16%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.38%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.57%",
            "Towers.popDiskFrom": "19.40%",
            "Towers.moveDisks": "8.56%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.81%",
            "Towers.moveTopDisk": "4.12%",
            "Towers$TowersDisk.getSize": "10.49%",
            "Towers$TowersDisk.getNext": "3.88%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.02%",
            "cd.CollisionDetector.isInVoxel": "19.62%",
            "cd.RedBlackTree.forEach": "6.17%",
            "Node::set_req_X(unsigned": "2.40%",
            "cd.RedBlackTree.put": "6.68%",
            "cd.RedBlackTree.treeInsert": "12.55%",
            "cd.RedBlackTree.treeMinimum": "5.44%",
            "cd.RedBlackTree.findNode": "2.83%",
            "cd.Vector2D.compareNumbers": "3.94%",
            "cd.RedBlackTree.leftRotate": "2.12%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.19%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.06%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.58%",
            "som.Vector.append": "3.92%",
            "som.Vector.forEach": "2.07%",
            "som.IdentitySet.lambda$contains$0": "31.45%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.85%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.23%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.04%",
            "havlak.HavlakLoopFinder.doDFS": "5.48%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "4.79%",
            "Sieve.benchmark": "5.84%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "86.46%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.06%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.26%",
            "Permute.swap": "40.37%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.87%",
            "nbody.Body.getZ": "7.80%",
            "nbody.Body.getY": "0.70%",
            "nbody.Body.setX": "1.19%",
            "nbody.Body.setY": "1.77%",
            "nbody.Body.setVX": "27.61%",
            "nbody.Body.setVY": "5.50%",
            "nbody.Body.getMass": "0.49%",
            "nbody.Body.getVZ": "0.48%",
            "nbody.NBodySystem.advance": "41.77%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.29%",
            "Interpreter": "0.05%",
            "List.makeList": "1.10%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.36%",
            "List$Element.length": "0.18%",
            "List.verifyResult": "0.11%",
            "List.isShorterThan": "81.51%",
            "List$Element.<init>": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.30%",
            "java.lang.String.length": "3.26%",
            "java.lang.String.<init>": "5.63%",
            "json.JsonPureStringParser.readArray": "2.27%",
            "json.JsonPureStringParser.isWhiteSpace": "2.16%",
            "java.lang.String.isLatin1": "2.93%",
            "json.JsonPureStringParser.readStringInternal": "6.98%",
            "java.util.Arrays.copyOfRange": "8.49%",
            "java.lang.String.equals": "22.89%",
            "json.JsonPureStringParser.read": "15.46%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.06%",
            "Queens.getRowColumn": "68.54%",
            "Queens.setRowColumn": "17.51%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.66%",
            "Queens.placeQueen": "8.66%",
            "I2C/C2I": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.17%",
            "Queens.benchmark": "0.06%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.16%",
            "Richards.benchmark": "4.48%",
            "richards.Packet.<init>": "6.67%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.74%",
            "itable": "37.70%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.45%",
            "richards.TaskControlBlock.<init>": "3.15%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.08%",
            "richards.RBObject.<init>": "5.64%",
            "richards.RBObject.append": "2.55%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "4.3",
            "Towers.moveDisks": "94.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.0",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "6.1",
            "deltablue.AbstractConstraint.satisfy": "8.8",
            "deltablue.Planner.removePropagateFrom": "9.9",
            "som.Vector.<init>": "26.9",
            "deltablue.Variable.<init>": "4.9",
            "som.Vector.forEach": "7.2",
            "deltablue.Planner.addPropagate": "1.7",
            "deltablue.AbstractConstraint.<init>": "4.4",
            "deltablue.Planner.constraintsConsuming": "4.3",
            "deltablue.Planner.addConstraintsConsumingTo": "21.9"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.2",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.5",
            "havlak.HavlakLoopFinder.stepD": "3.6",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.1",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.1",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.schedule": "13.7",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.HandlerTaskDataRecord.workInAdd": "2.8",
            "richards.TaskControlBlock.runTask": "82.3",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.4",
            "Bounce.benchmark": "54.0",
            "Bounce$Ball.<init>": "45.0",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.7",
            "som.Vector.<init>": "5.8",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.6",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.7",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.2",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.1",
            "Run.reportBenchmark": "0.1",
            "Permute.swap": "0.1",
            "Permute.benchmark": "1.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.7",
            "List$Element.length": "0.1",
            "List.isShorterThan": "75.9",
            "List$Element.<init>": "20.3",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.3",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.6",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.0",
            "json.JsonValue.<init>": "4.2",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "24.7",
            "Queens.placeQueen": "74.2",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.544185927308607",
            "java.lang.String.<init>(byte[], byte) String.java": "6.424248119497849",
            "json.JsonPureStringParser.read()": "20.87880638836801",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.874197502915259",
            "java.lang.String.length() String.java": "3.3189100989693014",
            "json.JsonArray.<init>()": "1.725662393801284",
            "java.lang.String.substring(int, int) String.java": "9.392900009824316",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.83857795167291",
            "json.JsonPureStringParser.readStringInternal()": "3.775954346832513",
            "json.JsonPureStringParser.readValue()": "3.3231815405381164"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "2.5391068785309803",
            "som.Vector.forEach(ForEachInterface)": "3.3156191472042256",
            "som.Vector.hasSome(TestInterface)": "2.296446794570591",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.048854092903517",
            "havlak.HavlakLoopFinder.findLoops()": "11.563856001094178",
            "som.Vector.<init>(int)": "2.4199828373140617",
            "som.Vector.append(Object)": "4.213461457857665",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.42319256842463",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.312731492205097",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.025516810828826"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.043064326743039",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.11107232395036652",
            "Queens.getRowColumn(int, int)": "64.83450223731396",
            "Queens.queens()": "0.6346989940020945",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.38081939640125667",
            "Queens.setRowColumn(int, int, boolean)": "20.072355685316236",
            "java.lang.ThreadLocal$ThreadLocalMap.<init>(ThreadLocal, Object) ThreadLocal.java": "0.19040969820062834",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.19040969820062834",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.19040969820062834",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.11107232395036652"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.4566513736030138",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.5675082164788",
            "richards.Scheduler$$Lambda$18.0x00000008000c7b98.apply(Packet, RBObject)": "4.000103514693541",
            "richards.Scheduler$$Lambda$16.0x00000008000c7970.apply(Packet, RBObject)": "3.6378020872998564",
            "richards.Scheduler.findTask(int)": "1.5157508697082736",
            "richards.TaskControlBlock.runTask()": "39.39103784571135",
            "richards.Scheduler.schedule()": "2.4732617849630123",
            "richards.RBObject.append(Packet, Packet)": "3.3753184001064724",
            "Richards.benchmark()": "26.074611912323054",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.5416295430935367"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.42903628421146467",
            "Storage$$Lambda$12.0x00000008000c2a98.<init>(Storage, int, Random)": "0.10586609610412766",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.6381385397165018",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.2173040920032094",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.32415084247125",
            "som.Random.next()": "13.640010698047606",
            "javax.management.openmbean.CompositeType.keySet() CompositeType.java": "0.14486939466880627",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.07243469733440314",
            "Storage.buildTreeDepth(int, Random)": "38.418249086208434",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.68565570116787"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "31.489217840670353",
            "Towers.popDiskFrom(int)": "29.110622781386585",
            "Towers.moveDisks(int, int, int)": "10.963270628576947",
            "Towers$TowersDisk.getSize()": "1.400594045060491",
            "java.lang.String.indexOf(int, int) String.java": "0.4708893772186134",
            "jdk.internal.org.objectweb.asm.ByteVector.<init>(int) ByteVector.java": "0.09659269276279249",
            "Towers.moveTopDisk(int, int)": "8.174156625051314",
            "Benchmark.innerBenchmarkLoop(int)": "0.10866677935814156",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.062833546642196",
            "java.lang.invoke.MemberName.<init>(Class, String, MethodType, byte) MemberName.java": "0.07244451957209437"
        },
        "YourKit_Permute.txt": {
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.10263193905943528",
            "Permute.permute(int)": "57.34844683665556",
            "jdk.internal.org.objectweb.asm.Frame.push(int) Frame.java": "0.10263193905943528",
            "com.yourkit.probes.ResourceRegistry.<init>(Class, ResourceRegistry, String, String) a": "0.27368517082516075",
            "com.yourkit.probes.Table.createRow() a": "0.10263193905943528",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.17105323176572548",
            "Permute.benchmark()": "0.10263193905943528",
            "Run.printResult(long)": "0.00114035487843817",
            "Permute.swap(int, int)": "41.69137435569949",
            "java.lang.String.getBytes(byte[], int, byte) String.java": "0.10263193905943528"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.717724467693817",
            "som.Vector.forEach(ForEachInterface)": "42.72753279659979",
            "deltablue.EqualityConstraint.execute()": "5.33327884261719",
            "deltablue.BinaryConstraint.isSatisfied()": "2.7381584862479063",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "5.292410805509013",
            "som.Vector.<init>(int)": "4.250275859250481",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "3.4329151170869263",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "3.0446687645592387",
            "som.Vector.append(Object)": "2.7790265233560834",
            "deltablue.Plan$$Lambda$23.0x00000008000ccd88.apply(Object)": "2.4520822264906617"
        },
        "YourKit_List.txt": {
            "List.benchmark()": "0.11993443584173984",
            "List.tail(List$Element, List$Element, List$Element)": "4.330965738729494",
            "List.makeList(int)": "1.0660838741487986",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11993443584173984",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.11993443584173984",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.21321677482975973",
            "List$Element.setNext(List$Element)": "0.23986887168347967",
            "List$Element.getNext()": "22.92080329419917",
            "List.isShorterThan(List$Element, List$Element)": "70.32155754854013",
            "java.lang.Integer.valueOf(int) Integer.java": "0.2265428232566197"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0705108205462746",
            "nbody.Body.getZ()": "5.743540289871515",
            "nbody.Body.getMass()": "0.4112658479167257",
            "nbody.Body.getVZ()": "0.4112658479167257",
            "nbody.NBodySystem.advance(double)": "43.25382193606943",
            "nbody.Body.setVY(double)": "6.268258785489405",
            "nbody.Body.setVZ(double)": "9.246390787645007",
            "nbody.Body.getVX()": "0.7090790481322857",
            "nbody.Body.setVX(double)": "28.604248801656407",
            "nbody.Body.setY(double)": "1.2621607056754687"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.57729098658358",
            "Run.runBenchmark()": "8.751739408207381E-4",
            "java.util.WeakHashMap.hash(Object) WeakHashMap.java": "0.0875173940820738",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.01750347881641476",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.1400278305313181",
            "java.util.ArrayList.clear() ArrayList.java": "0.07001391526565905",
            "java.io.RandomAccessFile.open(String, int) RandomAccessFile.java": "0.03500695763282952",
            "java.lang.ThreadLocal.createMap(Thread, Object) ThreadLocal.java": "0.06126217585745166",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "8.751739408207381E-4",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.00875173940820738"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.7411409317996984",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.446845590798187",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.553231865535805",
            "cd.RedBlackTree.findNode(Comparable)": "6.699972890283103",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "9.9299020177375",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.130049184772085",
            "cd.RedBlackTree.put(Comparable, Object)": "6.74644669067813",
            "cd.Vector2D.compareNumbers(double, double)": "8.868750242051043",
            "cd.Vector2D.plus(Vector2D)": "1.5413810464350723",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.329809070136711"
        },
        "YourKit_Sieve.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.09252215391574314",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.17476406850751483",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.09252215391574314",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.6345580525114625",
            "Benchmark.innerBenchmarkLoop(int)": "0.09252215391574314",
            "Sieve.benchmark()": "91.68945453050145",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.20560478647942923",
            "java.util.AbstractCollection.containsAll(Collection) AbstractCollection.java": "0.24672574377531506",
            "Sieve.sieve(boolean[], int)": "5.4896477990007595",
            "java.nio.ByteBuffer.flip() ByteBuffer.java": "0.09252215391574314"
        },
        "YourKit_Bounce.txt": {
            "java.lang.invoke.InvokerBytecodeGenerator.loadMethod(byte[]) InvokerBytecodeGenerator.java": "0.17869907076483196",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.23826542768644265",
            "java.io.OutputStreamWriter.write(char[], int, int) OutputStreamWriter.java": "0.17869907076483196",
            "java.lang.AbstractStringBuilder.<init>(int) AbstractStringBuilder.java": "0.575808116908903",
            "Bounce.benchmark()": "60.42014137082041",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.3573981415296639",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5956635692161065",
            "com.yourkit.probes.Table.createRow() a": "0.17869907076483196",
            "Bounce$Ball.bounce()": "36.45461043602572",
            "Bounce$Ball.<init>(Random)": "0.3573981415296639"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 20.881999999999998,
        "JavaFlightRecorder_Bounce.jfr": 22.9235,
        "rebench_test_Async_Bounce.txt": 65.076,
        "Mandelbrot.hpl": 37.6535,
        "JavaFlightRecorder_Storage.jfr": 58.898,
        "List.hpl": 22.702,
        "rebench_test_Async_Towers.txt": 77.468,
        "JavaFlightRecorder_Sieve.jfr": 31.018,
        "Permute.hpl": 30.003,
        "Queens.hpl": 20.906,
        "JavaFlightRecorder_NBody.jfr": 21.409,
        "rebench_test_Async_Sieve.txt": 82.106,
        "JavaFlightRecorder_Richards.jfr": 90.9625,
        "Storage.hpl": 59.658500000000004,
        "DeltaBlue.hpl": 12.74,
        "JavaFlightRecorder_Json.jfr": 80.79849999999999,
        "NBody.hpl": 21.691000000000003,
        "Towers.hpl": 25.85,
        "Bounce.hpl": 26.315,
        "rebench_test_Async_List.txt": 70.513,
        "rebench_test_Async_Richards.txt": 261.8555,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.9695,
        "rebench_test_Async_DeltaBlue.txt": 37.007000000000005,
        "Richards.hpl": 92.05000000000001,
        "JavaFlightRecorder_Havlak.jfr": 157.58,
        "JavaFlightRecorder_CD.jfr": 43.1045,
        "JavaFlightRecorder_List.jfr": 22.792,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.167,
        "rebench_test_Async_Mandelbrot.txt": 113.102,
        "rebench_test_Async_Storage.txt": 167.3905,
        "Json.hpl": 79.6395,
        "JavaFlightRecorder_Towers.jfr": 25.9655,
        "Havlak.hpl": 160.598,
        "rebench_test_Async_CD.txt": 150.74450000000002,
        "rebench_test_Async_Havlak.txt": 507.73,
        "Sieve.hpl": 31.363,
        "rebench_test_Async_Permute.txt": 84.0475,
        "rebench_test_Async_NBody.txt": 62.0925,
        "JavaFlightRecorder_Permute.jfr": 29.8395,
        "CD.hpl": 42.7115,
        "rebench_test_Async_Queens.txt": 67.2235,
        "rebench_test_Async_Json.txt": 281.4625
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007f458cad5bfd": "19.04%",
            "[.] 0x00007f458cad5bf9": "5.04%",
            "[.] 0x00007f458cad5c01": "4.74%",
            "[.] 0x00007f458cad5bf5": "23.40%",
            "[.] 0x00007f458cad5c10": "5.22%"
        },
        "Permute.data": {
            "[.] 0x00007fc7d0ad367c": "19.72%",
            " ": "0",
            "[.] 0x00007fc7d0ad3716": "2.65%",
            "[.] 0x00007fc7d0ad3610": "25.78%",
            "[.] 0x00007fc7d0ad3554": "10.87%",
            "[.] 0x00007fc7d0ad34dc": "13.57%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007f33d4b351fc": "16.93%",
            "[.] 0x00007f33d4adf543": "1.06%",
            "[.] 0x00007f33d4b2ccf0": "1.44%",
            "[.] 0x00007f33d4b351f5": "16.95%",
            "[.] 0x00007f33d4b06353": "1.77%"
        },
        "DeltaBlue.data": {
            "[.] 0x00007fe40cb384c1": "8.09%",
            "[.] 0x00007fe40cb384b0": "3.98%",
            "[.] 0x00007fe40cb384fd": "2.58%",
            " ": "0",
            "[.] 0x00007fe40cb1d8d0": "3.91%",
            "[.] 0x00007fe40cb1d840": "1.80%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007fcc28ad3952": "4.72%",
            "[.] 0x00007fcc28ad3968": "4.06%",
            "[.] 0x00007fcc28ad3a70": "4.66%",
            "[.] 0x00007fcc28ad3a5e": "3.44%",
            "[.] 0x00007fcc28ad3aa2": "14.44%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007f4e74ad4f23": "3.92%",
            "[.] 0x00007f4e74ad4f02": "10.84%",
            "[.] 0x00007f4e74ad4f85": "5.89%",
            "[.] 0x00007f4e74ad4efd": "3.71%",
            "[.] 0x00007f4e74ad4ac6": "3.48%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007fe698646eba": "10.10%",
            "[.] 0x00007fe698646eaf": "8.23%",
            "[.] 0x00007fe698646f1c": "6.89%",
            "[.] 0x00007fe698646e9b": "4.96%",
            "[.] 0x00007fe698af263a": "5.89%"
        },
        "Storage.data": {
            "[.] 0x00007fe330ad612d": "4.61%",
            " ": "0",
            "[.] 0x00007fe330ad6125": "4.49%",
            "[.] 0x00007fe330ad6149": "4.94%",
            "[.] 0x00007fe330ad6096": "6.81%",
            "[.] 0x00007fe330ad60da": "6.18%"
        },
        "CD.data": {
            "[.] 0x00007fdee0b1c492": "2.14%",
            " ": "0",
            "[.] 0x00007fdee0afaf80": "3.56%",
            "[.] 0x00007fdee0ad9a8c": "2.05%",
            "[.] 0x00007fdee0b1c4ba": "3.27%",
            "[.] 0x00007fdee0afaf68": "5.18%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007fd808ad7cf4": "6.16%",
            "[.] 0x00007fd808ad7cc2": "5.66%",
            "[.] 0x00007fd808ad7d58": "5.93%",
            "[.] 0x00007fd808ad7d26": "5.81%",
            "[.] 0x00007fd808ad7d00": "5.17%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007f2a50ad4405": "4.91%",
            "[.] 0x00007f2a50ad43f5": "5.45%",
            "[.] 0x00007f2a50ad42c5": "11.35%",
            "[.] 0x00007f2a50ad42b5": "25.98%",
            "[.] 0x00007f2a50ad44d5": "5.90%"
        },
        "Sieve.data": {
            "[.] 0x00007fd64cada28e": "29.30%",
            " ": "0",
            "[.] 0x00007fd64cada28c": "14.88%",
            "[.] 0x00007fd64cada282": "3.39%",
            "[.] 0x00007fd64cada238": "19.76%",
            "[.] 0x00007fd64cada232": "3.38%"
        },
        "Bounce.data": {
            "[.] 0x00007fcc80adcac2": "9.97%",
            "[.] 0x00007fcc80ad570f": "5.28%",
            " ": "0",
            "[.] 0x00007fcc80adcad4": "15.76%",
            "[.] 0x00007fcc80ad5702": "8.52%",
            "[.] 0x00007fcc80adcac7": "26.64%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007ff4e0adaca8": "2.39%",
            "[.] 0x00007ff4e0adab91": "1.03%",
            "[.] 0x00007ff4e0adaa69": "1.33%",
            "[.] 0x00007ff4e0adaaf5": "1.38%",
            "[.] 0x00007ff4e056ecc5": "1.04%"
        }
    }
}