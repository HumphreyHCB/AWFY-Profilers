{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.08779631255487269",
            "Mandelbrot.mandelbrot(I)I": "99.91220368744513"
        },
        "JavaFlightRecorder_Queens.jfr": {
            " ": "0",
            "Queens.placeQueen(I)Z": "18.66883116883117",
            "Queens.getRowColumn(II)Z": "57.79220779220779",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.16233766233766234",
            "java.util.Arrays.fill([ZZ)V": "0.16233766233766234",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/MemberName;": "0.16233766233766234",
            "Queens.setRowColumn(IIZ)V": "22.24025974025974",
            "java.lang.System.lineSeparator()Ljava/lang/String;": "0.16233766233766234",
            "Queens.queens()Z": "0.6493506493506493"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "Bounce.verifyResult(Ljava/lang/Object;)Z": "0.16",
            "Bounce$$Lambda$77+0x000000080100c618.1545242146.apply(I)Ljava/lang/Object;": "0.16",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.48",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.8",
            "Bounce$Ball.bounce()Z": "76.8",
            "Bounce.benchmark()Ljava/lang/Object;": "17.76",
            "som.Random.next()I": "0.8",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.16",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.72",
            "sun.nio.cs.StreamEncoder.implWrite([CII)V": "0.16"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.731202161188654",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.518685276902296",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.85321927059883",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.192255740657362",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.9040972534894194",
            "havlak.HavlakLoopFinder.findLoops()V": "6.371004052228726",
            "som.Vector.<init>(I)V": "2.4313372354795137",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.7050877982890595",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.881584871679424",
            "som.Vector.append(Ljava/lang/Object;)V": "3.6695182350292663"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "15.458937198067632",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.542673107890499",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.9790660225442833",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.49597423510467",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.911433172302737",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.1207729468599",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "3.9452495974235102",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.856682769726248",
            "cd.Vector2D.compareNumbers(DD)I": "5.636070853462158",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "14.331723027375201"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "83.02752293577981",
            " ": "0",
            "List$Element.getNext()LList$Element;": "11.926605504587155",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.3058103975535168",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.1529051987767584",
            "List.benchmark()Ljava/lang/Object;": "0.1529051987767584",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "3.058103975535168",
            "List$Element.length()I": "0.1529051987767584",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.3058103975535168",
            "List.makeList(I)LList$Element;": "0.9174311926605504"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "10.81081081081081",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.2042042042042045",
            "deltablue.Variable.setDeterminedBy(Ldeltablue/AbstractConstraint;)V": "6.906906906906907",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "38.13813813813814",
            "java.lang.invoke.Invokers$Holder.linkToTargetMethod(ILjava/lang/Object;)Ljava/lang/Object;": "4.2042042042042045",
            "deltablue.EqualityConstraint.execute()V": "3.903903903903904",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "2.4024024024024024",
            "som.Vector.<init>(I)V": "2.7027027027027026",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "5.405405405405405",
            "som.Vector.append(Ljava/lang/Object;)V": "2.4024024024024024"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.547112462006079",
            " ": "0",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.729483282674772",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "37.87234042553192",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.5197568389057752",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.0395136778115504",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "42.85714285714286",
            "som.Random.next()I": "13.191489361702128",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.060790273556231005",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.182370820668693"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.10649627263045794",
            "Sieve.benchmark()Ljava/lang/Object;": "6.0702875399361025",
            "java.util.Arrays.fill([ZZ)V": "5.324813631522897",
            "Sieve.sieve([ZI)I": "88.49840255591054"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.13774104683195593",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.13774104683195593",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "15.702479338842975",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.820936639118457",
            "Towers.moveDisks(III)V": "3.443526170798898",
            "Towers$TowersDisk.getSize()I": "10.743801652892563",
            "Towers.benchmark()Ljava/lang/Object;": "0.13774104683195593",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "40.77134986225895",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "19.55922865013774",
            "Towers.moveTopDisk(II)V": "4.545454545454546"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "2.0186335403726705",
            "nbody.Body.getMass()D": "1.0869565217391304",
            "nbody.Body.setVX(D)V": "27.95031055900621",
            "nbody.NBodySystem.advance(D)V": "42.857142857142854",
            "nbody.Body.getY()D": "0.7763975155279502",
            "nbody.Body.getZ()D": "7.453416149068323",
            "nbody.Body.setVZ(D)V": "9.782608695652174",
            "nbody.Body.getVZ()D": "0.6211180124223602",
            "nbody.Body.setVY(D)V": "5.279503105590062",
            "nbody.Body.setX(D)V": "1.5527950310559004"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.675505931612003",
            "richards.Scheduler.schedule()V": "10.397766922540125",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.42149337055129",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "7.536636427076064",
            "Richards.benchmark()Ljava/lang/Object;": "9.002093510118632",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.838101884159107",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.628750872295883",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.256803907885555",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.3963712491277045",
            "richards.RBObject.<init>()V": "10.676901605024424"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.649976602714085",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "4.117922321010763",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.035095928872252",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.474964904071128",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.0140383715489",
            "java.lang.String.<init>([BB)V": "5.147402901263454",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.8839494618624237",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.4333177351427233",
            "json.JsonPureStringParser.read()V": "15.114646700982686",
            "java.util.Arrays.copyOfRange([BII)[B": "5.802526906878802"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.StringConcatHelper.mix(JLjava/lang/String;)J": "0.12004801920768307",
            "Permute.swap(II)V": "43.69747899159664",
            "Permute.permute(I)V": "55.82232893157263",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12004801920768307",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.12004801920768307",
            "java.lang.StringConcatHelper.newArrayWithSuffix(Ljava/lang/String;J)[B": "0.12004801920768307"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "richards.Packet::setLink": "2.2",
            "Richards::benchmark": "5.3",
            "richards.RBObject::append": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "45.8",
            "richards.HandlerTaskDataRecord::workInAdd": "2.2",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.1",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.LambdaFormBuffer::endEdit": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "java.lang.Class::getClassLoader": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.io.BufferedOutputStream::flushBuffer": "0.0",
            "Mandelbrot::mandelbrot": "97.9",
            "java.lang.Long::stringSize": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "8.9",
            "List::makeList": "1.1",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "1.7",
            "List::isShorterThan": "81.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.6",
            "json.JsonPureStringParser::read": "12.1",
            "java.lang.String::<init>": "6.0",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "9.8",
            "java.lang.String::equals": "19.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "10.6",
            "java.lang.String::isLatin1": "3.1",
            "json.JsonPureStringParser::readStringInternal": "8.7"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.5",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.1",
            "havlak.HavlakLoopFinder::findLoops": "6.4",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "7.7",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.8",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::hasSome": "2.0",
            "som.Vector::forEach": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "50.3",
            "Permute::benchmark": "0.1",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.util.concurrent.ConcurrentHashMap::get": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "6.3",
            "java.lang.StringLatin1::getChars": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "67.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Queens::placeQueen": "8.0",
            "Queens::setRowColumn": "19.2",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.7",
            "java.util.Arrays::setAll": "34.6",
            "som.Random::next": "12.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.8"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "6.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "86.4",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "jdk.internal.org.objectweb.asm.ClassWriter::visitMethod": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.io.BufferedOutputStream::flushBuffer": "0.0",
            "java.util.Arrays::fill": "5.3"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "5.0",
            "deltablue.Planner::addPropagate": "3.1",
            "deltablue.Variable::<init>": "4.6",
            "som.Vector::append": "4.7",
            "AGCT::Unknown not Java[ERR=-3]": "11.9",
            "AGCT::Unknown Java[ERR=-5]": "15.8",
            "deltablue.AbstractConstraint::satisfy": "3.6",
            "som.Dictionary::hash": "13.7",
            "som.Vector::forEach": "8.2",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "4.0"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.3",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "75.6",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "0.5",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.4",
            "nbody.Body::getZ": "7.9",
            "nbody.Body::setVX": "28.4",
            "nbody.Body::setVY": "5.1",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "nbody.NBodySystem::advance": "41.2"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.0",
            "Towers::popDiskFrom": "22.3",
            "Towers::moveDisks": "3.4",
            "Towers::buildTowerAt": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "Towers::pushDisk": "32.9",
            "Towers$TowersDisk::setNext": "14.3",
            "AGCT::Unknown Java[ERR=-5]": "3.8",
            "Towers::moveTopDisk": "4.8",
            "Towers$TowersDisk::getNext": "3.6"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.8",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "7.1",
            "cd.RedBlackTree::findNode": "3.0",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "8.8",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.5",
            "cd.CollisionDetector::isInVoxel": "21.8",
            "cd.RedBlackTree::treeInsert": "14.2"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "2.65%",
            "deltablue.AbstractConstraint.satisfy": "2.23%",
            "deltablue.UnaryConstraint.<init>": "9.45%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "5.95%",
            "som.Vector.append": "2.84%",
            "deltablue.UnaryConstraint.chooseMethod": "3.34%",
            "som.Vector.forEach": "5.97%",
            "itable": "3.80%",
            "deltablue.Planner.addPropagate": "2.93%",
            "deltablue.AbstractConstraint.<init>": "3.59%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "69.02%",
            "som.Random.next": "1.22%",
            "Interpreter": "0.08%",
            "java.util.Arrays.setAll": "1.08%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "Bounce.benchmark": "20.55%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.06%",
            "Bounce$Ball.<init>": "2.67%",
            "Bounce.lambda$benchmark$0": "0.30%",
            "Benchmark.innerBenchmarkLoop": "0.18%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.04%",
            "InstanceKlass::find_local_field(Symbol*,": "0.01%",
            "clock_gettime@GLIBC_2.2.5": "0.02%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.25%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "10.34%",
            "java.util.Arrays.setAll": "36.18%",
            "Storage.lambda$buildTreeDepth$0": "4.26%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.33%",
            "SpinPause": "0.19%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.59%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.30%",
            "Storage.buildTreeDepth": "42.88%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.37%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.64%",
            "Towers.popDiskFrom": "19.00%",
            "Towers.moveDisks": "8.69%",
            "Interpreter": "0.06%",
            "Towers.pushDisk": "34.94%",
            "Towers.moveTopDisk": "4.02%",
            "Towers$TowersDisk.getSize": "10.51%",
            "Towers$TowersDisk.getNext": "3.81%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.36%",
            "cd.CollisionDetector.isInVoxel": "19.12%",
            "cd.RedBlackTree.forEach": "6.16%",
            "Node::set_req_X(unsigned": "2.32%",
            "cd.RedBlackTree.put": "6.23%",
            "cd.RedBlackTree.treeInsert": "12.84%",
            "cd.RedBlackTree.treeMinimum": "5.42%",
            "cd.RedBlackTree.findNode": "2.89%",
            "cd.Vector2D.compareNumbers": "4.11%",
            "cd.RedBlackTree.leftRotate": "2.11%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.23%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.10%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.33%",
            "som.Vector.hasSome": "2.28%",
            "som.Vector.append": "3.99%",
            "som.IdentitySet.lambda$contains$0": "31.24%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.34%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.94%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.99%",
            "havlak.HavlakLoopFinder.doDFS": "6.43%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.61%",
            "Sieve.benchmark": "7.29%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "83.00%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.09%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.25%",
            "Permute.swap": "40.44%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "[no_Java_frame]": "0.02%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.48%",
            "nbody.Body.getZ": "7.75%",
            "nbody.Body.getY": "0.74%",
            "nbody.Body.setX": "1.25%",
            "nbody.Body.setY": "1.76%",
            "nbody.Body.setZ": "0.50%",
            "nbody.Body.setVX": "28.35%",
            "nbody.Body.setVY": "5.83%",
            "nbody.Body.getMass": "0.50%",
            "nbody.NBodySystem.advance": "40.44%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.16%",
            "Interpreter": "0.06%",
            "List.makeList": "1.31%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.66%",
            "List$Element.length": "0.16%",
            "List.verifyResult": "0.06%",
            "List.isShorterThan": "81.10%",
            "List$Element.<init>": "0.19%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.16%",
            "java.lang.String.length": "2.52%",
            "java.lang.String.substring": "2.81%",
            "java.lang.String.<init>": "4.65%",
            "json.JsonPureStringParser.readArray": "2.68%",
            "java.lang.String.isLatin1": "3.04%",
            "json.JsonPureStringParser.readStringInternal": "8.48%",
            "java.util.Arrays.copyOfRange": "7.27%",
            "java.lang.String.equals": "23.19%",
            "json.JsonPureStringParser.read": "13.01%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.11%",
            "Queens.getRowColumn": "55.52%",
            "Queens.setRowColumn": "24.66%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.66%",
            "Queens.placeQueen": "14.31%",
            "java.lang.StringBuilder.toString": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.16%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.98%",
            "Richards.benchmark": "4.99%",
            "richards.Packet.<init>": "6.84%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.88%",
            "itable": "37.03%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.18%",
            "richards.TaskControlBlock.<init>": "3.17%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.05%",
            "richards.RBObject.<init>": "6.00%",
            "richards.RBObject.append": "3.05%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "4.9",
            "Towers.moveDisks": "93.5",
            "java.io.PrintStream.println": "0.1",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "7.8",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "91.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.1",
            "deltablue.Planner.removePropagateFrom": "9.7",
            "som.Vector.<init>": "33.0",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "7.8",
            "deltablue.Planner.addPropagate": "1.2",
            "deltablue.Planner.constraintsConsuming": "5.0",
            "deltablue.AbstractConstraint.<init>": "4.0",
            "deltablue.Planner.addConstraintsConsumingTo": "16.3"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.4",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.0",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.schedule": "14.4",
            "richards.Scheduler.createWorker": "0.1",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.4",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.5",
            "Bounce.benchmark": "51.1",
            "Bounce$Ball.<init>": "46.7",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "5.8",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.4",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.2",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.6",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "73.4",
            "List$Element.<init>": "22.6"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "java.util.Arrays.fill": "0.4",
            "Queens.verifyResult": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "22.2",
            "Queens.placeQueen": "76.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.3",
            "Run.printResult": "0.2"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.36092972800242",
            "java.lang.String.<init>(byte[], byte) String.java": "6.273309422998491",
            "json.JsonPureStringParser.isWhiteSpace()": "2.4555044926482026",
            "json.JsonPureStringParser.read()": "21.632826394991444",
            "java.lang.String.length() String.java": "3.2585890099355432",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.0651759848296916",
            "json.JsonArray.<init>()": "2.1191340142032433",
            "java.lang.String.substring(int, int) String.java": "10.398052414929804",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.5970660085017645",
            "json.JsonPureStringParser.readStringInternal()": "3.1618824973826176"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.429333881846034",
            "som.Vector.hasSome(TestInterface)": "2.1738424397267546",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.508222277554645",
            "havlak.HavlakLoopFinder.findLoops()": "11.44515053425859",
            "som.Vector.<init>(int)": "3.7067910924424337",
            "som.Vector.append(Object)": "3.472951467451906",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.666908445291272",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "3.4036656526398987",
            "som.Vector.removeAll()": "2.6523475982721854",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.64168407833628"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "9.82260232492873",
            "Queens.getRowColumn(int, int)": "68.1082997296938",
            "Queens.queens()": "0.38404159465886767",
            "Benchmark.innerBenchmarkLoop(int)": "0.28064578071224944",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.1329374750742234",
            "Queens.setRowColumn(int, int, boolean)": "20.32466285579238",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.19202079732943383",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.147708305638026",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.31018744183985464",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.1329374750742234"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.226937916520519",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.5918883494249476",
            "richards.TaskControlBlock.runTask()": "38.5349554173051",
            "richards.Scheduler.<init>()": "1.502704498883125",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.573999889235541",
            "richards.Scheduler.schedule()": "2.4737395927560044",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "3.8066052539275232",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.4694751610699848",
            "richards.RBObject.append(Packet, Packet)": "3.891524672783326",
            "Richards.benchmark()": "25.35398475142609"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$7.0x00000008000c2a90.apply(int)": "0.6642844053509256",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.5554792010262051",
            "java.lang.String.equals(Object) String.java": "0.09735202492211842",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.3342954004031524",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.10880520432472059",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.91075682609493",
            "som.Random.next()": "13.652189847901782",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.06871907641561299",
            "Storage.buildTreeDepth(int, Random)": "40.06322155030237",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.1474711379879063"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.792593748874296",
            "Towers.popDiskFrom(int)": "32.33630720092218",
            "Towers.moveDisks(int, int, int)": "8.861565062859475",
            "java.util.zip.ZipFile$CleanableResource.getInflater() ZipFile.java": "0.1560980295625653",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.1080678666202375",
            "Towers$TowersDisk.getSize()": "0.38424130353862224",
            "java.util.TreeMap.get(Object) TreeMap.java": "0.060037703677909726",
            "Towers.moveTopDisk(int, int)": "7.144486737671257",
            "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey() Collections.java": "0.09606032588465556",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.059341266315247"
        },
        "YourKit_Permute.txt": {
            "java.nio.CharBuffer.arrayOffset() CharBuffer.java": "0.10194603656464511",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.10194603656464511",
            "Permute.permute(int)": "55.68519063908837",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.10194603656464511",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.18123739833714686",
            "jdk.internal.org.objectweb.asm.MethodVisitor.<init>(int) MethodVisitor.java": "0.1585827235450035",
            "com.yourkit.probes.Table.createRow() a": "0.10194603656464511",
            "Permute.benchmark()": "0.44176615844679545",
            "Permute.swap(int, int)": "42.86264470673523",
            "java.lang.ClassLoader.checkCerts(String, CodeSource) ClassLoader.java": "0.22654674792143356"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.986049395473805",
            "som.Vector.forEach(ForEachInterface)": "40.04340188074818",
            "deltablue.EqualityConstraint.execute()": "3.6426578485067695",
            "deltablue.BinaryConstraint.isSatisfied()": "2.686783093934071",
            "som.Vector.<init>(int)": "4.80520822568978",
            "deltablue.ScaleConstraint.execute()": "2.893458716544384",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.867624263718095",
            "deltablue.Planner.makePlan(Vector)": "3.487651131549034",
            "som.Vector.append(Object)": "4.3918569804691545",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "4.340188074816576"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.118699058320804",
            "List.tail(List$Element, List$Element, List$Element)": "4.075334335680937",
            "List.makeList(int)": "0.9100261137928306",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.118699058320804",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.18464297961013953",
            "List$Element.getNext()": "21.484529556065525",
            "java.lang.StringConcatHelper.mix(long, long) StringConcatHelper.java": "0.118699058320804",
            "List.isShorterThan(List$Element, List$Element)": "72.65701247658991",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.2769644694152093",
            "java.nio.file.spi.FileSystemProvider.<clinit>() FileSystemProvider.java": "0.02637756851573422"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0370008650277645",
            "nbody.Body.getZ()": "5.1622624661662515",
            "nbody.Body.getMass()": "0.7813154002846219",
            "nbody.Body.getX()": "1.3812540112174565",
            "nbody.Body.setZ(double)": "0.5441303680553616",
            "nbody.NBodySystem.advance(double)": "45.21862879147249",
            "nbody.Body.setVY(double)": "6.264475262996343",
            "nbody.Body.setVZ(double)": "8.60842146385021",
            "nbody.Body.setVX(double)": "27.904121438736496",
            "nbody.Body.setY(double)": "0.40460976086167916"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.54993758900159",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.13185422197218755",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.03516112585925001",
            "java.util.zip.ZipFile$CleanableResource.<init>(ZipFile, ZipCoder, File, int) ZipFile.java": "0.017580562929625006",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.05274168878887502",
            "Harness.main(String[])": "8.790281464812503E-4",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "8.790281464812503E-4",
            "jdk.internal.org.objectweb.asm.MethodWriter.endCurrentBasicBlockWithNoSuccessor() MethodWriter.java": "0.07911253318331253",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.061531970253687514",
            "java.security.BasicPermission.newPermissionCollection() BasicPermission.java": "0.07032225171850003"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.1012825132045965",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.41604636365727",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.427315308132805",
            "cd.RedBlackTree.findNode(Comparable)": "8.401879690602312",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.026248208084509",
            "cd.RedBlackTree$Node.successor()": "1.609849210790589",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.000812590554018",
            "cd.RedBlackTree.put(Comparable, Object)": "7.098668424724217",
            "cd.Vector2D.compareNumbers(double, double)": "8.739181430006056",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.2852652801520925"
        },
        "YourKit_Sieve.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07991191930671969",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.07103281716152862",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "8.959014064497797",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, Object, Object) DirectMethodHandle$Holder": "0.07991191930671969",
            "Sieve.benchmark()": "85.99410427617559",
            "java.util.zip.ZipFile.getInputStream(ZipEntry) ZipFile.java": "0.07991191930671969",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.07991191930671969",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.invoke(Object, Object, long) LambdaForm$MH": "0.07991191930671969",
            "Sieve.sieve(boolean[], int)": "4.164298906094615",
            "jdk.internal.misc.Unsafe.getAndAddLong(Object, long, long) Unsafe.java": "0.16870294075863046"
        },
        "YourKit_Bounce.txt": {
            "java.lang.PublicMethods$Key.matches(Method, String, Class[]) PublicMethods.java": "0.03829143612031169",
            "Bounce.benchmark()": "58.22212862093392",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17231146254140262",
            "java.lang.invoke.MethodType.methodType(Class, Class, Class[]) MethodType.java": "0.26804005284218185",
            "java.io.PrintStream.writeln(String) PrintStream.java": "0.26804005284218185",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5552258237445195",
            "som.Random.next()": "0.17231146254140262",
            "com.yourkit.probes.Table.createRow() a": "0.17231146254140262",
            "Bounce$Ball.bounce()": "38.82751622599606",
            "Bounce$Ball.<init>(Random)": "1.3019088280905973"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 20.872,
        "JavaFlightRecorder_Bounce.jfr": 22.451999999999998,
        "rebench_test_Async_Bounce.txt": 43.0175,
        "Mandelbrot.hpl": 38.0225,
        "List.hpl": 22.877499999999998,
        "JavaFlightRecorder_Storage.jfr": 58.2405,
        "rebench_test_Async_Towers.txt": 78.261,
        "JavaFlightRecorder_Sieve.jfr": 30.893,
        "JavaFlightRecorder_NBody.jfr": 21.679,
        "Queens.hpl": 21.9965,
        "Permute.hpl": 29.625500000000002,
        "rebench_test_Async_Sieve.txt": 88.46000000000001,
        "JavaFlightRecorder_Richards.jfr": 90.45349999999999,
        "Storage.hpl": 59.576499999999996,
        "DeltaBlue.hpl": 12.513,
        "Bounce.hpl": 26.1095,
        "NBody.hpl": 21.174999999999997,
        "JavaFlightRecorder_Json.jfr": 82.2485,
        "Towers.hpl": 25.823,
        "rebench_test_Async_List.txt": 71.09299999999999,
        "rebench_test_Async_Richards.txt": 270.127,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.963499999999996,
        "rebench_test_Async_DeltaBlue.txt": 36.671,
        "Richards.hpl": 91.2475,
        "JavaFlightRecorder_Havlak.jfr": 159.26549999999997,
        "JavaFlightRecorder_CD.jfr": 43.459,
        "JavaFlightRecorder_List.jfr": 22.6,
        "rebench_test_Async_Storage.txt": 168.628,
        "rebench_test_Async_Mandelbrot.txt": 111.658,
        "JavaFlightRecorder_DeltaBlue.jfr": 13.9215,
        "JavaFlightRecorder_Towers.jfr": 25.781,
        "Json.hpl": 80.97800000000001,
        "Havlak.hpl": 155.87,
        "rebench_test_Async_CD.txt": 150.6055,
        "rebench_test_Async_Havlak.txt": 513.4565,
        "Sieve.hpl": 31.2215,
        "rebench_test_Async_Permute.txt": 84.039,
        "JavaFlightRecorder_Permute.jfr": 29.799999999999997,
        "rebench_test_Async_NBody.txt": 60.5795,
        "CD.hpl": 42.5195,
        "rebench_test_Async_Queens.txt": 62.676,
        "rebench_test_Async_Json.txt": 275.177
    },
    "Perf": {
        "NBody.data": {
            "[.] 0x00007f6820ad6090": "5.34%",
            " ": "0",
            "[.] 0x00007f6820ad6081": "4.41%",
            "[.] 0x00007f6820ad607d": "19.08%",
            "[.] 0x00007f6820ad6075": "23.51%",
            "[.] 0x00007f6820ad6079": "4.83%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007fba60ad3290": "25.41%",
            "[.] 0x00007fba60ad3396": "2.14%",
            "[.] 0x00007fba60ad31d4": "10.46%",
            "[.] 0x00007fba60ad32fc": "19.78%",
            "[.] 0x00007fba60ad315c": "14.27%"
        },
        "Havlak.data": {
            "[.] 0x00007f2850b31efc": "16.66%",
            " ": "0",
            "[.] 0x00007f2850b31ef5": "16.86%",
            "[.] 0x00007f2850b08053": "1.57%",
            "[.] 0x00007f2850aded43": "1.06%",
            "[.] 0x00007f2850b25f50": "1.33%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007eff68b3d251": "6.47%",
            "[.] 0x00007eff68b3d28d": "3.51%",
            "[.] 0x00007eff68b3d240": "3.34%",
            "[.] 0x00007eff68afc7d0": "3.85%",
            "[.] 0x00007eff68afc740": "1.71%"
        },
        "Queens.data": {
            "[.] 0x00007fb360ad3952": "4.39%",
            " ": "0",
            "[.] 0x00007fb360ad3aa2": "14.12%",
            "[.] 0x00007fb360ad3a5e": "3.48%",
            "[.] 0x00007fb360ad3a70": "5.04%",
            "[.] 0x00007fb360ad3968": "4.09%"
        },
        "Towers.data": {
            "[.] 0x00007f1580ad53a3": "3.55%",
            " ": "0",
            "[.] 0x00007f1580ad5405": "7.85%",
            "[.] 0x00007f1580ad4f46": "3.27%",
            "[.] 0x00007f1580ad50dd": "3.24%",
            "[.] 0x00007f1580ad5382": "10.07%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007f2360646eba": "10.29%",
            "[.] 0x00007f2360af1eba": "5.90%",
            "[.] 0x00007f2360646e9b": "4.76%",
            "[.] 0x00007f2360646eaf": "8.23%",
            "[.] 0x00007f2360646f1c": "6.56%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007ffb90ad5c6a": "5.89%",
            "[.] 0x00007ffb90ad5cbd": "4.66%",
            "[.] 0x00007ffb90ad5c26": "6.69%",
            "[.] 0x00007ffb90ad5cb5": "4.82%",
            "[.] 0x00007ffb90ad5cd9": "4.82%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007f5bacb11f3a": "3.02%",
            "[.] 0x00007f5bacafe200": "3.78%",
            "[.] 0x00007f5bacafe1e8": "5.23%",
            "[.] 0x00007f5bacadba19": "2.25%",
            "[.] 0x00007f5bacadbd17": "2.36%"
        },
        "Mandelbrot.data": {
            "[.] 0x00007f1370ad80e5": "6.16%",
            " ": "0",
            "[.] 0x00007f1370ad8123": "4.99%",
            "[.] 0x00007f1370ad80b3": "5.62%",
            "[.] 0x00007f1370ad8117": "6.06%",
            "[.] 0x00007f1370ad8149": "5.92%"
        },
        "List.data": {
            "[.] 0x00007f2dbcad3f75": "5.37%",
            " ": "0",
            "[.] 0x00007f2dbcad3e45": "11.06%",
            "[.] 0x00007f2dbcad3e35": "25.87%",
            "[.] 0x00007f2dbcad3f85": "4.90%",
            "[.] 0x00007f2dbcad4055": "5.93%"
        },
        "Sieve.data": {
            "[.] 0x00007f5d9cada80e": "28.02%",
            "[.] 0x00007f5d9cada7b8": "19.62%",
            "[.] 0x00007f5d9cad8ad5": "3.33%",
            " ": "0",
            "[.] 0x00007f5d9cada80c": "12.94%",
            "[.] 0x00007f5d9cada802": "6.80%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007f6544ad5862": "8.59%",
            "[.] 0x00007f6544adcac7": "26.35%",
            "[.] 0x00007f6544adcad4": "16.24%",
            "[.] 0x00007f6544adcac2": "9.87%",
            "[.] 0x00007f6544ad586f": "5.18%"
        },
        "Json.data": {
            "[.] 0x00007f2c3cadb7a8": "2.48%",
            " ": "0",
            "[.] 0x00007f2c3cadb569": "1.25%",
            "[.] 0x00007f2c3cadb789": "1.06%",
            "[.] 0x00007f2c3c56ecc5": "1.04%",
            "[.] 0x00007f2c3cadb5f5": "1.34%"
        }
    }
}