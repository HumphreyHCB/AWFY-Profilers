{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "99.91204925241865",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.08795074758135445"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.31007751937984496",
            "jdk.internal.org.objectweb.asm.Handler.putExceptionTable(Ljdk/internal/org/objectweb/asm/Handler;Ljdk/internal/org/objectweb/asm/ByteVector;)V": "0.15503875968992248",
            " ": "0",
            "Queens.placeQueen(I)Z": "6.976744186046512",
            "Queens.getRowColumn(II)Z": "74.10852713178295",
            "java.util.Arrays.fill([ZZ)V": "0.31007751937984496",
            "Queens.setRowColumn(IIZ)V": "17.674418604651162",
            "Queens.queens()Z": "0.46511627906976744"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.classFilePrologue()Ljdk/internal/org/objectweb/asm/ClassWriter;": "0.15503875968992248",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.15503875968992248",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.15503875968992248",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.2403100775193798",
            "Bounce$Ball.bounce()Z": "78.75968992248062",
            "Bounce.benchmark()Ljava/lang/Object;": "15.65891472868217",
            "som.Random.next()I": "0.6201550387596899",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.15503875968992248",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15503875968992248",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.945736434108527"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.707594361073215",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.722146430195544",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.206912232833106",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "14.256480218281036",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.819463392451114",
            "havlak.HavlakLoopFinder.findLoops()V": "6.1164165529786265",
            "som.Vector.<init>(I)V": "1.8644838562983173",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.683947248749432",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.592087312414734",
            "som.Vector.append(Ljava/lang/Object;)V": "4.274670304683947"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "17.916666666666664",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.083333333333333",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.333333333333333",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.416666666666666",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "26.0",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.083333333333333",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "6.25",
            "cd.Vector2D.compareNumbers(DD)I": "5.833333333333333",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "15.083333333333332",
            "som.Vector.append(Ljava/lang/Object;)V": "1.4166666666666665"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.37059724349157",
            " ": "0",
            "List$Element.getNext()LList$Element;": "10.10719754977029",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.30627871362940273",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.9908116385911176",
            "List$Element.length()I": "0.15313935681470137",
            "List$Element.setNext(LList$Element;)V": "0.15313935681470137",
            "List.makeList(I)LList$Element;": "0.9188361408882082"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "6.5625",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "5.0",
            "deltablue.UnaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "7.5",
            "deltablue.UnaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "16.875",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "10.0",
            "deltablue.AbstractConstraint.<init>(Ldeltablue/Strength$Sym;)V": "7.8125",
            "deltablue.Planner$$Lambda$85+0x0000000801012868.597190999.apply(Ljava/lang/Object;)V": "3.125",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "3.4375",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "6.25",
            "som.Vector.append(Ljava/lang/Object;)V": "5.0"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.8201892744479495",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.6309148264984227",
            "java.lang.StringLatin1.charAt([BI)C": "0.06309148264984227",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "36.40378548895899",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.135646687697161",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "5.804416403785488",
            "Storage.benchmark()Ljava/lang/Object;": "0.12618296529968454",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "43.47003154574132",
            "som.Random.next()I": "10.977917981072554",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.4416403785488959"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "6.93170234454638",
            "java.util.Arrays.fill([ZZ)V": "7.135575942915392",
            "Sieve.sieve([ZI)I": "85.83078491335371",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1019367991845056"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "java.lang.StringConcatHelper.prepend(J[BLjava/lang/String;)J": "0.13550135501355012",
            "java.io.PrintStream.write([BII)V": "0.13550135501355012",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.073170731707314",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "2.8455284552845526",
            "Towers.moveDisks(III)V": "1.4905149051490514",
            "Towers$TowersDisk.getSize()I": "10.97560975609756",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.27100271002710025",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.39837398373984",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "24.79674796747967",
            "Towers.moveTopDisk(II)V": "4.607046070460704"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.8957345971563981",
            "nbody.Body.getMass()D": "0.631911532385466",
            "nbody.Body.setVX(D)V": "30.647709320695103",
            "nbody.NBodySystem.advance(D)V": "40.91627172195893",
            "nbody.Body.getY()D": "0.9478672985781991",
            "nbody.Body.getZ()D": "7.424960505529226",
            "nbody.Body.setVZ(D)V": "9.162717219589258",
            "nbody.Body.getVZ()D": "0.9478672985781991",
            "nbody.Body.setVY(D)V": "4.897314375987362",
            "nbody.Body.setX(D)V": "1.5797788309636651"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.597964376590331",
            "java.lang.Object.<init>()V": "3.6895674300254453",
            "richards.Scheduler.schedule()V": "12.786259541984732",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "14.50381679389313",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "4.8346055979643765",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.071246819338422",
            "Richards.benchmark()Ljava/lang/Object;": "10.49618320610687",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.961832061068702",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.3893129770992365",
            "richards.RBObject.<init>()V": "10.877862595419847"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.4101382488479266",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.2258064516129035",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "24.377880184331797",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.852534562211982",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.691244239631336",
            "java.lang.String.<init>([BB)V": "5.668202764976959",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.470046082949309",
            "json.JsonPureStringParser.read()V": "15.391705069124425",
            "java.util.Arrays.copyOfRange([BII)[B": "5.529953917050691",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.1797235023041477"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.12048192771084337",
            "Permute.swap(II)V": "41.9277108433735",
            "Permute.permute(I)V": "57.95180722891566"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "richards.Packet::setLink": "2.3",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.3",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "3.2",
            "AGCT::Unknown Java[ERR=-5]": "45.1",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.4",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.9",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.zip.Inflater::inflate": "0.0",
            "java.lang.StringConcatHelper::prepend": "0.0",
            "Mandelbrot::mandelbrot": "97.3",
            "java.util.Arrays::copyOf": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.1",
            "List::makeList": "0.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "2.1",
            "List::isShorterThan": "82.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "List$Element::setNext": "0.1",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "16.4",
            "java.lang.String::<init>": "5.4",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "3.2",
            "java.util.Arrays::copyOfRange": "6.6",
            "java.lang.String::equals": "20.8",
            "AGCT::Unknown not Java[ERR=-3]": "5.3",
            "AGCT::Unknown Java[ERR=-5]": "9.7",
            "java.lang.String::isLatin1": "3.0",
            "json.JsonPureStringParser::readStringInternal": "8.7"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.2",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.7",
            "havlak.HavlakLoopFinder::findLoops": "5.7",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "5.7",
            "som.Vector::hasSome": "2.4",
            "som.Vector::forEach": "2.5"
        },
        "Permute.hpl": {
            "Permute::swap": "39.1",
            "jdk.internal.org.objectweb.asm.AnnotationWriter::putAnnotations": "0.0",
            "Permute::permute": "50.8",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "5.5"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "55.6",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "13.8",
            "Queens::setRowColumn": "25.2",
            "Queens::queens": "0.8",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.2",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.0",
            "java.util.Arrays::setAll": "35.3",
            "som.Random::next": "11.4",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.9"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "6.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.io.FileOutputStream::write": "0.0",
            "Sieve::sieve": "86.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "4.8"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "12.4",
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "5.2",
            "java.util.Arrays::setAll": "3.5",
            "som.Vector::append": "5.0",
            "AGCT::Unknown not Java[ERR=-3]": "12.3",
            "AGCT::Unknown Java[ERR=-5]": "14.5",
            "deltablue.AbstractConstraint::satisfy": "4.3",
            "som.Vector::<init>": "5.7",
            "som.Vector::forEach": "7.2",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.0"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.9",
            "Bounce$Ball::bounce": "75.3",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.4"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.4",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.5",
            "nbody.Body::setVZ": "8.7",
            "nbody.Body::getZ": "7.8",
            "nbody.Body::setVX": "29.1",
            "nbody.Body::setVY": "6.0",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "nbody.NBodySystem::advance": "39.8"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.9",
            "Towers::popDiskFrom": "22.8",
            "Towers::moveDisks": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "Towers::pushDisk": "33.9",
            "Towers$TowersDisk::setNext": "13.8",
            "AGCT::Unknown Java[ERR=-5]": "4.1",
            "Towers::benchmark": "0.0",
            "Towers::moveTopDisk": "4.9",
            "Towers$TowersDisk::getNext": "3.4"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "13.8",
            "cd.RedBlackTree::forEach": "3.9",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "3.2",
            "cd.RedBlackTree::treeMinimum": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "8.9",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "4.7",
            "cd.CollisionDetector::isInVoxel": "21.7",
            "cd.RedBlackTree::treeInsert": "13.3"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.61%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "2.84%",
            "deltablue.AbstractConstraint.satisfy": "2.80%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "5.35%",
            "vtable": "1.84%",
            "som.Vector.append": "1.81%",
            "som.Vector.forEach": "24.68%",
            "itable": "3.32%",
            "deltablue.Planner.addPropagate": "2.70%",
            "deltablue.AbstractConstraint.<init>": "2.46%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.60%",
            "som.Random.next": "0.85%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.66%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.06%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "Bounce.benchmark": "17.82%",
            "Bounce$Ball.<init>": "1.71%",
            "Bounce.lambda$benchmark$0": "0.18%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*,": "0.01%",
            "Mandelbrot.mandelbrot": "98.59%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "__futex_abstimed_wait_common": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "10.19%",
            "java.util.Arrays.setAll": "36.05%",
            "Storage.lambda$buildTreeDepth$0": "4.29%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.34%",
            "SpinPause": "0.18%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.61%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.32%",
            "Storage.buildTreeDepth": "42.91%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.38%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.34%",
            "Towers.popDiskFrom": "20.57%",
            "Towers.moveDisks": "8.22%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.01%",
            "Towers.moveTopDisk": "4.32%",
            "Towers$TowersDisk.getSize": "10.47%",
            "Towers$TowersDisk.getNext": "3.75%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.45%",
            "cd.CollisionDetector.isInVoxel": "19.22%",
            "cd.RedBlackTree.forEach": "6.16%",
            "Node::set_req_X(unsigned": "2.43%",
            "cd.RedBlackTree.put": "6.67%",
            "cd.RedBlackTree.treeInsert": "12.84%",
            "cd.RedBlackTree.treeMinimum": "5.17%",
            "cd.RedBlackTree.findNode": "2.76%",
            "cd.Vector2D.compareNumbers": "4.10%",
            "cd.RedBlackTree.leftRotate": "2.14%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.76%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.14%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.12%",
            "som.Vector.append": "3.15%",
            "som.Vector.forEach": "2.35%",
            "som.IdentitySet.lambda$contains$0": "31.17%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.01%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.33%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.17%",
            "havlak.HavlakLoopFinder.doDFS": "5.59%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "8.33%",
            "Sieve.benchmark": "7.51%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "81.19%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.02%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.15%",
            "Permute.swap": "40.35%",
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.91%",
            "nbody.Body.getZ": "7.79%",
            "nbody.Body.getY": "0.68%",
            "nbody.Body.setX": "1.18%",
            "nbody.Body.setY": "1.76%",
            "nbody.Body.setVX": "27.51%",
            "nbody.Body.setVY": "5.54%",
            "nbody.Body.getMass": "0.51%",
            "nbody.Body.getVZ": "0.49%",
            "nbody.NBodySystem.advance": "41.60%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.30%",
            "Interpreter": "0.05%",
            "List.makeList": "1.20%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.48%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.51%",
            "List$Element.<init>": "0.17%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.09%",
            "java.lang.String.length": "2.50%",
            "java.lang.String.substring": "2.94%",
            "java.lang.String.<init>": "4.91%",
            "java.lang.String.isLatin1": "3.06%",
            "json.JsonPureStringParser.isDigit": "2.39%",
            "json.JsonPureStringParser.readStringInternal": "8.29%",
            "java.util.Arrays.copyOfRange": "7.65%",
            "java.lang.String.equals": "23.14%",
            "json.JsonPureStringParser.read": "13.55%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.10%",
            "Queens.getRowColumn": "56.49%",
            "Queens.setRowColumn": "23.94%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.66%",
            "Queens.placeQueen": "14.17%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.13%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.57%",
            "Richards.benchmark": "5.16%",
            "richards.Packet.<init>": "7.09%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.82%",
            "itable": "36.63%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.18%",
            "richards.TaskControlBlock.<init>": "3.12%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.82%",
            "richards.RBObject.<init>": "5.74%",
            "richards.RBObject.append": "2.83%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.8",
            "Towers.moveDisks": "95.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "Run.runBenchmark": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Towers.benchmark": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.5",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.3",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.6",
            "deltablue.AbstractConstraint.satisfy": "14.3",
            "deltablue.Planner.removePropagateFrom": "9.7",
            "som.Vector.<init>": "28.0",
            "deltablue.Variable.<init>": "4.9",
            "som.Vector.forEach": "8.0",
            "deltablue.Planner.constraintsConsuming": "4.9",
            "deltablue.AbstractConstraint.<init>": "4.3",
            "deltablue.Plan.lambda$execute$0": "1.2",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.3",
            "havlak.HavlakLoopFinder.stepD": "3.4",
            "java.lang.Integer.valueOf": "8.4",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "15.0",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.Packet.getData": "0.0",
            "richards.TaskControlBlock.runTask": "83.7",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "53.4",
            "Bounce$Ball.<init>": "45.3",
            "Bounce.lambda$benchmark$0": "0.3",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "cd.Aircraft.<init>": "1.6",
            "som.Vector.<init>": "6.3",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.6",
            "cd.RedBlackTree$InsertResult.<init>": "14.9",
            "cd.RedBlackTree$Node.<init>": "8.3",
            "cd.RedBlackTree$Entry.<init>": "4.9"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "98.6",
            "Run.printResult": "0.3"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.5",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.0",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.2",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.6",
            "List$Element.length": "0.1",
            "List.isShorterThan": "72.8",
            "List$Element.<init>": "23.8",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "Run.runBenchmark": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.5",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "24.8",
            "Queens.placeQueen": "74.0",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.585293926317846",
            "json.JsonPureStringParser.readChar(String)": "1.6653294880412868",
            "java.lang.String.<init>(byte[], byte) String.java": "6.43580458399289",
            "json.JsonPureStringParser.isWhiteSpace()": "3.0357568792419287",
            "json.JsonPureStringParser.read()": "20.257171975627212",
            "java.lang.String.length() String.java": "2.957694559489993",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.8406010798620906",
            "java.lang.String.substring(int, int) String.java": "10.048355270290783",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.3421948522236935",
            "json.JsonPureStringParser.readStringInternal()": "3.21356549645467"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.1426969560380758",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.684253064722771",
            "havlak.HavlakLoopFinder.findLoops()": "13.533407199017692",
            "som.Vector.<init>(int)": "2.8554490004818294",
            "som.Set.<init>(int)": "2.1093907857369656",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.471684204215673",
            "havlak.HavlakLoopFinder$$Lambda$19.0x00000008000cc428.apply(Object)": "2.0805254381426703",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.050030308614974",
            "som.Vector.removeAll()": "2.5934404607797643",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "38.06895265416871"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.696866298627095",
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.14485522524987524",
            "Queens.getRowColumn(int, int)": "61.30595033075276",
            "Queens.queens()": "1.1266517519434742",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11266517519434743",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6277059760827928",
            "Benchmark.innerBenchmarkLoop(int)": "0.14485522524987524",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.03219005005552784",
            "Queens.setRowColumn(int, int, boolean)": "22.500844988813956",
            "java.util.Objects.checkIndex(int, int) Objects.java": "0.2736154254719866"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.076888939841644",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.2041175578673315",
            "richards.TaskControlBlock.runTask()": "40.16967267374992",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.7943366012951043",
            "richards.Scheduler.schedule()": "2.46668860922401",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.5717281243181476",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.0473034692662435",
            "richards.RBObject.append(Packet, Packet)": "2.940056138430417",
            "Richards.benchmark()": "27.11138559853256",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.4570844258384708"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.18223788118090148",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.695364530985962",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.12546802001303",
            "java.lang.Class.forName(String) Class.java": "0.1491037209661921",
            "som.Random.next()": "16.539468307175753",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.3423863222186634",
            "java.lang.invoke.LambdaForm$Name.withConstraint(Object) LambdaForm.java": "0.18223788118090148",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.16014844103776188",
            "Storage.buildTreeDepth(int, Random)": "37.082647640295555",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.2361029809699473"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "36.106393666132455",
            "Towers.popDiskFrom(int)": "27.55519410625015",
            "Towers.moveDisks(int, int, int)": "6.93663740521922",
            "Towers$TowersDisk.getSize()": "1.4232066400363574",
            "sun.invoke.util.Wrapper.findPrimitiveType(Class) Wrapper.java": "0.08371803764919748",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.08371803764919748",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.09567775731336856",
            "Towers.moveTopDisk(int, int)": "8.862152271150762",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.10763747697753964",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.382089123830934"
        },
        "YourKit_Permute.txt": {
            "java.io.BufferedWriter.write(String, int, int) BufferedWriter.java": "0.10248001639680263",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.045546673954134496",
            "Benchmark.innerBenchmarkLoop(int)": "0.10248001639680263",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.011386668488533624",
            "java.nio.CharBuffer.position(int) CharBuffer.java": "0.10248001639680263",
            "Permute.permute(int)": "52.02568832411013",
            "java.io.PrintStream.writeln(String) PrintStream.java": "0.0011386668488533624",
            "jdk.internal.org.objectweb.asm.ByteVector.put122(int, int, int) ByteVector.java": "0.11386668488533623",
            "Permute.benchmark()": "0.10248001639680263",
            "Permute.swap(int, int)": "47.391314249276945"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.746638832972987",
            "som.Vector.forEach(ForEachInterface)": "38.61924998136138",
            "deltablue.EqualityConstraint.execute()": "2.9573299535276725",
            "deltablue.Planner.projectionTest(int)": "1.8887149283033877",
            "deltablue.BinaryConstraint.getOutput()": "2.236636099306643",
            "deltablue.BinaryConstraint.isSatisfied()": "3.8768359054648482",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "7.977335420860361",
            "som.Vector.<init>(int)": "7.405750639926441",
            "deltablue.ScaleConstraint.execute()": "1.9384179527324241",
            "deltablue.Plan$$Lambda$32.0x00000008000ccd88.apply(Object)": "3.28039961231641"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.1594578433326689",
            "List.tail(List$Element, List$Element, List$Element)": "3.7738356255398307",
            "List.makeList(int)": "1.3155272074945183",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.4385090691648395",
            "List$Element.setNext(List$Element)": "0.26576307222111484",
            "java.nio.CharBuffer.hasArray() CharBuffer.java": "0.11959338249950169",
            "List$Element.getNext()": "23.639625274068166",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.2524749186100591",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.1594578433326689",
            "List.isShorterThan(List$Element, List$Element)": "69.27114477443358"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.3731029386687887",
            "nbody.Body.getZ()": "5.328823964076621",
            "nbody.Body.getMass()": "0.90945262320241",
            "nbody.Body.getX()": "0.8810322287273348",
            "nbody.Body.setZ(double)": "0.8241914397771841",
            "nbody.NBodySystem.advance(double)": "43.15636901040187",
            "nbody.Body.setVY(double)": "2.8420394475075312",
            "nbody.Body.setVZ(double)": "9.22241800716194",
            "nbody.Body.setVX(double)": "31.916102995509576",
            "nbody.Body.setY(double)": "0.625248678451657"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.52239121622813",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07930773162263619",
            "java.lang.String.charAt(int) String.java": "0.07930773162263619",
            "Harness.main(String[])": "8.811970180292911E-4",
            "java.util.concurrent.ConcurrentHashMap$ValueIterator.next() ConcurrentHashMap.java": "0.07930773162263619",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.026435910540878727",
            "java.lang.invoke.LambdaFormBuffer.startEdit() LambdaFormBuffer.java": "0.01762394036058582",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.07930773162263619",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.11455561234380782",
            "Run.measure(Benchmark)": "8.811970180292911E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.058718658726245",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.932253537154345",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.10450252247468",
            "cd.RedBlackTree.findNode(Comparable)": "3.9145772484163412",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "17.296969237188485",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.5110950953988542",
            "cd.CollisionDetector.lambda$reduceCollisionSet$5(Vector, RedBlackTree$Entry)": "1.8965975040776846",
            "cd.RedBlackTree.put(Comparable, Object)": "7.123620225315784",
            "cd.Vector2D.compareNumbers(double, double)": "5.940143382771308",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.1801008989872175"
        },
        "YourKit_Sieve.txt": {
            "java.lang.StringConcatHelper.prepend(long, byte[], long, String) StringConcatHelper.java": "0.09488266177493831",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.09488266177493831",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.09488266177493831",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.150673666898602",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.26356294937482866",
            "java.lang.System.nanoTime() System.java (native)": "0.09488266177493831",
            "Sieve.benchmark()": "89.63248782339173",
            "com.yourkit.probes.Table.createRow() a": "0.09488266177493831",
            "Sieve.sieve(boolean[], int)": "7.116199633120374",
            "com.yourkit.probes.builtin.Files.<clinit>() a": "0.16868028759989032"
        },
        "YourKit_Bounce.txt": {
            "java.nio.Buffer.remaining() Buffer.java": "0.03843788437884378",
            "Bounce.benchmark()": "62.15405904059039",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "0.0019218942189421892",
            "java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(Class, String, MethodType) InvokerBytecodeGenerator.java": "0.40359778597785967",
            "java.lang.Long.stringSize(long) Long.java": "0.17297047970479704",
            "Bounce.lambda$benchmark$0(Random, int)": "0.3459409594095941",
            "java.lang.invoke.LambdaForm$Name.index() LambdaForm.java": "0.07687576875768756",
            "Bounce$Ball.bounce()": "36.15083025830258",
            "Bounce$Ball.<init>(Random)": "0.5573493234932348",
            "java.lang.invoke.MethodType.hashCode() MethodType.java": "0.09609471094710946"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.625,
        "JavaFlightRecorder_Bounce.jfr": 23.41,
        "rebench_test_Async_Bounce.txt": 70.0975,
        "Mandelbrot.hpl": 37.675,
        "rebench_test_Async_Towers.txt": 78.6105,
        "JavaFlightRecorder_Storage.jfr": 56.433499999999995,
        "List.hpl": 22.093,
        "JavaFlightRecorder_Sieve.jfr": 32.385999999999996,
        "Queens.hpl": 21.096,
        "JavaFlightRecorder_NBody.jfr": 21.307499999999997,
        "Permute.hpl": 29.9755,
        "rebench_test_Async_Sieve.txt": 93.63550000000001,
        "JavaFlightRecorder_Richards.jfr": 95.4245,
        "Storage.hpl": 59.668,
        "DeltaBlue.hpl": 11.9895,
        "Towers.hpl": 25.7845,
        "NBody.hpl": 21.509500000000003,
        "Bounce.hpl": 26.307000000000002,
        "JavaFlightRecorder_Json.jfr": 82.6275,
        "rebench_test_Async_List.txt": 71.134,
        "rebench_test_Async_Richards.txt": 277.0265,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.779,
        "rebench_test_Async_DeltaBlue.txt": 43.9345,
        "Richards.hpl": 90.729,
        "JavaFlightRecorder_Havlak.jfr": 156.969,
        "JavaFlightRecorder_CD.jfr": 42.6445,
        "JavaFlightRecorder_List.jfr": 22.567,
        "rebench_test_Async_Storage.txt": 177.62400000000002,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.235,
        "rebench_test_Async_Mandelbrot.txt": 118.04,
        "JavaFlightRecorder_Towers.jfr": 25.869,
        "Json.hpl": 79.654,
        "Havlak.hpl": 157.61950000000002,
        "rebench_test_Async_CD.txt": 146.517,
        "rebench_test_Async_Havlak.txt": 526.9005,
        "Sieve.hpl": 31.0505,
        "rebench_test_Async_Permute.txt": 84.66050000000001,
        "JavaFlightRecorder_Permute.jfr": 29.918,
        "rebench_test_Async_NBody.txt": 61.1005,
        "CD.hpl": 42.194500000000005,
        "rebench_test_Async_Queens.txt": 62.271,
        "rebench_test_Async_Json.txt": 273.6275
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007fc43cad5bfd": "18.99%",
            "[.] 0x00007fc43cad5bf5": "23.68%",
            "[.] 0x00007fc43cad5c10": "5.09%",
            "[.] 0x00007fc43cad5c01": "4.52%",
            "[.] 0x00007fc43cad5bf9": "4.73%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007fa6d0ad3716": "2.47%",
            "[.] 0x00007fa6d0ad367c": "19.68%",
            "[.] 0x00007fa6d0ad34dc": "14.17%",
            "[.] 0x00007fa6d0ad3554": "10.54%",
            "[.] 0x00007fa6d0ad3610": "25.97%"
        },
        "Havlak.data": {
            "[.] 0x00007feb24afa3d1": "1.67%",
            " ": "0",
            "[.] 0x00007feb24b2d975": "17.13%",
            "[.] 0x00007feb24b2d97c": "16.84%",
            "[.] 0x00007feb24b1b0d8": "1.44%",
            "[.] 0x00007feb24adec43": "1.12%"
        },
        "DeltaBlue.data": {
            "[.] 0x00007fa7d4b2eed2": "6.97%",
            "[.] 0x00007fa7d4b2eec1": "3.79%",
            " ": "0",
            "[.] 0x00007fa7d4b2ee85": "3.53%",
            "[.] 0x00007fa7d4af8578": "3.75%",
            "[.] 0x00007fa7d4af84c0": "1.83%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007f0954ad3f22": "13.41%",
            "[.] 0x00007f0954ad3ede": "3.03%",
            "[.] 0x00007f0954ad3de8": "4.21%",
            "[.] 0x00007f0954ad3ef0": "5.07%",
            "[.] 0x00007f0954ad3dd2": "4.74%"
        },
        "Towers.data": {
            "[.] 0x00007f472cad4f02": "10.41%",
            " ": "0",
            "[.] 0x00007f472cad4f85": "5.80%",
            "[.] 0x00007f472cad4efd": "3.35%",
            "[.] 0x00007f472cad4ac6": "3.37%",
            "[.] 0x00007f472cad4f23": "3.76%"
        },
        "Richards.data": {
            "[.] 0x00007f266c64729c": "6.46%",
            " ": "0",
            "[.] 0x00007f266c64723a": "10.17%",
            "[.] 0x00007f266caf1d3a": "6.26%",
            "[.] 0x00007f266c64721b": "5.00%",
            "[.] 0x00007f266c64722f": "8.31%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f1294ad5cb5": "4.76%",
            "[.] 0x00007f1294ad5cbd": "4.57%",
            "[.] 0x00007f1294ad5cd9": "4.48%",
            "[.] 0x00007f1294ad5c26": "6.97%",
            "[.] 0x00007f1294ad5c6a": "5.76%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007f0c48b208ba": "2.90%",
            "[.] 0x00007f0c48b0c100": "3.42%",
            "[.] 0x00007f0c48b0c0e8": "5.18%",
            "[.] 0x00007f0c48ad9811": "2.24%",
            "Node::set_req_X": "2.47%"
        },
        "Mandelbrot.data": {
            "[.] 0x00007fa4acad8065": "6.09%",
            " ": "0",
            "[.] 0x00007fa4acad8033": "5.53%",
            "[.] 0x00007fa4acad80a3": "5.03%",
            "[.] 0x00007fa4acad8097": "6.36%",
            "[.] 0x00007fa4acad80c9": "6.05%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007efd84ad4055": "6.19%",
            "[.] 0x00007efd84ad3e45": "11.51%",
            "[.] 0x00007efd84ad3e35": "25.14%",
            "[.] 0x00007efd84ad3f85": "4.75%",
            "[.] 0x00007efd84ad3f75": "5.24%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f0818adab32": "3.37%",
            "[.] 0x00007f0818adab8e": "28.73%",
            "[.] 0x00007f0818adab82": "3.51%",
            "[.] 0x00007f0818adab8c": "15.08%",
            "[.] 0x00007f0818adab38": "19.90%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007f34bcad51e2": "8.49%",
            "[.] 0x00007f34bcad51ef": "5.24%",
            "[.] 0x00007f34bcadc3c7": "26.15%",
            "[.] 0x00007f34bcadc3d4": "16.11%",
            "[.] 0x00007f34bcadc3c2": "9.98%"
        },
        "Json.data": {
            "[.] 0x00007fdae4adc428": "2.30%",
            " ": "0",
            "[.] 0x00007fdae4adc275": "1.30%",
            "[.] 0x00007fdae4adc1e9": "1.32%",
            "[.] 0x00007fdae456ecc5": "1.09%",
            "[.] 0x00007fdae4adc311": "1.03%"
        }
    }
}