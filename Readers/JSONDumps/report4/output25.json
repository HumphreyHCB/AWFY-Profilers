{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "99.91166077738517",
            "jdk.internal.org.objectweb.asm.MethodWriter.putMethodInfo(Ljdk/internal/org/objectweb/asm/ByteVector;)V": "0.08833922261484099"
        },
        "JavaFlightRecorder_Queens.jfr": {
            " ": "0",
            "jdk.internal.misc.Unsafe.allocateUninitializedArray0(Ljava/lang/Class;I)Ljava/lang/Object;": "0.15600624024961",
            "Queens.placeQueen(I)Z": "88.45553822152887",
            "Queens.getRowColumn(II)Z": "9.82839313572543",
            "sun.net.www.ParseUtil.firstEncodeIndex(Ljava/lang/String;)I": "0.15600624024961",
            "java.util.Arrays.fill([ZZ)V": "0.7800312012480499",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.15600624024961",
            "Queens.queens()Z": "0.31201248049922",
            "java.lang.invoke.InvokerBytecodeGenerator.clinit(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;Ljava/util/List;)V": "0.15600624024961"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "94.70588235294117",
            "java.lang.invoke.DirectMethodHandle.shouldBeInitialized(Ljava/lang/invoke/MemberName;)Z": "0.14705882352941177",
            "Bounce.benchmark()Ljava/lang/Object;": "5.147058823529412"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.3299113392440505",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.5832944470368642",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "4.316378908072795",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "29.584694353709754",
            "havlak.LoopTesterApp.findLoops(Lhavlak/LoopStructureGraph;)V": "0.2099860009332711",
            "havlak.HavlakLoopFinder.findLoops()V": "2.9864675688287448",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "4.246383574428371",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "52.26318245450303",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "0.3733084461035931",
            "som.Vector.append(Ljava/lang/Object;)V": "3.7564162389174056"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "8.431703204047219",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "2.0236087689713322",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "14.418212478920744",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "1.2647554806070826",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.9510961214165263",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "24.62057335581788",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.31028667790894",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.416526138279934",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "8.010118043844857",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.0961214165261384"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.59571209800919",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "10.719754977029096",
            "List$Element.length()I": "0.30627871362940273",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15313935681470137",
            "List.makeList(I)LList$Element;": "1.225114854517611"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "5.079365079365079",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.936507936507936",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "2.8571428571428568",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.1746031746031744",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "48.25396825396825",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "3.492063492063492",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "3.1746031746031744",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "8.88888888888889",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "3.8095238095238093",
            "deltablue.Planner.incrementalAdd(Ldeltablue/AbstractConstraint;)V": "1.9047619047619047"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.lang.System$2.defineClass(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/String;[BLjava/security/ProtectionDomain;ZILjava/lang/Object;)Ljava/lang/Class;": "0.06146281499692686",
            "java.lang.String.getChars(II[CI)V": "0.06146281499692686",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.214505224339275",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.66256914566686"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.String.getChars(II[CI)V": "0.10070493454179255",
            "Sieve.benchmark()Ljava/lang/Object;": "0.3021148036253777",
            "Sieve.sieve([ZI)I": "99.49647532729104",
            "java.lang.invoke.InvokerBytecodeGenerator.clinit(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;Ljava/util/List;)V": "0.10070493454179255"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.13368983957219252",
            "Towers.moveDisks(III)V": "62.03208556149733",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.70053475935829",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "0.13368983957219252"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.36406995230524",
            "NBody.innerBenchmarkLoop(I)Z": "0.6359300476947536"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "6.071428571428571",
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "0.07142857142857142",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.14285714285714285",
            "java.lang.invoke.LambdaForm$MH+0x0000000800c10800.728258269.invoke(Ljava/lang/Object;JLjava/lang/Object;J)J": "0.07142857142857142",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.7857142857142856",
            "richards.Scheduler.schedule()V": "60.92857142857142",
            "java.lang.invoke.LambdaForm.internArgument(Ljava/lang/invoke/LambdaForm$Name;)Ljava/lang/invoke/LambdaForm$Name;": "0.07142857142857142",
            "Richards.benchmark()Ljava/lang/Object;": "1.2142857142857142",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "23.785714285714285",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.7857142857142856"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "5.076851420586865",
            "json.JsonPureStringParser.readExponent()Z": "6.986492780624127",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "17.6059618071728",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "0.7452258965999069",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "30.135072193758734",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.098742431299488",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "22.72938984629716",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "7.1727992547741035",
            "java.lang.StringLatin1.hashCode([B)I": "0.8383791336748952",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.074056823474616"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "25.02994011976048",
            "Permute.permute(I)V": "74.73053892215569",
            "Permute.benchmark()Ljava/lang/Object;": "0.23952095808383234"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.4",
            "richards.Packet::setLink": "2.4",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.1",
            "Richards::benchmark": "5.3",
            "richards.RBObject::append": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "46.8",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "5.1",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.5",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "jdk.internal.org.objectweb.asm.AnnotationWriter::visitEnd": "0.0",
            "java.io.PrintStream::write": "0.0",
            "Harness::processArguments": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.LambdaForm$BasicType::basicType": "0.0",
            "Mandelbrot::mandelbrot": "98.1",
            "jdk.internal.org.objectweb.asm.MethodVisitor::<init>": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.5",
            "List::makeList": "0.8",
            "List::tail": "2.5",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "List::isShorterThan": "79.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "List$Element::<init>": "0.3",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.7",
            "json.JsonPureStringParser::read": "13.2",
            "json.JsonArray::<init>": "2.9",
            "java.lang.String::<init>": "4.6",
            "java.lang.String::length": "3.1",
            "java.util.Arrays::copyOfRange": "7.1",
            "java.lang.String::equals": "25.7",
            "AGCT::Unknown not Java[ERR=-3]": "5.7",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "json.JsonPureStringParser::readStringInternal": "4.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.7",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.3",
            "havlak.HavlakLoopFinder::findLoops": "5.8",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.7",
            "som.Vector::append": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "5.9",
            "havlak.HavlakLoopFinder::doDFS": "6.3",
            "som.Vector::hasSome": "2.1",
            "som.Vector::<init>": "2.4"
        },
        "Permute.hpl": {
            "Permute::swap": "39.7",
            "Permute::permute": "51.1",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.StringLatin1::lastIndexOf": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "6.0",
            "java.lang.invoke.InvokerBytecodeGenerator::emitPushArguments": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::emitReferenceCast": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "54.9",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "12.5",
            "Queens::setRowColumn": "26.0",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.3",
            "java.util.Arrays::setAll": "35.1",
            "som.Random::next": "12.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.5",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "0.9"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "6.4",
            "java.util.zip.ZipFile$Source::get": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "86.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "4.5",
            "java.lang.String::getChars": "0.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "3.0",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0::apply": "3.1",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "5.1",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "12.1",
            "AGCT::Unknown Java[ERR=-5]": "14.8",
            "deltablue.AbstractConstraint::satisfy": "3.1",
            "som.Vector::<init>": "6.4",
            "deltablue.StayConstraint::<init>": "12.5",
            "som.Vector::forEach": "7.6"
        },
        "Bounce.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.0",
            "Bounce::benchmark": "17.8",
            "Bounce$Ball::bounce": "76.0",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "7.9",
            "nbody.Body::setVX": "29.8",
            "nbody.Body::setVY": "5.5",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "nbody.NBodySystem::advance": "39.0"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.4",
            "Towers::popDiskFrom": "22.5",
            "Towers::moveDisks": "3.6",
            "Towers::buildTowerAt": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "Towers::pushDisk": "41.9",
            "Towers$TowersDisk::setNext": "17.5",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "Towers::moveTopDisk": "5.7",
            "Towers$TowersDisk::getNext": "0.1"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.6",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "6.2",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "10.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "cd.Vector2D::compareNumbers": "4.8",
            "cd.CollisionDetector::isInVoxel": "21.4",
            "cd.RedBlackTree::treeInsert": "13.1"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "som.Dictionary.getBucket": "3.64%",
            "deltablue.AbstractConstraint.satisfy": "2.71%",
            "deltablue.UnaryConstraint.<init>": "10.89%",
            "som.Vector.append": "7.62%",
            "som.Vector.forEach": "5.77%",
            "itable": "4.79%",
            "deltablue.Planner.addPropagate": "2.58%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.75%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.17%",
            "deltablue.BinaryConstraint.getOutput": "1.75%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.07%",
            "som.Random.next": "0.87%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.64%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "18.88%",
            "__tls_get_addr": "0.05%",
            "Bounce$Ball.<init>": "1.77%",
            "Bounce.lambda$benchmark$0": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.75%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.58%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.82%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.22%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.33%",
            "java.util.Arrays.setAll": "35.29%",
            "Storage.lambda$buildTreeDepth$0": "4.11%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.21%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.38%",
            "Storage.buildTreeDepth": "43.41%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.99%",
            "Towers.popDiskFrom": "18.62%",
            "Towers.moveDisks": "8.91%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.43%",
            "Towers.moveTopDisk": "4.87%",
            "Towers$TowersDisk.getSize": "0.42%",
            "Towers$TowersDisk.getNext": "3.69%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.26%",
            "cd.CollisionDetector.isInVoxel": "19.68%",
            "cd.RedBlackTree.forEach": "6.05%",
            "Node::set_req_X(unsigned": "4.07%",
            "cd.RedBlackTree.put": "6.53%",
            "cd.RedBlackTree.treeInsert": "12.25%",
            "cd.RedBlackTree.treeMinimum": "5.13%",
            "cd.RedBlackTree.findNode": "2.73%",
            "cd.Vector2D.compareNumbers": "4.36%",
            "cd.RedBlackTree.leftRotate": "2.17%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.94%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.94%",
            "som.Vector.append": "3.29%",
            "som.Vector.<init>": "2.13%",
            "som.IdentitySet.lambda$contains$0": "31.85%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.95%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.85%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.18%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.99%",
            "havlak.HavlakLoopFinder.doDFS": "6.26%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "14.50%",
            "Sieve.benchmark": "5.38%",
            "Interpreter": "0.04%",
            "void": "0.02%",
            "Sieve.sieve": "77.51%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.57%",
            "Permute.swap": "40.31%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.81%",
            "nbody.Body.getZ": "7.70%",
            "nbody.Body.getY": "0.74%",
            "nbody.Body.setX": "1.21%",
            "nbody.Body.setY": "1.86%",
            "nbody.Body.setVX": "27.48%",
            "nbody.Body.setVY": "5.65%",
            "nbody.Body.getVZ": "0.46%",
            "nbody.Body.getMass": "0.45%",
            "nbody.NBodySystem.advance": "41.89%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.11%",
            "Interpreter": "0.04%",
            "List.makeList": "1.19%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.47%",
            "List$Element.length": "0.16%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.77%",
            "List$Element.<init>": "0.25%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.48%",
            "java.lang.String.length": "3.15%",
            "java.lang.String.<init>": "5.87%",
            "json.JsonPureStringParser.readArray": "2.64%",
            "java.lang.String.isLatin1": "3.12%",
            "json.JsonPureStringParser.readStringInternal": "6.72%",
            "java.util.Arrays.copyOfRange": "7.92%",
            "java.lang.String.equals": "21.76%",
            "json.JsonPureStringParser.read": "15.68%",
            "json.JsonPureStringParser.readValue": "2.37%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.11%",
            "Queens.getRowColumn": "57.39%",
            "Queens.setRowColumn": "23.77%",
            "Interpreter": "0.06%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.65%",
            "Queens.placeQueen": "13.90%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.20%",
            "Richards.benchmark": "4.48%",
            "richards.Packet.<init>": "6.83%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.42%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.86%",
            "itable": "37.30%",
            "richards.TaskControlBlock.<init>": "3.16%",
            "richards.RBObject.<init>": "5.99%",
            "richards.RBObject.append": "2.49%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.03%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.3",
            "Towers.moveDisks": "94.2",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "7.7",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "90.8",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.6",
            "deltablue.AbstractConstraint.satisfy": "10.4",
            "deltablue.Planner.removePropagateFrom": "8.4",
            "som.Vector.<init>": "31.5",
            "deltablue.Variable.<init>": "5.2",
            "som.Vector.forEach": "7.8",
            "deltablue.Planner.constraintsConsuming": "5.4",
            "deltablue.AbstractConstraint.<init>": "3.4",
            "deltablue.Plan.lambda$execute$0": "2.7",
            "deltablue.Planner.addConstraintsConsumingTo": "16.3"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Vector.hasSome": "3.3",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.3",
            "java.lang.Integer.valueOf": "8.5",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "14.3",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.Scheduler.createIdler": "0.0",
            "richards.TaskControlBlock.runTask": "84.4",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "Bounce$Ball.bounce": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.0",
            "Bounce.benchmark": "54.0",
            "Bounce$Ball.<init>": "44.1",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "5.7",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "1.9",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "45.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.8",
            "cd.RedBlackTree$Entry.<init>": "4.8",
            "cd.Motion.<init>": "1.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.4",
            "nbody.NBodySystem.advance": "98.9",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "1.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "75.7",
            "List$Element.<init>": "21.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.6",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.1",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.3",
            "Queens.getRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "26.7",
            "Queens.placeQueen": "72.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2",
            "java.util.Arrays.fill0": "0.2"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.316735787331602",
            "java.lang.String.<init>(byte[], byte) String.java": "7.053742390287045",
            "json.JsonPureStringParser.isWhiteSpace()": "1.987755767926294",
            "json.JsonPureStringParser.read()": "20.47860693954303",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.4045147385865038",
            "java.lang.String.length() String.java": "3.2113203334964755",
            "java.lang.String.substring(int, int) String.java": "9.586735701467418",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.929239329229025",
            "json.JsonPureStringParser.readStringInternal()": "4.224517657968625",
            "json.JsonPureStringParser.readValue()": "1.8933051698822805"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "4.082890876441893",
            "som.Vector.forEach(ForEachInterface)": "2.1406075186413935",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.2278097898841756",
            "havlak.HavlakLoopFinder.findLoops()": "11.864958492046556",
            "som.Vector.<init>(int)": "2.867077542591192",
            "som.Set.<init>(int)": "1.987553003209834",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "6.57918846615663",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.714510214772133",
            "som.Vector.removeAll()": "2.7248015141618547",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "36.77619765158326"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.337079551094245",
            "Queens.getRowColumn(int, int)": "60.5798632790612",
            "Queens.queens()": "1.4408529849671003",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.linkToTargetMethod(Object, long, Object) LambdaForm$MH": "0.14408529849671003",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.3522085074364023",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.12807582088596448",
            "Queens.setRowColumn(int, int, boolean)": "21.084482013351902",
            "java.lang.System.lineSeparator() System.java": "0.14408529849671003",
            "java.lang.invoke.LambdaForm$Name.internArguments() LambdaForm.java": "0.12807582088596448",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14408529849671003"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.207087810503579",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.830529572205239",
            "richards.TaskControlBlock.runTask()": "37.837046257482285",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.90635010708598",
            "richards.Scheduler.schedule()": "2.5224697504988196",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.510955719489648",
            "richards.RBObject.append(Packet, Packet)": "3.177799337348295",
            "richards.Packet.<init>(Packet, int, int)": "1.5046953083527064",
            "Richards.benchmark()": "28.519650734957626",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.8927675776602169"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.3433036711695757",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1443455705652523",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.17437646789565747",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.84756772073609",
            "som.Random.next()": "14.473246835339573",
            "Storage$$Lambda$12.0x00000008000c2aa0.apply(int)": "0.5885205791478441",
            "java.util.Collections$UnmodifiableCollection.containsAll(Collection) Collections.java": "0.38144852352175074",
            "Storage.buildTreeDepth(int, Random)": "35.71448033087935",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "4.016108026221862",
            "java.lang.Integer.valueOf(int) Integer.java": "0.04904338159565367"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "32.87142263606814",
            "Towers.pushDisk(Towers$TowersDisk, int)": "31.88161399907129",
            "Towers.moveDisks(int, int, int)": "9.128235207859813",
            "Towers.buildTowerAt(int, int)": "0.1221985971601046",
            "Towers$TowersDisk.getSize()": "2.0040569934257153",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.10997873744409414",
            "com.yourkit.probes.builtin.FilesLW$FileStreamsTelemetry$FileOutputStream_write_arrayRange_Probe.onReturn(int) a": "0.10997873744409414",
            "Towers.moveTopDisk(int, int)": "8.78607913581152",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "14.712711098076593",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.15885817630813598"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.ref.PhantomCleanable.<init>(Object, Cleaner) PhantomCleanable.java": "0.06764755623203111",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.10147133434804667",
            "Permute.verifyResult(Object)": "0.10147133434804667",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.06764755623203111",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.1127459270533852",
            "Permute.permute(int)": "56.79012345679012",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.27059022492812446",
            "java.nio.Buffer.limit() Buffer.java": "0.10147133434804667",
            "Permute.benchmark()": "0.3269631884548171",
            "Permute.swap(int, int)": "41.9753086419753"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "3.7312445420625053",
            "som.Vector.forEach(ForEachInterface)": "40.17041996348144",
            "deltablue.EqualityConstraint.execute()": "10.002910899997355",
            "deltablue.Planner.projectionTest(int)": "1.8523909074069176",
            "deltablue.BinaryConstraint.isSatisfied()": "1.8523909074069176",
            "som.Vector.<init>(int)": "6.298129085183521",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.6462727248670253",
            "deltablue.ScaleConstraint.execute()": "1.9847045436502688",
            "som.Vector.append(Object)": "5.345470904231391",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.715949085712775"
        },
        "YourKit_List.txt": {
            "java.lang.Long.valueOf(long) Long.java": "0.13439956992137625",
            "List.tail(List$Element, List$Element, List$Element)": "3.8035078287749475",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.12095961292923861",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.12095961292923861",
            "List.makeList(int)": "0.9139170754653585",
            "sun.invoke.util.VerifyType.isNullConversion(Class, Class, boolean) VerifyType.java": "0.24191922585847722",
            "List$Element.getNext()": "24.393521940729787",
            "List.isShorterThan(List$Element, List$Element)": "69.60553726228075",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.12095961292923861",
            "com.yourkit.probes.Table.createRow() a": "0.12095961292923861"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.394083194391005",
            "nbody.Body.getZ()": "6.27021789007168",
            "nbody.Body.setX(double)": "0.7552762458495432",
            "nbody.Body.getMass()": "0.8407792170777935",
            "nbody.Body.getX()": "0.8122782266683768",
            "nbody.NBodySystem.advance(double)": "41.79670243540963",
            "nbody.Body.setVY(double)": "6.426973337323472",
            "nbody.Body.setVZ(double)": "10.075100109728814",
            "nbody.Body.setVX(double)": "27.118692374560016",
            "nbody.Body.setY(double)": "1.254043578014336"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.42262877812946",
            "sun.nio.fs.LinuxFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.07825814754269417",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.06086744808876213",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.034781398907864074",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.06086744808876213",
            "java.security.Permissions.add(Permission) Permissions.java": "0.06956279781572815",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.12173489617752425",
            "com.yourkit.probes.Table.createRow() a": "0.07825814754269417",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.034781398907864074",
            "java.lang.Class.isInterface() Class.java (native)": "0.034781398907864074"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.0571495927663745",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.563252393590727",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.749363103340759",
            "cd.RedBlackTree.findNode(Comparable)": "7.726412009399454",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.85569252530476",
            "cd.Vector2D.compareTo(Object)": "2.448725065971087",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.311839813836057",
            "cd.RedBlackTree.put(Comparable, Object)": "7.003962067575687",
            "cd.Vector2D.compareNumbers(double, double)": "9.460291869776496",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.441165958158741"
        },
        "YourKit_Sieve.txt": {
            "java.util.ImmutableCollections$ListN.toArray(Object[]) ImmutableCollections.java": "0.21753815504745766",
            "java.lang.String.indexOf(int, int) String.java": "0.02289875316289028",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.8508947687798396",
            "java.nio.file.attribute.FileTime.from(long, TimeUnit) FileTime.java": "0.10304438923300625",
            "Sieve.benchmark()": "87.64497773096255",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.10304438923300625",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.3205825442804639",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.02289875316289028",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.01144937658144514",
            "Sieve.sieve(boolean[], int)": "8.701526201898306"
        },
        "YourKit_Bounce.txt": {
            "jdk.internal.loader.BuiltinClassLoader.getPermissions(CodeSource) BuiltinClassLoader.java": "0.5022019624507456",
            "Bounce.benchmark()": "61.230008498802434",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.17383914084833496",
            "Bounce.lambda$benchmark$0(Random, int)": "1.1396121455613073",
            "som.Random.next()": "0.7339874835818588",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.3090473615081511",
            "com.sun.management.internal.GcInfoCompositeData.<clinit>() GcInfoCompositeData.java": "0.057946380282778334",
            "Bounce$Ball.bounce()": "34.38151896778181",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.07726184037703777",
            "Bounce$Ball.<init>(Random)": "1.3327667465039015"
        }
    },
    "Runtimes": {
        "NBody.data": 21.738500000000002,
        "YourKit_Storage.txt": 61.038,
        "rebench_test_Async_Bounce.txt": 64.215,
        "Permute_not_profiled_": 29.469,
        "JavaFlightRecorder_Sieve.jfr": 33.1235,
        "CD_not_profiled_": 42.519000000000005,
        "JProfiler_NBody.txt": 21.54,
        "JProfiler_List.txt": 29.4595,
        "YourKit_Mandelbrot.txt": 37.394999999999996,
        "CD.data": 44.436,
        "Json_not_profiled_": 78.83250000000001,
        "List.data": 24.026,
        "Queens_not_profiled_": 20.734,
        "Towers.hpl": 26.131,
        "Bounce.hpl": 26.1475,
        "JavaFlightRecorder_Json.jfr": 82.32650000000001,
        "Sieve.data": 32.4775,
        "Richards.hpl": 90.805,
        "YourKit_Richards.txt": 93.031,
        "JavaFlightRecorder_Havlak.jfr": 153.036,
        "JavaFlightRecorder_CD.jfr": 41.1205,
        "JavaFlightRecorder_Towers.jfr": 25.9815,
        "rebench_test_Async_CD.txt": 133.19299999999998,
        "List_not_profiled_": 22.796,
        "Havlak_not_profiled_": 150.6495,
        "JProfiler_Json.txt": 1026.5430000000001,
        "rebench_test_Async_NBody.txt": 55.724000000000004,
        "JavaFlightRecorder_Bounce.jfr": 25.799,
        "Havlak.data": 160.223,
        "Towers_not_profiled_": 26.091,
        "YourKit_DeltaBlue.txt": 12.479500000000002,
        "rebench_test_Async_Towers.txt": 72.7175,
        "YourKit_NBody.txt": 23.4065,
        "JavaFlightRecorder_NBody.jfr": 21.176,
        "rebench_test_Async_Sieve.txt": 92.5275,
        "Storage.hpl": 60.0135,
        "JProfiler_Queens.txt": 26.3855,
        "rebench_test_Async_List.txt": 65.15700000000001,
        "rebench_test_Async_Richards.txt": 249.4275,
        "YourKit_Towers.txt": 27.4255,
        "JProfiler_Havlak.txt": 1942.1675,
        "JavaFlightRecorder_List.jfr": 22.359,
        "YourKit_Permute.txt": 29.7905,
        "Queens.data": 22.5155,
        "Storage_not_profiled_": 62.827,
        "Json.hpl": 80.54249999999999,
        "Towers.data": 27.488,
        "YourKit_List.txt": 24.7425,
        "JProfiler_CD.txt": 476.9545,
        "JProfiler_Permute.txt": 30.334,
        "Sieve.hpl": 30.494,
        "DeltaBlue_not_profiled_": 14.531500000000001,
        "CD.hpl": 42.310500000000005,
        "JavaFlightRecorder_Queens.jfr": 21.5915,
        "JProfiler_Bounce.txt": 44.377,
        "Permute.hpl": 30.02,
        "Richards_not_profiled_": 90.564,
        "DeltaBlue.hpl": 12.321,
        "NBody.hpl": 21.205,
        "JProfiler_Towers.txt": 27.104,
        "JProfiler_Mandelbrot.txt": 37.842,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.560500000000001,
        "rebench_test_Async_Mandelbrot.txt": 108.7465,
        "YourKit_CD.txt": 46.2525,
        "rebench_test_Async_Permute.txt": 79.6895,
        "Mandelbrot.data": 39.082,
        "JProfiler_Storage.txt": 1039.3285,
        "YourKit_Sieve.txt": 27.018,
        "JavaFlightRecorder_Permute.jfr": 30.069,
        "YourKit_Bounce.txt": 16.564,
        "JProfiler_Sieve.txt": 26.7495,
        "JProfiler_DeltaBlue.txt": 99.644,
        "YourKit_Queens.txt": 20.785,
        "Mandelbrot.hpl": 37.446,
        "JavaFlightRecorder_Storage.jfr": 56.5565,
        "List.hpl": 22.222,
        "Mandelbrot_not_profiled_": 37.696,
        "Queens.hpl": 20.961,
        "Storage.data": 64.7135,
        "JavaFlightRecorder_Richards.jfr": 91.31049999999999,
        "Bounce.data": 27.012,
        "Permute.data": 30.872,
        "YourKit_Json.txt": 78.7465,
        "rebench_test_Async_DeltaBlue.txt": 33.216499999999996,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.841,
        "YourKit_Havlak.txt": 152.5235,
        "DeltaBlue.data": 15.5695,
        "JProfiler_Richards.txt": 92.2245,
        "rebench_test_Async_Storage.txt": 157.95999999999998,
        "Sieve_not_profiled_": 30.7485,
        "Havlak.hpl": 155.10750000000002,
        "Richards.data": 95.3495,
        "rebench_test_Async_Havlak.txt": 467.13,
        "Bounce_not_profiled_": 25.928,
        "NBody_not_profiled_": 21.194,
        "Json.data": 81.769,
        "rebench_test_Async_Json.txt": 245.65550000000002,
        "rebench_test_Async_Queens.txt": 57.781499999999994
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.49%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.40%",
            "[.] void nbody.NBodySystem.advance(double)": "0.11%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.45%",
            "0xffffffffb4c0634b": "0.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.11%",
            "[.] void Permute.permute(int)": "97.36%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.91%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.18%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.60%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.89%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.15%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.EqualityConstraint.execute()": "4.29%",
            "[.] vtable chunks": "7.40%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "5.74%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "6.68%",
            "[.] void deltablue.Planner.chainTest(int)": "29.25%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.38%",
            "[.] Interpreter": "0.51%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] boolean Queens.placeQueen(int)": "0.09%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.11%",
            "[.] Interpreter": "0.42%",
            "[.] void Towers.moveDisks(int, int, int)": "95.98%",
            "0xffffffffb4c0634b": "0.15%",
            "0xffffffffb4c063aa": "0.16%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.49%",
            "[.] boolean richards.Scheduler.start()": "22.48%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.83%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.88%",
            "[.] void richards.Scheduler.schedule()": "8.35%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.77%",
            "[.] Interpreter": "0.21%",
            "0xffffffffb51c12b7": "0.14%",
            "SpinPause": "0.06%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.86%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "19.23%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.71%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.29%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.91%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.14%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.32%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb5800d70": "0.12%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.79%",
            "[.] Interpreter": "0.44%",
            "[.] java.lang.Object List.benchmark()": "0.44%",
            "0xffffffffb51c12b7": "0.17%",
            "[.] List$Element List.makeList(int)": "0.57%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.38%",
            "0xffffffffb51c12b7": "0.18%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "84.39%",
            "[.] java.lang.Object Sieve.benchmark()": "6.30%",
            "[.] int Sieve.sieve(boolean[], int)": "6.10%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.50%",
            "0xffffffffb51c12b7": "0.19%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "73.17%",
            "[.] java.lang.Object Bounce.benchmark()": "22.85%",
            "0xffffffffb4c063aa": "0.16%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.32%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.52%",
            "[.] StubRoutines (2)": "8.80%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.43%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.89%"
        }
    }
}