{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "99.9113475177305",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStoreInsn(Ljava/lang/invoke/LambdaForm$BasicType;I)V": "0.08865248226950355"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.31496062992125984",
            " ": "0",
            "Queens.placeQueen(I)Z": "88.03149606299212",
            "Queens.getRowColumn(II)Z": "10.708661417322835",
            "java.util.Arrays.fill([ZZ)V": "0.6299212598425197",
            "Queens.queens()Z": "0.31496062992125984"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.14992503748125938",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "94.60269865067467",
            "Bounce.benchmark()Ljava/lang/Object;": "5.247376311844079"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.341492115791951",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.447164038597317",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.271357966580372",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "29.771710990821372",
            "havlak.LoopTesterApp.findLoops(Lhavlak/LoopStructureGraph;)V": "0.3294892915980231",
            "havlak.HavlakLoopFinder.findLoops()V": "3.742056954577548",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.941868674982349",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "52.318192515886096",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "0.9884678747940693",
            "som.Vector.append(Ljava/lang/Object;)V": "4.401035537773594"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.023789991796555",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.3125512715340444",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "14.109926168990977",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.2149302707136997",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.43068088597211",
            "cd.Simulator.simulate(D)Lsom/Vector;": "0.7383100902379",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "13.781788351107465",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.8876127973749",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "6.6447908121411",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "0.9023789991796555"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.8421052631579",
            " ": "0",
            "List.benchmark()Ljava/lang/Object;": "0.15479876160990713",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "11.91950464396285",
            "jdk.internal.org.objectweb.asm.ByteVector.putInt(I)Ljdk/internal/org/objectweb/asm/ByteVector;": "0.15479876160990713",
            "List.makeList(I)LList$Element;": "0.7739938080495357",
            "java.io.BufferedWriter.flushBuffer()V": "0.15479876160990713"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "6.872852233676976",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.216494845360825",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "2.4054982817869415",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.0927835051546393",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "45.70446735395189",
            "deltablue.ScaleConstraint.execute()V": "2.4054982817869415",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "3.436426116838488",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "7.903780068728523",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "2.4054982817869415",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "5.154639175257732"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.util.jar.Attributes.read(Ljava/util/jar/Manifest$FastInputStream;[BLjava/lang/String;I)I": "0.06056935190793458",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.840702604482132",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.09872804360992"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.StringLatin1.getChars([BII[CI)V": "0.10752688172043011",
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.3225806451612903",
            "jdk.jfr.internal.handlers.EventHandler1370_1683125630345-3723394.write(JJJJJJ)V": "0.10752688172043011",
            "java.util.Arrays.fill([ZZ)V": "0.10752688172043011",
            "Sieve.sieve([ZI)I": "99.24731182795699",
            "java.io.BufferedWriter.flushBuffer()V": "0.10752688172043011"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "99.04502046384721",
            "Towers$TowersDisk.getSize()I": "0.1364256480218281",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "0.8185538881309686"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.15847860538827258",
            "nbody.NBodySystem.advance(D)V": "99.52456418383518",
            "NBody.innerBenchmarkLoop(I)Z": "0.31695721077654515"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "3.777619387027798",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.7127583749109052",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.9914468995010695",
            "richards.Scheduler.schedule()V": "60.584461867426946",
            "Richards.benchmark()Ljava/lang/Object;": "0.7840342124019958",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "24.875267284390592",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "5.2744119743406985"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.160951074531321",
            "json.JsonPureStringParser.readExponent()Z": "6.675811614083218",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "16.27800640146319",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "0.594421582075903",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "31.96159122085048",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.343850022862369",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "22.267946959304982",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "7.590306355738454",
            "java.lang.StringLatin1.hashCode([B)I": "0.7315957933241883",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.61225422953818"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "25.953259532595325",
            "Permute.permute(I)V": "73.92373923739237",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12300123001230012"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.0",
            "richards.Packet::setLink": "2.1",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "45.9",
            "richards.HandlerTaskDataRecord::workInAdd": "2.2",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.9",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.9"
        },
        "Mandelbrot.hpl": {
            "java.io.PrintStream::write": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Harness::processArguments": "0.0",
            "java.lang.Object::getClass": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "java.lang.System::arraycopy": "0.0",
            "Mandelbrot::mandelbrot": "98.1",
            "sun.nio.fs.UnixNativeDispatcher::<clinit>": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "8.9",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "List::tail": "1.7",
            "List::isShorterThan": "80.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "14.6",
            "java.lang.String::<init>": "4.2",
            "java.lang.String::length": "3.5",
            "java.util.Arrays::copyOfRange": "7.8",
            "java.lang.String::equals": "19.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.7",
            "AGCT::Unknown Java[ERR=-5]": "10.6",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readValue": "2.5",
            "json.JsonPureStringParser::readStringInternal": "8.7"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.5",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.1",
            "havlak.HavlakLoopFinder::findLoops": "5.9",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "havlak.HavlakLoopFinder::stepD": "2.1",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "5.9",
            "havlak.HavlakLoopFinder::doDFS": "6.3",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "39.0",
            "java.util.zip.ZipUtils::LG": "0.0",
            "Permute::permute": "51.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Permute::benchmark": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodType::checkPtypes": "0.0",
            "java.nio.charset.CharsetEncoder::encode": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "6.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "55.3",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "13.7",
            "Queens::setRowColumn": "25.4",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.7",
            "java.util.Arrays::setAll": "34.8",
            "som.Random::next": "12.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.3",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.0"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.4",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "81.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "jdk.internal.loader.NativeLibraries::load": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "10.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Variable::<init>": "2.2",
            "som.Vector::append": "4.6",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.3",
            "AGCT::Unknown not Java[ERR=-3]": "11.0",
            "AGCT::Unknown Java[ERR=-5]": "18.5",
            "deltablue.AbstractConstraint::satisfy": "4.0",
            "deltablue.EqualityConstraint::execute": "2.1",
            "som.Vector::<init>": "2.9",
            "som.Vector::forEach": "23.9",
            "som.Dictionary::at": "4.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.0",
            "Bounce$Ball::bounce": "75.8",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "som.Random::next": "0.7",
            "java.lang.ClassLoader::defineClass0": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.5"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.9",
            "nbody.Body::setVZ": "8.8",
            "nbody.Body::getZ": "8.2",
            "nbody.Body::setVX": "28.8",
            "nbody.Body::setVY": "6.2",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "nbody.NBodySystem::advance": "38.5"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.4",
            "Towers::popDiskFrom": "22.8",
            "Towers::moveDisks": "3.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "Towers::pushDisk": "38.6",
            "Towers$TowersDisk::setNext": "17.7",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.9",
            "Towers$TowersDisk::getNext": "3.1"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.1",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "6.6",
            "cd.RedBlackTree::findNode": "4.7",
            "cd.RedBlackTree::treeMinimum": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "8.9",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "cd.Vector2D::compareNumbers": "6.5",
            "cd.CollisionDetector::isInVoxel": "23.0",
            "cd.RedBlackTree::treeInsert": "13.7"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "4.16%",
            "deltablue.AbstractConstraint.satisfy": "2.93%",
            "som.Vector.append": "3.60%",
            "vtable": "3.51%",
            "som.Vector.<init>": "1.75%",
            "som.Vector.forEach": "24.27%",
            "itable": "4.32%",
            "deltablue.Planner.addPropagate": "2.20%",
            "deltablue.Plan.lambda$execute$0": "3.12%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "5.42%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "68.05%",
            "som.Random.next": "1.34%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "1.10%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "21.41%",
            "__tls_get_addr": "0.05%",
            "Bounce$Ball.<init>": "3.03%",
            "Bounce.lambda$benchmark$0": "0.25%",
            "Benchmark.innerBenchmarkLoop": "0.18%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.53%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "WatcherThread::sleep()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.54%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.76%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.15%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.55%",
            "java.util.Arrays.setAll": "35.40%",
            "Storage.lambda$buildTreeDepth$0": "4.04%",
            "SpinPause": "0.18%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.32%",
            "Storage.buildTreeDepth": "43.62%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.89%",
            "Towers.popDiskFrom": "20.04%",
            "Towers.moveDisks": "8.54%",
            "Interpreter": "0.04%",
            "Towers.pushDisk": "41.76%",
            "Towers.moveTopDisk": "4.95%",
            "Towers$TowersDisk.getSize": "0.62%",
            "Towers$TowersDisk.getNext": "3.45%",
            "Towers.benchmark": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.23%",
            "cd.CollisionDetector.isInVoxel": "19.84%",
            "cd.RedBlackTree.forEach": "6.09%",
            "Node::set_req_X(unsigned": "4.11%",
            "cd.RedBlackTree.put": "6.38%",
            "cd.RedBlackTree.treeInsert": "12.32%",
            "cd.RedBlackTree.treeMinimum": "5.18%",
            "cd.RedBlackTree.findNode": "2.73%",
            "cd.Vector2D.compareNumbers": "3.72%",
            "cd.RedBlackTree.leftRotate": "2.07%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.11%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.27%",
            "som.Vector.hasSome": "2.45%",
            "som.Vector.append": "3.46%",
            "som.Vector.<init>": "2.21%",
            "som.IdentitySet.lambda$contains$0": "31.79%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.86%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.93%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.09%",
            "havlak.HavlakLoopFinder.doDFS": "5.44%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "7.33%",
            "Sieve.benchmark": "6.14%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "83.73%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.04%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.51%",
            "Permute.swap": "40.48%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.06%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.23%",
            "nbody.Body.getZ": "8.04%",
            "nbody.Body.getY": "0.72%",
            "nbody.Body.setX": "1.49%",
            "nbody.Body.setY": "1.59%",
            "nbody.Body.setZ": "0.37%",
            "nbody.Body.setVX": "28.76%",
            "nbody.Body.setVY": "5.78%",
            "nbody.Body.getMass": "0.59%",
            "nbody.NBodySystem.advance": "40.56%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.18%",
            "Interpreter": "0.05%",
            "List.makeList": "1.10%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.53%",
            "List$Element.length": "0.13%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.76%",
            "List$Element.<init>": "0.26%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "8.19%",
            "java.lang.String.length": "3.14%",
            "java.lang.String.<init>": "6.66%",
            "json.JsonPureStringParser.readArray": "2.45%",
            "json.JsonPureStringParser.isWhiteSpace": "2.33%",
            "java.lang.String.isLatin1": "3.02%",
            "json.JsonPureStringParser.readStringInternal": "6.56%",
            "java.util.Arrays.copyOfRange": "9.10%",
            "java.lang.String.equals": "21.73%",
            "json.JsonPureStringParser.read": "13.95%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.97%",
            "Queens.getRowColumn": "58.24%",
            "Queens.setRowColumn": "23.36%",
            "Interpreter": "0.05%",
            "Queens.queens": "0.60%",
            "Queens.placeQueen": "13.65%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.35%",
            "Richards.benchmark": "5.04%",
            "richards.Packet.<init>": "6.75%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.24%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.95%",
            "itable": "36.81%",
            "richards.TaskControlBlock.<init>": "3.09%",
            "richards.RBObject.<init>": "5.59%",
            "richards.RBObject.append": "3.01%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.09%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "4.5",
            "Towers.moveDisks": "93.7",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "0.9",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.4",
            "java.io.PrintStream.println": "0.1",
            "Sieve.sieve": "93.7",
            "java.lang.Integer.valueOf": "0.3",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.5",
            "deltablue.Planner.removePropagateFrom": "9.3",
            "som.Vector.<init>": "31.2",
            "deltablue.Variable.<init>": "4.7",
            "som.Vector.forEach": "7.2",
            "deltablue.Planner.constraintsConsuming": "4.9",
            "deltablue.AbstractConstraint.<init>": "3.9",
            "deltablue.Plan.lambda$execute$0": "2.5",
            "deltablue.Planner.addConstraintsConsumingTo": "16.6"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "14.0",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.7",
            "richards.RBObject.<init>": "0.6",
            "richards.RBObject.append": "0.3"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "52.1",
            "Bounce$Ball.<init>": "47.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.9",
            "cd.RedBlackTree.treeInsert": "2.0",
            "cd.RedBlackTree.<init>": "1.4",
            "cd.Vector2D.<init>": "43.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.4",
            "cd.RedBlackTree$Node.<init>": "8.2",
            "cd.RedBlackTree$Entry.<init>": "4.9",
            "cd.Motion.<init>": "1.4"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.2",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.8",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "4.5",
            "List$Element.length": "0.1",
            "List.isShorterThan": "73.4",
            "List$Element.<init>": "21.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.4",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.1",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.4",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "21.0",
            "Queens.placeQueen": "77.9",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.3",
            "Queens.benchmark": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "21.385621351404367",
            "java.lang.String.<init>(byte[], byte) String.java": "6.593030582481736",
            "json.JsonPureStringParser.isWhiteSpace()": "1.9612179580800102",
            "json.JsonPureStringParser.read()": "18.214290185147327",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "5.382917374304709",
            "java.lang.String.length() String.java": "2.7707419663087802",
            "java.lang.String.substring(int, int) String.java": "8.787925573864896",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.9936197824299935",
            "json.JsonPureStringParser.readStringInternal()": "3.889053482830999",
            "json.JsonPureStringParser.readValue()": "3.3382433329021453"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.179180067280323",
            "som.Vector.hasSome(TestInterface)": "2.5050721186777922",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.6625067682612595",
            "havlak.HavlakLoopFinder.findLoops()": "9.859372383754437",
            "som.Vector.<init>(int)": "2.581181080616788",
            "som.Vector.append(Object)": "5.723393937812456",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.358649348616014",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.233832825577831",
            "som.Vector.removeAll()": "2.3354578606423164",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.06506446429077"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "10.549943883277216",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2543958099513655",
            "Queens.getRowColumn(int, int)": "66.29255518144406",
            "Queens.queens()": "0.4339693228582117",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17957351290684623",
            "java.lang.StringConcatHelper.prepend(long, byte[], long) StringConcatHelper.java": "0.13468013468013468",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.9277964833520388",
            "Queens.setRowColumn(int, int, boolean)": "20.276842499064717",
            "com.sun.management.internal.GcInfoCompositeData.getCompositeData() GcInfoCompositeData.java": "0.13468013468013468",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.20950243172465394"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.4402549623236007",
            "richards.Scheduler.findTask(int)": "1.5917057659541372",
            "richards.TaskControlBlock.runTask()": "36.714140496973954",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.2268216891615693",
            "richards.Scheduler.schedule()": "2.1560378102469677",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "4.1926976880473745",
            "richards.RBObject.append(Packet, Packet)": "2.358618544095676",
            "Richards.benchmark()": "28.585588551294528",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.2898857951112928",
            "richards.Scheduler$$Lambda$12.0x00000008000c7528.apply(Packet, RBObject)": "1.8268441177428165"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.30672865814283873",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.08071806793232598",
            "Storage$$Lambda$7.0x00000008000c2a98.<init>(Storage, int, Random)": "0.14529252227818676",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.0170476559473074",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.5273580438245298",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.359938008523834",
            "som.Random.next()": "14.125661888157047",
            "com.yourkit.probes.FailedEventPolicy.<clinit>() a": "0.12914890869172158",
            "Storage.buildTreeDepth(int, Random)": "39.32584269662922",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.556072151190323"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "37.20990535459613",
            "Towers.popDiskFrom(int)": "28.747215444998403",
            "Towers.moveDisks(int, int, int)": "6.800796765790931",
            "Towers.buildTowerAt(int, int)": "0.10607828577490186",
            "Towers$TowersDisk.getSize()": "0.4596725716912414",
            "Towers.moveTopDisk(int, int)": "6.1996864797331535",
            "jdk.internal.perf.PerfCounter.getZipFileOpenTime() PerfCounter.java": "0.17679714295816978",
            "Benchmark.innerBenchmarkLoop(int)": "0.10607828577490186",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.58912343976521",
            "Towers.benchmark()": "0.10607828577490186"
        },
        "YourKit_Permute.txt": {
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.10162142631317463",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0903301567228219",
            "java.lang.String.coder() String.java": "0.10162142631317463",
            "java.lang.invoke.BoundMethodHandle$Species_LL.<init>(MethodType, LambdaForm, Object, Object) java/lang/invoke/BoundMethodHandle$Species_LL": "0.0903301567228219",
            "java.security.Permissions.add(Permission) Permissions.java": "0.20324285262634925",
            "Permute.permute(int)": "56.411182873402275",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.10162142631317463",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.04516507836141095",
            "Permute.benchmark()": "0.5532722099272841",
            "Permute.swap(int, int)": "42.20676572873853"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "3.4954187263438734",
            "som.Vector.forEach(ForEachInterface)": "46.019566071687095",
            "deltablue.EqualityConstraint.execute()": "2.0476121533020324",
            "deltablue.BinaryConstraint.getOutput()": "2.8335642929533176",
            "som.Dictionary.at(Dictionary$CustomHash)": "1.5305383772156607",
            "deltablue.ScaleConstraint.execute()": "2.812881341909863",
            "som.Vector.<init>(int)": "2.6681006846056787",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.233758712693126",
            "som.Vector.append(Object)": "2.3992223210407655",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "14.416016877288046"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "2.984954217256262",
            "List.makeList(int)": "0.5243838489774514",
            "java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) StringCoding.java": "0.12101165745633494",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.04033721915211165",
            "List$Element.getNext()": "24.027536874941173",
            "List$Element.length()": "0.12101165745633494",
            "java.lang.StringConcatHelper.prepend(long, byte[], String, String) StringConcatHelper.java": "0.12101165745633494",
            "List.isShorterThan(List$Element, List$Element)": "71.61200973471554",
            "java.lang.invoke.LambdaFormBuffer.indexOf(LambdaForm$Name, LambdaForm$Name[]) LambdaFormBuffer.java": "0.2016860957605582",
            "java.util.TreeMap.getEntry(Object) TreeMap.java": "0.12101165745633494"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.656853830416003",
            "nbody.Body.getZ()": "5.24266878836099",
            "nbody.Body.setX(double)": "0.4120254603318935",
            "nbody.Body.getX()": "0.4120254603318935",
            "nbody.Body.setZ(double)": "0.4120254603318935",
            "nbody.NBodySystem.advance(double)": "49.911911798135925",
            "nbody.Body.setVY(double)": "4.773812230052283",
            "nbody.Body.setVZ(double)": "6.947601727665377",
            "nbody.Body.setVX(double)": "26.284382814275965",
            "nbody.Body.setY(double)": "0.4120254603318935"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.22748134393721",
            "java.io.BufferedOutputStream.flush() BufferedOutputStream.java": "0.07882843429212065",
            "java.lang.invoke.LambdaForm$MH.0x0000000800142000.<clinit>() LambdaForm$MH": "0.07006971937077391",
            "Run.runBenchmark()": "8.75871492134674E-4",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.0",
            "jdk.internal.org.objectweb.asm.Symbol.<init>(int, int, String, String, String, long) Symbol.java": "0.02627614476404022",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.21020915811232177",
            "Run.measure(Benchmark)": "8.75871492134674E-4",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c8c00.invoke(Object, Object, long) LambdaForm$MH": "0.07882843429212065",
            "java.lang.StringConcatHelper.newArray(long) StringConcatHelper.java": "0.07882843429212065"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.956765103261919",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.872032426172552",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.804789690140009",
            "cd.RedBlackTree.findNode(Comparable)": "8.9305598859739",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.972918800944279",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.0489065075052335",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.1676836963461166",
            "cd.RedBlackTree.put(Comparable, Object)": "6.926194824283996",
            "cd.Vector2D.compareNumbers(double, double)": "9.925318842516294",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.253708075364127"
        },
        "YourKit_Sieve.txt": {
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.10362336361438292",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.10362336361438292",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.09210965654611813",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.0724672722876583",
            "java.lang.invoke.LambdaForm.parameter(int) LambdaForm.java": "0.023027414136529534",
            "java.lang.StringLatin1.equals(byte[], byte[]) StringLatin1.java": "0.149678191887442",
            "Sieve.benchmark()": "86.3067481837127",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(int, String, String, String, String[]) ClassWriter.java": "0.0690822424095886",
            "java.lang.invoke.LambdaForm$Name.internArguments() LambdaForm.java": "0.12665077775091244",
            "Sieve.sieve(boolean[], int)": "10.914994300715"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.17279447057694147",
            "Bounce.benchmark()": "65.70029759047709",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17279447057694147",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(int, String, String, String, String[]) ClassWriter.java": "0.17279447057694147",
            "java.lang.StringConcatHelper.mix(long, long) StringConcatHelper.java": "0.17279447057694147",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5759815685898049",
            "som.Random.next()": "0.17279447057694147",
            "Bounce$Ball.bounce()": "31.160602860708448",
            "Bounce$Ball.<init>(Random)": "0.8831717385043675",
            "jdk.internal.misc.Unsafe.compareAndSetLong(Object, long, long, long) Unsafe.java (native)": "0.17279447057694147"
        }
    },
    "Runtimes": {
        "NBody.data": 22.278,
        "YourKit_Storage.txt": 61.185500000000005,
        "rebench_test_Async_Bounce.txt": 40.723,
        "Permute_not_profiled_": 29.5675,
        "JavaFlightRecorder_Sieve.jfr": 30.7295,
        "CD_not_profiled_": 41.058,
        "JProfiler_NBody.txt": 21.5905,
        "JProfiler_List.txt": 28.499499999999998,
        "YourKit_Mandelbrot.txt": 37.4745,
        "CD.data": 44.1505,
        "Json_not_profiled_": 78.9365,
        "List.data": 23.999000000000002,
        "Queens_not_profiled_": 20.839,
        "Towers.hpl": 26.067,
        "Bounce.hpl": 25.678,
        "JavaFlightRecorder_Json.jfr": 81.2495,
        "Sieve.data": 33.9625,
        "Richards.hpl": 90.53800000000001,
        "YourKit_Richards.txt": 92.893,
        "JavaFlightRecorder_Havlak.jfr": 151.97750000000002,
        "JavaFlightRecorder_CD.jfr": 43.1055,
        "JavaFlightRecorder_Towers.jfr": 25.3565,
        "rebench_test_Async_CD.txt": 132.19850000000002,
        "List_not_profiled_": 22.556,
        "Havlak_not_profiled_": 152.18200000000002,
        "JProfiler_Json.txt": 1030.6965,
        "rebench_test_Async_NBody.txt": 56.2315,
        "JavaFlightRecorder_Bounce.jfr": 25.211,
        "Havlak.data": 156.696,
        "Towers_not_profiled_": 25.853,
        "YourKit_DeltaBlue.txt": 11.747,
        "rebench_test_Async_Towers.txt": 72.328,
        "YourKit_NBody.txt": 23.448,
        "JavaFlightRecorder_NBody.jfr": 21.133,
        "rebench_test_Async_Sieve.txt": 81.142,
        "Storage.hpl": 58.9555,
        "JProfiler_Queens.txt": 26.362000000000002,
        "rebench_test_Async_List.txt": 64.65350000000001,
        "rebench_test_Async_Richards.txt": 242.7355,
        "YourKit_Towers.txt": 27.491,
        "JProfiler_Havlak.txt": 1907.6975,
        "JavaFlightRecorder_List.jfr": 22.4715,
        "YourKit_Permute.txt": 29.444000000000003,
        "Queens.data": 21.627,
        "Storage_not_profiled_": 61.067499999999995,
        "Json.hpl": 81.723,
        "Towers.data": 27.247999999999998,
        "YourKit_List.txt": 25.009,
        "JProfiler_CD.txt": 476.102,
        "JProfiler_Permute.txt": 30.299,
        "Sieve.hpl": 34.263,
        "DeltaBlue_not_profiled_": 11.748999999999999,
        "CD.hpl": 41.719,
        "JavaFlightRecorder_Queens.jfr": 21.564999999999998,
        "JProfiler_Bounce.txt": 44.193,
        "Permute.hpl": 29.991500000000002,
        "Richards_not_profiled_": 90.162,
        "DeltaBlue.hpl": 14.7305,
        "NBody.hpl": 21.3265,
        "JProfiler_Towers.txt": 27.024,
        "JProfiler_Mandelbrot.txt": 37.590500000000006,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.887,
        "rebench_test_Async_Mandelbrot.txt": 99.71199999999999,
        "YourKit_CD.txt": 44.7585,
        "rebench_test_Async_Permute.txt": 78.594,
        "Mandelbrot.data": 39.213499999999996,
        "JProfiler_Storage.txt": 1039.7635,
        "YourKit_Sieve.txt": 34.2255,
        "JavaFlightRecorder_Permute.jfr": 29.6635,
        "YourKit_Bounce.txt": 14.3645,
        "JProfiler_Sieve.txt": 26.8325,
        "JProfiler_DeltaBlue.txt": 98.631,
        "YourKit_Queens.txt": 20.762,
        "Mandelbrot.hpl": 37.757000000000005,
        "JavaFlightRecorder_Storage.jfr": 58.8785,
        "List.hpl": 22.707,
        "Mandelbrot_not_profiled_": 38.2495,
        "Queens.hpl": 20.956,
        "Storage.data": 65.0325,
        "JavaFlightRecorder_Richards.jfr": 89.85249999999999,
        "Bounce.data": 27.141,
        "Permute.data": 30.53,
        "YourKit_Json.txt": 79.113,
        "rebench_test_Async_DeltaBlue.txt": 39.025999999999996,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.3935,
        "YourKit_Havlak.txt": 154.5265,
        "DeltaBlue.data": 12.4425,
        "JProfiler_Richards.txt": 92.739,
        "rebench_test_Async_Storage.txt": 155.0805,
        "Sieve_not_profiled_": 31.2455,
        "Havlak.hpl": 154.604,
        "Richards.data": 98.07900000000001,
        "rebench_test_Async_Havlak.txt": 448.318,
        "Bounce_not_profiled_": 26.164,
        "NBody_not_profiled_": 21.0285,
        "Json.data": 82.6565,
        "rebench_test_Async_Json.txt": 252.30450000000002,
        "rebench_test_Async_Queens.txt": 56.589
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.50%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.34%",
            "[.] void nbody.NBodySystem.advance(double)": "0.12%",
            "resource_allocate_bytes": "0.02%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.35%",
            "[.] java.lang.Object Permute.benchmark()": "0.03%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "[.] void Permute.permute(int)": "98.11%",
            "0xffffffffb4c063aa": "0.03%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.60%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.77%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.53%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.08%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.18%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "8.56%",
            "[.] void deltablue.StayConstraint.<init>(deltablue.Variable, deltablue.Strength$Sym, deltablue.Planner)": "3.82%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "7.13%",
            "[.] vtable chunks": "5.95%",
            "[.] void deltablue.Planner.chainTest(int)": "24.59%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.64%",
            "[.] Interpreter": "0.56%",
            "0xffffffffb51c12b7": "0.28%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "[.] boolean Queens.placeQueen(int)": "93.92%"
        },
        "Towers.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.11%",
            "[.] Interpreter": "0.37%",
            "[.] void Towers.moveDisks(int, int, int)": "96.14%",
            "0xffffffffb4c0634b": "0.15%",
            "0xffffffffb4c063aa": "0.22%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.10%",
            "[.] boolean richards.Scheduler.start()": "24.86%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.39%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.79%",
            "[.] void richards.Scheduler.schedule()": "7.82%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.78%",
            "[.] Interpreter": "0.24%",
            "0xffffffffb51c12b7": "0.12%",
            "0xffffffffb4c0634b": "0.08%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.22%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.24%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "10.12%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.10%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.95%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.98%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.28%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.05%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.64%",
            "[.] Interpreter": "0.52%",
            "[.] java.lang.Object List.benchmark()": "0.34%",
            "0xffffffffb51c12b7": "0.18%",
            "[.] List$Element List.makeList(int)": "0.67%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.41%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "83.33%",
            "[.] java.lang.Object Sieve.benchmark()": "5.80%",
            "[.] int Sieve.sieve(boolean[], int)": "6.66%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.49%",
            "0xffffffffb51c12b7": "0.20%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "[.] java.lang.Object Bounce.benchmark()": "23.77%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.43%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.81%",
            "[.] StubRoutines (2)": "8.76%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.38%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.10%"
        }
    }
}