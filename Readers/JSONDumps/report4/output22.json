{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "1.0590015128593042",
            " ": "0",
            "Queens.placeQueen(I)Z": "87.74583963691377",
            "Queens.getRowColumn(II)Z": "9.833585476550681",
            "java.util.Arrays.fill([ZZ)V": "0.9077155824508321",
            "java.lang.invoke.DirectMethodHandle.ftypeKind(Ljava/lang/Class;)I": "0.15128593040847202",
            "Queens.queens()Z": "0.30257186081694404"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "72.50996015936255",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.4608233731739708",
            "Bounce.benchmark()Ljava/lang/Object;": "25.89641434262948",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.13280212483399734"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.8833100883310089",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.4881450488145049",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "4.370060437006043",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "29.9628079962808",
            "havlak.HavlakLoopFinder.findLoops()V": "3.0450953045095304",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "3.4402603440260346",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "50.557880055788004",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.0692701069270107",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6741050674105068",
            "som.Vector.append(Ljava/lang/Object;)V": "4.579265457926546"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.136630343671417",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.5088013411567478",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "14.333612740989103",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.514668901927913",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.23051131601006",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "1.2573344509639566",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "11.064543168482817",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.79379715004191",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.963118189438391",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.4249790444258172"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "90.43887147335424",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "8.777429467084641",
            "List$Element.length()I": "0.15673981191222572",
            "List.makeList(I)LList$Element;": "0.6269592476489029"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "6.228373702422145",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "8.650519031141869",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "33.56401384083045",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.1141868512110724",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "16.26297577854671",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.7681660899653977",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "2.422145328719723",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "8.996539792387543",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "2.7681660899653977",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "6.920415224913494"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.59748050389922",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.40251949610078"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.<init>(Ljava/lang/String;Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)V": "0.10787486515641856",
            "Sieve.benchmark()Ljava/lang/Object;": "0.43149946062567424",
            "Sieve.sieve([ZI)I": "99.24487594390507",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.10787486515641856",
            "java.lang.invoke.LambdaForm.normalize()I": "0.10787486515641856"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.<init>(Ljava/lang/invoke/LambdaForm;ILjava/lang/String;Ljava/lang/String;Ljava/lang/invoke/MethodType;)V": "0.1375515818431912",
            "Towers.moveDisks(III)V": "65.06189821182943",
            "Towers.benchmark()Ljava/lang/Object;": "0.1375515818431912",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "34.52544704264099",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "0.1375515818431912"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.21996879875195",
            "NBody.innerBenchmarkLoop(I)Z": "0.62402496099844",
            "java.io.PrintStream.write([BII)V": "0.15600624024961"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "3.916272788656314",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.40513166779203247",
            "Run.measure(LBenchmark;)V": "0.0675219446320054",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.511141120864281",
            "richards.Scheduler.schedule()V": "60.63470627954086",
            "java.lang.Long.getChars(JI[B)I": "0.0675219446320054",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "15.732613099257259",
            "Richards.benchmark()Ljava/lang/Object;": "1.012829169480081",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "9.655638082376774",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.9966239027684"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.479701353243117",
            "json.JsonPureStringParser.readExponent()Z": "7.04619692020532",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "16.70555296313579",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "32.15118992067195",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "6.159589360709286",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "15.772281847876808",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "1.4932337844143724",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "7.652823145123659",
            "som.Vector.append(Ljava/lang/Object;)V": "6.579561362575828",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.6999533364442371"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "25.81818181818182",
            "Permute.permute(I)V": "74.06060606060606",
            "Permute.benchmark()Ljava/lang/Object;": "0.12121212121212122"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.TaskControlBlock::runTask": "2.0",
            "richards.Packet::<init>": "7.3",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "46.1",
            "richards.HandlerTaskDataRecord::workInAdd": "2.0",
            "richards.TaskControlBlock::<init>": "3.5",
            "richards.Scheduler::schedule": "6.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.MemberName::isMethod": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::hash": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Mandelbrot::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "Mandelbrot::mandelbrot": "97.6"
        },
        "List.hpl": {
            "List$Element::getNext": "9.1",
            "List::makeList": "0.5",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "List::tail": "1.8",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "List::isShorterThan": "80.4",
            "AGCT::Unknown not Java[ERR=-3]": "5.0",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "2.5",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.3",
            "json.JsonPureStringParser::read": "15.5",
            "java.lang.String::<init>": "5.7",
            "java.lang.String::length": "3.4",
            "java.util.Arrays::copyOfRange": "8.2",
            "java.lang.String::equals": "21.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "10.0",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.0",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.7",
            "havlak.HavlakLoopFinder::findLoops": "6.0",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.7",
            "havlak.HavlakLoopFinder::stepD": "2.3",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "5.0",
            "som.Vector::forEach": "1.9"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "51.2",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::emitStaticInvoke": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "6.2"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.1",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "13.0",
            "Queens::setRowColumn": "25.3",
            "java.util.Arrays::fill": "0.2",
            "Queens::queens": "0.6"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.1",
            "java.util.Arrays::setAll": "35.2",
            "som.Random::next": "11.8",
            "AGCT::Unknown not Java[ERR=-3]": "5.0",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.3",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.8",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.1"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "6.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "85.4",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "4.8",
            "java.util.Objects::equals": "0.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "12.7",
            "java.util.Arrays::setAll": "3.1",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.8",
            "som.Vector::append": "3.8",
            "AGCT::Unknown not Java[ERR=-3]": "12.4",
            "AGCT::Unknown Java[ERR=-5]": "14.6",
            "deltablue.AbstractConstraint::satisfy": "3.6",
            "deltablue.BinaryConstraint::chooseMethod": "4.5",
            "som.Vector::<init>": "5.8",
            "som.Vector::forEach": "5.7"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.4",
            "Bounce$Ball::bounce": "75.5",
            "java.util.Arrays::setAll": "0.4",
            "Bounce::lambda$benchmark$0": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.8"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.1",
            "nbody.Body::getY": "0.6",
            "nbody.Body::setVZ": "8.8",
            "nbody.Body::getZ": "7.5",
            "nbody.Body::setVX": "27.9",
            "nbody.Body::setVY": "5.4",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "nbody.NBodySystem::advance": "42.2"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.6",
            "Towers::popDiskFrom": "23.8",
            "Towers::moveDisks": "4.0",
            "Towers::buildTowerAt": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "Towers::pushDisk": "37.8",
            "Towers$TowersDisk::setNext": "16.3",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "Towers::moveTopDisk": "5.9",
            "Towers$TowersDisk::getNext": "2.9"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "15.3",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "6.6",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "10.1",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.6",
            "cd.CollisionDetector::isInVoxel": "21.6",
            "cd.RedBlackTree::treeInsert": "13.1"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.67%",
            "deltablue.AbstractConstraint.satisfy": "2.95%",
            "som.Vector.append": "3.69%",
            "vtable": "2.49%",
            "som.Vector.forEach": "26.64%",
            "itable": "3.36%",
            "deltablue.Planner.addPropagate": "2.17%",
            "deltablue.Plan.lambda$execute$0": "3.59%",
            "deltablue.ScaleConstraint.execute": "2.26%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "5.73%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.02%",
            "som.Random.next": "0.96%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.75%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "19.51%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.05%",
            "Bounce$Ball.<init>": "1.98%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.13%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.58%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.59%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.59%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.34%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.33%",
            "java.util.Arrays.setAll": "35.53%",
            "Storage.lambda$buildTreeDepth$0": "4.29%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.18%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.37%",
            "Storage.buildTreeDepth": "43.32%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.98%",
            "Towers.popDiskFrom": "18.31%",
            "Towers.moveDisks": "9.10%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.51%",
            "Towers.moveTopDisk": "4.73%",
            "Towers$TowersDisk.getSize": "0.37%",
            "Towers$TowersDisk.getNext": "3.66%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "10.25%",
            "cd.CollisionDetector.isInVoxel": "20.37%",
            "cd.RedBlackTree.forEach": "6.06%",
            "Node::set_req_X(unsigned": "3.71%",
            "cd.RedBlackTree.put": "6.45%",
            "cd.RedBlackTree.treeInsert": "12.92%",
            "cd.RedBlackTree.treeMinimum": "5.12%",
            "cd.RedBlackTree.findNode": "4.01%",
            "cd.Vector2D.compareNumbers": "5.09%",
            "cd.RedBlackTree.leftRotate": "2.20%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.39%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.92%",
            "som.Vector.hasSome": "2.39%",
            "som.Vector.append": "2.67%",
            "som.IdentitySet.lambda$contains$0": "31.97%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.43%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.00%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.11%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.86%",
            "havlak.HavlakLoopFinder.doDFS": "5.23%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.26%",
            "Sieve.benchmark": "7.53%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "83.60%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.05%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.42%",
            "Permute.swap": "40.32%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "[no_Java_frame]": "0.02%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.06%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.77%",
            "nbody.Body.getZ": "7.69%",
            "nbody.Body.getY": "0.78%",
            "nbody.Body.setX": "1.20%",
            "nbody.Body.setY": "1.78%",
            "nbody.Body.setVX": "27.70%",
            "nbody.Body.setVY": "5.63%",
            "nbody.Body.getVZ": "0.44%",
            "nbody.Body.getMass": "0.43%",
            "nbody.NBodySystem.advance": "41.86%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.10%",
            "Interpreter": "0.05%",
            "List.makeList": "1.35%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.58%",
            "List$Element.length": "0.14%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.37%",
            "List$Element.<init>": "0.32%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.12%",
            "java.lang.String.length": "2.86%",
            "java.lang.String.<init>": "5.68%",
            "json.JsonPureStringParser.isWhiteSpace": "2.32%",
            "java.lang.String.isLatin1": "2.98%",
            "json.JsonPureStringParser.readStringInternal": "7.44%",
            "java.util.Arrays.copyOfRange": "7.21%",
            "java.lang.String.equals": "22.00%",
            "json.JsonPureStringParser.read": "16.64%",
            "json.JsonPureStringParser.readValue": "2.21%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.83%",
            "Queens.getRowColumn": "68.26%",
            "Queens.setRowColumn": "18.27%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.52%",
            "Queens.placeQueen": "8.85%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.63%",
            "Richards.benchmark": "4.57%",
            "richards.Packet.<init>": "7.31%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.20%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.77%",
            "itable": "36.43%",
            "richards.TaskControlBlock.<init>": "3.20%",
            "richards.RBObject.<init>": "6.41%",
            "richards.RBObject.append": "2.67%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "3.90%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.4",
            "Towers.moveDisks": "93.5",
            "java.io.PrintStream.println": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.7",
            "Towers.buildTowerAt": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "3.5",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "95.6",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.1",
            "deltablue.AbstractConstraint.satisfy": "11.0",
            "deltablue.Planner.removePropagateFrom": "9.6",
            "som.Vector.<init>": "28.1",
            "deltablue.Variable.<init>": "5.3",
            "som.Vector.forEach": "7.1",
            "deltablue.Planner.addPropagate": "1.8",
            "deltablue.AbstractConstraint.<init>": "6.1",
            "deltablue.Planner.constraintsConsuming": "4.4",
            "deltablue.Planner.addConstraintsConsumingTo": "18.2"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "som.Dictionary$Entry.<init>": "3.5",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.2",
            "havlak.HavlakLoopFinder.stepD": "3.6",
            "java.lang.Integer.valueOf": "8.2",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.9",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.2"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.3",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.5",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.util.Arrays.setAll": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "55.0",
            "Bounce$Ball.<init>": "43.9",
            "Bounce.lambda$benchmark$0": "0.2"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.7",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.4",
            "cd.RedBlackTree$InsertResult.<init>": "14.7",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "5.1"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.2",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.0",
            "Run.reportBenchmark": "0.1",
            "Permute.benchmark": "1.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.6",
            "List.isShorterThan": "75.2",
            "List$Element.<init>": "20.2",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.5",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "1.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "22.0",
            "Queens.placeQueen": "75.7",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.3",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.2"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.075139969957675",
            "java.lang.String.<init>(byte[], byte) String.java": "5.261675542810326",
            "json.JsonPureStringParser.isWhiteSpace()": "2.0526082206745877",
            "json.JsonPureStringParser.read()": "19.89451044653831",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "4.672777550184352",
            "java.lang.String.length() String.java": "2.2361054212754343",
            "java.lang.String.substring(int, int) String.java": "9.42663525877373",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.88184487232009",
            "json.JsonPureStringParser.readValue()": "4.130820701898131",
            "json.JsonPureStringParser.readStringInternal()": "3.4480404205926547"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.446628943248704",
            "som.Vector.hasSome(TestInterface)": "2.2739000008745776",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.04193596347767",
            "havlak.HavlakLoopFinder.findLoops()": "10.969381061911305",
            "som.Vector.<init>(int)": "3.6907146168041223",
            "som.Vector.append(Object)": "3.8678164437953155",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.99800596461462",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.427545674779827",
            "som.Vector.removeAll()": "2.5887476933033655",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.04926491809588"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.744326656295605",
            "java.lang.StringLatin1.indexOfChar(byte[], int, int, int) StringLatin1.java": "0.17641492791044533",
            "Queens.getRowColumn(int, int)": "58.82635959777396",
            "Queens.queens()": "0.8018860359565697",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6254711080461244",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.2886789729443651",
            "Queens.setRowColumn(int, int, boolean)": "24.409410934517982",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.22452809006783953",
            "sun.nio.fs.NativeBuffer.<init>(int) NativeBuffer.java": "0.16037720719131393",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14433948647218256"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.0839600716131113",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9497151414284815",
            "richards.TaskControlBlock.runTask()": "37.89341804339043",
            "richards.Scheduler.<init>()": "1.7347275402823752",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "4.107004518446307",
            "richards.Scheduler.schedule()": "2.4130504887261246",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "3.5361753705756107",
            "richards.RBObject.append(Packet, Packet)": "2.813372228791288",
            "Richards.benchmark()": "27.70745376839905",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.805154513071617"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.1559701612946599",
            "java.security.AccessController.executePrivileged(PrivilegedAction, AccessControlContext, Class) AccessController.java": "0.08605250278326064",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.5059187987070612",
            "Storage$$Lambda$11.0x00000008000c2a90.<init>(Storage, int, Random)": "0.10218734705512202",
            "Storage$$Lambda$11.0x00000008000c2a90.apply(int)": "0.5754761123630555",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.32671446166093",
            "som.Random.next()": "14.822543604416646",
            "javax.management.openmbean.TabularDataSupport.<init>(TabularType) TabularDataSupport.java": "0.06453937708744549",
            "Storage.buildTreeDepth(int, Random)": "38.55689952832472",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.5977099277696807"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.720458500139934",
            "Towers.popDiskFrom(int)": "31.953857947700804",
            "Towers.moveDisks(int, int, int)": "7.300957642277411",
            "Towers$TowersDisk.getSize()": "1.2654993246614181",
            "Towers.moveTopDisk(int, int)": "8.882831798104185",
            "java.nio.CharBuffer.<init>(int, int, int, int, char[], int, MemorySegmentProxy) CharBuffer.java": "0.10951436463416117",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.315437874934595",
            "jdk.internal.org.objectweb.asm.Frame.accept(MethodWriter) Frame.java": "0.14601915284554823",
            "sun.nio.cs.StreamEncoder.write(char[], int, int) StreamEncoder.java": "0.10951436463416117",
            "java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendJ(MethodType, LambdaForm, long) BoundMethodHandle.java": "0.14601915284554823"
        },
        "YourKit_Permute.txt": {
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.07840940912909547",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.10081209745169419",
            "Permute.permute(int)": "56.10753290394847",
            "com.yourkit.probes.Table.createRow() a": "0.10081209745169419",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.15681881825819094",
            "sun.invoke.util.Wrapper.forBasicType(Class) Wrapper.java": "0.05600672080649676",
            "Permute.benchmark()": "0.5488658639036683",
            "Permute.swap(int, int)": "42.56510781293754",
            "java.lang.Integer.valueOf(int) Integer.java": "0.06720806496779612",
            "java.util.TreeMap.getEntry(Object) TreeMap.java": "0.04480537664519742"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.921084168387773",
            "som.Vector.forEach(ForEachInterface)": "19.939315127871698",
            "deltablue.Plan$$Lambda$27.0x00000008000ccd88.apply(Object)": "4.36013156888243",
            "deltablue.Strength.stronger(Strength)": "14.023814987633548",
            "deltablue.BinaryConstraint.isSatisfied()": "3.467706978760295",
            "som.Vector.<init>(int)": "4.895586322955711",
            "deltablue.ScaleConstraint.execute()": "3.2382263698717466",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "2.9832479155511367",
            "deltablue.UnaryConstraint.<init>(Variable, Strength$Sym, Planner)": "6.731431194064102",
            "som.Dictionary.getBucket(int)": "2.9577500701190753"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "4.467569989700512",
            "List$Element.<init>(Object)": "0.1203836224769599",
            "List.makeList(int)": "1.1235804764516257",
            "Harness.main(String[])": "0.0013375958052995545",
            "List$Element.getNext()": "23.795829376279073",
            "sun.nio.fs.UnixNativeDispatcher.stat(UnixPath, UnixFileAttributes) UnixNativeDispatcher.java": "0.0",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.0936317063709688",
            "List.isShorterThan(List$Element, List$Element)": "69.9696365752197",
            "java.nio.Buffer.limit(int) Buffer.java": "0.1203836224769599",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.3076470352188975"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.6681805279591257",
            "nbody.Body.getZ()": "5.591825149020721",
            "nbody.Body.setX(double)": "0.7380073800738007",
            "nbody.Body.getMass()": "1.107011070110701",
            "nbody.Body.getX()": "0.7947771785410161",
            "nbody.NBodySystem.advance(double)": "43.68435992052228",
            "nbody.Body.setVY(double)": "4.74027817201249",
            "nbody.Body.setVZ(double)": "9.66505818904343",
            "nbody.Body.setVX(double)": "28.20039738858927",
            "nbody.Body.setY(double)": "1.121203519727505"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.60419800845332",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "sun.nio.fs.UnixFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "java.io.PrintStream.println(String) PrintStream.java": "0.08059316569954868",
            "Run.runBenchmark()": "8.954796188838742E-4",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.1701411275879361",
            "java.util.zip.ZipFile$CleanableResource.<init>(ZipFile, ZipCoder, File, int) ZipFile.java": "0.03581918475535496",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.04477398094419371",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "8.954796188838742E-4",
            "java.lang.Object.clone() Object.java (native)": "0.06268357332187119"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.30563200796278",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.69693930642376",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.41745779198745",
            "cd.RedBlackTree.findNode(Comparable)": "7.502808840495562",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.68666912990039",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "1.9077493835631933",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.035938077320404",
            "cd.RedBlackTree.put(Comparable, Object)": "6.6205690069900545",
            "cd.Vector2D.compareNumbers(double, double)": "10.270176523371815",
            "cd.RedBlackTree.forEach(ForEachInterface)": "2.9030968880309462"
        },
        "YourKit_Sieve.txt": {
            "Run.runBenchmark()": "0.001096815943316552",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.2027025544843317",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.12064975376482072",
            "java.lang.System.nanoTime() System.java (native)": "0.09871343489848967",
            "Sieve.benchmark()": "87.61365755212617",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.07677711603215863",
            "com.yourkit.probes.Table.createRow() a": "0.15355423206431726",
            "java.lang.Object.hashCode() Object.java (native)": "0.3071084641286345",
            "Sieve.sieve(boolean[], int)": "8.42354644467112",
            "Run.printResult(long)": "0.001096815943316552"
        },
        "YourKit_Bounce.txt": {
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.17371163867979156",
            "Bounce.benchmark()": "62.96081837483112",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.21231422505307856",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.19301293186643506",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17371163867979156",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5790387955993052",
            "som.Random.next()": "0.3667245705462266",
            "Bounce$Ball.bounce()": "34.45280833815866",
            "Bounce$Ball.<init>(Random)": "0.5404362092260182",
            "com.yourkit.runtime.JniMethod.callObjectMethodImpl(Class, Object, long, long, Object[], long[]) a": "0.13510905230650455"
        }
    },
    "Runtimes": {
        "NBody.data": 22.009,
        "YourKit_Storage.txt": 62.86,
        "rebench_test_Async_Bounce.txt": 56.89,
        "Permute_not_profiled_": 29.9595,
        "JavaFlightRecorder_Sieve.jfr": 31.0275,
        "CD_not_profiled_": 41.1665,
        "JProfiler_NBody.txt": 21.499,
        "JProfiler_List.txt": 28.872,
        "YourKit_Mandelbrot.txt": 37.942499999999995,
        "CD.data": 43.6125,
        "Json_not_profiled_": 78.54,
        "List.data": 23.1385,
        "Queens_not_profiled_": 21.8545,
        "Towers.hpl": 26.206,
        "Bounce.hpl": 26.3535,
        "JavaFlightRecorder_Json.jfr": 81.91499999999999,
        "Sieve.data": 32.439,
        "Richards.hpl": 92.205,
        "YourKit_Richards.txt": 90.4585,
        "JavaFlightRecorder_Havlak.jfr": 152.2735,
        "JavaFlightRecorder_CD.jfr": 41.633,
        "JavaFlightRecorder_Towers.jfr": 25.642,
        "rebench_test_Async_CD.txt": 136.5795,
        "List_not_profiled_": 22.5445,
        "Havlak_not_profiled_": 151.648,
        "JProfiler_Json.txt": 1031.0525,
        "rebench_test_Async_NBody.txt": 55.1415,
        "JavaFlightRecorder_Bounce.jfr": 26.025,
        "Havlak.data": 160.9795,
        "Towers_not_profiled_": 25.9565,
        "YourKit_DeltaBlue.txt": 11.692,
        "rebench_test_Async_Towers.txt": 72.92750000000001,
        "YourKit_NBody.txt": 22.948,
        "JavaFlightRecorder_NBody.jfr": 21.583,
        "rebench_test_Async_Sieve.txt": 80.866,
        "Storage.hpl": 58.927499999999995,
        "JProfiler_Queens.txt": 26.766,
        "rebench_test_Async_List.txt": 65.42150000000001,
        "rebench_test_Async_Richards.txt": 261.40049999999997,
        "YourKit_Towers.txt": 27.384,
        "JProfiler_Havlak.txt": 1897.4445,
        "JavaFlightRecorder_List.jfr": 22.323,
        "YourKit_Permute.txt": 29.4255,
        "Queens.data": 21.7105,
        "Storage_not_profiled_": 61.327,
        "Json.hpl": 78.878,
        "Towers.data": 26.9465,
        "YourKit_List.txt": 24.7075,
        "JProfiler_CD.txt": 475.08349999999996,
        "JProfiler_Permute.txt": 29.637999999999998,
        "Sieve.hpl": 31.314999999999998,
        "DeltaBlue_not_profiled_": 11.949,
        "CD.hpl": 42.1415,
        "JavaFlightRecorder_Queens.jfr": 22.555,
        "JProfiler_Bounce.txt": 44.168499999999995,
        "Permute.hpl": 29.8515,
        "Richards_not_profiled_": 90.26650000000001,
        "DeltaBlue.hpl": 12.208,
        "NBody.hpl": 21.259,
        "JProfiler_Towers.txt": 27.113,
        "JProfiler_Mandelbrot.txt": 37.522,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.628,
        "rebench_test_Async_Mandelbrot.txt": 111.816,
        "YourKit_CD.txt": 43.414500000000004,
        "rebench_test_Async_Permute.txt": 80.6465,
        "Mandelbrot.data": 38.680499999999995,
        "JProfiler_Storage.txt": 1027.5065,
        "YourKit_Sieve.txt": 29.9865,
        "JavaFlightRecorder_Permute.jfr": 29.872999999999998,
        "YourKit_Bounce.txt": 14.147,
        "JProfiler_Sieve.txt": 31.819000000000003,
        "JProfiler_DeltaBlue.txt": 97.3135,
        "YourKit_Queens.txt": 22.1265,
        "Mandelbrot.hpl": 37.5355,
        "JavaFlightRecorder_Storage.jfr": 59.0285,
        "List.hpl": 22.929000000000002,
        "Mandelbrot_not_profiled_": 37.492,
        "Queens.hpl": 20.740499999999997,
        "Storage.data": 66.27000000000001,
        "JavaFlightRecorder_Richards.jfr": 90.63650000000001,
        "Bounce.data": 27.06,
        "Permute.data": 30.719,
        "YourKit_Json.txt": 79.5215,
        "rebench_test_Async_DeltaBlue.txt": 40.2875,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.5085,
        "YourKit_Havlak.txt": 154.676,
        "DeltaBlue.data": 12.297,
        "JProfiler_Richards.txt": 93.8245,
        "rebench_test_Async_Storage.txt": 151.546,
        "Sieve_not_profiled_": 30.368499999999997,
        "Havlak.hpl": 154.018,
        "Richards.data": 99.692,
        "rebench_test_Async_Havlak.txt": 461.4695,
        "Bounce_not_profiled_": 25.7805,
        "NBody_not_profiled_": 21.028,
        "Json.data": 81.88550000000001,
        "rebench_test_Async_Json.txt": 250.825,
        "rebench_test_Async_Queens.txt": 58.7445
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.50%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.33%",
            "[.] void nbody.NBodySystem.advance(double)": "0.13%",
            "0xffffffffb4c063aa": "0.11%"
        },
        "Permute.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.03%",
            "[.] Interpreter": "0.35%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.11%",
            "[.] void Permute.permute(int)": "98.02%",
            "0xffffffffb4c063aa": "0.05%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.59%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.06%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.31%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.14%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.90%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] vtable chunks": "7.12%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "7.01%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "8.24%",
            "[.] boolean deltablue.Planner.addPropagate(deltablue.AbstractConstraint, int)": "3.60%",
            "[.] void deltablue.Planner.chainTest(int)": "23.24%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.76%",
            "[.] Interpreter": "0.52%",
            "0xffffffffb51c12b7": "0.24%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "[.] boolean Queens.placeQueen(int)": "94.08%"
        },
        "Towers.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.14%",
            "[.] Interpreter": "0.41%",
            "[.] void Towers.moveDisks(int, int, int)": "96.03%",
            "0xffffffffb4c0634b": "0.18%",
            "0xffffffffb4c063aa": "0.23%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "35.36%",
            "[.] boolean richards.Scheduler.start()": "24.80%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.29%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.03%",
            "[.] void richards.Scheduler.schedule()": "7.79%"
        },
        "Storage.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.05%",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.24%",
            "[.] Interpreter": "0.23%",
            "0xffffffffb51c12b7": "0.15%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.46%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.40%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.91%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "20.67%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.67%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.82%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.28%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.07%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "96.33%",
            "[.] Interpreter": "0.48%",
            "[.] java.lang.Object List.benchmark()": "0.34%",
            "0xffffffffb51c12b7": "0.18%",
            "[.] List$Element List.makeList(int)": "0.50%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.50%",
            "0xffffffffb51c12b7": "0.19%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "83.79%",
            "[.] java.lang.Object Sieve.benchmark()": "5.82%",
            "[.] int Sieve.sieve(boolean[], int)": "5.95%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.45%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "[.] java.lang.Object Bounce.benchmark()": "23.83%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.37%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.63%",
            "[.] StubRoutines (2)": "8.50%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.60%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.57%"
        }
    }
}