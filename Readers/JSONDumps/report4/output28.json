{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.96",
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.16",
            "Queens.placeQueen(I)Z": "82.24",
            "Queens.getRowColumn(II)Z": "14.88",
            "java.util.Arrays.fill([ZZ)V": "1.28",
            "Queens.queens()Z": "0.48"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "59.22509225092251",
            "java.nio.charset.CharsetEncoder.encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;": "0.18450184501845018",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "2.5830258302583027",
            "sun.nio.cs.StreamEncoder.implFlushBuffer()V": "0.18450184501845018",
            "Bounce.benchmark()Ljava/lang/Object;": "37.638376383763834",
            "java.lang.invoke.MemberName.getInvocationType()Ljava/lang/invoke/MethodType;": "0.18450184501845018"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.9319664492078285",
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.9319664492078285",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.5647716682199437",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.700838769804287",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.768872320596458",
            "havlak.HavlakLoopFinder.findLoops()V": "8.597390493942218",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.819198508853681",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "52.63280521901211",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.0950605778191984",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.7455731593662628"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.098428453267163",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.3234077750206783",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.55004135649297",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "0.9098428453267163",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "1.9851116625310175",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.723738626964433",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "13.068651778329198",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "20.6782464846981",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.444168734491315",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "0.9925558312655087"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.72727272727273",
            " ": "0",
            "java.util.zip.ZipUtils.LG([BI)J": "0.15151515151515152",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "10.454545454545455",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15151515151515152",
            "List.makeList(I)LList$Element;": "1.5151515151515151"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "7.894736842105263",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.678362573099415",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "13.742690058479532",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "4.678362573099415",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "44.15204678362573",
            "deltablue.UnaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "1.1695906432748537",
            "deltablue.EqualityConstraint.execute()V": "2.631578947368421",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "2.3391812865497075",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "6.140350877192982",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "3.8011695906432745"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "100.0"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.31413612565445026",
            "java.util.Arrays.fill([ZZ)V": "0.10471204188481675",
            "Sieve.sieve([ZI)I": "99.47643979057591",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.10471204188481675"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Run.getSuiteFromName(Ljava/lang/String;)Ljava/util/function/Supplier;": "0.13333333333333333",
            "Towers.moveDisks(III)V": "57.6",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "42.13333333333333",
            "Towers.moveTopDisk(II)V": "0.13333333333333333"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "98.73217115689381",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.31695721077654515",
            "NBody.innerBenchmarkLoop(I)Z": "0.7923930269413628",
            "nbody.NBodySystem.energy()D": "0.15847860538827258"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.746423927178154",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.3901170351105332",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "4.746423927178154",
            "richards.Scheduler.schedule()V": "59.297789336801046",
            "java.util.Arrays.fill([Ljava/lang/Object;Ljava/lang/Object;)V": "0.06501950585175553",
            "Richards.benchmark()Ljava/lang/Object;": "0.7802340702210664",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.06501950585175553",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "24.642392717815348",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "5.266579973992198"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "3.9479795633999073",
            "json.JsonPureStringParser.readExponent()Z": "7.4779377612633535",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "18.300046446818392",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "0.9753831862517418",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "29.911751045053414",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.180213655364607",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "14.723641430562006",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "1.8578727357176033",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "9.521597770552717",
            "som.Vector.append(Ljava/lang/Object;)V": "7.8030654900139345"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.io.OutputStreamWriter.write([CII)V": "0.11947431302270012",
            "Permute.swap(II)V": "29.151732377538828",
            "Permute.permute(I)V": "70.60931899641577",
            "Permute.benchmark()Ljava/lang/Object;": "0.11947431302270012"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.3",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "45.4",
            "richards.TaskControlBlock::<init>": "2.8",
            "richards.Scheduler::schedule": "5.7",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "6.0"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.InvokerBytecodeGenerator::loadMethod": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::push": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "java.lang.System::nanoTime": "0.0",
            "java.lang.StringConcatHelper::checkOverflow": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.Math::max": "0.0",
            "Mandelbrot::mandelbrot": "97.4"
        },
        "List.hpl": {
            "java.lang.invoke.MethodType::insertParameterTypes": "0.0",
            "List$Element::getNext": "9.1",
            "List::makeList": "0.5",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "2.2",
            "List::isShorterThan": "79.3",
            "AGCT::Unknown not Java[ERR=-3]": "5.5",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.5",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.3",
            "json.JsonPureStringParser::read": "15.3",
            "java.lang.String::<init>": "5.9",
            "java.lang.String::length": "3.2",
            "java.util.Arrays::copyOfRange": "8.1",
            "java.lang.String::equals": "21.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.8",
            "AGCT::Unknown Java[ERR=-5]": "9.8",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.6",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.8",
            "havlak.HavlakLoopFinder::findLoops": "5.5",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.7",
            "havlak.HavlakLoopFinder::stepD": "2.0",
            "som.Vector::append": "4.5",
            "AGCT::Unknown not Java[ERR=-3]": "9.7",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "5.5",
            "som.Vector::<init>": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "40.5",
            "Permute::permute": "50.5",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.io.PrintStream::writeln": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "java.lang.String::equals": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "5.8"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "65.9",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "8.3",
            "Queens::setRowColumn": "18.8",
            "java.util.zip.ZipFile$ZipFileInputStream::<init>": "0.0",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.7",
            "java.util.Arrays::setAll": "35.0",
            "som.Random::next": "11.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.0"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.5",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Run::printResult": "0.0",
            "Sieve::sieve": "86.2",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "jdk.internal.org.objectweb.asm.ByteVector::putUTF8": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "4.3"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "3.7",
            "deltablue.Planner::addPropagate": "2.1",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "18.1",
            "som.Vector::append": "4.9",
            "AGCT::Unknown not Java[ERR=-3]": "14.6",
            "AGCT::Unknown Java[ERR=-5]": "13.9",
            "deltablue.AbstractConstraint::satisfy": "2.0",
            "deltablue.EqualityConstraint::execute": "3.1",
            "som.Vector::<init>": "2.0",
            "som.Vector::forEach": "10.7"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.4",
            "Bounce$Ball::bounce": "76.4",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.3",
            "som.Random::next": "0.8",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "1.6",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.1",
            "nbody.Body::getY": "0.7",
            "nbody.Body::getVZ": "0.5",
            "nbody.Body::setVZ": "9.0",
            "nbody.Body::getZ": "7.2",
            "nbody.Body::setVX": "29.0",
            "nbody.Body::setVY": "5.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "nbody.NBodySystem::advance": "41.3"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.4",
            "Towers::popDiskFrom": "21.7",
            "Towers::moveDisks": "3.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "Towers::pushDisk": "38.9",
            "Towers$TowersDisk::setNext": "18.1",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.5",
            "Towers$TowersDisk::getNext": "3.6"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.3",
            "cd.RedBlackTree::forEach": "3.8",
            "cd.RedBlackTree::put": "6.4",
            "cd.RedBlackTree::findNode": "3.0",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "11.2",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.Vector2D::compareNumbers": "4.2",
            "cd.CollisionDetector::isInVoxel": "21.7",
            "cd.RedBlackTree::treeInsert": "13.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "4.01%",
            "deltablue.AbstractConstraint.satisfy": "2.66%",
            "vtable": "3.41%",
            "som.Vector.append": "3.40%",
            "som.Vector.forEach": "24.03%",
            "itable": "3.32%",
            "deltablue.Planner.addPropagate": "2.85%",
            "deltablue.Plan.lambda$execute$0": "2.77%",
            "deltablue.ScaleConstraint.execute": "2.17%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "5.67%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.41%",
            "som.Random.next": "0.88%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.75%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "Bounce.benchmark": "18.22%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.83%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "Mandelbrot.mandelbrot": "98.56%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.58%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.42%",
            "som.Random.next": "10.98%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.29%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.34%",
            "java.util.Arrays.setAll": "35.12%",
            "Storage.lambda$buildTreeDepth$0": "4.20%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.19%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.34%",
            "Storage.buildTreeDepth": "43.27%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.91%",
            "Towers.popDiskFrom": "18.98%",
            "Towers.moveDisks": "8.67%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.08%",
            "Towers.moveTopDisk": "4.90%",
            "Towers$TowersDisk.getSize": "0.40%",
            "Towers$TowersDisk.getNext": "3.78%",
            "Towers.benchmark": "0.12%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.30%",
            "cd.CollisionDetector.isInVoxel": "19.52%",
            "cd.RedBlackTree.forEach": "6.13%",
            "Node::set_req_X(unsigned": "4.24%",
            "cd.RedBlackTree.put": "6.38%",
            "cd.RedBlackTree.treeInsert": "12.55%",
            "cd.RedBlackTree.treeMinimum": "5.30%",
            "cd.RedBlackTree.findNode": "2.74%",
            "cd.Vector2D.compareNumbers": "4.11%",
            "cd.RedBlackTree.leftRotate": "2.07%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.40%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.99%",
            "som.Vector.hasSome": "2.09%",
            "som.Vector.append": "2.60%",
            "som.Vector.forEach": "1.93%",
            "som.IdentitySet.lambda$contains$0": "31.68%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.50%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.81%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.00%",
            "havlak.HavlakLoopFinder.doDFS": "6.28%"
        },
        "rebench_test_Async_Sieve.txt": {
            "_int_malloc": "0.03%",
            "java.util.Arrays.fill": "5.65%",
            "Sieve.benchmark": "6.75%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "84.42%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.38%",
            "Permute.swap": "40.38%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "I2C/C2I": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.67%",
            "nbody.Body.getZ": "7.75%",
            "nbody.Body.getY": "0.74%",
            "nbody.Body.setX": "1.17%",
            "nbody.Body.setY": "1.72%",
            "nbody.Body.setVX": "27.75%",
            "nbody.Body.setVY": "5.37%",
            "nbody.Body.getMass": "0.47%",
            "nbody.Body.getVZ": "0.45%",
            "nbody.NBodySystem.advance": "42.12%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.20%",
            "Interpreter": "0.05%",
            "List.makeList": "1.01%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.43%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.49%",
            "List$Element.<init>": "0.23%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.73%",
            "java.lang.String.length": "2.98%",
            "java.lang.String.<init>": "5.94%",
            "json.JsonPureStringParser.isWhiteSpace": "2.30%",
            "java.lang.String.isLatin1": "3.02%",
            "json.JsonPureStringParser.readStringInternal": "6.52%",
            "java.util.Arrays.copyOfRange": "8.05%",
            "java.lang.String.equals": "21.94%",
            "json.JsonPureStringParser.read": "15.89%",
            "json.JsonPureStringParser.readValue": "2.42%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.92%",
            "Queens.getRowColumn": "67.59%",
            "Queens.setRowColumn": "18.67%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.53%",
            "Queens.placeQueen": "8.88%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.09%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.70%",
            "Richards.benchmark": "4.45%",
            "richards.Packet.<init>": "6.72%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.19%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.85%",
            "itable": "36.88%",
            "richards.TaskControlBlock.<init>": "3.00%",
            "richards.RBObject.<init>": "5.91%",
            "richards.RBObject.append": "3.58%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "3.93%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.8",
            "Towers.moveDisks": "95.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "Run.runBenchmark": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Towers.benchmark": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.5",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.3",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.6",
            "deltablue.AbstractConstraint.satisfy": "14.3",
            "deltablue.Planner.removePropagateFrom": "9.7",
            "som.Vector.<init>": "28.0",
            "deltablue.Variable.<init>": "4.9",
            "som.Vector.forEach": "8.0",
            "deltablue.Planner.constraintsConsuming": "4.9",
            "deltablue.AbstractConstraint.<init>": "4.3",
            "deltablue.Plan.lambda$execute$0": "1.2",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.3",
            "havlak.HavlakLoopFinder.stepD": "3.4",
            "java.lang.Integer.valueOf": "8.4",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "15.0",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.Packet.getData": "0.0",
            "richards.TaskControlBlock.runTask": "83.7",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "53.4",
            "Bounce$Ball.<init>": "45.3",
            "Bounce.lambda$benchmark$0": "0.3",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "cd.Aircraft.<init>": "1.6",
            "som.Vector.<init>": "6.3",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.6",
            "cd.RedBlackTree$InsertResult.<init>": "14.9",
            "cd.RedBlackTree$Node.<init>": "8.3",
            "cd.RedBlackTree$Entry.<init>": "4.9"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "98.6",
            "Run.printResult": "0.3"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.5",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.0",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.2",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.6",
            "List$Element.length": "0.1",
            "List.isShorterThan": "72.8",
            "List$Element.<init>": "23.8",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "Run.runBenchmark": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.5",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "24.8",
            "Queens.placeQueen": "74.0",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.585293926317846",
            "json.JsonPureStringParser.readChar(String)": "1.6653294880412868",
            "java.lang.String.<init>(byte[], byte) String.java": "6.43580458399289",
            "json.JsonPureStringParser.isWhiteSpace()": "3.0357568792419287",
            "json.JsonPureStringParser.read()": "20.257171975627212",
            "java.lang.String.length() String.java": "2.957694559489993",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.8406010798620906",
            "java.lang.String.substring(int, int) String.java": "10.048355270290783",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.3421948522236935",
            "json.JsonPureStringParser.readStringInternal()": "3.21356549645467"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.1426969560380758",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.684253064722771",
            "havlak.HavlakLoopFinder.findLoops()": "13.533407199017692",
            "som.Vector.<init>(int)": "2.8554490004818294",
            "som.Set.<init>(int)": "2.1093907857369656",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.471684204215673",
            "havlak.HavlakLoopFinder$$Lambda$19.0x00000008000cc428.apply(Object)": "2.0805254381426703",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.050030308614974",
            "som.Vector.removeAll()": "2.5934404607797643",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "38.06895265416871"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.696866298627095",
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.14485522524987524",
            "Queens.getRowColumn(int, int)": "61.30595033075276",
            "Queens.queens()": "1.1266517519434742",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11266517519434743",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6277059760827928",
            "Benchmark.innerBenchmarkLoop(int)": "0.14485522524987524",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.03219005005552784",
            "Queens.setRowColumn(int, int, boolean)": "22.500844988813956",
            "java.util.Objects.checkIndex(int, int) Objects.java": "0.2736154254719866"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.076888939841644",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.2041175578673315",
            "richards.TaskControlBlock.runTask()": "40.16967267374992",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.7943366012951043",
            "richards.Scheduler.schedule()": "2.46668860922401",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.5717281243181476",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.0473034692662435",
            "richards.RBObject.append(Packet, Packet)": "2.940056138430417",
            "Richards.benchmark()": "27.11138559853256",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.4570844258384708"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.18223788118090148",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.695364530985962",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.12546802001303",
            "java.lang.Class.forName(String) Class.java": "0.1491037209661921",
            "som.Random.next()": "16.539468307175753",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.3423863222186634",
            "java.lang.invoke.LambdaForm$Name.withConstraint(Object) LambdaForm.java": "0.18223788118090148",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.16014844103776188",
            "Storage.buildTreeDepth(int, Random)": "37.082647640295555",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.2361029809699473"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "36.106393666132455",
            "Towers.popDiskFrom(int)": "27.55519410625015",
            "Towers.moveDisks(int, int, int)": "6.93663740521922",
            "Towers$TowersDisk.getSize()": "1.4232066400363574",
            "sun.invoke.util.Wrapper.findPrimitiveType(Class) Wrapper.java": "0.08371803764919748",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.08371803764919748",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.09567775731336856",
            "Towers.moveTopDisk(int, int)": "8.862152271150762",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.10763747697753964",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.382089123830934"
        },
        "YourKit_Permute.txt": {
            "java.io.BufferedWriter.write(String, int, int) BufferedWriter.java": "0.10248001639680263",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.045546673954134496",
            "Benchmark.innerBenchmarkLoop(int)": "0.10248001639680263",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.011386668488533624",
            "java.nio.CharBuffer.position(int) CharBuffer.java": "0.10248001639680263",
            "Permute.permute(int)": "52.02568832411013",
            "java.io.PrintStream.writeln(String) PrintStream.java": "0.0011386668488533624",
            "jdk.internal.org.objectweb.asm.ByteVector.put122(int, int, int) ByteVector.java": "0.11386668488533623",
            "Permute.benchmark()": "0.10248001639680263",
            "Permute.swap(int, int)": "47.391314249276945"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.746638832972987",
            "som.Vector.forEach(ForEachInterface)": "38.61924998136138",
            "deltablue.EqualityConstraint.execute()": "2.9573299535276725",
            "deltablue.Planner.projectionTest(int)": "1.8887149283033877",
            "deltablue.BinaryConstraint.getOutput()": "2.236636099306643",
            "deltablue.BinaryConstraint.isSatisfied()": "3.8768359054648482",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "7.977335420860361",
            "som.Vector.<init>(int)": "7.405750639926441",
            "deltablue.ScaleConstraint.execute()": "1.9384179527324241",
            "deltablue.Plan$$Lambda$32.0x00000008000ccd88.apply(Object)": "3.28039961231641"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.1594578433326689",
            "List.tail(List$Element, List$Element, List$Element)": "3.7738356255398307",
            "List.makeList(int)": "1.3155272074945183",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.4385090691648395",
            "List$Element.setNext(List$Element)": "0.26576307222111484",
            "java.nio.CharBuffer.hasArray() CharBuffer.java": "0.11959338249950169",
            "List$Element.getNext()": "23.639625274068166",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.2524749186100591",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.1594578433326689",
            "List.isShorterThan(List$Element, List$Element)": "69.27114477443358"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.3731029386687887",
            "nbody.Body.getZ()": "5.328823964076621",
            "nbody.Body.getMass()": "0.90945262320241",
            "nbody.Body.getX()": "0.8810322287273348",
            "nbody.Body.setZ(double)": "0.8241914397771841",
            "nbody.NBodySystem.advance(double)": "43.15636901040187",
            "nbody.Body.setVY(double)": "2.8420394475075312",
            "nbody.Body.setVZ(double)": "9.22241800716194",
            "nbody.Body.setVX(double)": "31.916102995509576",
            "nbody.Body.setY(double)": "0.625248678451657"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.52239121622813",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07930773162263619",
            "java.lang.String.charAt(int) String.java": "0.07930773162263619",
            "Harness.main(String[])": "8.811970180292911E-4",
            "java.util.concurrent.ConcurrentHashMap$ValueIterator.next() ConcurrentHashMap.java": "0.07930773162263619",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.026435910540878727",
            "java.lang.invoke.LambdaFormBuffer.startEdit() LambdaFormBuffer.java": "0.01762394036058582",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.07930773162263619",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.11455561234380782",
            "Run.measure(Benchmark)": "8.811970180292911E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.058718658726245",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.932253537154345",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.10450252247468",
            "cd.RedBlackTree.findNode(Comparable)": "3.9145772484163412",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "17.296969237188485",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.5110950953988542",
            "cd.CollisionDetector.lambda$reduceCollisionSet$5(Vector, RedBlackTree$Entry)": "1.8965975040776846",
            "cd.RedBlackTree.put(Comparable, Object)": "7.123620225315784",
            "cd.Vector2D.compareNumbers(double, double)": "5.940143382771308",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.1801008989872175"
        },
        "YourKit_Sieve.txt": {
            "java.lang.StringConcatHelper.prepend(long, byte[], long, String) StringConcatHelper.java": "0.09488266177493831",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.09488266177493831",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.09488266177493831",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.150673666898602",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.26356294937482866",
            "java.lang.System.nanoTime() System.java (native)": "0.09488266177493831",
            "Sieve.benchmark()": "89.63248782339173",
            "com.yourkit.probes.Table.createRow() a": "0.09488266177493831",
            "Sieve.sieve(boolean[], int)": "7.116199633120374",
            "com.yourkit.probes.builtin.Files.<clinit>() a": "0.16868028759989032"
        },
        "YourKit_Bounce.txt": {
            "java.nio.Buffer.remaining() Buffer.java": "0.03843788437884378",
            "Bounce.benchmark()": "62.15405904059039",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "0.0019218942189421892",
            "java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(Class, String, MethodType) InvokerBytecodeGenerator.java": "0.40359778597785967",
            "java.lang.Long.stringSize(long) Long.java": "0.17297047970479704",
            "Bounce.lambda$benchmark$0(Random, int)": "0.3459409594095941",
            "java.lang.invoke.LambdaForm$Name.index() LambdaForm.java": "0.07687576875768756",
            "Bounce$Ball.bounce()": "36.15083025830258",
            "Bounce$Ball.<init>(Random)": "0.5573493234932348",
            "java.lang.invoke.MethodType.hashCode() MethodType.java": "0.09609471094710946"
        }
    },
    "Runtimes": {
        "NBody.data": 22.0885,
        "YourKit_Storage.txt": 62.127,
        "rebench_test_Async_Bounce.txt": 62.713499999999996,
        "Permute_not_profiled_": 29.5815,
        "JavaFlightRecorder_Sieve.jfr": 31.42,
        "CD_not_profiled_": 42.043,
        "JProfiler_NBody.txt": 21.134,
        "JProfiler_List.txt": 28.94,
        "YourKit_Mandelbrot.txt": 38.1385,
        "CD.data": 44.5715,
        "Json_not_profiled_": 77.491,
        "List.data": 23.3795,
        "Queens_not_profiled_": 20.8455,
        "Towers.hpl": 26.054000000000002,
        "Bounce.hpl": 26.074,
        "JavaFlightRecorder_Json.jfr": 82.4125,
        "Sieve.data": 33.2545,
        "Richards.hpl": 93.003,
        "YourKit_Richards.txt": 93.6945,
        "JavaFlightRecorder_Havlak.jfr": 152.73399999999998,
        "JavaFlightRecorder_CD.jfr": 41.540499999999994,
        "JavaFlightRecorder_Towers.jfr": 25.908,
        "rebench_test_Async_CD.txt": 134.856,
        "List_not_profiled_": 21.848,
        "Havlak_not_profiled_": 150.66199999999998,
        "JProfiler_Json.txt": 1031.7130000000002,
        "rebench_test_Async_NBody.txt": 55.596999999999994,
        "JavaFlightRecorder_Bounce.jfr": 15.2915,
        "Havlak.data": 157.687,
        "Towers_not_profiled_": 26.3255,
        "YourKit_DeltaBlue.txt": 11.913,
        "rebench_test_Async_Towers.txt": 74.00649999999999,
        "YourKit_NBody.txt": 23.0315,
        "JavaFlightRecorder_NBody.jfr": 21.264499999999998,
        "rebench_test_Async_Sieve.txt": 83.33099999999999,
        "Storage.hpl": 59.8555,
        "JProfiler_Queens.txt": 26.002,
        "rebench_test_Async_List.txt": 67.83,
        "rebench_test_Async_Richards.txt": 258.8835,
        "YourKit_Towers.txt": 27.1495,
        "JProfiler_Havlak.txt": 1900.475,
        "JavaFlightRecorder_List.jfr": 22.6485,
        "YourKit_Permute.txt": 29.2155,
        "Queens.data": 21.8125,
        "Storage_not_profiled_": 62.2205,
        "Json.hpl": 79.2715,
        "Towers.data": 27.119500000000002,
        "YourKit_List.txt": 24.6935,
        "JProfiler_CD.txt": 479.0115,
        "JProfiler_Permute.txt": 29.987499999999997,
        "Sieve.hpl": 31.247,
        "DeltaBlue_not_profiled_": 11.9185,
        "CD.hpl": 41.924,
        "JavaFlightRecorder_Queens.jfr": 21.096,
        "JProfiler_Bounce.txt": 44.1155,
        "Permute.hpl": 29.8915,
        "Richards_not_profiled_": 89.33099999999999,
        "DeltaBlue.hpl": 11.79,
        "NBody.hpl": 21.5465,
        "JProfiler_Towers.txt": 26.957,
        "JProfiler_Mandelbrot.txt": 37.6215,
        "JavaFlightRecorder_DeltaBlue.jfr": 15.1915,
        "rebench_test_Async_Mandelbrot.txt": 101.08099999999999,
        "YourKit_CD.txt": 44.082499999999996,
        "rebench_test_Async_Permute.txt": 79.1515,
        "Mandelbrot.data": 39.1785,
        "JProfiler_Storage.txt": 1039.9945,
        "YourKit_Sieve.txt": 31.7455,
        "JavaFlightRecorder_Permute.jfr": 30.1485,
        "YourKit_Bounce.txt": 14.117,
        "JProfiler_Sieve.txt": 27.044,
        "JProfiler_DeltaBlue.txt": 95.33000000000001,
        "YourKit_Queens.txt": 20.6995,
        "Mandelbrot.hpl": 38.0135,
        "JavaFlightRecorder_Storage.jfr": 57.085499999999996,
        "List.hpl": 22.8795,
        "Mandelbrot_not_profiled_": 37.507,
        "Queens.hpl": 21.887999999999998,
        "Storage.data": 66.4255,
        "JavaFlightRecorder_Richards.jfr": 92.924,
        "Bounce.data": 27.074,
        "Permute.data": 31.17,
        "YourKit_Json.txt": 77.844,
        "rebench_test_Async_DeltaBlue.txt": 38.504999999999995,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.423500000000004,
        "YourKit_Havlak.txt": 155.299,
        "DeltaBlue.data": 12.68,
        "JProfiler_Richards.txt": 94.5145,
        "rebench_test_Async_Storage.txt": 162.413,
        "Sieve_not_profiled_": 30.9075,
        "Havlak.hpl": 153.2335,
        "Richards.data": 94.0995,
        "rebench_test_Async_Havlak.txt": 458.495,
        "Bounce_not_profiled_": 26.0415,
        "NBody_not_profiled_": 21.026,
        "Json.data": 82.625,
        "rebench_test_Async_Json.txt": 250.4235,
        "rebench_test_Async_Queens.txt": 61.1015
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.45%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.32%",
            "[.] void nbody.NBodySystem.advance(double)": "0.11%",
            "0xffffffffb4c063aa": "0.07%"
        },
        "Permute.data": {
            " ": "0",
            "0xffffffffb4c6958b": "0.11%",
            "[.] Interpreter": "0.32%",
            "[.] void Permute.permute(int)": "97.16%",
            "0xffffffffb5800d70": "0.12%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.31%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.30%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.60%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.00%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.12%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.StayConstraint.<init>(deltablue.Variable, deltablue.Strength$Sym, deltablue.Planner)": "4.19%",
            "[.] vtable chunks": "7.12%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.85%",
            "[.] boolean deltablue.Planner.addPropagate(deltablue.AbstractConstraint, int)": "6.68%",
            "[.] void deltablue.Planner.chainTest(int)": "24.37%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.73%",
            "[.] Interpreter": "0.45%",
            "0xffffffffb51c12b7": "0.24%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "[.] boolean Queens.placeQueen(int)": "94.14%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Interpreter": "0.43%",
            "[.] void Towers.moveDisks(int, int, int)": "0.12%",
            "0xffffffffb4c0634b": "0.11%",
            "0xffffffffb4c063aa": "0.11%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.95%",
            "[.] boolean richards.Scheduler.start()": "22.76%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.83%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.75%",
            "[.] void richards.Scheduler.schedule()": "8.36%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.67%",
            "[.] Interpreter": "0.18%",
            "0xffffffffb51c12b7": "0.19%",
            "0xffffffffb4c0634b": "0.06%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.92%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.22%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.01%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.36%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.48%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.67%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.25%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c0634b": "0.04%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.30%",
            "[.] Interpreter": "0.50%",
            "[.] java.lang.Object List.benchmark()": "0.35%",
            "[.] List$Element List.makeList(int)": "0.67%",
            "0xffffffffb4c063aa": "0.16%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.36%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "85.40%",
            "[.] java.lang.Object Sieve.benchmark()": "5.86%",
            "[.] int Sieve.sieve(boolean[], int)": "5.63%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.48%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "[.] java.lang.Object Bounce.benchmark()": "23.90%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.94%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.53%",
            "[.] StubRoutines (2)": "8.18%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.29%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.12%"
        }
    }
}