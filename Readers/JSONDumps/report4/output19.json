{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.31446540880503143",
            " ": "0",
            "Queens.placeQueen(I)Z": "88.36477987421384",
            "Queens.getRowColumn(II)Z": "9.748427672955975",
            "java.util.Arrays.fill([ZZ)V": "0.9433962264150944",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15723270440251572",
            "jdk.internal.org.objectweb.asm.SymbolTable.put(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;": "0.15723270440251572",
            "Queens.queens()Z": "0.31446540880503143"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "93.00225733634312",
            "Bounce.benchmark()Ljava/lang/Object;": "6.320541760722348",
            "jdk.jfr.internal.PlatformEventType.isEveryChunk()Z": "0.22573363431151242",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.45146726862302483"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.9665252239509665",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.40075436115040075",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.3003300330033003",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "31.07024988213107",
            "havlak.LoopTesterApp.findLoops(Lhavlak/LoopStructureGraph;)V": "0.2593116454502593",
            "havlak.HavlakLoopFinder.findLoops()V": "3.488920320603489",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "3.0645921735030646",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "51.603017444601605",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.2258368694012258",
            "som.Vector.append(Ljava/lang/Object;)V": "4.031117397454031"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "7.087959009393681",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.1101622544833476",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.542271562766866",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "1.878736122971819",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "26.216908625106747",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "0.5977796754910333",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "11.955593509820666",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.861656703672075",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "8.710503842869343",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.707941929974381"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.74698795180724",
            " ": "0",
            "Run.printResult(J)V": "0.15060240963855423",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "11.596385542168676",
            "List$Element.length()I": "0.15060240963855423",
            "List.makeList(I)LList$Element;": "1.3554216867469882"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "10.738255033557047",
            "deltablue.BinaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "2.0134228187919465",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "8.389261744966444",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "5.704697986577181",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "44.29530201342282",
            "deltablue.ScaleConstraint.execute()V": "2.684563758389262",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "3.691275167785235",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "7.718120805369128",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "2.348993288590604",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "4.026845637583893"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.06238303181534623",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.289457267623206",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.4610106051154",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12476606363069245",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.06238303181534623"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.32223415682062295",
            "Sieve.sieve([ZI)I": "99.5703544575725",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.10741138560687433"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "54.42359249329759",
            "java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;": "0.13404825737265416",
            "Towers.benchmark()Ljava/lang/Object;": "0.13404825737265416",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "45.30831099195711"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.68553459119497",
            "nbody.Body.getVX()D": "0.15723270440251572",
            "NBody.innerBenchmarkLoop(I)Z": "0.15723270440251572"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.804612427930813",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.5765534913516976",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.9077514413837284",
            "richards.Scheduler.schedule()V": "58.93657911595131",
            "Richards.benchmark()Ljava/lang/Object;": "1.2812299807815504",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "25.75272261370916",
            "richards.Scheduler.queuePacket(Lrichards/Packet;)Lrichards/TaskControlBlock;": "0.06406149903907751",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.6764894298526585"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.168596572487263",
            "json.JsonPureStringParser.readExponent()Z": "5.511811023622047",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "16.581750810560443",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "30.291801760074108",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.7707271885132005",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "24.641037517369153",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "6.808707735062529",
            "java.lang.StringLatin1.hashCode([B)I": "0.9726725335803612",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "4.353867531264474",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.7410838351088467"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "29.23832923832924",
            "Permute.permute(I)V": "70.76167076167076"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.2",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "45.9",
            "richards.HandlerTaskDataRecord::workInAdd": "2.0",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "6.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.nio.CharBuffer::position": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::execute": "0.0",
            "java.util.ImmutableCollections$ListN::size": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.util.Arrays::copyOfRange": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.7"
        },
        "List.hpl": {
            "List$Element::getNext": "9.0",
            "List::makeList": "0.5",
            "List::tail": "2.2",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "Run::printResult": "0.0",
            "List::isShorterThan": "81.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "15.0",
            "java.lang.String::<init>": "5.7",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "7.5",
            "java.lang.String::equals": "22.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "9.8",
            "java.lang.String::isLatin1": "2.9",
            "json.JsonPureStringParser::readStringInternal": "8.8"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.1",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.5",
            "havlak.HavlakLoopFinder::findLoops": "5.8",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.7",
            "som.Vector::append": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.0",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "6.3",
            "som.Vector::<init>": "2.3",
            "som.Vector::forEach": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "40.6",
            "Permute::permute": "51.6",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "5.5",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "54.9",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "13.2",
            "Queens::setRowColumn": "25.0",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.1",
            "java.util.Arrays::setAll": "34.7",
            "som.Random::next": "12.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "AGCT::Unknown Java[ERR=-5]": "2.5",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.3",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.0"
        },
        "Sieve.hpl": {
            "java.lang.Long::getChars": "0.0",
            "Sieve::benchmark": "5.6",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "86.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.String::startsWith": "0.0",
            "jdk.internal.ref.PhantomCleanable::insert": "0.0",
            "java.util.Arrays::fill": "5.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "3.3",
            "deltablue.Planner$$Lambda$10.0x0000000800c0dd80::apply": "1.5",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "17.0",
            "som.Vector::append": "4.8",
            "AGCT::Unknown not Java[ERR=-3]": "13.2",
            "AGCT::Unknown Java[ERR=-5]": "14.1",
            "deltablue.AbstractConstraint::satisfy": "3.6",
            "deltablue.EqualityConstraint::execute": "3.1",
            "som.Vector::<init>": "6.8",
            "som.Vector::forEach": "9.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "76.1",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.7",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.2",
            "nbody.Body::getZ": "8.2",
            "nbody.Body::setVX": "29.1",
            "nbody.Body::setVY": "6.3",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "nbody.NBodySystem::advance": "39.3"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "0.9",
            "Towers::popDiskFrom": "20.5",
            "Towers::moveDisks": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "Towers::pushDisk": "40.7",
            "Towers$TowersDisk::setNext": "18.0",
            "AGCT::Unknown Java[ERR=-5]": "3.6",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.0",
            "Towers$TowersDisk::getNext": "3.0"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.5",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "6.5",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "11.7",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.1",
            "cd.CollisionDetector::isInVoxel": "21.3",
            "cd.RedBlackTree::treeInsert": "12.9"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "2.90%",
            "deltablue.AbstractConstraint.satisfy": "2.71%",
            "som.Vector.append": "3.61%",
            "som.Vector.forEach": "8.89%",
            "itable": "4.08%",
            "deltablue.Planner.chainTest": "3.63%",
            "deltablue.Planner.addPropagate": "2.83%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.86%",
            "deltablue.ScaleConstraint.execute": "1.84%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "18.51%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "76.36%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.03%",
            "som.Random.next": "0.80%",
            "Interpreter": "0.04%",
            "java.util.Arrays.setAll": "0.63%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "17.54%",
            "Bounce$Ball.<init>": "1.58%",
            "Bounce.lambda$benchmark$0": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.56%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "WatcherThread::sleep()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%",
            "PerfLongVariant::sample()": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.60%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.46%",
            "som.Random.next": "10.26%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.23%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.59%",
            "java.util.Arrays.setAll": "35.38%",
            "Storage.lambda$buildTreeDepth$0": "4.29%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.20%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.39%",
            "Storage.buildTreeDepth": "43.37%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.79%",
            "Towers.popDiskFrom": "19.89%",
            "Towers.moveDisks": "8.59%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "41.74%",
            "Towers.moveTopDisk": "4.89%",
            "Towers$TowersDisk.getSize": "0.63%",
            "Towers$TowersDisk.getNext": "3.39%",
            "Towers.benchmark": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.08%",
            "cd.CollisionDetector.isInVoxel": "20.04%",
            "cd.RedBlackTree.forEach": "6.09%",
            "Node::set_req_X(unsigned": "3.62%",
            "cd.RedBlackTree.put": "6.52%",
            "cd.RedBlackTree.treeInsert": "12.54%",
            "cd.RedBlackTree.treeMinimum": "5.19%",
            "cd.RedBlackTree.findNode": "2.77%",
            "cd.Vector2D.compareNumbers": "3.89%",
            "cd.RedBlackTree.leftRotate": "2.12%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.69%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.76%",
            "som.Vector.append": "2.63%",
            "som.Vector.forEach": "2.31%",
            "som.IdentitySet.lambda$contains$0": "32.33%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.54%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.32%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.14%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.53%",
            "havlak.HavlakLoopFinder.doDFS": "5.38%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "4.83%",
            "Sieve.benchmark": "6.26%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "85.99%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.08%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.04%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.59%",
            "Permute.swap": "40.43%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.05%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.10%",
            "nbody.Body.getZ": "7.83%",
            "nbody.Body.getY": "0.78%",
            "nbody.Body.setX": "1.50%",
            "nbody.Body.setY": "1.40%",
            "nbody.Body.setZ": "0.41%",
            "nbody.Body.setVX": "31.62%",
            "nbody.Body.setVY": "6.13%",
            "nbody.Body.getMass": "0.56%",
            "nbody.NBodySystem.advance": "36.59%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.20%",
            "Interpreter": "0.05%",
            "List.makeList": "1.04%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.45%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.88%",
            "List$Element.<init>": "0.23%",
            "Benchmark.innerBenchmarkLoop": "0.06%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.35%",
            "java.lang.String.length": "3.16%",
            "java.lang.String.<init>": "5.96%",
            "json.JsonPureStringParser.readArray": "2.67%",
            "json.JsonPureStringParser.isWhiteSpace": "2.21%",
            "java.lang.String.isLatin1": "2.99%",
            "json.JsonPureStringParser.readStringInternal": "6.49%",
            "java.util.Arrays.copyOfRange": "7.92%",
            "java.lang.String.equals": "22.19%",
            "json.JsonPureStringParser.read": "15.75%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.96%",
            "Queens.getRowColumn": "69.10%",
            "Queens.setRowColumn": "17.53%",
            "Interpreter": "0.05%",
            "Queens.queens": "0.59%",
            "Queens.placeQueen": "8.86%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.09%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.36%",
            "Richards.benchmark": "4.71%",
            "richards.Packet.<init>": "7.04%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.23%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.73%",
            "itable": "36.85%",
            "richards.TaskControlBlock.<init>": "3.25%",
            "richards.RBObject.<init>": "6.23%",
            "richards.RBObject.append": "2.80%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.09%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "3.6",
            "Towers.moveDisks": "94.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Towers.buildTowerAt": "0.1",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.7",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.0",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.2",
            "deltablue.AbstractConstraint.satisfy": "10.9",
            "deltablue.Planner.removePropagateFrom": "9.3",
            "som.Vector.<init>": "32.0",
            "deltablue.Variable.<init>": "5.2",
            "som.Vector.forEach": "7.4",
            "deltablue.Planner.addPropagate": "1.4",
            "deltablue.Planner.constraintsConsuming": "4.5",
            "deltablue.AbstractConstraint.<init>": "4.1",
            "deltablue.Planner.addConstraintsConsumingTo": "17.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "som.Dictionary$Entry.<init>": "3.4",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.4",
            "som.Vector.<init>": "42.2",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.8",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.createHandler": "0.0",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "15.3",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "richards.TaskControlBlock.runTask": "83.4",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.4"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.0",
            "Bounce.benchmark": "51.1",
            "Bounce$Ball.<init>": "47.1",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "6.3",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "14.9",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Run.runBenchmark": "0.2",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.4",
            "Run.reportBenchmark": "0.1",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "List.makeList": "0.6",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "71.4",
            "List$Element.<init>": "24.4",
            "Run.printResult": "0.2"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "java.io.PrintStream.println": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "18.8",
            "Queens.placeQueen": "80.2",
            "Run.getSuiteFromName": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.082619452345295",
            "json.JsonPureStringParser.readChar(String)": "1.897605062524194",
            "java.lang.String.<init>(byte[], byte) String.java": "5.974721039433161",
            "json.JsonPureStringParser.read()": "21.652052442903553",
            "java.lang.String.length() String.java": "3.626908123937595",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.049076863523908",
            "json.JsonArray.<init>()": "2.347812915495566",
            "java.lang.String.substring(int, int) String.java": "10.25379941767508",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.660551693959643",
            "json.JsonPureStringParser.readStringInternal()": "3.879361125603785"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.184233449477352",
            "som.Vector.hasSome(TestInterface)": "1.8292682926829271",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.171602787456447",
            "havlak.HavlakLoopFinder.findLoops()": "7.992160278745645",
            "som.Vector.<init>(int)": "2.643728222996516",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "13.791376306620212",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.678571428571431",
            "havlak.HavlakLoopFinder$$Lambda$19.0x00000008000cc428.apply(Object)": "1.8053135888501746",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.263937282229966",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.14285714285715"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.521372492003488",
            "Queens.getRowColumn(int, int)": "62.211237116732896",
            "Queens.queens()": "1.631611256502213",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.04846370068818455",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6623372427385221",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(LambdaForm$BasicType, Class, Object) InvokerBytecodeGenerator.java": "0.22616393654486122",
            "Queens.setRowColumn(int, int, boolean)": "20.9040095635036",
            "java.lang.String.<init>(byte[], byte) String.java": "0.14539110206455363",
            "java.lang.reflect.Array.newArray(Class, int) Array.java (native)": "0.12923653516849212",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.4684824399857839"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.2900708773151837",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.7561864818101318",
            "richards.TaskControlBlock.runTask()": "38.74725364297544",
            "richards.Scheduler.<init>()": "1.7339562731796239",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.075538248926466",
            "richards.Scheduler.schedule()": "2.4564380536711337",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.41974709432648",
            "richards.RBObject.append(Packet, Packet)": "2.760250904954743",
            "Richards.benchmark()": "26.202005905825427",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.2267258978225515"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.347995936305518",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.4986276611866662",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.82125357116798",
            "som.Random.next()": "13.364166521668361",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.780184437846242",
            "com.yourkit.probes.Table.createRow() a": "0.15715945510571783",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.15715945510571783",
            "Storage.buildTreeDepth(int, Random)": "38.46477663712443",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.879385731044044",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(Object) MethodType.java": "0.15715945510571783"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "33.115531328592226",
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.32133617318268",
            "Towers.moveDisks(int, int, int)": "8.85647930880955",
            "Towers$TowersDisk.getSize()": "2.2742861268546264",
            "Towers.moveTopDisk(int, int)": "7.19588943840776",
            "java.lang.String.getChars(int, int, char[], int) String.java": "0.12033259930447758",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.22863193867850742",
            "java.util.zip.ZipFile$ZipFileInflaterInputStream.<init>(ZipFile, ZipFile$ZipFileInputStream, ZipFile$CleanableResource, Inflater, int) ZipFile.java": "0.12033259930447758",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "15.378506191112235",
            "Towers.benchmark()": "0.22863193867850742"
        },
        "YourKit_Permute.txt": {
            "java.io.BufferedWriter.write(String, int, int) BufferedWriter.java": "0.11249353162193174",
            "java.lang.Long.<init>(long) Long.java": "0.04499741264877269",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.13499223794631807",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.03374805948657952",
            "jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String) ByteVector.java": "0.13499223794631807",
            "Permute.permute(int)": "50.689585348842435",
            "java.util.ArrayList.get(int) ArrayList.java": "0.08999482529754538",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.07874547213535221",
            "Permute.benchmark()": "0.10124417845973856",
            "Permute.swap(int, int)": "48.42846536324161"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.738360115368769",
            "som.Vector.forEach(ForEachInterface)": "39.8382777091059",
            "deltablue.EqualityConstraint.execute()": "3.064482900700454",
            "deltablue.Plan$$Lambda$27.0x00000008000ccd88.apply(Object)": "2.1374124433456947",
            "deltablue.BinaryConstraint.isSatisfied()": "2.5236918005768447",
            "som.Vector.<init>(int)": "6.257725587144625",
            "deltablue.ScaleConstraint.execute()": "3.73403378656778",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.781211372064278",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "3.0129789864029677",
            "som.Vector.append(Object)": "6.231973629995881"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "3.659491722256732",
            "List.makeList(int)": "0.9317525049288357",
            "java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(Object, long, Object) DelegatingMethodHandle$Holder": "0.1215329354255003",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, Object, Object) DirectMethodHandle$Holder": "0.1215329354255003",
            "List$Element.getNext()": "19.16169281875388",
            "List$Element.length()": "0.25656953034272284",
            "List.isShorterThan(List$Element, List$Element)": "74.49968941583168",
            "com.yourkit.probes.Table.createRow() a": "0.28357684932616734",
            "sun.nio.cs.StreamEncoder.write(char[], int, int) StreamEncoder.java": "0.13503659491722256",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.1215329354255003"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.138500179404377",
            "nbody.Body.getZ()": "4.965913168281305",
            "nbody.Body.setX(double)": "0.7176175098672407",
            "nbody.Body.getX()": "0.688912809472551",
            "nbody.Body.getVZ()": "0.5597416576964477",
            "nbody.NBodySystem.advance(double)": "44.764980265518474",
            "nbody.Body.setVY(double)": "4.865446716899892",
            "nbody.Body.setVZ(double)": "9.285970577682095",
            "nbody.Body.setVX(double)": "28.9199856476498",
            "nbody.Body.setY(double)": "1.1194833153928954"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.23825832134376",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.12357338935326982",
            "jdk.internal.perf.PerfCounter$CoreCounters.<clinit>() PerfCounter.java": "0.0353066826723628",
            "java.io.RandomAccessFile.<init>(File, String, boolean) RandomAccessFile.java": "0.10592004801708843",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.06178669467663491",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.052960024008544215",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.0176533413361814",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.10592004801708843",
            "com.yourkit.probes.Table.createRow() a": "0.16770674269372335",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.08826670668090701"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.101001335617214",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.943360775110737",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.619930125336733",
            "cd.RedBlackTree.findNode(Comparable)": "7.379851044724313",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.768289278087577",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.339216588818545",
            "cd.RedBlackTree.put(Comparable, Object)": "7.108200086022803",
            "cd.Vector2D.compareNumbers(double, double)": "8.692830678448269",
            "cd.Simulator.simulate(double)": "1.9921070304777286",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.610520437961712"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.12292975123488523",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17880691088710576",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.100578887373997",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.547998480141257",
            "Sieve.benchmark()": "88.21885965892581",
            "com.yourkit.probes.Table.closeRow(int, Throwable) a": "0.100578887373997",
            "com.yourkit.probes.Table.createRow() a": "0.100578887373997",
            "jdk.internal.loader.URLClassPath$JarLoader$2.getBytes() URLClassPath.java": "0.3240875259828792",
            "Sieve.sieve(boolean[], int)": "8.057486421850204",
            "java.lang.Integer.valueOf(int) Integer.java": "0.100578887373997"
        },
        "YourKit_Bounce.txt": {
            "Bounce.benchmark()": "65.15524497736837",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.3771936790280314",
            "som.Random.next()": "0.7146827602636384",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5955689668863654",
            "java.util.concurrent.ConcurrentHashMap$ValuesView.<init>(ConcurrentHashMap) ConcurrentHashMap.java": "0.25807988565075834",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.4168982768204557",
            "Bounce$Ball.bounce()": "30.59239259906297",
            "java.lang.invoke.MethodHandle.invokeBasic(Object[]) MethodHandle.java (native)": "0.1786706900659096",
            "Bounce$Ball.<init>(Random)": "0.9727626459143968",
            "java.io.RandomAccessFile.seek0(long) RandomAccessFile.java (native)": "0.15881839116969743"
        }
    },
    "Runtimes": {
        "NBody.data": 21.865499999999997,
        "YourKit_Storage.txt": 61.1275,
        "rebench_test_Async_Bounce.txt": 68.932,
        "Permute_not_profiled_": 30.0305,
        "JavaFlightRecorder_Sieve.jfr": 30.719,
        "CD_not_profiled_": 41.667500000000004,
        "JProfiler_NBody.txt": 21.284,
        "JProfiler_List.txt": 28.5005,
        "YourKit_Mandelbrot.txt": 37.757999999999996,
        "CD.data": 44.342,
        "Json_not_profiled_": 80.0035,
        "List.data": 23.759,
        "Queens_not_profiled_": 20.685,
        "Towers.hpl": 25.772,
        "Bounce.hpl": 25.842,
        "JavaFlightRecorder_Json.jfr": 83.429,
        "Sieve.data": 32.585,
        "Richards.hpl": 90.0555,
        "YourKit_Richards.txt": 95.81649999999999,
        "JavaFlightRecorder_Havlak.jfr": 151.0125,
        "JavaFlightRecorder_CD.jfr": 41.171499999999995,
        "JavaFlightRecorder_Towers.jfr": 26.6555,
        "rebench_test_Async_CD.txt": 133.25400000000002,
        "List_not_profiled_": 22.2145,
        "Havlak_not_profiled_": 154.59199999999998,
        "JProfiler_Json.txt": 1021.2125,
        "rebench_test_Async_NBody.txt": 56.012,
        "JavaFlightRecorder_Bounce.jfr": 14.8965,
        "Havlak.data": 157.2535,
        "Towers_not_profiled_": 25.768,
        "YourKit_DeltaBlue.txt": 11.846,
        "rebench_test_Async_Towers.txt": 71.0065,
        "YourKit_NBody.txt": 23.3495,
        "JavaFlightRecorder_NBody.jfr": 21.3885,
        "rebench_test_Async_Sieve.txt": 82.31800000000001,
        "Storage.hpl": 58.122,
        "JProfiler_Queens.txt": 27.2885,
        "rebench_test_Async_List.txt": 66.311,
        "rebench_test_Async_Richards.txt": 254.8585,
        "YourKit_Towers.txt": 27.6005,
        "JProfiler_Havlak.txt": 1921.003,
        "JavaFlightRecorder_List.jfr": 22.695,
        "YourKit_Permute.txt": 29.815,
        "Queens.data": 21.5415,
        "Storage_not_profiled_": 62.105000000000004,
        "Json.hpl": 81.14150000000001,
        "Towers.data": 26.6005,
        "YourKit_List.txt": 24.645,
        "JProfiler_CD.txt": 474.4095,
        "JProfiler_Permute.txt": 30.244,
        "Sieve.hpl": 30.664,
        "DeltaBlue_not_profiled_": 12.2605,
        "CD.hpl": 42.182,
        "JavaFlightRecorder_Queens.jfr": 21.692999999999998,
        "JProfiler_Bounce.txt": 44.124,
        "Permute.hpl": 29.949,
        "Richards_not_profiled_": 89.768,
        "DeltaBlue.hpl": 11.758,
        "NBody.hpl": 21.386,
        "JProfiler_Towers.txt": 27.033,
        "JProfiler_Mandelbrot.txt": 37.7175,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.3375,
        "rebench_test_Async_Mandelbrot.txt": 98.731,
        "YourKit_CD.txt": 44.0565,
        "rebench_test_Async_Permute.txt": 79.788,
        "Mandelbrot.data": 39.531499999999994,
        "JProfiler_Storage.txt": 1036.9035,
        "YourKit_Sieve.txt": 32.018,
        "JavaFlightRecorder_Permute.jfr": 29.317500000000003,
        "YourKit_Bounce.txt": 14.034,
        "JProfiler_Sieve.txt": 27.1445,
        "JProfiler_DeltaBlue.txt": 98.22550000000001,
        "YourKit_Queens.txt": 20.491,
        "Mandelbrot.hpl": 37.454499999999996,
        "JavaFlightRecorder_Storage.jfr": 57.412,
        "List.hpl": 22.3525,
        "Mandelbrot_not_profiled_": 38.086,
        "Queens.hpl": 20.918,
        "Storage.data": 64.72149999999999,
        "JavaFlightRecorder_Richards.jfr": 93.2625,
        "Bounce.data": 27.388,
        "Permute.data": 31.163,
        "YourKit_Json.txt": 80.2755,
        "rebench_test_Async_DeltaBlue.txt": 33.0815,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.3595,
        "YourKit_Havlak.txt": 154.1175,
        "DeltaBlue.data": 12.576,
        "JProfiler_Richards.txt": 94.071,
        "rebench_test_Async_Storage.txt": 142.757,
        "Sieve_not_profiled_": 30.468,
        "Havlak.hpl": 152.9895,
        "Richards.data": 94.7625,
        "rebench_test_Async_Havlak.txt": 437.695,
        "Bounce_not_profiled_": 26.2995,
        "NBody_not_profiled_": 21.189,
        "Json.data": 85.3145,
        "rebench_test_Async_Json.txt": 247.035,
        "rebench_test_Async_Queens.txt": 58.2385
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.07%",
            "[.] Interpreter": "0.53%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.35%",
            "[.] void nbody.NBodySystem.advance(double)": "96.77%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.36%",
            "0xffffffffb4c0634b": "0.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.11%",
            "[.] void Permute.permute(int)": "97.33%",
            "0xffffffffb4c063aa": "0.09%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.07%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.86%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.60%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.98%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.78%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.StayConstraint.<init>(deltablue.Variable, deltablue.Strength$Sym, deltablue.Planner)": "3.69%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "7.07%",
            "[.] vtable chunks": "6.28%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "7.95%",
            "[.] void deltablue.Planner.chainTest(int)": "23.76%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.57%",
            "[.] Interpreter": "0.51%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "[.] boolean Queens.placeQueen(int)": "94.15%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.13%",
            "[.] Interpreter": "0.39%",
            "[.] void Towers.moveDisks(int, int, int)": "0.11%",
            "0xffffffffb4c0634b": "0.10%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.88%",
            "[.] boolean richards.Scheduler.start()": "23.51%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.81%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.82%",
            "[.] void richards.Scheduler.schedule()": "7.90%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "18.04%",
            "[.] Interpreter": "0.19%",
            "0xffffffffb51c12b7": "0.13%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.77%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.17%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.63%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.41%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.45%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.41%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.29%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c0634b": "0.10%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "94.27%",
            "[.] Interpreter": "0.51%",
            "[.] java.lang.Object List.benchmark()": "0.29%",
            "[.] List$Element List.makeList(int)": "0.66%",
            "0xffffffffb4c063aa": "0.23%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.36%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.22%",
            "[.] java.lang.Object Sieve.benchmark()": "6.49%",
            "[.] int Sieve.sieve(boolean[], int)": "6.95%"
        },
        "Bounce.data": {
            " ": "0",
            "0xffffffffb4c6958b": "0.15%",
            "[.] Interpreter": "0.46%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "74.23%",
            "[.] java.lang.Object Bounce.benchmark()": "21.64%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "31.78%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "5.67%",
            "[.] StubRoutines (2)": "8.30%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.40%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.84%"
        }
    }
}