{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "jdk.internal.org.objectweb.asm.Symbol.getArgumentsAndReturnSizes()I": "0.08865248226950355",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn(Ljava/lang/Object;)V": "0.08865248226950355",
            "Mandelbrot.mandelbrot(I)I": "99.73404255319149",
            "java.lang.invoke.DirectMethodHandle.shouldBeInitialized(Ljava/lang/invoke/MemberName;)Z": "0.08865248226950355"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.48",
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.16",
            "Queens.placeQueen(I)Z": "84.96000000000001",
            "java.nio.charset.CharsetEncoder.encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;": "0.16",
            "Queens.getRowColumn(II)Z": "13.6",
            "java.util.Arrays.fill([ZZ)V": "0.16",
            "Queens.setRowColumn(IIZ)V": "0.16",
            "Queens.queens()Z": "0.32"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.util.jar.Manifest$FastInputStream.readLine([BII)I": "0.13531799729364005",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "73.07171853856563",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.7591339648173208",
            "java.net.URLStreamHandler.toExternalForm(Ljava/net/URL;)Ljava/lang/String;": "0.13531799729364005",
            "Bounce.benchmark()Ljava/lang/Object;": "24.76319350473613",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.13531799729364005"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.splitBucket([Lsom/Dictionary$Entry;ILsom/Dictionary$Entry;)V": "1.131117266851339",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "1.061865189289012",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.808864265927978",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.808864265927978",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.18467220683287",
            "som.Set.lambda$contains$1(Ljava/lang/Object;Ljava/lang/Object;)Z": "6.325023084025855",
            "havlak.HavlakLoopFinder.findLoops()V": "8.148661126500462",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.65466297322253",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "45.10618651892891",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.8771929824561404"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "8.409658617818485",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.5820149875104081",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "14.820982514571192",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.6644462947543714",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.31223980016653",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "0.9159034138218152",
            "cd.Simulator.simulate(D)Lsom/Vector;": "0.9159034138218152",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "13.488759367194005",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.314737718567862",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.160699417152373"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.33031674208144",
            " ": "0",
            "jdk.internal.misc.Unsafe.allocateUninitializedArray0(Ljava/lang/Class;I)Ljava/lang/Object;": "0.15082956259426847",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "11.161387631975867",
            "List$Element.length()I": "0.15082956259426847",
            "List.makeList(I)LList$Element;": "1.2066365007541477"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "10.344827586206897",
            "deltablue.Planner.removePropagateFrom(Ldeltablue/Variable;)Lsom/Vector;": "1.3793103448275863",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.1034482758620694",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "5.862068965517242",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "46.896551724137936",
            "deltablue.ScaleConstraint.execute()V": "3.1034482758620694",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.7586206896551726",
            "deltablue.Planner.chainTest(I)V": "1.7241379310344829",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "9.310344827586208",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "6.551724137931035"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.443396226415095",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.55660377358491"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.11061946902654868",
            "Sieve.benchmark()Ljava/lang/Object;": "0.5530973451327434",
            "Sieve.sieve([ZI)I": "99.33628318584071"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.1358695652173913",
            "Towers.moveDisks(III)V": "58.83152173913043",
            "Towers.benchmark()Ljava/lang/Object;": "0.1358695652173913",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1358695652173913",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "40.76086956521739"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.16051364365971107",
            "nbody.NBodySystem.advance(D)V": "99.19743178170144",
            "NBody.innerBenchmarkLoop(I)Z": "0.4815409309791332",
            "nbody.Body.getY()D": "0.16051364365971107"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.906703524533517",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.6219765031098825",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.5245335176226673",
            "richards.Scheduler.schedule()V": "58.25846579129233",
            "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;": "0.0691085003455425",
            "Richards.benchmark()Ljava/lang/Object;": "0.8984105044920525",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.952315134761577",
            "richards.Scheduler.lambda$createHandler$1(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.0691085003455425",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.69937802349689"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "3.8071065989847717",
            "json.JsonPureStringParser.readExponent()Z": "6.810490693739425",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "13.155668358714044",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "33.967851099830796",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "3.257191201353638",
            "json.JsonObject.<init>()V": "0.676818950930626",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "16.666666666666668",
            "java.lang.StringLatin1.hashCode([B)I": "0.5076142131979695",
            "som.Vector.append(Ljava/lang/Object;)V": "10.65989847715736",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "8.925549915397632"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.1201923076923077",
            "Permute.swap(II)V": "25.961538461538463",
            "Permute.permute(I)V": "73.4375",
            "Permute.benchmark()Ljava/lang/Object;": "0.4807692307692308"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.8",
            "richards.Packet::setLink": "2.3",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "2.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "45.8",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.2",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.MemberName::isMethod": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::execute": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "98.4",
            "java.lang.invoke.MethodTypeForm::canonicalize": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantMemberReference": "0.0",
            "java.lang.String::getChars": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.3",
            "List::makeList": "0.9",
            "java.lang.Object::getClass": "0.0",
            "List::tail": "1.9",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "List::isShorterThan": "80.8",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "List$Element::<init>": "0.3",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "14.6",
            "java.lang.String::<init>": "4.6",
            "java.lang.String::length": "3.6",
            "java.util.Arrays::copyOfRange": "8.1",
            "java.lang.String::equals": "20.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "9.9",
            "java.lang.String::isLatin1": "2.4",
            "json.JsonPureStringParser::readValue": "2.4",
            "json.JsonPureStringParser::readStringInternal": "9.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.1",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.4",
            "havlak.HavlakLoopFinder::findLoops": "5.9",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "4.3",
            "AGCT::Unknown not Java[ERR=-3]": "8.4",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.8",
            "havlak.HavlakLoopFinder::doDFS": "5.6",
            "som.Vector::hasSome": "2.0",
            "som.Vector::<init>": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "39.6",
            "Permute::permute": "51.6",
            "Permute::benchmark": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.invoke.MethodType::checkPtypes": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "5.7",
            "java.nio.charset.CoderResult::isOverflow": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "69.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "8.7",
            "Queens::setRowColumn": "17.1",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.2",
            "java.util.Arrays::setAll": "34.6",
            "som.Random::next": "12.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.5",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.1"
        },
        "Sieve.hpl": {
            "java.io.Writer::write": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "5.9",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::execute": "0.0",
            "Sieve::sieve": "85.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "sun.nio.fs.UnixFileSystemProvider::readAttributes": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "5.2"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.2",
            "deltablue.Planner$$Lambda$10.0x0000000800c0dd80::apply": "1.4",
            "deltablue.Variable::setValue": "1.3",
            "som.Vector::append": "5.6",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "13.5",
            "AGCT::Unknown Java[ERR=-5]": "19.1",
            "deltablue.Plan::lambda$execute$0": "4.1",
            "deltablue.AbstractConstraint::satisfy": "2.7",
            "som.Vector::forEach": "26.3"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.1",
            "Bounce$Ball::bounce": "76.6",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "sun.security.action.GetPropertyAction::privilegedGetProperty": "0.0",
            "Bounce$Ball::<init>": "1.3"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "0.9",
            "nbody.Body::getY": "0.6",
            "nbody.Body::getVZ": "0.5",
            "nbody.Body::setVZ": "8.9",
            "nbody.Body::getZ": "8.2",
            "nbody.Body::setVX": "26.6",
            "nbody.Body::setVY": "5.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "nbody.NBodySystem::advance": "42.3"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Towers::popDiskFrom": "21.2",
            "Towers::moveDisks": "4.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "Towers::pushDisk": "38.5",
            "Towers$TowersDisk::setNext": "18.2",
            "AGCT::Unknown Java[ERR=-5]": "3.6",
            "Towers::moveTopDisk": "5.0",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.8",
            "cd.RedBlackTree::forEach": "3.3",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "10.1",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "cd.Vector2D::compareNumbers": "4.8",
            "cd.CollisionDetector::isInVoxel": "22.3",
            "cd.RedBlackTree::treeInsert": "12.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.99%",
            "deltablue.AbstractConstraint.satisfy": "2.89%",
            "vtable": "3.20%",
            "deltablue.Variable.<init>": "3.71%",
            "som.Vector.forEach": "25.22%",
            "itable": "4.25%",
            "deltablue.Planner.addPropagate": "2.93%",
            "deltablue.AbstractConstraint.<init>": "2.76%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.61%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "5.39%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.09%",
            "som.Random.next": "0.91%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.76%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "19.00%",
            "__tls_get_addr": "0.05%",
            "Bounce$Ball.<init>": "1.86%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.69%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.58%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.43%",
            "som.Random.next": "10.74%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.31%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.34%",
            "java.util.Arrays.setAll": "35.65%",
            "Storage.lambda$buildTreeDepth$0": "4.21%",
            "SpinPause": "0.20%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.34%",
            "Storage.buildTreeDepth": "43.27%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "18.18%",
            "Towers.popDiskFrom": "20.93%",
            "Towers.moveDisks": "7.77%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "40.32%",
            "Towers.moveTopDisk": "5.62%",
            "Towers$TowersDisk.getSize": "0.86%",
            "Towers$TowersDisk.getNext": "3.48%",
            "Towers.benchmark": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.13%",
            "cd.CollisionDetector.isInVoxel": "19.50%",
            "cd.RedBlackTree.forEach": "6.07%",
            "Node::set_req_X(unsigned": "4.04%",
            "cd.RedBlackTree.put": "6.46%",
            "cd.RedBlackTree.treeInsert": "12.63%",
            "cd.RedBlackTree.treeMinimum": "5.21%",
            "cd.RedBlackTree.findNode": "2.75%",
            "cd.Vector2D.compareNumbers": "4.04%",
            "cd.RedBlackTree.leftRotate": "2.13%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.99%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.59%",
            "som.Vector.hasSome": "2.21%",
            "som.Vector.append": "3.62%",
            "som.Vector.<init>": "2.42%",
            "som.IdentitySet.lambda$contains$0": "31.77%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.50%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.10%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.87%",
            "havlak.HavlakLoopFinder.doDFS": "5.28%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.48%",
            "Sieve.benchmark": "6.88%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "84.64%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.05%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.47%",
            "Permute.swap": "40.38%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.72%",
            "nbody.Body.getZ": "7.72%",
            "nbody.Body.getY": "0.73%",
            "nbody.Body.setX": "1.24%",
            "nbody.Body.setY": "1.67%",
            "nbody.Body.setZ": "0.49%",
            "nbody.Body.setVX": "28.42%",
            "nbody.Body.setVY": "5.95%",
            "nbody.Body.getMass": "0.50%",
            "nbody.NBodySystem.advance": "40.35%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.05%",
            "Interpreter": "0.05%",
            "List.makeList": "1.06%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.38%",
            "List$Element.length": "0.11%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "81.92%",
            "List$Element.<init>": "0.23%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.14%",
            "java.lang.String.length": "3.22%",
            "java.lang.String.<init>": "4.26%",
            "json.JsonPureStringParser.readArray": "2.56%",
            "java.lang.String.isLatin1": "2.78%",
            "json.JsonPureStringParser.readStringInternal": "8.49%",
            "java.util.Arrays.copyOfRange": "7.18%",
            "java.lang.String.equals": "20.55%",
            "json.JsonPureStringParser.read": "15.81%",
            "json.JsonPureStringParser.readValue": "3.09%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.26%",
            "Queens.getRowColumn": "56.99%",
            "Queens.setRowColumn": "23.80%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.66%",
            "Queens.placeQueen": "14.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.12%",
            "Richards.benchmark": "4.94%",
            "richards.Packet.<init>": "6.94%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.26%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.85%",
            "itable": "37.40%",
            "richards.TaskControlBlock.<init>": "3.02%",
            "richards.RBObject.<init>": "5.72%",
            "richards.RBObject.append": "2.76%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "3.92%"
        }
    },
    "JProfiler": {
        "Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.7",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.2",
            "deltablue.AbstractConstraint.satisfy": "11.1",
            "deltablue.Planner.removePropagateFrom": "9.9",
            "som.Vector.<init>": "26.4",
            "deltablue.Variable.<init>": "4.4",
            "som.Vector.forEach": "7.5",
            "deltablue.AbstractConstraint.<init>": "9.0",
            "deltablue.Planner.constraintsConsuming": "4.5",
            "deltablue.Plan.lambda$execute$0": "2.3",
            "deltablue.Planner.addConstraintsConsumingTo": "15.4"
        },
        "Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "19.7",
            "Queens.placeQueen": "79.5",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2",
            "java.util.Arrays.fill0": "0.1"
        },
        "CD.txt": {
            "cd.CollisionDetector.recurse": "2.7",
            "som.Vector.<init>": "6.5",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "43.3",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.4",
            "Bounce.benchmark": "55.4",
            "Bounce$Ball.<init>": "42.5",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "nbody.Body.getMass": "0.1",
            "nbody.NBodySystem.advance": "99.5",
            "Run.printResult": "0.1"
        },
        "Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "13.9",
            "richards.Scheduler.createWorker": "0.0",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "84.8",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.5",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "Towers.txt": {
            "Towers$TowersDisk.<init>": "4.7",
            "Towers.moveDisks": "93.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.7"
        },
        "Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "havlak.UnionFindNode.<init>": "3.4",
            "som.Vector.<init>": "42.8",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.6",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.6",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.0"
        },
        "Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.0",
            "List.isShorterThan": "76.9",
            "List$Element.<init>": "19.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.54649672938162",
            "java.lang.String.<init>(byte[], byte) String.java": "5.517061163935532",
            "json.JsonPureStringParser.isWhiteSpace()": "1.8460449119967632",
            "json.JsonPureStringParser.read()": "21.06935734034662",
            "java.lang.String.length() String.java": "3.0851709488165087",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.629981792433745",
            "java.lang.String.substring(int, int) String.java": "9.29765999055904",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.579169195495314",
            "json.JsonPureStringParser.readStringInternal()": "3.4139186728707265",
            "json.JsonPureStringParser.readValue()": "3.1526063793917327"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.608576602426714",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.607509338558845",
            "havlak.HavlakLoopFinder.findLoops()": "9.758465939410907",
            "som.Vector.<init>(int)": "2.8496820078557628",
            "som.Vector.append(Object)": "4.750199018467165",
            "havlak.HavlakLoopFinder$$Lambda$18.0x00000008000cc428.apply(Object)": "2.047047090831154",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.860135944922188",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.459325874150346",
            "som.Vector.removeAll()": "2.1629589453333455",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.80913472894124"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.308731959260511",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.14480861128541778",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.14480861128541778",
            "Queens.getRowColumn(int, int)": "65.74310952357966",
            "Queens.queens()": "0.6275039822368103",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.28961722257083555",
            "java.lang.invoke.DirectMethodHandle.make(byte, Class, MemberName, Class) DirectMethodHandle.java": "0.3057070682692153",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.22525783977731653",
            "Queens.setRowColumn(int, int, boolean)": "19.838779746102233",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3057070682692153"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.755288346273722",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.8442358408793318",
            "richards.TaskControlBlock.runTask()": "39.01296497796139",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.16797300038729",
            "richards.Scheduler.schedule()": "3.0134813639968283",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.3462921638419123",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.5003596259889718",
            "richards.RBObject.append(Packet, Packet)": "2.674141969275031",
            "Richards.benchmark()": "26.538553750253584",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.2425907825092675"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$7.0x00000008000c2aa0.apply(int)": "0.514133310482964",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2838444318291364",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.8354666295348164",
            "java.util.zip.ZipFile$Source.findEND() ZipFile.java": "0.08568888508049399",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.75339809984897",
            "java.lang.invoke.LambdaForm.normalize() LambdaForm.java": "0.13388888293827186",
            "som.Random.next()": "15.349021540043486",
            "Storage.buildTreeDepth(int, Random)": "36.101798395475626",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.422199847902229",
            "Storage$$Lambda$7.0x00000008000c2aa0.<init>(Storage, int, Random)": "0.36953331690963037"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "30.429702087675125",
            "Towers.pushDisk(Towers$TowersDisk, int)": "29.670766524918385",
            "Towers.moveDisks(int, int, int)": "8.023033091999855",
            "Towers$TowersDisk.getSize()": "1.9756417824143786",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.1445591548108082",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.16865234727927622",
            "Towers.moveTopDisk(int, int)": "8.263965016684535",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.1445591548108082",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "20.539446579369",
            "Towers.benchmark()": "0.22888532845044635"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.reflect.ClassFileAssembler.emitConstantPoolUTF8(String) ClassFileAssembler.java": "0.08981397280881973",
            "sun.nio.fs.LinuxFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.1347209592132296",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.12349421261212712",
            "com.yourkit.probes.ForeignKeyColumn.setValue(int, int) a": "0.10104071940992218",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.08981397280881973",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.23576167862315178",
            "Permute.permute(int)": "55.96533180649579",
            "sun.invoke.util.VerifyAccess.isTypeVisible(Class, Class) VerifyAccess.java": "0.11226746601102466",
            "Permute.benchmark()": "0.44906986404409865",
            "Permute.swap(int, int)": "42.43710215216731"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.89481366157439",
            "som.Vector.forEach(ForEachInterface)": "38.09477473971004",
            "deltablue.EqualityConstraint.execute()": "4.208426583633357",
            "deltablue.BinaryConstraint.getOutput()": "2.2380072005449065",
            "deltablue.BinaryConstraint.isSatisfied()": "2.043397878758393",
            "som.Vector.<init>(int)": "6.932957088644548",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.232752748856671",
            "som.Vector.append(Object)": "3.9165126009535864",
            "deltablue.Plan$$Lambda$24.0x00000008000ccd88.apply(Object)": "3.575946287827188",
            "deltablue.Planner$$Lambda$31.0x00000008000cd620.apply(Object)": "2.383964191884792"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "4.734772490169328",
            "java.util.zip.ZipUtils.LG(byte[], int) ZipUtils.java": "0.08025038118931063",
            "List.makeList(int)": "1.0566300189925901",
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.16050076237862126",
            "jdk.internal.loader.BuiltinClassLoader.getPermissions(CodeSource) BuiltinClassLoader.java": "0.0936254447208624",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.08025038118931063",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(int, int) MethodWriter.java": "0.10700050825241418",
            "List$Element.getNext()": "24.52986651686595",
            "java.lang.System.lineSeparator() System.java": "0.10700050825241418",
            "List.isShorterThan(List$Element, List$Element)": "68.74782655217611"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.9681973294818966",
            "nbody.Body.getZ()": "5.805474137320703",
            "nbody.Body.setX(double)": "0.5522280276963596",
            "nbody.Body.getMass()": "0.5522280276963596",
            "nbody.Body.getX()": "0.6938249578749133",
            "nbody.Body.setZ(double)": "1.2885320646248388",
            "nbody.NBodySystem.advance(double)": "43.20122339747674",
            "nbody.Body.setVY(double)": "6.895770499695566",
            "nbody.Body.setVZ(double)": "7.80199085283831",
            "nbody.Body.setVX(double)": "28.602579896067855"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.17521625427479",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07871743066306315",
            "java.nio.HeapCharBuffer.<init>(char[], int, int, MemorySegmentProxy) HeapCharBuffer.java": "0.07871743066306315",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.043731905923923974",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "8.746381184784796E-4",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.3586016285761766",
            "java.lang.invoke.ClassSpecializer$Factory.findGetters(Class, List) ClassSpecializer.java": "0.026239143554354385",
            "java.io.PrintStream.writeln(String) PrintStream.java": "8.746381184784796E-4",
            "com.yourkit.probes.Table.createRow() a": "0.1661812425109111",
            "java.lang.invoke.MemberName$Factory.resolve(byte, MemberName, Class, int, boolean) MemberName.java": "0.06997104947827835"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.08151193398598",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.113779539203215",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.390612522551832",
            "cd.RedBlackTree.findNode(Comparable)": "2.299547484546449",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "19.298453166129363",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.075922037206826",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "1.8485108396675636",
            "cd.RedBlackTree.put(Comparable, Object)": "6.144450031054982",
            "cd.Vector2D.compareNumbers(double, double)": "5.360681435035934",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.813522226494336"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.05059141362527952",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.53128067104451",
            "Sieve.benchmark()": "87.09817769728122",
            "jdk.internal.misc.Unsafe.weakCompareAndSetLong(Object, long, long, long) Unsafe.java": "0.09106454452550312",
            "java.lang.StringConcatHelper.prepend(long, byte[], String, String) StringConcatHelper.java": "0.09106454452550312",
            "java.util.concurrent.atomic.AtomicLong.addAndGet(long) AtomicLong.java": "0.09106454452550312",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.09106454452550312",
            "Run.measure(Benchmark)": "0.10118282725055903",
            "Sieve.sieve(boolean[], int)": "8.7421962744483",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.040473130900223614"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.05823998757546931",
            "Bounce.benchmark()": "61.65673351323018",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.368853254644639",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.15530663353458485",
            "Bounce.lambda$benchmark$0(Random, int)": "0.7765331676729241",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.3300265962609928",
            "java.util.jar.JarFile.<clinit>() JarFile.java": "0.03882665838364621",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.25237327949370036",
            "Bounce$Ball.bounce()": "35.00223253285706",
            "Bounce$Ball.<init>(Random)": "1.2424530682766788"
        }
    },
    "Runtimes": {
        "Permute_JProfiler_.txt": 30.244,
        "Havlak_honest_.hpl": 152.9895,
        "Permute_not_profiled_": 30.0305,
        "Permute_honest_.hpl": 29.949,
        "List_YourKit_.txt": 24.645,
        "CD_not_profiled_": 41.667500000000004,
        "Json_not_profiled_": 80.0035,
        "Queens_not_profiled_": 20.685,
        "List_JProfiler_.txt": 28.5005,
        "Permute_Perf_.data": 31.163,
        "Bounce_Perf_.data": 27.388,
        "Richards_Perf_.data": 94.7625,
        "Sieve_JProfiler_.txt": 27.1445,
        "Permute_YourKit_.txt": 29.815,
        "Queens_JProfiler_.txt": 27.2885,
        "Towers_JProfiler_.txt": 27.033,
        "Storage_Perf_.data": 64.72149999999999,
        "JavaFlightRecorder_Sieve_JFR_.jfr": 30.719,
        "List_not_profiled_": 22.2145,
        "JavaFlightRecorder_Mandelbrot_JFR_.jfr": 37.3595,
        "DeltaBlue_YourKit_.txt": 11.846,
        "Havlak_not_profiled_": 154.59199999999998,
        "rebench_test_Async_CD_Async_.txt": 133.25400000000002,
        "List_honest_.hpl": 22.3525,
        "JavaFlightRecorder_Towers_JFR_.jfr": 26.6555,
        "Mandelbrot_YourKit_.txt": 37.757999999999996,
        "Queens_Perf_.data": 21.5415,
        "Towers_not_profiled_": 25.768,
        "NBody_Perf_.data": 21.865499999999997,
        "CD_YourKit_.txt": 44.0565,
        "Sieve_honest_.hpl": 30.664,
        "Bounce_JProfiler_.txt": 44.124,
        "rebench_test_Async_Json_Async_.txt": 247.035,
        "rebench_test_Async_NBody_Async_.txt": 56.012,
        "JavaFlightRecorder_Storage_JFR_.jfr": 57.412,
        "Storage_honest_.hpl": 58.122,
        "JavaFlightRecorder_Richards_JFR_.jfr": 93.2625,
        "JavaFlightRecorder_DeltaBlue_JFR_.jfr": 12.3375,
        "Havlak_YourKit_.txt": 154.1175,
        "List_Perf_.data": 23.759,
        "Json_Perf_.data": 85.3145,
        "rebench_test_Async_Mandelbrot_Async_.txt": 98.731,
        "Havlak_Perf_.data": 157.2535,
        "JavaFlightRecorder_List_JFR_.jfr": 22.695,
        "Storage_not_profiled_": 62.105000000000004,
        "rebench_test_Async_Queens_Async_.txt": 58.2385,
        "Towers_YourKit_.txt": 27.6005,
        "NBody_JProfiler_.txt": 21.284,
        "Mandelbrot_honest_.hpl": 37.454499999999996,
        "Mandelbrot_Perf_.data": 39.531499999999994,
        "rebench_test_Async_Permute_Async_.txt": 79.788,
        "DeltaBlue_not_profiled_": 12.2605,
        "CD_JProfiler_.txt": 474.4095,
        "DeltaBlue_honest_.hpl": 11.758,
        "JavaFlightRecorder_CD_JFR_.jfr": 41.171499999999995,
        "Sieve_Perf_.data": 32.585,
        "NBody_honest_.hpl": 21.386,
        "rebench_test_Async_Sieve_Async_.txt": 82.31800000000001,
        "CD_honest_.hpl": 42.182,
        "rebench_test_Async_Havlak_Async_.txt": 437.695,
        "Towers_Perf_.data": 26.6005,
        "JavaFlightRecorder_Bounce_JFR_.jfr": 14.8965,
        "rebench_test_Async_DeltaBlue_Async_.txt": 33.0815,
        "Richards_not_profiled_": 89.768,
        "rebench_test_Async_List_Async_.txt": 66.311,
        "JavaFlightRecorder_Permute_JFR_.jfr": 29.317500000000003,
        "Richards_honest_.hpl": 90.0555,
        "JavaFlightRecorder_Havlak_JFR_.jfr": 151.0125,
        "rebench_test_Async_Bounce_Async_.txt": 68.932,
        "rebench_test_Async_Towers_Async_.txt": 71.0065,
        "Json_YourKit_.txt": 80.2755,
        "DeltaBlue_JProfiler_.txt": 98.22550000000001,
        "NBody_YourKit_.txt": 23.3495,
        "Mandelbrot_not_profiled_": 38.086,
        "JavaFlightRecorder_NBody_JFR_.jfr": 21.3885,
        "Richards_YourKit_.txt": 95.81649999999999,
        "rebench_test_Async_Storage_Async_.txt": 142.757,
        "DeltaBlue_Perf_.data": 12.576,
        "Json_honest_.hpl": 81.14150000000001,
        "Sieve_YourKit_.txt": 32.018,
        "Queens_YourKit_.txt": 20.491,
        "Richards_JProfiler_.txt": 94.071,
        "Towers_honest_.hpl": 25.772,
        "CD_Perf_.data": 44.342,
        "Json_JProfiler_.txt": 1021.2125,
        "Queens_honest_.hpl": 20.918,
        "Sieve_not_profiled_": 30.468,
        "Bounce_YourKit_.txt": 14.034,
        "Bounce_not_profiled_": 26.2995,
        "Storage_JProfiler_.txt": 1036.9035,
        "Bounce_honest_.hpl": 25.842,
        "rebench_test_Async_Richards_Async_.txt": 254.8585,
        "JavaFlightRecorder_Queens_JFR_.jfr": 21.692999999999998,
        "NBody_not_profiled_": 21.189,
        "Mandelbrot_JProfiler_.txt": 37.7175,
        "JavaFlightRecorder_Json_JFR_.jfr": 83.429,
        "Storage_YourKit_.txt": 61.1275
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.49%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.22%",
            "[.] void nbody.NBodySystem.advance(double)": "0.07%",
            "0xffffffffb4c063aa": "0.11%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.42%",
            "0xffffffffb4c0634b": "0.05%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "97.51%",
            "0xffffffffb4c063aa": "0.06%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.67%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.31%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.42%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.96%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.65%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] vtable chunks": "6.80%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.75%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "13.10%",
            "[.] void deltablue.Planner.chainTest(int)": "24.59%",
            "[.] deltablue.Plan deltablue.Planner.makePlan(som.Vector)": "3.38%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.23%",
            "[.] Interpreter": "0.50%",
            "0xffffffffb51c12b7": "0.26%",
            "[.] boolean Queens.placeQueen(int)": "94.08%",
            "0xffffffffb4c063aa": "0.11%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.10%",
            "[.] Interpreter": "0.43%",
            "[.] void Towers.moveDisks(int, int, int)": "0.10%",
            "[.] java.lang.Object Towers.benchmark()": "0.08%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.89%",
            "[.] boolean richards.Scheduler.start()": "23.36%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.73%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.80%",
            "[.] void richards.Scheduler.schedule()": "7.76%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.31%",
            "[.] Interpreter": "0.18%",
            "0xffffffffb51c12b7": "0.15%",
            "0xffffffffb4c0634b": "0.06%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.13%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.25%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.32%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.51%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.48%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.24%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.28%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.05%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.98%",
            "[.] Interpreter": "0.47%",
            "[.] java.lang.Object List.benchmark()": "0.35%",
            "0xffffffffb51c12b7": "0.15%",
            "[.] List$Element List.makeList(int)": "0.58%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.40%",
            "0xffffffffb51c12b7": "0.20%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "84.55%",
            "[.] java.lang.Object Sieve.benchmark()": "5.95%",
            "[.] int Sieve.sieve(boolean[], int)": "6.04%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.67%",
            "0xffffffffb51c12b7": "0.30%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "60.73%",
            "[.] java.lang.Object Bounce.benchmark()": "32.64%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "1.47%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.65%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.61%",
            "[.] StubRoutines (2)": "8.26%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.31%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.24%"
        }
    }
}