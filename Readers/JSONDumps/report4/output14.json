{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4754358161648177",
            " ": "0",
            "Queens.placeQueen(I)Z": "82.88431061806655",
            "Queens.getRowColumn(II)Z": "15.37242472266244",
            "java.util.Arrays.fill([ZZ)V": "0.9508716323296355",
            "Queens.queens()Z": "0.31695721077654515"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.13227513227513227",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "72.22222222222221",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.7936507936507936",
            "Bounce.benchmark()Ljava/lang/Object;": "26.85185185185185"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.9387467730579677",
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.8214034264257217",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "4.552921849331143",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.7927716498474537",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "23.022764609246657",
            "havlak.SimpleLoop.<init>(Lhavlak/BasicBlock;Z)V": "0.5397793945083315",
            "havlak.HavlakLoopFinder.findLoops()V": "10.49049518892279",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "4.459047172025347",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "50.880075099741845",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6336540718141281"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "7.289879931389365",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.8010291595197254",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.351629502572898",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "1.3722126929674099",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "3.7735849056603774",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "23.67066895368782",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "13.293310463121783",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.440823327615778",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.375643224699828",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.457975986277873"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "89.15470494417863",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "9.569377990430622",
            "List$Element.length()I": "0.1594896331738437",
            "List.makeList(I)LList$Element;": "1.1164274322169059"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "8.681672025723472",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "8.360128617363344",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "1.607717041800643",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.215434083601286",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "45.337620578778136",
            "deltablue.ScaleConstraint.execute()V": "1.9292604501607717",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "4.180064308681672",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.823151125401929",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "4.823151125401929",
            "deltablue.ScaleConstraint.recalculate()V": "4.180064308681672"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.571428571428571",
            "Storage.benchmark()Ljava/lang/Object;": "0.11904761904761904",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.25",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.05952380952380952"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.32608695652173914",
            "java.util.Arrays.fill([ZZ)V": "0.10869565217391304",
            "Sieve.sieve([ZI)I": "99.45652173913044",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.10869565217391304"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "61.54873164218958",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.31775700934579",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "0.13351134846461948"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.53125",
            "java.lang.invoke.LambdaForm$Name.<init>(ILjava/lang/invoke/LambdaForm$BasicType;Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.15625",
            "NBody.innerBenchmarkLoop(I)Z": "0.3125"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "3.4557235421166306",
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "0.07199424046076314",
            "jdk.jfr.internal.PlatformRecorder.isToDisk()Z": "0.07199424046076314",
            "java.lang.invoke.MemberName.init(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;I)V": "0.07199424046076314",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.4319654427645788",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.311735061195104",
            "richards.Scheduler.schedule()V": "59.89920806335493",
            "Richards.benchmark()Ljava/lang/Object;": "0.5039596832253419",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "25.629949604031676",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "6.551475881929446"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.readName()Ljava/lang/String;": "5.189990732159407",
            "json.JsonPureStringParser.readExponent()Z": "7.32159406858202",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "36.97868396663577",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "9.221501390176089",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "23.911028730305837",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "2.7340129749768303",
            "json.JsonPureStringParser.read()V": "2.3632993512511584",
            "json.JsonPureStringParser.readChar(Ljava/lang/String;)Z": "5.6997219647822055",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "2.4096385542168672",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "1.5755329008341057"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm.prepare()V": "0.12077294685990338",
            "Run.measure(LBenchmark;)V": "0.12077294685990338",
            "Permute.swap(II)V": "29.589371980676326",
            "java.util.zip.ZipUtils.LG([BI)J": "0.12077294685990338",
            "Permute.permute(I)V": "69.92753623188406",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12077294685990338"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.8",
            "richards.Packet::setLink": "2.2",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "6.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.9"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "sun.invoke.util.VerifyAccess::isSamePackage": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.StringBuilder::<init>": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "Mandelbrot::mandelbrot": "97.9",
            "java.lang.Long::stringSize": "0.0",
            "java.nio.Buffer::remaining": "0.0"
        },
        "List.hpl": {
            "jdk.internal.org.objectweb.asm.AnnotationWriter::putAnnotations": "0.0",
            "List$Element::getNext": "9.8",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "1.9",
            "List::isShorterThan": "78.0",
            "AGCT::Unknown not Java[ERR=-3]": "5.7",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "14.1",
            "java.lang.String::<init>": "4.2",
            "java.lang.String::length": "3.0",
            "java.util.Arrays::copyOfRange": "8.0",
            "java.lang.String::equals": "20.7",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readValue": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.4",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.3",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.2",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::<init>": "1.9",
            "som.Vector::forEach": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "java.io.BufferedWriter::write": "0.0",
            "Permute::permute": "50.3",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "6.4",
            "jdk.internal.org.objectweb.asm.ByteVector::put12": "0.0"
        },
        "Queens.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Queens::getRowColumn": "68.6",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "8.1",
            "Queens::setRowColumn": "16.8",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.8",
            "java.util.Arrays::setAll": "34.4",
            "som.Random::next": "12.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.7",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.0"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "5.8",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "83.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "java.lang.invoke.InvokerBytecodeGenerator::addMethod": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "8.4"
        },
        "DeltaBlue.hpl": {
            "deltablue.BinaryConstraint::<init>": "14.2",
            "deltablue.Variable::<init>": "3.2",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.4",
            "som.Vector::append": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "12.5",
            "AGCT::Unknown Java[ERR=-5]": "15.4",
            "deltablue.AbstractConstraint::satisfy": "3.2",
            "som.Vector::<init>": "5.0",
            "som.Vector::forEach": "6.5",
            "som.Dictionary::hash": "3.4"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.0",
            "Bounce$Ball::bounce": "75.1",
            "java.util.Arrays::setAll": "0.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "som.Random::next": "0.7",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.5",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.6",
            "nbody.Body::getZ": "7.6",
            "nbody.Body::setVX": "27.0",
            "nbody.Body::setVY": "5.6",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "nbody.NBodySystem::advance": "41.5"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.1",
            "Towers::popDiskFrom": "22.0",
            "Towers::moveDisks": "3.7",
            "Towers::buildTowerAt": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "Towers::pushDisk": "39.8",
            "Towers$TowersDisk::setNext": "18.1",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "Towers::moveTopDisk": "5.5",
            "Towers$TowersDisk::getNext": "3.4"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "15.0",
            "cd.RedBlackTree::forEach": "3.5",
            "cd.RedBlackTree::put": "7.2",
            "cd.RedBlackTree::findNode": "3.1",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "9.6",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "cd.Vector2D::compareNumbers": "5.1",
            "cd.CollisionDetector::isInVoxel": "21.9",
            "cd.RedBlackTree::treeInsert": "13.0"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "2.62%",
            "deltablue.AbstractConstraint.satisfy": "2.75%",
            "som.Vector.append": "2.57%",
            "som.Vector.forEach": "10.63%",
            "itable": "4.04%",
            "deltablue.Planner.chainTest": "3.34%",
            "deltablue.Planner.addPropagate": "3.14%",
            "deltablue.ScaleConstraint.recalculate": "1.93%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "3.07%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "17.93%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "76.08%",
            "som.Random.next": "0.77%",
            "Interpreter": "0.04%",
            "java.util.Arrays.setAll": "0.59%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "17.88%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "Bounce$Ball.<init>": "1.60%",
            "Bounce.lambda$benchmark$0": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.49%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.58%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.43%",
            "som.Random.next": "10.87%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.21%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.34%",
            "java.util.Arrays.setAll": "35.15%",
            "Storage.lambda$buildTreeDepth$0": "4.18%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.23%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.38%",
            "Storage.buildTreeDepth": "43.50%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.63%",
            "Towers.popDiskFrom": "20.91%",
            "Towers.moveDisks": "8.16%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "41.14%",
            "Towers.moveTopDisk": "5.04%",
            "Towers$TowersDisk.getSize": "0.78%",
            "Towers$TowersDisk.getNext": "3.27%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.12%",
            "cd.CollisionDetector.isInVoxel": "19.72%",
            "cd.RedBlackTree.forEach": "5.95%",
            "Node::set_req_X(unsigned": "4.17%",
            "cd.RedBlackTree.put": "6.56%",
            "cd.RedBlackTree.treeInsert": "12.10%",
            "cd.RedBlackTree.treeMinimum": "5.01%",
            "cd.RedBlackTree.findNode": "2.76%",
            "cd.Vector2D.compareNumbers": "4.23%",
            "cd.RedBlackTree.leftRotate": "2.12%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.13%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.38%",
            "som.Vector.append": "3.61%",
            "som.Vector.<init>": "2.12%",
            "som.IdentitySet.lambda$contains$0": "32.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "9.12%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.10%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.16%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.77%",
            "havlak.HavlakLoopFinder.doDFS": "5.27%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "9.38%",
            "Sieve.benchmark": "5.19%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "82.56%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.03%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.17%",
            "Permute.swap": "40.18%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "java.lang.Integer.valueOf": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.85%",
            "nbody.Body.getZ": "8.28%",
            "nbody.Body.getY": "0.81%",
            "nbody.Body.getX": "0.34%",
            "nbody.Body.setX": "1.25%",
            "nbody.Body.setY": "1.19%",
            "nbody.Body.setVX": "29.68%",
            "nbody.Body.setVY": "6.05%",
            "nbody.Body.getMass": "0.47%",
            "nbody.NBodySystem.advance": "39.59%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.24%",
            "Interpreter": "0.04%",
            "List.makeList": "1.03%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.55%",
            "List$Element.length": "0.15%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.96%",
            "List$Element.<init>": "0.25%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.67%",
            "java.lang.String.length": "3.10%",
            "java.lang.String.<init>": "5.85%",
            "json.JsonPureStringParser.isWhiteSpace": "2.26%",
            "java.lang.String.isLatin1": "3.10%",
            "json.JsonPureStringParser.readStringInternal": "6.58%",
            "java.util.Arrays.copyOfRange": "8.03%",
            "java.lang.String.equals": "21.78%",
            "json.JsonPureStringParser.read": "15.87%",
            "json.JsonPureStringParser.readValue": "2.34%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.04%",
            "Queens.getRowColumn": "68.36%",
            "Queens.setRowColumn": "17.71%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.62%",
            "Queens.placeQueen": "8.88%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "7.01%",
            "Richards.benchmark": "5.35%",
            "richards.Packet.<init>": "7.30%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.09%",
            "richards.HandlerTaskDataRecord.workInAdd": "3.67%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.87%",
            "itable": "35.40%",
            "richards.TaskControlBlock.<init>": "3.28%",
            "richards.RBObject.<init>": "6.38%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "3.62%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.8",
            "Towers.moveDisks": "94.6",
            "java.io.PrintStream.println": "0.1",
            "Run.lambda$getSuiteFromName$13": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "4.6",
            "java.io.PrintStream.println": "0.1",
            "Sieve.sieve": "94.8",
            "java.lang.Integer.valueOf": "0.2",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.5",
            "deltablue.AbstractConstraint.satisfy": "11.4",
            "deltablue.Planner.removePropagateFrom": "9.0",
            "som.Vector.<init>": "29.0",
            "deltablue.Variable.<init>": "5.1",
            "som.Vector.forEach": "7.0",
            "deltablue.Planner.addPropagate": "1.6",
            "deltablue.Planner.constraintsConsuming": "5.3",
            "deltablue.AbstractConstraint.<init>": "5.1",
            "deltablue.Planner.addConstraintsConsumingTo": "17.7"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "havlak.UnionFindNode.<init>": "3.5",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.1",
            "havlak.UnionFindNode.findSet": "4.6",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "16.0",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.2",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.Scheduler.createIdler": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "82.5",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.6"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.measure": "0.0",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "1.0",
            "Bounce.benchmark": "52.3",
            "Bounce$Ball.<init>": "46.2",
            "Bounce.lambda$benchmark$0": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.4",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.6",
            "cd.Vector2D.<init>": "44.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.4",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.9",
            "cd.Motion.<init>": "1.5"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Run.runBenchmark": "0.2",
            "NBody.innerBenchmarkLoop": "0.6",
            "nbody.NBodySystem.advance": "98.9",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.6",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.1",
            "List$Element.length": "0.1",
            "List.isShorterThan": "77.3",
            "List$Element.<init>": "19.3",
            "Run.printResult": "0.4"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.6",
            "Run.runBenchmark": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.3",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.8",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "23.7",
            "Queens.placeQueen": "75.6",
            "Run.runBenchmark": "0.1",
            "Run.getSuiteFromName": "0.1",
            "Harness.processArguments": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.01870931041022",
            "java.lang.String.<init>(byte[], byte) String.java": "7.188757558519268",
            "json.JsonPureStringParser.isWhiteSpace()": "2.0647662389650887",
            "json.JsonPureStringParser.read()": "21.35558224301035",
            "java.lang.String.length() String.java": "3.4131850072688206",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.781113709626446",
            "java.lang.String.substring(int, int) String.java": "9.173461433116325",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.020205212481303",
            "json.JsonPureStringParser.readStringInternal()": "2.8401070307397345",
            "json.JsonPureStringParser.readValue()": "2.2038219244464115"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "8.631851532153647",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "4.315925766076823",
            "havlak.HavlakLoopFinder.findLoops()": "21.79542511868796",
            "som.Vector.<init>(int)": "5.394907207596029",
            "jdk.internal.org.objectweb.asm.FieldWriter.putFieldInfo(ByteVector) FieldWriter.java": "5.394907207596029",
            "havlak.SimpleLoop.<init>(BasicBlock, boolean)": "3.452740612861459",
            "havlak.HavlakLoopFinder$$Lambda$19.0x00000008000cc428.apply(Object)": "4.9633146309883465",
            "som.Vector.at(int)": "4.100129477772982",
            "jdk.internal.misc.Unsafe.allocateInstance(Class) Unsafe.java (native)": "13.595166163141991",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "6.473888649115235"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.431495185311329",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.15481314053936895",
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.21673839675511655",
            "Queens.getRowColumn(int, int)": "59.21602625630863",
            "Queens.queens()": "0.29414496702480103",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.44895810756417",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.17029445459330586",
            "Queens.setRowColumn(int, int, boolean)": "25.389355048456512",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.44895810756417",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.29414496702480103"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.0520837541732013",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9465756795569154",
            "richards.TaskControlBlock.runTask()": "39.05638825737404",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.40734116126094",
            "richards.Scheduler.schedule()": "2.3028357567588413",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.2450738780562156",
            "richards.RBObject.append(Packet, Packet)": "4.910512610504898",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "2.886808460625916",
            "Richards.benchmark()": "25.937202734020637",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.3736213285929932"
        },
        "YourKit_Storage.txt": {
            "java.util.LinkedHashMap.linkNodeLast(LinkedHashMap$Entry) LinkedHashMap.java": "0.10178771368723316",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.31607763723930293",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.2268098123355995",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.9000176789186931",
            "java.util.AbstractList.hashCode() AbstractList.java": "0.11250220986483664",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.44902846305909",
            "som.Random.next()": "16.01281453742841",
            "java.util.jar.Attributes.<init>(int) Attributes.java": "0.08035872133202616",
            "Storage.buildTreeDepth(int, Random)": "36.63286243122633",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.914342960308149"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "33.863307867024574",
            "Towers.popDiskFrom(int)": "29.55144477778722",
            "Towers.moveDisks(int, int, int)": "9.546829262367758",
            "Towers$TowersDisk.getSize()": "2.2348811504779484",
            "java.lang.invoke.MethodHandles.dropArgumentChecks(MethodType, int, List) MethodHandles.java": "0.32794451664622076",
            "java.lang.invoke.LambdaFormEditor$TransformKey.inRange(int) LambdaFormEditor.java": "0.07287655925471571",
            "Towers.moveTopDisk(int, int)": "8.065005890855206",
            "Benchmark.innerBenchmarkLoop(int)": "0.10931483888207358",
            "com.sun.management.internal.GarbageCollectionNotifInfoCompositeData.getCompositeTypeByBuilder() GarbageCollectionNotifInfoCompositeData.java": "0.14575311850943143",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "15.972112569991861"
        },
        "YourKit_Permute.txt": {
            "sun.management.MappedMXBeanType.newMappedType(Type) MappedMXBeanType.java": "0.045058745339236025",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.05632343167404503",
            "java.security.Permissions.add(Permission) Permissions.java": "0.16897029502213506",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.09011749067847205",
            "Permute.permute(int)": "54.228200015770554",
            "java.nio.ByteBuffer.position(int) ByteBuffer.java": "0.10138217701328105",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.1802349813569441",
            "com.yourkit.probes.Table.createRow() a": "0.10138217701328105",
            "Permute.benchmark()": "0.3266759037094612",
            "Permute.swap(int, int)": "44.60815788584366"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "3.23747375875762",
            "som.Vector.forEach(ForEachInterface)": "39.86139565470319",
            "deltablue.EqualityConstraint.execute()": "3.3386448137187954",
            "deltablue.BinaryConstraint.isSatisfied()": "3.642157978602322",
            "som.Vector.<init>(int)": "7.157852138503175",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.552697473252903",
            "deltablue.Planner.makePlan(Vector)": "2.1498849179249815",
            "som.Vector.append(Object)": "6.297898171333181",
            "deltablue.Variable.setDeterminedBy(AbstractConstraint)": "1.9981283354832184",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "3.793914561044085"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.14839997841454858",
            "List.tail(List$Element, List$Element, List$Element)": "3.0759268253197343",
            "List$Element.<init>(Object)": "0.2563272354433112",
            "List.makeList(int)": "0.9308725918730774",
            "Benchmark.innerBenchmarkLoop(int)": "0.12141816415735794",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.02698181425719065",
            "List$Element.getNext()": "25.457341751659378",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.08094544277157195",
            "List.isShorterThan(List$Element, List$Element)": "69.38373536236575",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.5126544708866224"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.9015270278116472",
            "nbody.Body.getZ()": "5.428787087034778",
            "nbody.Body.getX()": "0.8418974626952329",
            "nbody.Body.setZ(double)": "0.6531963072635429",
            "nbody.NBodySystem.advance(double)": "40.80299599372931",
            "nbody.Body.setVY(double)": "6.4593857051617025",
            "nbody.Body.setVZ(double)": "9.638274400510943",
            "nbody.Body.getVX()": "0.6822272542530337",
            "nbody.Body.setVX(double)": "30.090576554607207",
            "nbody.Body.setY(double)": "1.2918771410323402"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.29739154453017",
            "java.lang.StringConcatHelper.checkOverflow(long) StringConcatHelper.java": "0.0776839815630017",
            "java.lang.invoke.InvokerBytecodeGenerator.<init>(String, String, LambdaForm, MethodType) InvokerBytecodeGenerator.java": "0.017263107014000377",
            "java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(Object, long, Object) DelegatingMethodHandle$Holder": "0.0776839815630017",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.034526214028000754",
            "Mandelbrot.verifyResult(int, int)": "0.0776839815630017",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.04315776753500094",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.06042087454900132",
            "com.yourkit.probes.Table.createRow() a": "0.06905242805600151",
            "java.lang.AbstractStringBuilder.append(char) AbstractStringBuilder.java": "0.2416834981960053"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.3930408174085605",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.66223575480773",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "16.292122065941054",
            "cd.RedBlackTree.findNode(Comparable)": "8.85424950957001",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "9.9373612973104",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.21924303362191",
            "cd.RedBlackTree.put(Comparable, Object)": "5.4382815636195625",
            "cd.Vector2D.compareNumbers(double, double)": "9.036030508911056",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.332447150961546",
            "cd.CollisionDetector.lambda$handleNewFrame$0(RedBlackTree, Vector, Aircraft)": "2.287410908374802"
        },
        "YourKit_Sieve.txt": {
            "java.lang.AbstractStringBuilder.<init>(String) AbstractStringBuilder.java": "0.04378187868041417",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.1632407346599236",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.09850922703093189",
            "Sieve.benchmark()": "88.84437731223046",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(MemberName) InvokerBytecodeGenerator.java": "0.08756375736082835",
            "com.yourkit.probes.Table.createRow() a": "0.3502550294433134",
            "java.lang.invoke.LambdaForm$BasicType.basicTypeSlots() LambdaForm.java": "0.08756375736082835",
            "java.lang.reflect.Field.copy() Field.java": "0.12040016637113898",
            "Sieve.sieve(boolean[], int)": "7.0707734068868895",
            "java.lang.String.isLatin1() String.java": "0.09850922703093189"
        },
        "YourKit_Bounce.txt": {
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.28193368919630096",
            "Bounce.benchmark()": "66.08525674761295",
            "java.security.Permissions.add(Permission) Permissions.java": "0.18795579279753397",
            "Bounce.lambda$benchmark$0(Random, int)": "1.1089391775054505",
            "som.Random.next()": "0.16916021351778057",
            "com.yourkit.probes.Table.createRow() a": "0.16916021351778057",
            "Bounce$Ball.bounce()": "29.302308097135544",
            "Bounce$Ball.<init>(Random)": "1.6728065558980523",
            "jdk.internal.loader.NativeLibraries$NativeLibraryImpl.find(String) NativeLibraries.java": "0.4135027441545747",
            "java.util.Collections$UnmodifiableSet.equals(Object) Collections.java": "0.16916021351778057"
        }
    },
    "Runtimes": {
        "NBody.data": 22.0565,
        "YourKit_Storage.txt": 61.6875,
        "rebench_test_Async_Bounce.txt": 71.47049999999999,
        "Permute_not_profiled_": 29.6095,
        "JavaFlightRecorder_Sieve.jfr": 30.677999999999997,
        "CD_not_profiled_": 41.5925,
        "JProfiler_NBody.txt": 21.115499999999997,
        "JProfiler_List.txt": 28.906,
        "YourKit_Mandelbrot.txt": 37.7685,
        "CD.data": 44.5455,
        "Json_not_profiled_": 86.9865,
        "List.data": 23.514499999999998,
        "Queens_not_profiled_": 20.814,
        "Towers.hpl": 26.298499999999997,
        "Bounce.hpl": 25.8965,
        "JavaFlightRecorder_Json.jfr": 81.37299999999999,
        "Sieve.data": 31.645,
        "Richards.hpl": 92.12049999999999,
        "YourKit_Richards.txt": 91.38,
        "JavaFlightRecorder_Havlak.jfr": 152.6655,
        "JavaFlightRecorder_CD.jfr": 41.181,
        "JavaFlightRecorder_Towers.jfr": 25.824,
        "rebench_test_Async_CD.txt": 130.9505,
        "List_not_profiled_": 22.099,
        "Havlak_not_profiled_": 149.4865,
        "JProfiler_Json.txt": 1024.5055,
        "rebench_test_Async_NBody.txt": 56.251,
        "JavaFlightRecorder_Bounce.jfr": 25.733,
        "Havlak.data": 156.9755,
        "Towers_not_profiled_": 26.083,
        "YourKit_DeltaBlue.txt": 11.811499999999999,
        "rebench_test_Async_Towers.txt": 72.818,
        "YourKit_NBody.txt": 23.194,
        "JavaFlightRecorder_NBody.jfr": 21.6625,
        "rebench_test_Async_Sieve.txt": 82.5025,
        "Storage.hpl": 59.337500000000006,
        "JProfiler_Queens.txt": 25.8915,
        "rebench_test_Async_List.txt": 65.77850000000001,
        "rebench_test_Async_Richards.txt": 264.20950000000005,
        "YourKit_Towers.txt": 27.0475,
        "JProfiler_Havlak.txt": 1921.003,
        "JavaFlightRecorder_List.jfr": 22.0795,
        "YourKit_Permute.txt": 29.2745,
        "Queens.data": 22.7775,
        "Storage_not_profiled_": 61.4025,
        "Json.hpl": 78.89949999999999,
        "Towers.data": 27.2275,
        "YourKit_List.txt": 24.83,
        "JProfiler_CD.txt": 476.88800000000003,
        "JProfiler_Permute.txt": 29.740499999999997,
        "Sieve.hpl": 31.78,
        "DeltaBlue_not_profiled_": 14.838999999999999,
        "CD.hpl": 43.3785,
        "JavaFlightRecorder_Queens.jfr": 21.3935,
        "JProfiler_Bounce.txt": 44.414500000000004,
        "Permute.hpl": 29.613500000000002,
        "Richards_not_profiled_": 90.152,
        "DeltaBlue.hpl": 12.161999999999999,
        "NBody.hpl": 21.234,
        "JProfiler_Towers.txt": 27.3065,
        "JProfiler_Mandelbrot.txt": 38.0715,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.128499999999999,
        "rebench_test_Async_Mandelbrot.txt": 99.66499999999999,
        "YourKit_CD.txt": 42.149,
        "rebench_test_Async_Permute.txt": 82.426,
        "Mandelbrot.data": 39.1545,
        "JProfiler_Storage.txt": 1051.4765,
        "YourKit_Sieve.txt": 34.2025,
        "JavaFlightRecorder_Permute.jfr": 29.744,
        "YourKit_Bounce.txt": 13.976500000000001,
        "JProfiler_Sieve.txt": 30.765,
        "JProfiler_DeltaBlue.txt": 96.842,
        "YourKit_Queens.txt": 22.147,
        "Mandelbrot.hpl": 37.700500000000005,
        "JavaFlightRecorder_Storage.jfr": 59.156,
        "List.hpl": 22.796,
        "Mandelbrot_not_profiled_": 37.505,
        "Queens.hpl": 22.1175,
        "Storage.data": 65.94300000000001,
        "JavaFlightRecorder_Richards.jfr": 89.289,
        "Bounce.data": 27.0255,
        "Permute.data": 30.9155,
        "YourKit_Json.txt": 79.4065,
        "rebench_test_Async_DeltaBlue.txt": 35.7405,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.586,
        "YourKit_Havlak.txt": 157.13549999999998,
        "DeltaBlue.data": 12.7065,
        "JProfiler_Richards.txt": 95.672,
        "rebench_test_Async_Storage.txt": 159.26749999999998,
        "Sieve_not_profiled_": 30.938000000000002,
        "Havlak.hpl": 153.46800000000002,
        "Richards.data": 96.8675,
        "rebench_test_Async_Havlak.txt": 444.0875,
        "Bounce_not_profiled_": 26.098,
        "NBody_not_profiled_": 21.087,
        "Json.data": 83.56,
        "rebench_test_Async_Json.txt": 244.537,
        "rebench_test_Async_Queens.txt": 60.9915
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.45%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.38%",
            "[.] void nbody.NBodySystem.advance(double)": "96.84%",
            "0xffffffffb4c0634b": "0.08%",
            "0xffffffffb4c063aa": "0.09%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.43%",
            "0xffffffffb4c0634b": "0.07%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.13%",
            "[.] void Permute.permute(int)": "97.44%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.00%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.73%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.49%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.00%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.53%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "9.84%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "7.01%",
            "[.] vtable chunks": "6.50%",
            "[.] void deltablue.Planner.chainTest(int)": "24.09%",
            "[.] deltablue.Plan deltablue.Planner.makePlan(som.Vector)": "3.31%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.37%",
            "[.] Interpreter": "0.54%",
            "0xffffffffb51c12b7": "0.25%",
            "[.] boolean Queens.placeQueen(int)": "0.07%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.10%",
            "[.] Interpreter": "0.42%",
            "[.] void Towers.moveDisks(int, int, int)": "0.16%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "Richards.data": {
            "[.] java.lang.Object Richards.benchmark()": "6.30%",
            " ": "0",
            "[.] vtable chunks": "35.31%",
            "[.] boolean richards.Scheduler.start()": "23.81%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.88%",
            "[.] void richards.Scheduler.schedule()": "9.49%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.36%",
            "[.] Interpreter": "0.18%",
            "0xffffffffb51c12b7": "0.14%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.08%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.62%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.28%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.77%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.13%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.07%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.28%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.02%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.27%",
            "[.] Interpreter": "0.50%",
            "[.] java.lang.Object List.benchmark()": "0.36%",
            "0xffffffffb51c12b7": "0.18%",
            "[.] List$Element List.makeList(int)": "0.55%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.37%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "83.76%",
            "[.] java.lang.Object Sieve.benchmark()": "6.14%",
            "[.] int Sieve.sieve(boolean[], int)": "5.87%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.42%",
            "0xffffffffb51c12b7": "0.21%",
            "0xffffffffb4c0634b": "0.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "73.01%",
            "[.] java.lang.Object Bounce.benchmark()": "23.95%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.54%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.55%",
            "[.] StubRoutines (2)": "8.69%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.24%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.94%"
        }
    }
}