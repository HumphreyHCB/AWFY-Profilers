{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.08912655971479501",
            "Mandelbrot.mandelbrot(I)I": "99.9108734402852"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.16286644951140064",
            " ": "0",
            "Queens.placeQueen(I)Z": "87.45928338762215",
            "Queens.getRowColumn(II)Z": "11.563517915309445",
            "java.util.Arrays.fill([ZZ)V": "0.48859934853420195",
            "java.security.SecureClassLoader$CodeSourceKey.equals(Ljava/lang/Object;)Z": "0.16286644951140064",
            "Queens.queens()Z": "0.16286644951140064"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "95.19650655021833",
            "Bounce.benchmark()Ljava/lang/Object;": "4.803493449781659"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.9615384615384615",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.8012820512820512",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.846153846153846",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "30.723443223443223",
            "havlak.HavlakLoopFinder.findLoops()V": "2.541208791208791",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "4.075091575091575",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "50.22893772893772",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.3049450549450547",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6639194139194139",
            "som.Vector.append(Ljava/lang/Object;)V": "3.9148351648351647"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "7.413647851727043",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "0.7582139848357203",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "17.186183656276327",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.864363942712721",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.69502948609941",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "1.0951979780960404",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.468407750631846",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "20.05054759898905",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "8.256107834877843",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.3479359730412805"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "89.1044776119403",
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.14925373134328357",
            "jdk.jfr.internal.RequestEngine.doChunkEnd()V": "0.14925373134328357",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "9.402985074626866",
            "List$Element.length()I": "0.14925373134328357",
            "List.makeList(I)LList$Element;": "1.044776119402985"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "3.7800687285223367",
            "deltablue.Planner.removePropagateFrom(Ldeltablue/Variable;)Lsom/Vector;": "1.718213058419244",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "5.154639175257732",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "2.0618556701030926",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "51.89003436426117",
            "deltablue.ScaleConstraint.execute()V": "3.7800687285223367",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "3.7800687285223367",
            "deltablue.Planner.chainTest(I)V": "3.436426116838488",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "5.841924398625429",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "7.216494845360825"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.05970149253731343",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.671641791044776",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.26865671641791"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$MH+0x0000000800c0e000.444920847.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.10482180293501048",
            "Sieve.benchmark()Ljava/lang/Object;": "0.20964360587002095",
            "java.util.Arrays.fill([ZZ)V": "0.10482180293501048",
            "Sieve.sieve([ZI)I": "99.47589098532494",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.10482180293501048"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "61.24661246612465",
            "java.lang.invoke.MethodHandles$Lookup.checkSymbolicClass(Ljava/lang/Class;)V": "0.13550135501355012",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.61788617886179"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.68304278922345",
            "NBody.innerBenchmarkLoop(I)Z": "0.31695721077654515"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.236669101533966",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.6574141709276844",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.214024835646457",
            "richards.Scheduler.schedule()V": "59.386413440467486",
            "Richards.benchmark()Ljava/lang/Object;": "1.095690284879474",
            "richards.TaskControlBlock.getLink()Lrichards/TaskControlBlock;": "0.07304601899196493",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.588750913075234",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.747991234477721"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.149377593360996",
            "json.JsonPureStringParser.readExponent()Z": "6.224066390041494",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "16.182572614107883",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "0.6454587367450438",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "30.520977408944216",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.241585984324574",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "23.697556477639466",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "8.898109727985247",
            "java.lang.StringLatin1.hashCode([B)I": "0.875979714153988",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "2.9045643153526974"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.11723329425556858",
            "Permute.swap(II)V": "27.19812426729191",
            "Permute.permute(I)V": "72.33294255568582",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.11723329425556858",
            "Permute.benchmark()Ljava/lang/Object;": "0.23446658851113716"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.1",
            "richards.Packet::setLink": "2.0",
            "Richards::benchmark": "4.9",
            "richards.RBObject::append": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "46.1",
            "richards.HandlerTaskDataRecord::workInAdd": "2.2",
            "richards.TaskControlBlock::<init>": "2.9",
            "richards.Scheduler::schedule": "5.7",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.6",
            "richards.RBObject::<init>": "6.9"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.MethodHandles::copyTypes": "0.0",
            "java.util.ArrayList::<init>": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantNameAndType": "0.0",
            "sun.nio.cs.StreamEncoder::writeBytes": "0.0",
            "Mandelbrot::mandelbrot": "98.3",
            "jdk.internal.org.objectweb.asm.SymbolTable::computeBootstrapMethodsSize": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.8",
            "List::tail": "1.9",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "List::isShorterThan": "80.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "3.5",
            "json.JsonPureStringParser::read": "12.5",
            "java.lang.String::<init>": "4.3",
            "json.JsonPureStringParser::readArray": "2.7",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "8.0",
            "java.lang.String::equals": "22.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "9.3",
            "json.JsonPureStringParser::readStringInternal": "8.4"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.5",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.2",
            "havlak.HavlakLoopFinder::findLoops": "6.3",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "5.4",
            "som.Vector::<init>": "1.9",
            "som.Vector::forEach": "2.4"
        },
        "Permute.hpl": {
            "Permute::swap": "39.7",
            "Permute::permute": "50.1",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "jdk.internal.org.objectweb.asm.ClassWriter::visitMethod": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "6.2",
            "java.lang.invoke.LambdaForm$MH.0x0000000800c08400::invoke": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "66.6",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.8",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "7.8",
            "Queens::setRowColumn": "17.9",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.0",
            "java.util.Arrays::setAll": "34.6",
            "som.Random::next": "12.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.3",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.6",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.1"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.6",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.util.zip.Inflater::inflateBytesBytes": "0.0",
            "Sieve::sieve": "85.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.nio.Buffer::<init>": "0.0",
            "java.util.Arrays::fill": "5.3"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.2",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0::apply": "2.5",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "5.7",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "11.0",
            "AGCT::Unknown Java[ERR=-5]": "17.4",
            "deltablue.Plan::lambda$execute$0": "4.4",
            "deltablue.AbstractConstraint::satisfy": "2.1",
            "deltablue.EqualityConstraint::execute": "1.9",
            "som.Vector::forEach": "31.9"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.8",
            "Bounce$Ball::bounce": "76.2",
            "java.util.Arrays::setAll": "0.8",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "0.8",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.0",
            "nbody.Body::getZ": "8.1",
            "nbody.Body::setVX": "28.7",
            "nbody.Body::setVY": "5.8",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "nbody.NBodySystem::advance": "40.2"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.4",
            "Towers::popDiskFrom": "22.8",
            "Towers::moveDisks": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "Towers::pushDisk": "38.4",
            "Towers$TowersDisk::setNext": "17.2",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.7",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.3",
            "cd.RedBlackTree::forEach": "3.5",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "3.0",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "9.3",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "cd.Vector2D::compareNumbers": "5.1",
            "cd.CollisionDetector::isInVoxel": "21.9",
            "cd.RedBlackTree::treeInsert": "14.1"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.01%",
            "deltablue.AbstractConstraint.satisfy": "3.22%",
            "som.Vector.append": "3.81%",
            "som.Vector.<init>": "5.21%",
            "som.Vector.forEach": "8.28%",
            "itable": "4.02%",
            "deltablue.Planner.addPropagate": "2.97%",
            "deltablue.BinaryConstraint.isSatisfied": "1.69%",
            "deltablue.ScaleConstraint.execute": "1.83%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "17.57%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "75.54%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.03%",
            "som.Random.next": "0.81%",
            "Interpreter": "0.04%",
            "java.util.Arrays.setAll": "0.61%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.37%",
            "Bounce$Ball.<init>": "1.70%",
            "Bounce.lambda$benchmark$0": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.52%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.56%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.64%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.15%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.56%",
            "java.util.Arrays.setAll": "35.45%",
            "Storage.lambda$buildTreeDepth$0": "4.08%",
            "SpinPause": "0.20%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.32%",
            "Storage.buildTreeDepth": "43.82%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.79%",
            "Towers.popDiskFrom": "18.75%",
            "Towers.moveDisks": "8.80%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.33%",
            "Towers.moveTopDisk": "4.86%",
            "Towers$TowersDisk.getSize": "0.38%",
            "Towers$TowersDisk.getNext": "3.79%",
            "Towers.benchmark": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "12.88%",
            "cd.CollisionDetector.isInVoxel": "19.78%",
            "cd.RedBlackTree.forEach": "6.22%",
            "Node::set_req_X(unsigned": "4.15%",
            "cd.RedBlackTree.put": "6.39%",
            "cd.RedBlackTree.treeInsert": "12.10%",
            "cd.RedBlackTree.treeMinimum": "5.13%",
            "cd.RedBlackTree.findNode": "2.78%",
            "cd.Vector2D.compareNumbers": "4.10%",
            "cd.RedBlackTree.leftRotate": "2.12%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.96%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.95%",
            "som.Vector.hasSome": "2.18%",
            "som.Vector.append": "3.46%",
            "som.IdentitySet.lambda$contains$0": "31.42%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "9.17%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.01%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.10%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.84%",
            "havlak.HavlakLoopFinder.doDFS": "6.20%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "12.80%",
            "Sieve.benchmark": "5.78%",
            "Interpreter": "0.04%",
            "void": "0.02%",
            "Sieve.sieve": "78.85%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.14%",
            "Permute.swap": "40.60%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "[no_Java_frame]": "0.02%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.77%",
            "nbody.Body.getZ": "7.71%",
            "nbody.Body.getY": "0.73%",
            "nbody.Body.setX": "1.16%",
            "nbody.Body.setY": "1.74%",
            "nbody.Body.setVX": "27.68%",
            "nbody.Body.setVY": "5.68%",
            "nbody.Body.getMass": "0.46%",
            "nbody.Body.getVZ": "0.44%",
            "nbody.NBodySystem.advance": "41.61%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.10%",
            "Interpreter": "0.04%",
            "List.makeList": "1.37%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.60%",
            "List$Element.length": "0.14%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.46%",
            "List$Element.<init>": "0.33%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.07%",
            "java.lang.String.length": "2.86%",
            "java.lang.String.<init>": "5.60%",
            "json.JsonPureStringParser.isWhiteSpace": "2.32%",
            "java.lang.String.isLatin1": "2.93%",
            "json.JsonPureStringParser.readStringInternal": "7.45%",
            "java.util.Arrays.copyOfRange": "7.10%",
            "java.lang.String.equals": "22.43%",
            "json.JsonPureStringParser.read": "16.67%",
            "json.JsonPureStringParser.readValue": "2.21%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.02%",
            "Queens.getRowColumn": "56.27%",
            "Queens.setRowColumn": "23.93%",
            "Interpreter": "0.05%",
            "Queens.queens": "0.61%",
            "Queens.placeQueen": "14.81%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.88%",
            "Richards.benchmark": "4.74%",
            "richards.Packet.<init>": "7.07%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.33%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.76%",
            "itable": "37.29%",
            "richards.TaskControlBlock.<init>": "3.12%",
            "richards.RBObject.<init>": "5.70%",
            "richards.RBObject.append": "2.64%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.08%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "2.6",
            "Towers.moveDisks": "95.7",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.9",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.6",
            "deltablue.AbstractConstraint.satisfy": "10.1",
            "deltablue.Planner.removePropagateFrom": "9.2",
            "som.Vector.<init>": "31.6",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "7.5",
            "deltablue.Planner.addPropagate": "2.2",
            "deltablue.Planner.constraintsConsuming": "5.1",
            "deltablue.AbstractConstraint.<init>": "3.8",
            "deltablue.Planner.addConstraintsConsumingTo": "16.1"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "havlak.HavlakLoopFinder.stepD": "3.4",
            "java.lang.Integer.valueOf": "8.6",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.7",
            "havlak.HavlakLoopFinder.processEdges": "3.6",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "13.3",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.TaskControlBlock.runTask": "85.3",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.6",
            "richards.Scheduler.lambda$createIdler$2": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.util.Arrays.setAll": "0.0",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "55.7",
            "Bounce$Ball.<init>": "43.2",
            "Bounce.lambda$benchmark$0": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "7.9",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.Vector2D.<init>": "43.7",
            "cd.RedBlackTree$InsertResult.<init>": "15.2",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "5.0",
            "cd.Motion.<init>": "1.4"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.2",
            "nbody.NBodySystem.createBodies": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.1",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.8",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "1.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "76.9",
            "List$Element.<init>": "20.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.1",
            "json.JsonValue.<init>": "4.2",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "30.3",
            "Queens.placeQueen": "69.0",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.364123159303887",
            "json.JsonPureStringParser.readChar(String)": "2.2160436618267947",
            "java.lang.String.<init>(byte[], byte) String.java": "7.2701060652867895",
            "json.JsonPureStringParser.read()": "21.674389867160954",
            "java.lang.String.length() String.java": "4.19730202862733",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.2860673463083105",
            "java.lang.String.substring(int, int) String.java": "9.547935331067862",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.528678817835446",
            "json.JsonPureStringParser.readStringInternal()": "3.2334466069405834",
            "json.JsonPureStringParser.readValue()": "1.9071156420554014"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.3959177416175734",
            "som.Vector.hasSome(TestInterface)": "2.0126585050699726",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "4.9714198112174515",
            "havlak.HavlakLoopFinder.findLoops()": "11.561288627055914",
            "som.Vector.<init>(int)": "3.764700729287576",
            "som.Vector.append(Object)": "4.353824927180746",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.082630691399664",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.121679332471913",
            "som.Vector.removeAll()": "2.733185869779462",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.5659753400057"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "10.035658938055757",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, long) DirectMethodHandle$Holder": "0.13541368881934307",
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.12036772339497162",
            "Queens.getRowColumn(int, int)": "67.21032755066729",
            "Queens.queens()": "0.8877119600379157",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.5867926515504867",
            "Queens.setRowColumn(int, int, boolean)": "19.99608804898966",
            "java.lang.invoke.MethodType.makeImpl(Class, Class[], boolean) MethodType.java": "0.21064351594120034",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.2858733430630576",
            "javax.management.openmbean.CompositeType.isAssignableFrom(OpenType) CompositeType.java": "0.12036772339497162"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.958611330595585",
            "richards.TaskControlBlock.runTask()": "35.294284388098944",
            "richards.Scheduler.<init>()": "1.7326478331272346",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.4156902068193338",
            "richards.Scheduler.schedule()": "2.696411045009868",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "4.099536897603703",
            "richards.RBObject.append(Packet, Packet)": "3.273960322718947",
            "Richards.benchmark()": "30.87231200416686",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.6617828910770411",
            "richards.Scheduler$$Lambda$12.0x00000008000c7528.apply(Packet, RBObject)": "1.5873747019243378"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2675227394328518",
            "sun.invoke.util.Wrapper.findPrimitiveType(Class) Wrapper.java": "0.08189471615291383",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.2393400377807626",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.15832978456230007",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.862624343477359",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.805407235125195",
            "som.Random.next()": "14.23876131511995",
            "Storage.buildTreeDepth(int, Random)": "38.82355510422468",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.002806258940174",
            "java.lang.String.isLatin1() String.java": "0.2839016826634346"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "30.494025065578544",
            "Towers.pushDisk(Towers$TowersDisk, int)": "29.607500242883507",
            "Towers.moveDisks(int, int, int)": "9.53317788788497",
            "Towers$TowersDisk.getSize()": "1.9916448071504902",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.206450986107063",
            "Towers.moveTopDisk(int, int)": "7.4565238511609815",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.272806761877",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.2793160400272029",
            "Towers.benchmark()": "0.23073933741377634",
            "java.lang.invoke.Invokers$Holder.linkToTargetMethod(Object, Object, Object) Invokers$Holder": "0.19430681045370637"
        },
        "YourKit_Permute.txt": {
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.1028077951154874",
            "java.lang.ClassLoader.findLoadedClass0(String) ClassLoader.java (native)": "0.06853853007699161",
            "jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry) URLClassPath.java": "0.022846176692330536",
            "java.nio.DirectLongBufferU.<init>(DirectBuffer, int, int, int, int, int, MemorySegmentProxy) DirectLongBufferU.java": "0.1028077951154874",
            "Permute.permute(int)": "58.00644262182723",
            "java.io.PrintStream.writeln(String) PrintStream.java": "0.0011423088346165268",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.12565397180781795",
            "com.yourkit.probes.Table.createRow() a": "0.1028077951154874",
            "Permute.benchmark()": "0.2170386785771401",
            "Permute.swap(int, int)": "41.24877201800278"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "6.169897920794563",
            "som.Vector.forEach(ForEachInterface)": "21.619723608637862",
            "deltablue.Plan$$Lambda$27.0x00000008000ccd88.apply(Object)": "2.0315517544079658",
            "som.Dictionary.at(Dictionary$CustomHash)": "7.775074615635426",
            "som.Vector.<init>(int)": "4.439316796669259",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.3640741390985935",
            "deltablue.ScaleConstraint.execute()": "3.4611622482506084",
            "deltablue.BinaryConstraint.chooseMethod(int)": "5.317147801660355",
            "som.Vector.append(Object)": "2.5833312432595124",
            "deltablue.Strength.weaker(Strength)": "11.838178124451357"
        },
        "YourKit_List.txt": {
            "java.lang.invoke.LambdaForm$MH.0x00000008000c3400.invoke(Object, long, Object, Object) LambdaForm$MH": "0.1205432482387292",
            "List.tail(List$Element, List$Element, List$Element)": "3.4153920334306607",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.09375585974123382",
            "List.makeList(int)": "0.8304090434223567",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.21429910797996304",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.20090541373121534",
            "List$Element.getNext()": "21.068281053280117",
            "List$Element.length()": "0.10714955398998152",
            "List.isShorterThan(List$Element, List$Element)": "73.70549945085854",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.18751171948246764"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.095360273679709",
            "nbody.Body.getZ()": "5.274036063003349",
            "nbody.Body.setX(double)": "0.698453424559903",
            "nbody.Body.getX()": "1.097569667165562",
            "nbody.Body.setZ(double)": "0.698453424559903",
            "nbody.NBodySystem.advance(double)": "46.867650203121656",
            "nbody.Body.setVY(double)": "6.0009977906065135",
            "nbody.Body.setVZ(double)": "8.980115458627324",
            "nbody.Body.setVX(double)": "25.728743496543366",
            "nbody.Body.setY(double)": "1.126077970208823"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.63005597490356",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "sun.nio.fs.UnixFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "java.lang.invoke.LambdaForm$NamedFunction.returnType() LambdaForm.java": "0.05272361402799624",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.0",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.1581708420839887",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.02636180701399812",
            "Harness.main(String[])": "8.78726900466604E-4",
            "sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "java.lang.Math.max(int, int) Math.java": "0.13180903506999062"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.045988659309872",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.72762970634915",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.096082916688399",
            "cd.RedBlackTree.findNode(Comparable)": "10.59557251112088",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.881801992444508",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.2875110836245502",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.257706378951917",
            "cd.RedBlackTree.put(Comparable, Object)": "5.7299544733136125",
            "cd.Vector2D.compareNumbers(double, double)": "8.71042494057687",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.187561006504876"
        },
        "YourKit_Sieve.txt": {
            "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next() Collections.java": "0.032505525939409696",
            "sun.management.MappedMXBeanType$CompositeDataMXBeanType.<init>(Class) MappedMXBeanType.java": "0.043340701252546264",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.397737615394617",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.10835175313136565",
            "Sieve.benchmark()": "87.91661249079009",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.032505525939409696",
            "com.yourkit.probes.ResourceCounter.open(Object, String) a": "0.1516924543839119",
            "java.lang.invoke.LambdaForm$BasicType.basicTypeSlots() LambdaForm.java": "0.043340701252546264",
            "Sieve.sieve(boolean[], int)": "10.25007584622719",
            "java.util.zip.ZipFile.<init>(File, int, Charset) ZipFile.java": "0.021670350626273132"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.14060382953702993",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.14060382953702993",
            "Bounce.benchmark()": "49.96548815093181",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.12782166321548175",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.37068282332489705",
            "Bounce.lambda$benchmark$0(Random, int)": "1.022573305723854",
            "som.Random.next()": "0.8691873098652759",
            "Bounce$Ball.bounce()": "45.26165094460209",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.23007899378786717",
            "Bounce$Ball.<init>(Random)": "1.2015236342255284"
        }
    },
    "Runtimes": {
        "NBody.data": 22.063,
        "YourKit_Storage.txt": 61.3685,
        "rebench_test_Async_Bounce.txt": 68.14500000000001,
        "Permute_not_profiled_": 29.374499999999998,
        "JavaFlightRecorder_Sieve.jfr": 31.698999999999998,
        "CD_not_profiled_": 41.163,
        "JProfiler_NBody.txt": 21.19,
        "JProfiler_List.txt": 29.121499999999997,
        "YourKit_Mandelbrot.txt": 37.388,
        "CD.data": 44.694500000000005,
        "Json_not_profiled_": 77.561,
        "List.data": 23.573500000000003,
        "Queens_not_profiled_": 20.862000000000002,
        "Towers.hpl": 26.060000000000002,
        "Bounce.hpl": 26.328,
        "JavaFlightRecorder_Json.jfr": 83.932,
        "Sieve.data": 32.0015,
        "Richards.hpl": 92.28649999999999,
        "YourKit_Richards.txt": 91.489,
        "JavaFlightRecorder_Havlak.jfr": 154.981,
        "JavaFlightRecorder_CD.jfr": 41.206500000000005,
        "JavaFlightRecorder_Towers.jfr": 25.767,
        "rebench_test_Async_CD.txt": 132.188,
        "List_not_profiled_": 22.5845,
        "Havlak_not_profiled_": 153.084,
        "JProfiler_Json.txt": 1020.2075,
        "rebench_test_Async_NBody.txt": 55.843999999999994,
        "JavaFlightRecorder_Bounce.jfr": 26.038,
        "Havlak.data": 160.7735,
        "Towers_not_profiled_": 25.469,
        "YourKit_DeltaBlue.txt": 11.676,
        "rebench_test_Async_Towers.txt": 72.80199999999999,
        "YourKit_NBody.txt": 23.4895,
        "JavaFlightRecorder_NBody.jfr": 21.1545,
        "rebench_test_Async_Sieve.txt": 88.9815,
        "Storage.hpl": 60.6945,
        "JProfiler_Queens.txt": 26.264,
        "rebench_test_Async_List.txt": 65.35249999999999,
        "rebench_test_Async_Richards.txt": 248.2185,
        "YourKit_Towers.txt": 27.1145,
        "JProfiler_Havlak.txt": 1904.4274999999998,
        "JavaFlightRecorder_List.jfr": 23.247500000000002,
        "YourKit_Permute.txt": 29.4135,
        "Queens.data": 21.591,
        "Storage_not_profiled_": 61.084500000000006,
        "Json.hpl": 86.369,
        "Towers.data": 26.79,
        "YourKit_List.txt": 24.861,
        "JProfiler_CD.txt": 475.1865,
        "JProfiler_Permute.txt": 30.143,
        "Sieve.hpl": 31.092,
        "DeltaBlue_not_profiled_": 12.167,
        "CD.hpl": 42.0625,
        "JavaFlightRecorder_Queens.jfr": 20.7605,
        "JProfiler_Bounce.txt": 44.141000000000005,
        "Permute.hpl": 30.2675,
        "Richards_not_profiled_": 90.6255,
        "DeltaBlue.hpl": 15.0335,
        "NBody.hpl": 21.3545,
        "JProfiler_Towers.txt": 28.026,
        "JProfiler_Mandelbrot.txt": 38.042,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.016,
        "rebench_test_Async_Mandelbrot.txt": 102.05600000000001,
        "YourKit_CD.txt": 44.322,
        "rebench_test_Async_Permute.txt": 78.0025,
        "Mandelbrot.data": 39.046,
        "JProfiler_Storage.txt": 1036.31,
        "YourKit_Sieve.txt": 34.6835,
        "JavaFlightRecorder_Permute.jfr": 30.054000000000002,
        "YourKit_Bounce.txt": 16.144,
        "JProfiler_Sieve.txt": 31.1915,
        "JProfiler_DeltaBlue.txt": 95.637,
        "YourKit_Queens.txt": 20.6025,
        "Mandelbrot.hpl": 37.587,
        "JavaFlightRecorder_Storage.jfr": 59.9935,
        "List.hpl": 23.142,
        "Mandelbrot_not_profiled_": 37.556,
        "Queens.hpl": 21.5235,
        "Storage.data": 65.59649999999999,
        "JavaFlightRecorder_Richards.jfr": 90.229,
        "Bounce.data": 27.321,
        "Permute.data": 30.742,
        "YourKit_Json.txt": 78.97399999999999,
        "rebench_test_Async_DeltaBlue.txt": 31.8985,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.442,
        "YourKit_Havlak.txt": 156.358,
        "DeltaBlue.data": 12.99,
        "JProfiler_Richards.txt": 91.594,
        "rebench_test_Async_Storage.txt": 152.98950000000002,
        "Sieve_not_profiled_": 30.3405,
        "Havlak.hpl": 151.49599999999998,
        "Richards.data": 94.6005,
        "rebench_test_Async_Havlak.txt": 457.67949999999996,
        "Bounce_not_profiled_": 26.2035,
        "NBody_not_profiled_": 21.1435,
        "Json.data": 84.8015,
        "rebench_test_Async_Json.txt": 248.8995,
        "rebench_test_Async_Queens.txt": 56.5625
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.50%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.33%",
            "[.] void nbody.NBodySystem.advance(double)": "0.08%",
            "0xffffffffb4c0634b": "0.03%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.40%",
            "[.] java.lang.Object Permute.benchmark()": "0.05%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "0.04%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.98%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.28%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.50%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.91%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.83%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.88%",
            "[.] vtable chunks": "6.83%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "12.94%",
            "[.] void deltablue.Planner.chainTest(int)": "24.64%",
            "[.] deltablue.Plan deltablue.Planner.makePlan(som.Vector)": "3.18%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.55%",
            "[.] Interpreter": "0.48%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Queens.placeQueen(int)": "93.76%",
            "0xffffffffb4c063aa": "0.11%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.08%",
            "[.] Interpreter": "0.39%",
            "[.] void Towers.moveDisks(int, int, int)": "0.10%",
            "[.] java.lang.Object Towers.benchmark()": "0.06%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.38%",
            "[.] boolean richards.Scheduler.start()": "22.92%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.63%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.48%",
            "[.] void richards.Scheduler.schedule()": "7.85%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.75%",
            "[.] Interpreter": "0.25%",
            "0xffffffffb51c12b7": "0.16%",
            "0xffffffffb4c0634b": "0.06%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.38%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.49%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.76%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.05%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.22%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.07%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.26%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.12%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "96.23%",
            "[.] Interpreter": "0.44%",
            "[.] java.lang.Object List.benchmark()": "0.35%",
            "0xffffffffb51c12b7": "0.14%",
            "[.] List$Element List.makeList(int)": "0.60%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.38%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "83.61%",
            "[.] java.lang.Object Sieve.benchmark()": "6.67%",
            "[.] int Sieve.sieve(boolean[], int)": "5.87%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.51%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "[.] java.lang.Object Bounce.benchmark()": "23.18%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.27%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.62%",
            "[.] StubRoutines (2)": "8.40%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.07%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.92%"
        }
    }
}