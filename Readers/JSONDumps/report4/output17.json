{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.46728971962616817",
            " ": "0",
            "Queens.placeQueen(I)Z": "85.98130841121495",
            "java.lang.invoke.MethodHandleStatics.traceLambdaForm(Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/Class;Ljava/lang/invoke/MemberName;)V": "0.1557632398753894",
            "Queens.getRowColumn(II)Z": "11.526479750778815",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.1557632398753894",
            "java.util.Arrays.fill([ZZ)V": "0.778816199376947",
            "sun.net.www.protocol.jar.Handler.indexOfBangSlash(Ljava/lang/String;)I": "0.1557632398753894",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.1557632398753894",
            "Queens.queens()Z": "0.6230529595015576"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "93.0648769574944",
            "Bounce.benchmark()Ljava/lang/Object;": "6.263982102908277",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.44742729306487694",
            "java.nio.Buffer.hasRemaining()Z": "0.22371364653243847"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.172882946281961",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.7271874266948158",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "1.2197982641332394",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.4482758620689653",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.709594182500584",
            "havlak.HavlakLoopFinder.findLoops()V": "7.975604034717335",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.5568848228946752",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "53.74149659863946",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.2197982641332394",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6802721088435374"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "10.247651579846286",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "2.220324508966695",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "16.225448334756617",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.391118701964133",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "23.484201537147737",
            "cd.Simulator.simulate(D)Lsom/Vector;": "0.9393680614859095",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "13.834329632792485",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "18.360375747224595",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.600341588385995",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.4517506404782237"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "90.46199701937407",
            " ": "0",
            "java.net.URLStreamHandler.toExternalForm(Ljava/net/URL;)Ljava/lang/String;": "0.14903129657228018",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "8.34575260804769",
            "List$Element.length()I": "0.14903129657228018",
            "List.makeList(I)LList$Element;": "0.894187779433681"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "10.135135135135135",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "5.405405405405405",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "2.364864864864865",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.7027027027027026",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "47.63513513513514",
            "deltablue.ScaleConstraint.execute()V": "2.7027027027027026",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "3.378378378378378",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.7027027027027026",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.391891891891892",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "5.0675675675675675"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "14.879107253564786",
            "Storage.benchmark()Ljava/lang/Object;": "0.12399256044637322",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "84.99690018598884"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.09852216748768473",
            "java.util.Arrays.fill([ZZ)V": "0.09852216748768473",
            "Sieve.sieve([ZI)I": "99.80295566502464"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.1358695652173913",
            "Towers.moveDisks(III)V": "60.597826086956516",
            "Towers.benchmark()Ljava/lang/Object;": "0.2717391304347826",
            "Towers$TowersDisk.getSize()I": "0.1358695652173913",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.722826086956516",
            "jdk.internal.org.objectweb.asm.Frame.accept(Ljdk/internal/org/objectweb/asm/MethodWriter;)V": "0.1358695652173913"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.3660855784469",
            "NBody.innerBenchmarkLoop(I)Z": "0.31695721077654515",
            "Run.printResult(J)V": "0.15847860538827258",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.15847860538827258"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.35064935064935",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.6493506493506493",
            "richards.Scheduler$$Lambda$76+0x0000000800c0dbd0.715521683.apply(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.06493506493506493",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.9610389610389607",
            "richards.Scheduler.schedule()V": "58.246753246753244",
            "Richards.benchmark()Ljava/lang/Object;": "0.9740259740259739",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.298701298701296",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "5.3896103896103895",
            "java.lang.invoke.InvokerBytecodeGenerator.clinit(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;Ljava/util/List;)V": "0.06493506493506493"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.225352112676056",
            "json.JsonPureStringParser.readExponent()Z": "6.056338028169014",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "16.713615023474176",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "30.28169014084507",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.553990610328638",
            "json.JsonObject.<init>()V": "0.704225352112676",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "17.183098591549296",
            "java.lang.StringLatin1.hashCode([B)I": "0.9859154929577464",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "8.826291079812206",
            "som.Vector.append(Ljava/lang/Object;)V": "7.793427230046948"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "27.892813641900123",
            "Permute.permute(I)V": "71.98538367844093",
            "Permute.benchmark()Ljava/lang/Object;": "0.1218026796589525"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.0",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "2.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "46.0",
            "richards.HandlerTaskDataRecord::workInAdd": "2.0",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "6.1",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.5"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.MethodHandleImpl::makeIntrinsic": "0.0",
            "java.lang.invoke.MethodTypeForm::canonicalizeAll": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Mandelbrot::mandelbrot": "98.1",
            "java.lang.StringBuilder::toString": "0.0",
            "java.lang.reflect.Array::newArray": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.0",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "1.9",
            "java.lang.ClassLoader::defineClass0": "0.1",
            "List::isShorterThan": "79.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.9",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.3",
            "json.JsonPureStringParser::read": "15.7",
            "java.lang.String::<init>": "5.3",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "7.1",
            "java.lang.String::equals": "21.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.7",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.7",
            "havlak.HavlakLoopFinder::findLoops": "6.3",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.7",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "7.5",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "5.2",
            "som.Vector::<init>": "2.1",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "39.9",
            "Permute::permute": "50.8",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "java.lang.String::<init>": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "6.2",
            "java.lang.invoke.LambdaForm$BasicType::basicType": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "66.8",
            "java.lang.AbstractStringBuilder::putStringAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "java.lang.invoke.InvokerBytecodeGenerator::addMethod": "0.0",
            "Queens::placeQueen": "8.7",
            "Queens::setRowColumn": "18.2",
            "java.util.Arrays::fill": "0.2",
            "Queens::queens": "0.5"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.0",
            "java.util.Arrays::setAll": "35.4",
            "som.Random::next": "11.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.9",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.0"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.9",
            "java.lang.invoke.DelegatingMethodHandle$Holder::reinvoke_L": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "87.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.Class::getPackageName": "0.0",
            "sun.nio.cs.StreamEncoder::writeBytes": "0.0",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0",
            "java.util.Arrays::fill": "4.4"
        },
        "DeltaBlue.hpl": {
            "deltablue.AbstractConstraint::addConstraint": "3.4",
            "deltablue.Planner::addPropagate": "3.7",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0::apply": "2.8",
            "som.Vector::append": "14.7",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "5.3",
            "AGCT::Unknown not Java[ERR=-3]": "13.7",
            "AGCT::Unknown Java[ERR=-5]": "14.9",
            "deltablue.AbstractConstraint::satisfy": "2.8",
            "som.Vector::<init>": "7.2",
            "som.Vector::forEach": "5.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "15.8",
            "Bounce$Ball::bounce": "77.2",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.7",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "8.5",
            "nbody.Body::setVX": "27.2",
            "nbody.Body::setVY": "5.9",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "nbody.NBodySystem::advance": "41.3"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.0",
            "Towers::popDiskFrom": "20.8",
            "Towers::moveDisks": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "Towers::pushDisk": "39.5",
            "Towers$TowersDisk::setNext": "17.8",
            "AGCT::Unknown Java[ERR=-5]": "3.7",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.6",
            "Towers$TowersDisk::getNext": "3.1"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.0",
            "cd.RedBlackTree::forEach": "3.9",
            "cd.RedBlackTree::put": "7.3",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "9.2",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.Vector2D::compareNumbers": "4.5",
            "cd.CollisionDetector::isInVoxel": "21.0",
            "cd.RedBlackTree::treeInsert": "13.7"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.satisfy": "3.25%",
            "deltablue.Strength$Sym.customHash": "3.26%",
            "som.Vector.append": "3.70%",
            "som.Vector.forEach": "5.93%",
            "itable": "3.99%",
            "deltablue.Planner.addPropagate": "2.77%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.49%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "3.08%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.05%",
            "deltablue.Variable.setDeterminedBy": "11.22%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "75.39%",
            "som.Random.next": "0.84%",
            "Interpreter": "0.04%",
            "java.util.Arrays.setAll": "0.64%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "17.99%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "1.70%",
            "Bounce.lambda$benchmark$0": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.60%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.60%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "11.03%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.20%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.36%",
            "java.util.Arrays.setAll": "35.42%",
            "Storage.lambda$buildTreeDepth$0": "4.06%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.17%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.34%",
            "Storage.buildTreeDepth": "43.22%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.87%",
            "Towers.popDiskFrom": "18.91%",
            "Towers.moveDisks": "8.67%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.36%",
            "Towers.moveTopDisk": "4.91%",
            "Towers$TowersDisk.getSize": "0.40%",
            "Towers$TowersDisk.getNext": "3.77%",
            "Towers.benchmark": "0.20%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "12.92%",
            "cd.CollisionDetector.isInVoxel": "20.10%",
            "cd.RedBlackTree.forEach": "6.08%",
            "Node::set_req_X(unsigned": "4.17%",
            "cd.RedBlackTree.put": "6.26%",
            "cd.RedBlackTree.treeInsert": "11.88%",
            "cd.RedBlackTree.treeMinimum": "5.29%",
            "cd.RedBlackTree.findNode": "2.82%",
            "cd.Vector2D.compareNumbers": "4.04%",
            "cd.RedBlackTree.leftRotate": "2.13%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.30%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.33%",
            "som.Vector.append": "3.74%",
            "som.Vector.forEach": "1.95%",
            "som.IdentitySet.lambda$contains$0": "31.79%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.73%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.06%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.11%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.85%",
            "havlak.HavlakLoopFinder.doDFS": "6.17%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.89%",
            "Sieve.benchmark": "8.19%",
            "Interpreter": "0.04%",
            "void": "0.02%",
            "Sieve.sieve": "83.35%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.05%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.52%",
            "Permute.swap": "40.44%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.84%",
            "nbody.Body.getZ": "7.84%",
            "nbody.Body.getY": "0.71%",
            "nbody.Body.setX": "1.11%",
            "nbody.Body.setY": "1.67%",
            "nbody.Body.setVX": "27.78%",
            "nbody.Body.setVY": "5.60%",
            "nbody.Body.getMass": "0.47%",
            "nbody.Body.getVZ": "0.42%",
            "nbody.NBodySystem.advance": "41.70%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.18%",
            "Interpreter": "0.05%",
            "List.makeList": "1.17%",
            "List$Element.setNext": "0.11%",
            "List.tail": "4.64%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.41%",
            "List$Element.<init>": "0.28%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.29%",
            "java.lang.String.length": "3.58%",
            "java.lang.String.<init>": "4.64%",
            "json.JsonPureStringParser.readArray": "2.56%",
            "java.lang.String.isLatin1": "2.94%",
            "json.JsonPureStringParser.readStringInternal": "7.51%",
            "java.util.Arrays.copyOfRange": "8.54%",
            "java.lang.String.equals": "22.13%",
            "json.JsonPureStringParser.read": "14.46%",
            "json.JsonPureStringParser.readValue": "2.32%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.03%",
            "Queens.getRowColumn": "68.52%",
            "Queens.setRowColumn": "18.13%",
            "Interpreter": "0.05%",
            "Queens.queens": "0.62%",
            "Queens.placeQueen": "8.85%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.09%",
            "Queens.benchmark": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.18%",
            "Richards.benchmark": "4.64%",
            "richards.Packet.<init>": "6.99%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.17%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.79%",
            "itable": "37.00%",
            "richards.TaskControlBlock.<init>": "3.26%",
            "richards.RBObject.<init>": "5.93%",
            "richards.RBObject.append": "2.75%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "3.95%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "3.9",
            "Towers.moveDisks": "94.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.2",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.2",
            "Sieve.benchmark": "5.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.5",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "9.7",
            "deltablue.Planner.removePropagateFrom": "8.8",
            "som.Vector.<init>": "26.4",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "6.7",
            "deltablue.Planner.addPropagate": "1.9",
            "deltablue.Planner.constraintsConsuming": "5.4",
            "deltablue.AbstractConstraint.<init>": "4.2",
            "deltablue.Planner.addConstraintsConsumingTo": "23.8"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "havlak.UnionFindNode.<init>": "3.4",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.7",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.2"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.schedule": "13.5",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.2",
            "richards.Scheduler.createIdler": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "85.0",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "55.9",
            "Bounce$Ball.<init>": "43.0",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.5",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.2",
            "cd.RedBlackTree$InsertResult.<init>": "14.6",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.2",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "97.8",
            "Run.reportBenchmark": "0.1",
            "Permute.benchmark": "1.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.getSuiteFromName": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.3",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.4",
            "List.isShorterThan": "77.0",
            "List$Element.<init>": "19.7",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readValue": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.6",
            "Queens.verifyResult": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "24.2",
            "Queens.placeQueen": "74.5",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.68732422327367",
            "java.lang.String.<init>(byte[], byte) String.java": "5.786156238626212",
            "json.JsonPureStringParser.isWhiteSpace()": "2.3533401713926483",
            "json.JsonPureStringParser.read()": "22.218178208649046",
            "java.lang.String.length() String.java": "3.2136121496873247",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.0523111537570724",
            "java.lang.String.substring(int, int) String.java": "9.636700526089403",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.075670846706151",
            "json.JsonPureStringParser.readStringInternal()": "3.6313403699169506",
            "json.JsonPureStringParser.readValue()": "2.646990702445158"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.646091774846409",
            "som.Vector.hasSome(TestInterface)": "2.229092163463848",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.586921494910859",
            "havlak.HavlakLoopFinder.findLoops()": "11.630140993900017",
            "som.Vector.<init>(int)": "3.3665623076016193",
            "som.Set.<init>(int)": "2.2225424313478914",
            "som.Vector.append(Object)": "3.547771562809748",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.202522083513452",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.641576826174477",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.08676648458412"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "11.251364025127554",
            "java.util.zip.ZipFile$CleanableResource.getInflater() ZipFile.java": "0.3244167870941103",
            "Queens.getRowColumn(int, int)": "65.94508508567552",
            "Queens.queens()": "0.4276403102604182",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.14746217595186834",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.13271595835668148",
            "Queens.setRowColumn(int, int, boolean)": "21.0575987259268",
            "jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() ClassWriter.java": "0.19170082873742883",
            "com.yourkit.probes.Table.createRow() a": "0.13271595835668148",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.13271595835668148"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.166706035195465",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.0926833589228773",
            "richards.TaskControlBlock.runTask()": "39.68347702846345",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.797832762489666",
            "richards.Scheduler.schedule()": "2.4064013227825676",
            "richards.Scheduler.lambda$createHandler$1(Packet, RBObject)": "1.3434510452344397",
            "richards.RBObject.append(Packet, Packet)": "3.0153832526278497",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "2.974784457304831",
            "Richards.benchmark()": "26.470414550608247",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.764202196763907"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.7405146294035184",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.0683760683760686",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.13584769140325",
            "java.lang.Thread.currentThread() Thread.java (native)": "0.09609731831954055",
            "som.Random.next()": "15.47166824944603",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.5935422602089269",
            "sun.invoke.util.BytecodeDescriptor.unparseSig(Class, StringBuilder) BytecodeDescriptor.java": "0.1130556686112242",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.0565278343056121",
            "Storage.buildTreeDepth(int, Random)": "36.51132817799485",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.9224890336001454"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "36.35859341083402",
            "Towers.popDiskFrom(int)": "30.268679754956345",
            "Towers.moveDisks(int, int, int)": "5.499011142733106",
            "Towers.buildTowerAt(int, int)": "0.16882928946987605",
            "Towers$TowersDisk.getSize()": "1.5194636052288844",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.28942163909121604",
            "Towers.moveTopDisk(int, int)": "7.766147315614298",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.3773575804351",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.30148087405335006",
            "com.yourkit.probes.Table.createRow() a": "0.10853311465920602"
        },
        "YourKit_Permute.txt": {
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.09030058808257989",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.10158816159290236",
            "Permute.permute(int)": "56.550743286715644",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.23703904371677217",
            "com.yourkit.probes.Table.createRow() a": "0.20317632318580472",
            "java.lang.Object.clone() Object.java (native)": "0.10158816159290236",
            "Permute.benchmark()": "0.15802602914451477",
            "javax.management.openmbean.CompositeType.isAssignableFrom(OpenType) CompositeType.java": "0.07901301457225739",
            "Permute.swap(int, int)": "42.30582551668867",
            "java.lang.Integer.valueOf(int) Integer.java": "0.11287573510322484"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.533135358765452",
            "som.Vector.forEach(ForEachInterface)": "43.35135409528161",
            "deltablue.Plan$$Lambda$27.0x00000008000ccd88.apply(Object)": "5.710804842762506",
            "deltablue.EqualityConstraint.execute()": "3.096525292520115",
            "som.Vector.<init>(int)": "8.832711490139344",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "3.3503388410873374",
            "deltablue.ScaleConstraint.execute()": "2.3858473565318916",
            "som.Vector.append(Object)": "2.487372775958781",
            "deltablue.BinaryConstraint.inputsHasOne(TestInterface)": "1.6497880656869464",
            "deltablue.ScaleConstraint.recalculate()": "1.7259321302571133"
        },
        "YourKit_List.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.12057393191591977",
            "List.tail(List$Element, List$Element, List$Element)": "3.4430556113768205",
            "List$Element.<init>(Object)": "0.12057393191591977",
            "List.makeList(int)": "0.9511943517811449",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.10717682836970646",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(MemberName) InvokerBytecodeGenerator.java": "0.10717682836970646",
            "List$Element.getNext()": "21.649719330680707",
            "List.isShorterThan(List$Element, List$Element)": "72.85344908430798",
            "com.yourkit.probes.Table.createRow() a": "0.12057393191591977",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.40191310638639927"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.7685808882292493",
            "nbody.Body.getZ()": "6.507592190889371",
            "nbody.Body.setX(double)": "0.6421965977851352",
            "nbody.Body.getX()": "0.9418883434181983",
            "nbody.Body.setZ(double)": "0.6279255622787989",
            "nbody.NBodySystem.advance(double)": "39.844731133691056",
            "nbody.Body.setVY(double)": "4.852152072154356",
            "nbody.Body.setVZ(double)": "10.075351067473456",
            "nbody.Body.setVX(double)": "31.439091220458952",
            "nbody.Body.setY(double)": "0.6707386687978079"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.39192061137568",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, Object, long) DirectMethodHandle$Holder": "0.07807010695604653",
            "java.util.zip.ZipFile$CleanableResource.getInflater() ZipFile.java": "0.052046737970697685",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.04337228164224807",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.052046737970697685",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref(String, String, String, boolean) SymbolTable.java": "0.16481467024054267",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.07807010695604653",
            "java.lang.invoke.LambdaForm$Name.<init>(LambdaForm$NamedFunction, Object[]) LambdaForm.java": "0.07807010695604653",
            "com.yourkit.probes.MasterResourceRegistry.<init>(Class, String, String) a": "0.026023368985348842",
            "java.util.IdentityHashMap.keySet() IdentityHashMap.java": "0.034697825313798454"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.167464326210847",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "20.984581854595252",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.873282577642952",
            "cd.RedBlackTree.findNode(Comparable)": "9.22585300484486",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "6.825511361126245",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.7390401578629593",
            "cd.RedBlackTree.put(Comparable, Object)": "7.156846864093539",
            "cd.Vector2D.compareNumbers(double, double)": "9.535099474281001",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.5268823538074123",
            "cd.CollisionDetector.lambda$handleNewFrame$0(RedBlackTree, Vector, Aircraft)": "2.812670269633469"
        },
        "YourKit_Sieve.txt": {
            "java.util.concurrent.ConcurrentHashMap$ValuesView.iterator() ConcurrentHashMap.java": "0.09388300091796713",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.932654594008178",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.1043144454644079",
            "Sieve.benchmark()": "86.24718350997247",
            "jdk.internal.loader.Resource.getByteBuffer() Resource.java": "0.30251189184678295",
            "java.lang.ClassLoader.checkName(String) ClassLoader.java": "0.11474589001084871",
            "sun.management.LazyCompositeData.getLong(CompositeData, String) LazyCompositeData.java": "0.1043144454644079",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.09388300091796713",
            "jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Object, Object[])": "0.1251773345572895",
            "Sieve.sieve(boolean[], int)": "8.595510306267212"
        },
        "YourKit_Bounce.txt": {
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.29924957414483677",
            "Bounce.benchmark()": "69.37986280557983",
            "jdk.internal.org.objectweb.asm.ClassVisitor.<init>(int, ClassVisitor) ClassVisitor.java": "0.20717278210027162",
            "java.util.zip.ZipFile$CleanableResource.releaseInflater(Inflater) ZipFile.java": "0.25321117812255417",
            "Bounce.lambda$benchmark$0(Random, int)": "0.9207679204456516",
            "som.Random.next()": "0.20717278210027162",
            "java.util.concurrent.atomic.AtomicLong.addAndGet(long) AtomicLong.java": "0.20717278210027162",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.6675567423230974",
            "Bounce$Ball.bounce()": "25.781501772478244",
            "Bounce$Ball.<init>(Random)": "2.0256894249804334"
        }
    },
    "Runtimes": {
        "NBody.data": 21.776,
        "YourKit_Storage.txt": 61.07,
        "rebench_test_Async_Bounce.txt": 66.893,
        "Permute_not_profiled_": 29.5805,
        "JavaFlightRecorder_Sieve.jfr": 34.2025,
        "CD_not_profiled_": 41.2495,
        "JProfiler_NBody.txt": 21.4225,
        "JProfiler_List.txt": 29.009500000000003,
        "YourKit_Mandelbrot.txt": 37.4,
        "CD.data": 44.393,
        "Json_not_profiled_": 77.68549999999999,
        "List.data": 24.1045,
        "Queens_not_profiled_": 21.929499999999997,
        "Towers.hpl": 26.3815,
        "Bounce.hpl": 26.009999999999998,
        "JavaFlightRecorder_Json.jfr": 81.5945,
        "Sieve.data": 32.833,
        "Richards.hpl": 90.356,
        "YourKit_Richards.txt": 93.018,
        "JavaFlightRecorder_Havlak.jfr": 153.11950000000002,
        "JavaFlightRecorder_CD.jfr": 41.169,
        "JavaFlightRecorder_Towers.jfr": 25.823999999999998,
        "rebench_test_Async_CD.txt": 132.11700000000002,
        "List_not_profiled_": 22.853,
        "Havlak_not_profiled_": 151.8265,
        "JProfiler_Json.txt": 1023.9165,
        "rebench_test_Async_NBody.txt": 55.149,
        "JavaFlightRecorder_Bounce.jfr": 15.15,
        "Havlak.data": 159.8175,
        "Towers_not_profiled_": 25.916,
        "YourKit_DeltaBlue.txt": 12.5805,
        "rebench_test_Async_Towers.txt": 74.906,
        "YourKit_NBody.txt": 23.433500000000002,
        "JavaFlightRecorder_NBody.jfr": 21.142,
        "rebench_test_Async_Sieve.txt": 82.963,
        "Storage.hpl": 59.8655,
        "JProfiler_Queens.txt": 26.9205,
        "rebench_test_Async_List.txt": 65.1485,
        "rebench_test_Async_Richards.txt": 252.0395,
        "YourKit_Towers.txt": 27.284,
        "JProfiler_Havlak.txt": 1920.203,
        "JavaFlightRecorder_List.jfr": 23.086,
        "YourKit_Permute.txt": 29.2195,
        "Queens.data": 21.6005,
        "Storage_not_profiled_": 59.5475,
        "Json.hpl": 79.68950000000001,
        "Towers.data": 27.063000000000002,
        "YourKit_List.txt": 24.663,
        "JProfiler_CD.txt": 479.1725,
        "JProfiler_Permute.txt": 29.872,
        "Sieve.hpl": 30.628500000000003,
        "DeltaBlue_not_profiled_": 11.9565,
        "CD.hpl": 42.525000000000006,
        "JavaFlightRecorder_Queens.jfr": 21.5235,
        "JProfiler_Bounce.txt": 43.8845,
        "Permute.hpl": 29.680500000000002,
        "Richards_not_profiled_": 91.961,
        "DeltaBlue.hpl": 11.3995,
        "NBody.hpl": 21.2695,
        "JProfiler_Towers.txt": 26.838,
        "JProfiler_Mandelbrot.txt": 38.108,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.9115,
        "rebench_test_Async_Mandelbrot.txt": 109.06049999999999,
        "YourKit_CD.txt": 43.626999999999995,
        "rebench_test_Async_Permute.txt": 81.166,
        "Mandelbrot.data": 38.945499999999996,
        "JProfiler_Storage.txt": 1042.397,
        "YourKit_Sieve.txt": 33.849000000000004,
        "JavaFlightRecorder_Permute.jfr": 29.63,
        "YourKit_Bounce.txt": 14.350000000000001,
        "JProfiler_Sieve.txt": 29.448,
        "JProfiler_DeltaBlue.txt": 97.3195,
        "YourKit_Queens.txt": 22.155,
        "Mandelbrot.hpl": 37.9465,
        "JavaFlightRecorder_Storage.jfr": 56.951,
        "List.hpl": 22.069499999999998,
        "Mandelbrot_not_profiled_": 37.912,
        "Queens.hpl": 22.006,
        "Storage.data": 64.12899999999999,
        "JavaFlightRecorder_Richards.jfr": 92.659,
        "Bounce.data": 26.156,
        "Permute.data": 30.854,
        "YourKit_Json.txt": 79.977,
        "rebench_test_Async_DeltaBlue.txt": 34.3795,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.622,
        "YourKit_Havlak.txt": 155.276,
        "DeltaBlue.data": 12.463,
        "JProfiler_Richards.txt": 90.5325,
        "rebench_test_Async_Storage.txt": 157.877,
        "Sieve_not_profiled_": 30.731,
        "Havlak.hpl": 150.35399999999998,
        "Richards.data": 94.14,
        "rebench_test_Async_Havlak.txt": 458.54200000000003,
        "Bounce_not_profiled_": 26.075,
        "NBody_not_profiled_": 21.119,
        "Json.data": 83.10849999999999,
        "rebench_test_Async_Json.txt": 249.3235,
        "rebench_test_Async_Queens.txt": 58.658
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.49%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.28%",
            "[.] void nbody.NBodySystem.advance(double)": "0.07%",
            "0xffffffffb4c0634b": "0.03%"
        },
        "Permute.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.08%",
            "[.] Interpreter": "0.32%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "97.42%",
            "0xffffffffb4c063aa": "0.11%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.HavlakLoopFinder.stepD(int, som.Vector)": "5.45%",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.67%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.10%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.36%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "18.99%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.StayConstraint.<init>(deltablue.Variable, deltablue.Strength$Sym, deltablue.Planner)": "3.95%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.82%",
            "[.] vtable chunks": "6.02%",
            "[.] void deltablue.Planner.chainTest(int)": "25.76%",
            "[.] void deltablue.AbstractConstraint.addConstraint(deltablue.Planner)": "5.14%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.58%",
            "[.] Interpreter": "0.49%",
            "0xffffffffb51c12b7": "0.24%",
            "[.] boolean Queens.placeQueen(int)": "0.10%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.12%",
            "[.] Interpreter": "0.40%",
            "[.] void Towers.moveDisks(int, int, int)": "0.13%",
            "0xffffffffb5800d70": "0.10%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.99%",
            "[.] boolean richards.Scheduler.start()": "22.70%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.78%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.53%",
            "[.] void richards.Scheduler.schedule()": "7.84%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.38%",
            "[.] Interpreter": "0.19%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.16%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.40%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.78%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "20.96%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.08%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.54%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "94.19%",
            "[.] Interpreter": "0.50%",
            "[.] java.lang.Object List.benchmark()": "0.45%",
            "[.] List$Element List.makeList(int)": "0.57%",
            "0xffffffffb4c063aa": "0.29%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.38%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "85.09%",
            "[.] java.lang.Object Sieve.benchmark()": "6.02%",
            "[.] int Sieve.sieve(boolean[], int)": "5.87%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.52%",
            "0xffffffffb51c12b7": "0.24%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "72.52%",
            "[.] java.lang.Object Bounce.benchmark()": "23.92%",
            "0xffffffffb4c063aa": "0.06%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.12%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.61%",
            "[.] StubRoutines (2)": "8.21%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.61%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.56%"
        }
    }
}