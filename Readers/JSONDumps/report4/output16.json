{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.08896797153024912",
            "Mandelbrot.mandelbrot(I)I": "99.91103202846976"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.3110419906687403",
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.15552099533437014",
            "Queens.placeQueen(I)Z": "87.09175738724727",
            "Queens.getRowColumn(II)Z": "11.04199066874028",
            "java.util.Arrays.fill([ZZ)V": "0.6220839813374806",
            "java.nio.Buffer.limit(I)Ljava/nio/Buffer;": "0.15552099533437014",
            "Queens.queens()Z": "0.4665629860031104",
            "jdk.internal.org.objectweb.asm.Frame.execute(IILjdk/internal/org/objectweb/asm/Symbol;Ljdk/internal/org/objectweb/asm/SymbolTable;)V": "0.15552099533437014"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "94.24242424242425",
            "Bounce.benchmark()Ljava/lang/Object;": "5.606060606060606",
            "sun.nio.cs.StreamEncoder.implWrite([CII)V": "0.15151515151515152"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.1587485515643106",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.7415990730011588",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "4.125144843568946",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.5758980301274623",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.098493626882966",
            "havlak.HavlakLoopFinder.findLoops()V": "8.157589803012748",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "4.21784472769409",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "51.7728852838934",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.2514484356894555",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.7184241019698726"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "8.647260273972602",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "0.7705479452054794",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "13.527397260273972",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "3.167808219178082",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.42808219178082",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "0.684931506849315",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.157534246575342",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.91780821917808",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "8.561643835616438",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.6267123287671232"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "88.29787234042553",
            " ": "0",
            "List.benchmark()Ljava/lang/Object;": "0.1519756838905775",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "10.638297872340425",
            "List.makeList(I)LList$Element;": "0.9118541033434651"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "7.44336569579288",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "5.17799352750809",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.912621359223301",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "46.92556634304207",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "5.501618122977346",
            "deltablue.Planner.chainTest(I)V": "2.588996763754045",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "6.796116504854369",
            "deltablue.Variable.value(I)Ldeltablue/Variable;": "1.941747572815534",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "7.44336569579288",
            "deltablue.Planner.lambda$constraintsConsuming$3(Ldeltablue/AbstractConstraint;Lsom/ForEachInterface;Ldeltablue/AbstractConstraint;)V": "1.941747572815534"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Run.printResult(J)V": "0.05970149253731343",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.05970149253731343",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "99.76119402985074",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.11940298507462686"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JJ)J": "0.10964912280701754",
            "Sieve.benchmark()Ljava/lang/Object;": "0.43859649122807015",
            "Sieve.sieve([ZI)I": "99.23245614035088",
            "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Ljava/lang/Class;)Ljava/lang/String;": "0.10964912280701754",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.10964912280701754"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "60.646900269541774",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1347708894878706",
            "Towers.benchmark()Ljava/lang/Object;": "0.1347708894878706",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "39.083557951482476"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.20255183413079",
            "NBody.innerBenchmarkLoop(I)Z": "0.6379585326953748",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.1594896331738437"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.4843049327354265",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.07473841554559044",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.3736920777279522",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "4.110612855007474",
            "richards.Scheduler.schedule()V": "58.819133034379675",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "0.07473841554559044",
            "Richards.benchmark()Ljava/lang/Object;": "0.9715994020926757",
            "richards.Packet.setLink(Lrichards/Packet;)V": "0.07473841554559044",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.681614349775785",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.334828101644245"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.644681839294009",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "17.92847189967487",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "8.081746400371575",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "31.212261960055738",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "1.9507663725034836",
            "json.JsonPureStringParser.readDigit()Z": "1.3934045517882026",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "22.34091964700418",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "3.9944263817928474",
            "java.lang.StringLatin1.hashCode([B)I": "1.3934045517882026",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "4.644681839294009"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "29.142185663924796",
            "Permute.permute(I)V": "70.62279670975323",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.11750881316098707",
            "Permute.benchmark()Ljava/lang/Object;": "0.11750881316098707"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.5",
            "Richards::benchmark": "5.1",
            "richards.RBObject::append": "2.4",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "45.3",
            "richards.HandlerTaskDataRecord::workInAdd": "2.3",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "6.1",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.6",
            "richards.RBObject::<init>": "6.0"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "java.lang.invoke.StringConcatFactory::newArrayWithSuffix": "0.0",
            "java.lang.invoke.LambdaForm$Name::initIndex": "0.0",
            "java.io.PrintStream::println": "0.0",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Mandelbrot::mandelbrot": "98.0",
            "java.util.ArrayList::add": "0.0",
            "java.lang.invoke.LambdaForm$MH.0x0000000800c08400::invoke": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.7",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "List::tail": "2.2",
            "List::isShorterThan": "80.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "List$Element::<init>": "0.3",
            "AGCT::Unknown Java[ERR=-5]": "2.3",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "15.6",
            "java.lang.String::<init>": "5.7",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "3.0",
            "java.util.Arrays::copyOfRange": "7.7",
            "java.lang.String::equals": "21.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "10.7",
            "java.lang.String::isLatin1": "2.7",
            "json.JsonPureStringParser::readStringInternal": "8.6"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.0",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.1",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.3",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "6.5",
            "som.Vector::hasSome": "2.0",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "49.9",
            "java.lang.invoke.MethodType::equals": "0.0",
            "Permute::benchmark": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "jdk.internal.org.objectweb.asm.AnnotationWriter::computeAnnotationsSize": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "5.8",
            "java.util.Locale::getInstance": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "67.6",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "8.8",
            "Queens::setRowColumn": "17.9",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.1"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.5",
            "java.util.Arrays::setAll": "34.4",
            "som.Random::next": "12.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.5",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.2",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "5.4",
            "jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn": "0.0",
            "java.util.zip.ZipFile$Source::get": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "83.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "8.3"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "3.1",
            "deltablue.Variable::<init>": "4.2",
            "som.Vector::append": "5.5",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.5",
            "AGCT::Unknown not Java[ERR=-3]": "13.6",
            "AGCT::Unknown Java[ERR=-5]": "15.3",
            "deltablue.AbstractConstraint::satisfy": "4.3",
            "java.util.Arrays::copyOf": "3.2",
            "som.Dictionary::at": "14.3",
            "som.Vector::forEach": "5.4"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "16.3",
            "Bounce$Ball::bounce": "77.9",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.2",
            "java.net.URL::set": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "Bounce$Ball::<init>": "1.6",
            "java.lang.invoke.MemberName$Factory::resolve": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.8",
            "nbody.Body::getZ": "7.3",
            "nbody.Body::setVX": "29.0",
            "nbody.Body::setVY": "6.4",
            "nbody.Body::getMass": "0.8",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "nbody.NBodySystem::advance": "39.5"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.5",
            "Towers::popDiskFrom": "23.4",
            "Towers::moveDisks": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "Towers::pushDisk": "38.1",
            "Towers$TowersDisk::setNext": "17.5",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.5",
            "Towers$TowersDisk::getNext": "3.4"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "13.7",
            "cd.RedBlackTree::forEach": "3.9",
            "cd.RedBlackTree::put": "6.7",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "10.5",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "cd.Vector2D::compareNumbers": "4.7",
            "cd.CollisionDetector::isInVoxel": "22.3",
            "cd.RedBlackTree::treeInsert": "12.9"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "4.06%",
            "deltablue.AbstractConstraint.satisfy": "2.31%",
            "vtable": "3.21%",
            "som.Vector.append": "2.37%",
            "som.Vector.forEach": "25.68%",
            "itable": "4.34%",
            "deltablue.Planner.addPropagate": "2.44%",
            "deltablue.Plan.lambda$execute$0": "2.56%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.40%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "5.57%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "76.47%",
            "som.Random.next": "0.78%",
            "Interpreter": "0.04%",
            "java.util.Arrays.setAll": "0.59%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "17.58%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.06%",
            "Bounce$Ball.<init>": "1.61%",
            "Bounce.lambda$benchmark$0": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "_int_free": "0.01%",
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.63%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "Monitor::wait_without_safepoint_check(long)": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.56%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.51%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.16%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.54%",
            "java.util.Arrays.setAll": "35.39%",
            "Storage.lambda$buildTreeDepth$0": "4.07%",
            "SpinPause": "0.17%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.30%",
            "Storage.buildTreeDepth": "43.87%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.98%",
            "Towers.popDiskFrom": "18.84%",
            "Towers.moveDisks": "8.81%",
            "Interpreter": "0.04%",
            "Towers.pushDisk": "42.58%",
            "Towers.moveTopDisk": "4.85%",
            "Towers$TowersDisk.getSize": "0.42%",
            "Towers$TowersDisk.getNext": "3.73%",
            "Towers.benchmark": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.00%",
            "cd.CollisionDetector.isInVoxel": "19.55%",
            "cd.RedBlackTree.forEach": "5.99%",
            "Node::set_req_X(unsigned": "4.07%",
            "cd.RedBlackTree.put": "6.78%",
            "cd.RedBlackTree.treeInsert": "12.79%",
            "cd.RedBlackTree.treeMinimum": "5.30%",
            "cd.RedBlackTree.findNode": "2.69%",
            "cd.Vector2D.compareNumbers": "3.91%",
            "cd.RedBlackTree.leftRotate": "2.18%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.56%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.70%",
            "som.Vector.append": "2.64%",
            "som.Vector.forEach": "1.95%",
            "som.IdentitySet.lambda$contains$0": "32.04%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "9.26%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.15%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.09%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.66%",
            "havlak.HavlakLoopFinder.doDFS": "5.31%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "4.78%",
            "Sieve.benchmark": "5.77%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "86.59%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.05%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.38%",
            "Permute.swap": "40.40%",
            "Permute.benchmark": "0.09%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "[no_Java_frame]": "0.02%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.89%",
            "nbody.Body.getZ": "7.73%",
            "nbody.Body.getY": "0.77%",
            "nbody.Body.setX": "1.25%",
            "nbody.Body.setY": "1.84%",
            "nbody.Body.setVX": "27.36%",
            "nbody.Body.setVY": "5.67%",
            "nbody.Body.getVZ": "0.46%",
            "nbody.Body.getMass": "0.44%",
            "nbody.NBodySystem.advance": "41.86%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.20%",
            "Interpreter": "0.05%",
            "List.makeList": "1.02%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.44%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "81.74%",
            "List$Element.<init>": "0.23%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "6.99%",
            "java.lang.String.length": "3.51%",
            "java.lang.String.<init>": "4.47%",
            "json.JsonPureStringParser.readArray": "2.56%",
            "java.lang.String.isLatin1": "2.83%",
            "json.JsonPureStringParser.readStringInternal": "8.80%",
            "java.util.Arrays.copyOfRange": "8.02%",
            "java.lang.String.equals": "20.31%",
            "json.JsonPureStringParser.read": "14.70%",
            "json.JsonPureStringParser.readValue": "3.28%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.98%",
            "Queens.getRowColumn": "57.53%",
            "Queens.setRowColumn": "23.78%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.63%",
            "Queens.placeQueen": "13.67%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.09%",
            "Richards.benchmark": "4.76%",
            "richards.Packet.<init>": "6.95%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.26%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.80%",
            "itable": "37.37%",
            "richards.TaskControlBlock.<init>": "3.13%",
            "richards.RBObject.<init>": "5.64%",
            "richards.RBObject.append": "2.69%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.07%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.5",
            "Towers.moveDisks": "93.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.7",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "7.3",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "91.6",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.3"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.1",
            "deltablue.AbstractConstraint.satisfy": "10.2",
            "deltablue.Planner.removePropagateFrom": "9.3",
            "som.Vector.<init>": "28.5",
            "deltablue.Variable.<init>": "4.9",
            "som.Vector.forEach": "7.7",
            "deltablue.Planner.addPropagate": "2.3",
            "deltablue.AbstractConstraint.<init>": "8.4",
            "deltablue.Planner.constraintsConsuming": "4.8",
            "deltablue.Planner.addConstraintsConsumingTo": "15.5"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.2",
            "som.Vector.hasSome": "3.4",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.1",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "5.0",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.schedule": "14.1",
            "richards.Scheduler.<init>": "0.0",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.2",
            "richards.Scheduler.createIdler": "0.1",
            "richards.TaskControlBlock.runTask": "84.3",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "1.5",
            "Bounce.benchmark": "51.6",
            "Bounce$Ball.<init>": "46.3",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.2",
            "cd.RedBlackTree.treeInsert": "2.4",
            "cd.RedBlackTree.findNode": "1.5",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.6",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "7.7",
            "cd.RedBlackTree$Entry.<init>": "5.0"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Harness.processArguments": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.8",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.lang.Integer.valueOf": "0.2",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "List.makeList": "0.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.8",
            "List$Element.length": "0.2",
            "List.isShorterThan": "75.4",
            "List$Element.<init>": "19.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Harness.processArguments": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.0",
            "json.JsonValue.<init>": "4.5",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "1.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "28.1",
            "Queens.placeQueen": "70.0",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.41733607322997",
            "java.lang.String.<init>(byte[], byte) String.java": "6.247794590779834",
            "json.JsonPureStringParser.isDigit()": "1.8390518297112732",
            "json.JsonPureStringParser.read()": "19.474022873985515",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "4.691035141249975",
            "java.lang.String.length() String.java": "2.9391618407123734",
            "java.lang.String.substring(int, int) String.java": "9.822114286900389",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.742283662328499",
            "json.JsonPureStringParser.readStringInternal()": "3.6905577350187855",
            "json.JsonPureStringParser.readValue()": "3.686406376486706"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.5967730451311954",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.855814063878863",
            "havlak.HavlakLoopFinder.findLoops()": "10.03299019787646",
            "som.Vector.<init>(int)": "2.4014447505884946",
            "som.Vector.append(Object)": "5.931331194400514",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.356134472275504",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.286324279188991",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.112447164979039",
            "som.Vector.removeAll()": "2.0885880669987986",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.73267367321797"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.927707743761255",
            "Queens.getRowColumn(int, int)": "61.82467198353485",
            "Queens.queens()": "0.32158476974530487",
            "java.lang.invoke.ClassSpecializer$Factory.loadSpecies(ClassSpecializer$SpeciesData) ClassSpecializer.java": "0.09647543092359145",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6270903010033444",
            "Queens.setRowColumn(int, int, boolean)": "23.41137123745819",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.08039619243632622",
            "com.yourkit.probes.Table.createRow() a": "0.14471314638538718",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3537432467198353",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.14471314638538718"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.913325808768561",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.158426291024758",
            "richards.TaskControlBlock.runTask()": "38.56950205948315",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.137289104527932",
            "richards.Scheduler.schedule()": "2.484572199176207",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.5757611292710458",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.6865481303410976",
            "richards.RBObject.append(Packet, Packet)": "3.078231043227159",
            "Richards.benchmark()": "26.817255683733748",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.6637105876489644"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$10.0x00000008000c2a98.<init>(Storage, int, Random)": "0.2782304543105847",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.7211279121927399",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.4996791832516623",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.0845309545575852",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.11356345073901415",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(Label) MethodWriter.java": "0.08517258805426062",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.51751432319023",
            "som.Random.next()": "15.365134884988615",
            "Storage.buildTreeDepth(int, Random)": "36.11885550754345",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "1.7943025216764237"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "30.58596265292981",
            "Towers.pushDisk(Towers$TowersDisk, int)": "30.395173022346235",
            "Towers.moveDisks(int, int, int)": "9.956833846080466",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.2265626863179986",
            "java.lang.invoke.MethodHandles.insertArgumentPrimitive(BoundMethodHandle, int, Class, Object) MethodHandles.java": "0.26233574205241944",
            "Towers$TowersDisk.getSize()": "1.3713004698194653",
            "Towers.moveTopDisk(int, int)": "7.619660871431637",
            "java.util.zip.ZipFile$Source.findEND() ZipFile.java": "0.20271398249505135",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.245903985118407",
            "java.lang.invoke.MethodHandles$Lookup.maybeBindCaller(MemberName, MethodHandle, MethodHandles$Lookup) MethodHandles.java": "0.05962175955736806"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.org.objectweb.asm.ByteVector.enlarge(int) ByteVector.java": "0.1570545540211575",
            "java.lang.invoke.InvokerBytecodeGenerator.loadMethod(byte[]) InvokerBytecodeGenerator.java": "0.011218182430082678",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass(String) SymbolTable.java": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference(int, String) SymbolTable.java": "0.0",
            "Benchmark.innerBenchmarkLoop(int)": "0.04487272972033071",
            "Permute.permute(int)": "56.11334851527355",
            "Run.measure(Benchmark)": "0.0011218182430082677",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.0",
            "Permute.benchmark()": "0.10096364187074411",
            "Permute.swap(int, int)": "43.57142055844112"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "6.9815917024536045",
            "som.Vector.forEach(ForEachInterface)": "42.79364122655015",
            "deltablue.EqualityConstraint.execute()": "3.741932243401392",
            "deltablue.BinaryConstraint.getOutput()": "1.9839774981792617",
            "deltablue.BinaryConstraint.isSatisfied()": "2.2351138903538517",
            "som.Vector.<init>(int)": "5.776137020015572",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.938295788442704",
            "som.Vector.append(Object)": "3.4907958512268022",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.184886611918934",
            "deltablue.Planner$$Lambda$31.0x00000008000cd620.apply(Object)": "1.8584093020919665"
        },
        "YourKit_List.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.2564690954739954",
            "List.tail(List$Element, List$Element, List$Element)": "4.38697136994992",
            "List.makeList(int)": "1.2013552366939784",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.linkToTargetMethod(Object, long, Object) LambdaForm$MH": "0.12148536101399782",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0944886141219983",
            "List$Element.setNext(List$Element)": "0.2699674689199951",
            "List$Element.getNext()": "26.402818460375528",
            "List.isShorterThan(List$Element, List$Element)": "66.9924274124968",
            "com.yourkit.probes.Table.createRow() a": "0.04049512033799927",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(Object) MethodType.java": "0.20247560168999637"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.5174145008796645",
            "nbody.Body.getZ()": "5.163560425099766",
            "nbody.Body.setX(double)": "0.5721396592908329",
            "nbody.Body.getX()": "1.8594538926952064",
            "nbody.Body.setZ(double)": "0.7008710826312702",
            "nbody.NBodySystem.advance(double)": "45.17042610101125",
            "nbody.Body.setVY(double)": "6.550999098880035",
            "nbody.Body.setVZ(double)": "6.708337505185015",
            "nbody.Body.setVX(double)": "28.707107404917537",
            "nbody.Body.setY(double)": "0.9011199633830618"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.91272111371316",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "sun.nio.fs.LinuxFileSystem.<init>(UnixFileSystemProvider, String) LinuxFileSystem.java": "0.0",
            "Run.runBenchmark()": "8.641473889786642E-4",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.0",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.0",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.05184884333871985",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.03456589555914656",
            "sun.nio.fs.LinuxFileSystemProvider.<init>() LinuxFileSystemProvider.java": "0.0"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.357031082200606",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.066183915804974",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.896750636678835",
            "cd.RedBlackTree.findNode(Comparable)": "7.578779417630634",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.502071123929918",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.8919026725169523",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.124819735509803",
            "cd.RedBlackTree.put(Comparable, Object)": "7.417692000859131",
            "cd.Vector2D.compareNumbers(double, double)": "7.870270933693351",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.341689423460464"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.08275405494869248",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.0517212843429328",
            "sun.reflect.generics.factory.CoreReflectionFactory.makeWildcard(FieldTypeSignature[], FieldTypeSignature[]) CoreReflectionFactory.java": "0.031032770605759676",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.3584905660377355",
            "Sieve.benchmark()": "89.38472360145646",
            "java.lang.ThreadLocal.createMap(Thread, Object) ThreadLocal.java": "0.13447533929162528",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.23791790797749088",
            "java.util.jar.JarFile.<clinit>() JarFile.java": "0.031032770605759676",
            "Sieve.sieve(boolean[], int)": "7.458209202250909",
            "javax.management.openmbean.SimpleType.isValue(Object) SimpleType.java": "0.2068851373717312"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.17334026694401108",
            "Bounce.benchmark()": "62.71065657441112",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.4622407118506962",
            "som.Random.next()": "0.3659405635484678",
            "Bounce.lambda$benchmark$0(Random, int)": "0.17334026694401108",
            "com.yourkit.probes.Table.createRow() a": "0.17334026694401108",
            "Bounce$Ball.bounce()": "35.18807418963425",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.17334026694401108",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitCode() MethodWriter.java": "0.17334026694401108",
            "Bounce$Ball.<init>(Random)": "0.17334026694401108"
        }
    },
    "Runtimes": {
        "NBody.data": 21.9535,
        "YourKit_Storage.txt": 60.6395,
        "rebench_test_Async_Bounce.txt": 69.04050000000001,
        "Permute_not_profiled_": 29.591,
        "JavaFlightRecorder_Sieve.jfr": 30.663,
        "CD_not_profiled_": 41.364999999999995,
        "JProfiler_NBody.txt": 21.619500000000002,
        "JProfiler_List.txt": 28.4815,
        "YourKit_Mandelbrot.txt": 37.2755,
        "CD.data": 45.7435,
        "Json_not_profiled_": 78.3175,
        "List.data": 23.679499999999997,
        "Queens_not_profiled_": 21.7225,
        "Towers.hpl": 26.343,
        "Bounce.hpl": 26.142,
        "JavaFlightRecorder_Json.jfr": 83.1135,
        "Sieve.data": 32.647,
        "Richards.hpl": 90.71950000000001,
        "YourKit_Richards.txt": 91.20599999999999,
        "JavaFlightRecorder_Havlak.jfr": 154.749,
        "JavaFlightRecorder_CD.jfr": 41.4345,
        "JavaFlightRecorder_Towers.jfr": 26.012500000000003,
        "rebench_test_Async_CD.txt": 134.381,
        "List_not_profiled_": 22.2455,
        "Havlak_not_profiled_": 152.731,
        "JProfiler_Json.txt": 1026.8944999999999,
        "rebench_test_Async_NBody.txt": 55.0955,
        "JavaFlightRecorder_Bounce.jfr": 24.387,
        "Havlak.data": 161.72899999999998,
        "Towers_not_profiled_": 25.973,
        "YourKit_DeltaBlue.txt": 11.661000000000001,
        "rebench_test_Async_Towers.txt": 72.113,
        "YourKit_NBody.txt": 23.438000000000002,
        "JavaFlightRecorder_NBody.jfr": 21.0535,
        "rebench_test_Async_Sieve.txt": 79.6,
        "Storage.hpl": 60.081500000000005,
        "JProfiler_Queens.txt": 26.016,
        "rebench_test_Async_List.txt": 66.62,
        "rebench_test_Async_Richards.txt": 249.6955,
        "YourKit_Towers.txt": 27.207,
        "JProfiler_Havlak.txt": 1907.6975,
        "JavaFlightRecorder_List.jfr": 22.8125,
        "YourKit_Permute.txt": 29.7825,
        "Queens.data": 22.578,
        "Storage_not_profiled_": 62.173500000000004,
        "Json.hpl": 78.90350000000001,
        "Towers.data": 27.0015,
        "YourKit_List.txt": 24.880499999999998,
        "JProfiler_CD.txt": 474.582,
        "JProfiler_Permute.txt": 29.9085,
        "Sieve.hpl": 32.679500000000004,
        "DeltaBlue_not_profiled_": 12.2055,
        "CD.hpl": 41.619,
        "JavaFlightRecorder_Queens.jfr": 21.756,
        "JProfiler_Bounce.txt": 44.17,
        "Permute.hpl": 29.738,
        "Richards_not_profiled_": 91.76849999999999,
        "DeltaBlue.hpl": 12.0945,
        "NBody.hpl": 21.3905,
        "JProfiler_Towers.txt": 26.908,
        "JProfiler_Mandelbrot.txt": 37.418,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.078,
        "rebench_test_Async_Mandelbrot.txt": 99.0235,
        "YourKit_CD.txt": 42.370000000000005,
        "rebench_test_Async_Permute.txt": 79.8185,
        "Mandelbrot.data": 39.335,
        "JProfiler_Storage.txt": 1041.0175,
        "YourKit_Sieve.txt": 28.313,
        "JavaFlightRecorder_Permute.jfr": 30.004,
        "YourKit_Bounce.txt": 14.404499999999999,
        "JProfiler_Sieve.txt": 26.5155,
        "JProfiler_DeltaBlue.txt": 96.6155,
        "YourKit_Queens.txt": 22.2165,
        "Mandelbrot.hpl": 37.6155,
        "JavaFlightRecorder_Storage.jfr": 58.537499999999994,
        "List.hpl": 22.0315,
        "Mandelbrot_not_profiled_": 37.567499999999995,
        "Queens.hpl": 21.7965,
        "Storage.data": 62.870999999999995,
        "JavaFlightRecorder_Richards.jfr": 89.9665,
        "Bounce.data": 27.019,
        "Permute.data": 30.8595,
        "YourKit_Json.txt": 80.899,
        "rebench_test_Async_DeltaBlue.txt": 40.375,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.6455,
        "YourKit_Havlak.txt": 154.76850000000002,
        "DeltaBlue.data": 12.995,
        "JProfiler_Richards.txt": 91.062,
        "rebench_test_Async_Storage.txt": 152.118,
        "Sieve_not_profiled_": 32.2855,
        "Havlak.hpl": 153.3535,
        "Richards.data": 107.298,
        "rebench_test_Async_Havlak.txt": 446.2255,
        "Bounce_not_profiled_": 26.101,
        "NBody_not_profiled_": 21.558,
        "Json.data": 93.4845,
        "rebench_test_Async_Json.txt": 248.84449999999998,
        "rebench_test_Async_Queens.txt": 57.632
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.49%",
            "LinearScan::allocate_registers": "0.03%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.31%",
            "[.] void nbody.NBodySystem.advance(double)": "0.06%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.31%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "[.] void Permute.permute(int)": "0.04%",
            "0xffffffffb4c063aa": "0.06%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.25%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.09%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.52%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.70%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.80%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] vtable chunks": "6.98%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.85%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "14.16%",
            "[.] void deltablue.Planner.chainTest(int)": "23.84%",
            "[.] deltablue.Plan deltablue.Planner.makePlan(som.Vector)": "3.40%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.74%",
            "[.] Interpreter": "0.47%",
            "0xffffffffb51c12b7": "0.23%",
            "0xffffffffb4c0634b": "0.14%",
            "[.] boolean Queens.placeQueen(int)": "93.29%"
        },
        "Towers.data": {
            " ": "0",
            "0xffffffffb4c6958b": "0.12%",
            "[.] Interpreter": "0.37%",
            "[.] void Towers.moveDisks(int, int, int)": "96.16%",
            "0xffffffffb4c0634b": "0.14%",
            "0xffffffffb4c063aa": "0.19%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "32.84%",
            "[.] boolean richards.Scheduler.start()": "22.47%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.08%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "14.90%",
            "[.] void richards.Scheduler.schedule()": "7.90%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.90%",
            "[.] Interpreter": "0.20%",
            "0xffffffffb51c12b7": "0.13%",
            "0xffffffffb4c0634b": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.16%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "19.50%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.13%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.52%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.59%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.06%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.30%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c0634b": "0.10%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "0.16%",
            "[.] Interpreter": "0.50%",
            "[.] java.lang.Object List.benchmark()": "0.53%",
            "[.] List$Element List.makeList(int)": "0.66%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.40%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "82.80%",
            "[.] java.lang.Object Sieve.benchmark()": "7.03%",
            "[.] int Sieve.sieve(boolean[], int)": "6.21%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.50%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "72.07%",
            "[.] java.lang.Object Bounce.benchmark()": "23.99%",
            "0xffffffffb4c063aa": "0.14%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "29.33%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.17%",
            "[.] StubRoutines (2)": "7.73%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "17.63%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "28.35%"
        }
    }
}