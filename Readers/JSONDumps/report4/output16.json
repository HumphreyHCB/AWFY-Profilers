{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.StringUTF16.checkIndex(I[B)V": "0.08920606601248884",
            "Mandelbrot.mandelbrot(I)I": "99.9107939339875"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.32679738562091504",
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.16339869281045752",
            "Queens.placeQueen(I)Z": "85.62091503267973",
            "Queens.getRowColumn(II)Z": "12.254901960784315",
            "java.util.Arrays.fill([ZZ)V": "1.1437908496732025",
            "java.io.BufferedWriter.ensureOpen()V": "0.16339869281045752",
            "Queens.queens()Z": "0.32679738562091504"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.14771048744460857",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "96.4549483013294",
            "Bounce$Ball.bounce()Z": "0.14771048744460857",
            "Bounce.benchmark()Ljava/lang/Object;": "3.10192023633678",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.14771048744460857"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.2125534950071326",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.7845934379457917",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.4236804564907275",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.1174512601046125",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "26.343319067998095",
            "havlak.HavlakLoopFinder.findLoops()V": "8.559201141226819",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.686638135996196",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "53.80408939610081",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6657156443176414",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "0.4992867332382311"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "10.169491525423728",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.7756255044390636",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "13.962873284907182",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.744148506860371",
            "cd.Vector2D.plus(Lcd/Vector2D;)Lcd/Vector2D;": "0.8071025020177562",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "24.778046811945117",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.994350282485875",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "19.774011299435028",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.425343018563357",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.7756255044390636"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.61609907120743",
            " ": "0",
            "java.util.Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z": "0.15479876160990713",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "11.609907120743035",
            "List.makeList(I)LList$Element;": "0.6191950464396285"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "7.754010695187167",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.486631016042781",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "9.090909090909092",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "38.77005347593583",
            "deltablue.EqualityConstraint.execute()V": "3.4759358288770055",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "2.6737967914438503",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.6737967914438503",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.545454545454546",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "7.219251336898396",
            "deltablue.Planner.incrementalAdd(Ldeltablue/AbstractConstraint;)V": "3.7433155080213907"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.benchmark()Ljava/lang/Object;": "0.05970149253731343",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "99.94029850746269"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.43859649122807015",
            "Sieve.sieve([ZI)I": "99.4517543859649",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.10964912280701754"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.net.URL.isBuiltinStreamHandler(Ljava/net/URLStreamHandler;)Z": "0.13175230566534915",
            "Towers.moveDisks(III)V": "56.65349143610013",
            "Towers.benchmark()Ljava/lang/Object;": "0.13175230566534915",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "43.08300395256917"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.21875",
            "NBody.innerBenchmarkLoop(I)Z": "0.3125",
            "java.lang.invoke.DirectMethodHandle.maybeCompile(Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MemberName;)V": "0.15625",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.15625",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.15625"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.048582995951417",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.06747638326585695",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.5398110661268556",
            "richards.Scheduler.lambda$createWorker$3(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.06747638326585695",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "4.318488529014845",
            "java.lang.invoke.Invokers.invokeBasicMethod(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.06747638326585695",
            "richards.Scheduler.schedule()V": "59.78407557354926",
            "Richards.benchmark()Ljava/lang/Object;": "1.282051282051282",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "25.978407557354924",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.711201079622132"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.716981132075472",
            "json.JsonPureStringParser.readExponent()Z": "6.839622641509434",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "17.216981132075475",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "31.509433962264154",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "5.660377358490567",
            "json.JsonObject.<init>()V": "0.9433962264150944",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "15.707547169811322",
            "java.lang.StringLatin1.hashCode([B)I": "0.9433962264150944",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "6.981132075471699",
            "som.Vector.append(Ljava/lang/Object;)V": "6.886792452830189"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "26.75544794188862",
            "java.nio.ByteBuffer.array()[B": "0.12106537530266344",
            "Permute.permute(I)V": "73.00242130750605",
            "Permute.benchmark()Ljava/lang/Object;": "0.12106537530266344"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.5",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.3",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "3.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "46.4",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.2",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.5",
            "richards.RBObject::<init>": "5.6"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn": "0.0",
            "java.lang.invoke.MemberName::flagsMods": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::execute": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.8"
        },
        "List.hpl": {
            "List$Element::getNext": "9.3",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "List::tail": "1.8",
            "List::isShorterThan": "81.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.6",
            "json.JsonPureStringParser::read": "12.7",
            "java.lang.String::<init>": "4.9",
            "java.lang.String::length": "3.2",
            "java.util.Arrays::copyOfRange": "8.8",
            "java.lang.String::equals": "20.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.9",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "json.JsonPureStringParser::readValue": "2.7",
            "json.JsonPureStringParser::readStringInternal": "8.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.2",
            "havlak.HavlakLoopFinder::findLoops": "6.3",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "8.0",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "5.6",
            "som.Vector::<init>": "1.9",
            "som.Vector::forEach": "1.9"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "50.7",
            "java.lang.invoke.Invokers::cachedInvoker": "0.0",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "6.0",
            "java.util.zip.ZipFile$Source::getEntryPos": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "66.7",
            "java.lang.String::replace": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "8.2",
            "Queens::setRowColumn": "19.6",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.3",
            "Storage::buildTreeDepth": "40.2",
            "java.util.Arrays::setAll": "34.3",
            "som.Random::next": "12.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.3",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.0"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "6.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "86.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.MethodTypeForm::canonicalize": "0.0",
            "java.util.Arrays::fill": "4.6"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "3.6",
            "som.Vector::append": "9.9",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.8",
            "AGCT::Unknown not Java[ERR=-3]": "12.5",
            "AGCT::Unknown Java[ERR=-5]": "16.8",
            "deltablue.UnaryConstraint::<init>": "13.8",
            "deltablue.AbstractConstraint::satisfy": "4.2",
            "som.Vector::<init>": "2.2",
            "som.Vector::forEach": "6.4",
            "som.Dictionary::at": "3.4"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.6",
            "Bounce$Ball::bounce": "75.0",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.7",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "1.7"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.4",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "8.5",
            "nbody.Body::setVX": "28.3",
            "nbody.Body::setVY": "6.4",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "nbody.NBodySystem::advance": "39.4"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.6",
            "Towers::popDiskFrom": "23.8",
            "Towers::moveDisks": "3.4",
            "Towers::buildTowerAt": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "Towers::pushDisk": "38.9",
            "Towers$TowersDisk::setNext": "17.1",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "Towers::moveTopDisk": "5.0",
            "Towers$TowersDisk::getNext": "3.1"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.3",
            "cd.RedBlackTree::forEach": "3.9",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "2.6",
            "cd.RedBlackTree::treeMinimum": "3.0",
            "AGCT::Unknown not Java[ERR=-3]": "10.1",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.8",
            "cd.CollisionDetector::isInVoxel": "21.2",
            "cd.RedBlackTree::treeInsert": "13.9"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "som.Dictionary.getBucket": "3.77%",
            "deltablue.AbstractConstraint.satisfy": "3.19%",
            "som.Vector.append": "7.42%",
            "vtable": "1.84%",
            "som.Vector.forEach": "6.95%",
            "itable": "5.04%",
            "deltablue.Planner.addPropagate": "3.05%",
            "deltablue.AbstractConstraint.<init>": "11.26%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "3.02%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.38%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.30%",
            "som.Random.next": "0.89%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.67%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "18.75%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "1.81%",
            "Bounce.lambda$benchmark$0": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "Mandelbrot.mandelbrot": "98.48%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "LinearScanWalker::alloc_free_reg(Interval*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.58%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.93%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.21%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.33%",
            "java.util.Arrays.setAll": "35.37%",
            "Storage.lambda$buildTreeDepth$0": "4.13%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.18%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.37%",
            "Storage.buildTreeDepth": "43.44%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "18.01%",
            "Towers.popDiskFrom": "18.66%",
            "Towers.moveDisks": "8.94%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.61%",
            "Towers.moveTopDisk": "4.81%",
            "Towers$TowersDisk.getSize": "0.38%",
            "Towers$TowersDisk.getNext": "3.69%",
            "Towers.benchmark": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.26%",
            "cd.CollisionDetector.isInVoxel": "19.36%",
            "cd.RedBlackTree.forEach": "6.01%",
            "Node::set_req_X(unsigned": "3.70%",
            "cd.RedBlackTree.put": "6.27%",
            "cd.RedBlackTree.treeInsert": "12.07%",
            "cd.RedBlackTree.treeMinimum": "5.14%",
            "cd.RedBlackTree.findNode": "2.82%",
            "cd.Vector2D.compareNumbers": "4.20%",
            "cd.RedBlackTree.leftRotate": "2.13%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.28%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.07%",
            "som.Vector.append": "3.43%",
            "som.Vector.forEach": "2.17%",
            "som.IdentitySet.lambda$contains$0": "31.85%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "9.30%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.99%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.17%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.76%",
            "havlak.HavlakLoopFinder.doDFS": "5.29%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.58%",
            "Sieve.benchmark": "7.57%",
            "Interpreter": "0.04%",
            "void": "0.03%",
            "Sieve.sieve": "83.85%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.27%",
            "Permute.swap": "40.62%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.06%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.57%",
            "nbody.Body.getZ": "7.73%",
            "nbody.Body.getY": "0.70%",
            "nbody.Body.setX": "1.30%",
            "nbody.Body.setY": "1.80%",
            "nbody.Body.setZ": "0.49%",
            "nbody.Body.setVX": "28.39%",
            "nbody.Body.setVY": "5.90%",
            "nbody.Body.getMass": "0.54%",
            "nbody.NBodySystem.advance": "40.28%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.36%",
            "Interpreter": "0.05%",
            "List.makeList": "1.24%",
            "List$Element.setNext": "0.07%",
            "List.tail": "4.67%",
            "List$Element.length": "0.13%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.12%",
            "List$Element.<init>": "0.31%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.53%",
            "java.lang.String.length": "3.24%",
            "java.lang.String.<init>": "5.79%",
            "json.JsonPureStringParser.readArray": "2.62%",
            "java.lang.String.isLatin1": "3.15%",
            "json.JsonPureStringParser.readStringInternal": "6.70%",
            "java.util.Arrays.copyOfRange": "7.86%",
            "java.lang.String.equals": "22.58%",
            "json.JsonPureStringParser.read": "15.61%",
            "json.JsonPureStringParser.readValue": "2.25%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.94%",
            "Queens.getRowColumn": "57.56%",
            "Queens.setRowColumn": "23.84%",
            "Interpreter": "0.05%",
            "Queens.queens": "0.59%",
            "Queens.placeQueen": "13.94%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.89%",
            "Richards.benchmark": "4.71%",
            "richards.Packet.<init>": "7.01%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.39%",
            "richards.HandlerTaskDataRecord.workInAdd": "4.07%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.80%",
            "itable": "36.89%",
            "richards.TaskControlBlock.<init>": "3.15%",
            "richards.RBObject.<init>": "5.82%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.04%"
        }
    },
    "JProfiler": {
        "Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "7.7",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "91.4",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "java.lang.System.nanoTime": "0.1",
            "Run.printResult": "0.1"
        },
        "DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.1",
            "deltablue.AbstractConstraint.satisfy": "10.3",
            "deltablue.Planner.removePropagateFrom": "9.2",
            "som.Vector.<init>": "33.4",
            "deltablue.Variable.<init>": "4.7",
            "som.Vector.forEach": "7.3",
            "deltablue.Planner.constraintsConsuming": "4.7",
            "deltablue.AbstractConstraint.<init>": "3.4",
            "deltablue.Plan.lambda$execute$0": "2.0",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "25.1",
            "Queens.placeQueen": "74.0",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "java.util.Arrays.fill0": "0.2",
            "Run.printResult": "0.1",
            "java.lang.System.nanoTime": "0.1"
        },
        "CD.txt": {
            "cd.CollisionDetector.recurse": "3.1",
            "som.Vector.<init>": "6.3",
            "cd.Vector3D.<init>": "7.7",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "14.8",
            "cd.RedBlackTree$Node.<init>": "7.4",
            "cd.RedBlackTree$Entry.<init>": "5.0"
        },
        "Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "54.1",
            "Bounce$Ball.<init>": "44.9",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "99.0",
            "Run.printResult": "0.1"
        },
        "Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "15.9",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "82.9",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.0"
        },
        "Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.8",
            "Towers.moveDisks": "93.6",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "Towers.pushDisk": "0.1",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.5"
        },
        "Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.2",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "havlak.HavlakLoopFinder.stepEProcessNonBackPreds": "3.4",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.5",
            "java.lang.Integer.valueOf": "9.0",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.6",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "3.9"
        },
        "Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0"
        },
        "List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.2",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.1",
            "List$Element.length": "0.2",
            "List.isShorterThan": "73.6",
            "List$Element.<init>": "22.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.41728452176596",
            "java.lang.String.<init>(byte[], byte) String.java": "7.600936623690739",
            "json.JsonPureStringParser.isWhiteSpace()": "2.106185855683659",
            "json.JsonPureStringParser.read()": "21.11055649569633",
            "java.lang.String.length() String.java": "3.104493602308284",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.7960733228632777",
            "java.lang.String.substring(int, int) String.java": "9.435225654074195",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.191062304954612",
            "json.JsonPureStringParser.readValue()": "3.6766943839102026",
            "json.JsonPureStringParser.readStringInternal()": "3.559007698332503"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.756246481617807",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.012644524314729",
            "havlak.HavlakLoopFinder.findLoops()": "10.903737063179323",
            "som.Vector.<init>(int)": "3.241241934785434",
            "som.Set.<init>(int)": "2.258260078811762",
            "som.Vector.append(Object)": "4.146278092928594",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "6.809422768804402",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.1267916684709665",
            "som.Vector.removeAll()": "2.5245745463993425",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.21474039752307"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "8.508805797273618",
            "Queens.getRowColumn(int, int)": "67.09037450625166",
            "Queens.queens()": "0.905824002851118",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.2821419025273974",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.267292328710166",
            "java.util.TreeMap$PrivateEntryIterator.nextEntry() TreeMap.java": "0.133646164355083",
            "Queens.setRowColumn(int, int, boolean)": "21.517032461168363",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.3860889192480175",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.20789403344124024",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.2821419025273974"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.906084491957656",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.4489476055822945",
            "richards.TaskControlBlock.runTask()": "33.782415903139224",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.836684582078928",
            "richards.Scheduler.schedule()": "2.667720258347646",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.402404540022334",
            "richards.RBObject.append(Packet, Packet)": "3.288120318428494",
            "Richards.benchmark()": "30.422459788280314",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.6415981505547683",
            "richards.Packet.setLink(Packet)": "2.2660928510321496"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2619424368130694",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.5880340418252579",
            "java.util.HashMap$Node.getKey() HashMap.java": "0.10691528033186506",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1653765556173292",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.09622375229867856",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.12427832185777",
            "som.Random.next()": "16.01590899371339",
            "Storage.benchmark()": "0.1817559765641706",
            "Storage.buildTreeDepth(int, Random)": "35.60278835051107",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.459051447632896"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "30.432681541199624",
            "Towers.popDiskFrom(int)": "29.32475277866176",
            "Towers.moveDisks(int, int, int)": "8.333038671428401",
            "java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(LambdaForm$Name, int) InvokerBytecodeGenerator.java": "0.21215657154980372",
            "Towers.buildTowerAt(int, int)": "0.10607828577490186",
            "Towers$TowersDisk.getSize()": "1.4968824770458375",
            "Towers.moveTopDisk(int, int)": "10.383885529743171",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.17679714295816978",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.200169725257236",
            "com.yourkit.probes.Table.createRow() a": "0.10607828577490186"
        },
        "YourKit_Permute.txt": {
            "java.lang.invoke.MethodType.checkPtypes(Class[]) MethodType.java": "0.22327907651773946",
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.10047558443298275",
            "java.nio.CharBuffer.arrayOffset() CharBuffer.java": "0.10047558443298275",
            "java.nio.LongBuffer.<clinit>() LongBuffer.java": "0.2567709379954004",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c5c00.<clinit>() LambdaForm$MH": "0.11163953825886973",
            "Permute.permute(int)": "55.339719114921735",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.10047558443298275",
            "com.yourkit.probes.Table.createRow() a": "0.2121151226918525",
            "Permute.benchmark()": "0.32375466095072225",
            "Permute.swap(int, int)": "42.702123384017675"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.661497959085091",
            "som.Vector.forEach(ForEachInterface)": "23.331642634591702",
            "som.Dictionary.at(Dictionary$CustomHash)": "6.811100644880808",
            "deltablue.BinaryConstraint.isSatisfied()": "2.6085066299543516",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.540733763253871",
            "som.Vector.<init>(int)": "3.0915634132792316",
            "deltablue.ScaleConstraint.execute()": "3.0432577349467436",
            "deltablue.BinaryConstraint.chooseMethod(int)": "5.144554742409971",
            "deltablue.Strength.weaker(Strength)": "14.20186942975147",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.4394367557906436"
        },
        "YourKit_List.txt": {
            "java.lang.StringConcatHelper.prepend(long, byte[], long, String) StringConcatHelper.java": "0.12058847174210145",
            "List.tail(List$Element, List$Element, List$Element)": "3.1888951416244606",
            "jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry) URLClassPath.java": "0.2411769434842029",
            "List$Element.<init>(Object)": "0.13398719082455718",
            "List.makeList(int)": "0.7905244258648871",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.2545756625666586",
            "List$Element.getNext()": "23.380764798885227",
            "List.isShorterThan(List$Element, List$Element)": "71.16059704692232",
            "com.yourkit.probes.Table.closeRow(int, Throwable) a": "0.12058847174210145",
            "com.yourkit.probes.Table.createRow() a": "0.12058847174210145"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.240785125725064",
            "nbody.Body.getZ()": "5.559416261292564",
            "nbody.Body.getMass()": "0.6949270326615705",
            "nbody.Body.getX()": "1.120392562862532",
            "nbody.Body.setZ(double)": "0.8367488760618911",
            "nbody.NBodySystem.advance(double)": "42.83019670689679",
            "nbody.Body.setVY(double)": "7.998751967778077",
            "nbody.Body.setVZ(double)": "9.360241664421153",
            "nbody.Body.setVX(double)": "26.563231268880035",
            "nbody.Body.setY(double)": "0.55310518926125"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.83258052702254",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "java.lang.invoke.LambdaForm$Name.useCount(LambdaForm$Name) LambdaForm.java": "0.08719764217575557",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.07847787795818001",
            "Run.measure(Benchmark)": "8.719764217575556E-4",
            "Run.printResult(long)": "8.719764217575556E-4",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.0"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.04702108989682",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.165542073890283",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.669097400829072",
            "cd.RedBlackTree.findNode(Comparable)": "9.614511785530576",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.237768162425489",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.178583315682774",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "3.1014554146872824",
            "cd.RedBlackTree.put(Comparable, Object)": "6.717298556688553",
            "cd.Vector2D.compareNumbers(double, double)": "11.187933069079245",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.3269085297588425"
        },
        "YourKit_Sieve.txt": {
            "javax.management.openmbean.OpenType.isAssignableFrom(OpenType) OpenType.java": "0.0409316032909009",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.9033195530268918",
            "java.lang.reflect.Modifier.isPrivate(int) Modifier.java": "0.09209610740452702",
            "Sieve.benchmark()": "90.21325365314557",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.1637264131636036",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1330277106954279",
            "java.util.Arrays$ArrayItr.next() Arrays.java": "0.11256190904997748",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.0409316032909009",
            "Sieve.sieve(boolean[], int)": "7.0402357660349555",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.10232900822725224"
        },
        "YourKit_Bounce.txt": {
            "Bounce.benchmark()": "63.598729180706634",
            "Bounce.lambda$benchmark$0(Random, int)": "1.213054780013478",
            "som.Random.next()": "0.7894483488976605",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.09627418888995858",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.42360643111581775",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.134783864445942",
            "Bounce$Ball.bounce()": "32.097814575912196",
            "jdk.internal.misc.Unsafe.allocateInstance(Class) Unsafe.java (native)": "0.23105805333590057",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.21180321555790887",
            "Bounce$Ball.<init>(Random)": "0.943487051121594"
        }
    },
    "Runtimes": {
        "Permute_JProfiler_.txt": 29.9085,
        "Havlak_honest_.hpl": 153.3535,
        "Permute_not_profiled_": 29.591,
        "Permute_honest_.hpl": 29.738,
        "List_YourKit_.txt": 24.880499999999998,
        "CD_not_profiled_": 41.364999999999995,
        "Json_not_profiled_": 78.3175,
        "Queens_not_profiled_": 21.7225,
        "List_JProfiler_.txt": 28.4815,
        "Permute_Perf_.data": 30.8595,
        "Bounce_Perf_.data": 27.019,
        "Richards_Perf_.data": 107.298,
        "Sieve_JProfiler_.txt": 26.5155,
        "Permute_YourKit_.txt": 29.7825,
        "Queens_JProfiler_.txt": 26.016,
        "Towers_JProfiler_.txt": 26.908,
        "Storage_Perf_.data": 62.870999999999995,
        "JavaFlightRecorder_Sieve_JFR_.jfr": 30.663,
        "List_not_profiled_": 22.2455,
        "JavaFlightRecorder_Mandelbrot_JFR_.jfr": 37.6455,
        "DeltaBlue_YourKit_.txt": 11.661000000000001,
        "Havlak_not_profiled_": 152.731,
        "rebench_test_Async_CD_Async_.txt": 134.381,
        "List_honest_.hpl": 22.0315,
        "JavaFlightRecorder_Towers_JFR_.jfr": 26.012500000000003,
        "Mandelbrot_YourKit_.txt": 37.2755,
        "Queens_Perf_.data": 22.578,
        "Towers_not_profiled_": 25.973,
        "NBody_Perf_.data": 21.9535,
        "CD_YourKit_.txt": 42.370000000000005,
        "Sieve_honest_.hpl": 32.679500000000004,
        "Bounce_JProfiler_.txt": 44.17,
        "rebench_test_Async_Json_Async_.txt": 248.84449999999998,
        "rebench_test_Async_NBody_Async_.txt": 55.0955,
        "JavaFlightRecorder_Storage_JFR_.jfr": 58.537499999999994,
        "Storage_honest_.hpl": 60.081500000000005,
        "JavaFlightRecorder_Richards_JFR_.jfr": 89.9665,
        "JavaFlightRecorder_DeltaBlue_JFR_.jfr": 12.078,
        "Havlak_YourKit_.txt": 154.76850000000002,
        "List_Perf_.data": 23.679499999999997,
        "Json_Perf_.data": 93.4845,
        "rebench_test_Async_Mandelbrot_Async_.txt": 99.0235,
        "Havlak_Perf_.data": 161.72899999999998,
        "JavaFlightRecorder_List_JFR_.jfr": 22.8125,
        "Storage_not_profiled_": 62.173500000000004,
        "rebench_test_Async_Queens_Async_.txt": 57.632,
        "Towers_YourKit_.txt": 27.207,
        "NBody_JProfiler_.txt": 21.619500000000002,
        "Mandelbrot_honest_.hpl": 37.6155,
        "Havlak_JProfiler_.txt": 1907.6975,
        "Mandelbrot_Perf_.data": 39.335,
        "rebench_test_Async_Permute_Async_.txt": 79.8185,
        "DeltaBlue_not_profiled_": 12.2055,
        "CD_JProfiler_.txt": 474.582,
        "DeltaBlue_honest_.hpl": 12.0945,
        "JavaFlightRecorder_CD_JFR_.jfr": 41.4345,
        "Sieve_Perf_.data": 32.647,
        "NBody_honest_.hpl": 21.3905,
        "rebench_test_Async_Sieve_Async_.txt": 79.6,
        "CD_honest_.hpl": 41.619,
        "rebench_test_Async_Havlak_Async_.txt": 446.2255,
        "Towers_Perf_.data": 27.0015,
        "JavaFlightRecorder_Bounce_JFR_.jfr": 24.387,
        "rebench_test_Async_DeltaBlue_Async_.txt": 40.375,
        "Richards_not_profiled_": 91.76849999999999,
        "rebench_test_Async_List_Async_.txt": 66.62,
        "JavaFlightRecorder_Permute_JFR_.jfr": 30.004,
        "Richards_honest_.hpl": 90.71950000000001,
        "JavaFlightRecorder_Havlak_JFR_.jfr": 154.749,
        "rebench_test_Async_Bounce_Async_.txt": 69.04050000000001,
        "rebench_test_Async_Towers_Async_.txt": 72.113,
        "Json_YourKit_.txt": 80.899,
        "DeltaBlue_JProfiler_.txt": 96.6155,
        "NBody_YourKit_.txt": 23.438000000000002,
        "Mandelbrot_not_profiled_": 37.567499999999995,
        "JavaFlightRecorder_NBody_JFR_.jfr": 21.0535,
        "Richards_YourKit_.txt": 91.20599999999999,
        "rebench_test_Async_Storage_Async_.txt": 152.118,
        "DeltaBlue_Perf_.data": 12.995,
        "Json_honest_.hpl": 78.90350000000001,
        "Sieve_YourKit_.txt": 28.313,
        "Queens_YourKit_.txt": 22.2165,
        "Richards_JProfiler_.txt": 91.062,
        "Towers_honest_.hpl": 26.343,
        "CD_Perf_.data": 45.7435,
        "Json_JProfiler_.txt": 1026.8944999999999,
        "Queens_honest_.hpl": 21.7965,
        "Sieve_not_profiled_": 32.2855,
        "Bounce_YourKit_.txt": 14.404499999999999,
        "Bounce_not_profiled_": 26.101,
        "Storage_JProfiler_.txt": 1041.0175,
        "Bounce_honest_.hpl": 26.142,
        "rebench_test_Async_Richards_Async_.txt": 249.6955,
        "JavaFlightRecorder_Queens_JFR_.jfr": 21.756,
        "NBody_not_profiled_": 21.558,
        "Mandelbrot_JProfiler_.txt": 37.418,
        "JavaFlightRecorder_Json_JFR_.jfr": 83.1135,
        "Storage_YourKit_.txt": 60.6395
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.48%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.30%",
            "[.] void nbody.NBodySystem.advance(double)": "96.39%",
            "0xffffffffb4c063aa": "0.14%",
            "0xffffffffb5800d70": "0.11%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.37%",
            "0xffffffffb4c0634b": "0.08%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.14%",
            "[.] void Permute.permute(int)": "97.41%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.41%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.83%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.62%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.93%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.41%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "6.88%",
            "[.] void deltablue.EqualityConstraint.execute()": "4.70%",
            "[.] vtable chunks": "6.91%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "5.88%",
            "[.] void deltablue.Planner.chainTest(int)": "25.33%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.30%",
            "[.] Interpreter": "0.47%",
            "0xffffffffb51c12b7": "0.23%",
            "0xffffffffb4c0634b": "0.12%",
            "[.] boolean Queens.placeQueen(int)": "93.82%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.12%",
            "[.] Interpreter": "0.41%",
            "[.] void Towers.moveDisks(int, int, int)": "96.28%",
            "0xffffffffb4c063aa": "0.12%",
            "0xffffffffb5800d70": "0.11%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.41%",
            "[.] boolean richards.Scheduler.start()": "23.93%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.56%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.56%",
            "[.] void richards.Scheduler.schedule()": "7.47%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.28%",
            "[.] Interpreter": "0.18%",
            "0xffffffffb51c12b7": "0.12%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.88%",
            "0xffffffffb5800d70": "0.11%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.42%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.29%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.59%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.17%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.45%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.29%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c0634b": "0.03%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.59%",
            "[.] Interpreter": "0.44%",
            "[.] java.lang.Object List.benchmark()": "0.38%",
            "0xffffffffb51c12b7": "0.14%",
            "[.] List$Element List.makeList(int)": "0.66%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.42%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "84.51%",
            "[.] java.lang.Object Sieve.benchmark()": "6.12%",
            "[.] int Sieve.sieve(boolean[], int)": "5.96%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.53%",
            "0xffffffffb51c12b7": "0.24%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "[.] java.lang.Object Bounce.benchmark()": "23.68%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.26%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.59%",
            "[.] StubRoutines (2)": "8.20%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.14%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.88%"
        }
    }
}