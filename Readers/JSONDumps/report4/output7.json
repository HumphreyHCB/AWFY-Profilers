{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4694835680751174",
            " ": "0",
            "java.io.OutputStreamWriter.write([CII)V": "0.1564945226917058",
            "Queens.placeQueen(I)Z": "85.44600938967136",
            "Queens.getRowColumn(II)Z": "12.206572769953052",
            "java.util.Arrays.fill([ZZ)V": "0.782472613458529",
            "java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;": "0.1564945226917058",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1564945226917058",
            "Queens.queens()Z": "0.6259780907668232"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.nio.CharBuffer.wrap([CII)Ljava/nio/CharBuffer;": "0.22026431718061673",
            " ": "0",
            "jdk.internal.org.objectweb.asm.Type.getReturnTypeOffset(Ljava/lang/String;)I": "0.22026431718061673",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "92.95154185022027",
            "Bounce.benchmark()Ljava/lang/Object;": "6.607929515418502"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.9889604415823366",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.9199632014719411",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.3118675252989878",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.2419503219871204",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.78196872125115",
            "havlak.HavlakLoopFinder.findLoops()V": "8.44066237350506",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.9898804047838086",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "52.64489420423183",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.6329346826126954",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.7359705611775529"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "8.614864864864865",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.3513513513513513",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.45608108108108",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.618243243243243",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "24.91554054054054",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "1.4358108108108107",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "11.908783783783784",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.95945945945946",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.516891891891892",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.3513513513513513"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.81954887218045",
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.15037593984962405",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "10.225563909774436",
            "List.makeList(I)LList$Element;": "1.8045112781954886"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "8.275862068965518",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "5.862068965517242",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "1.7241379310344829",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.1034482758620694",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "45.862068965517246",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "2.7586206896551726",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "1.7241379310344829",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "9.655172413793103",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "2.0689655172413794",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "7.586206896551724"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.322858903265557",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.55391250770178",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.061614294516327786",
            "sun.invoke.util.BytecodeDescriptor.unparseSig(Ljava/lang/Class;Ljava/lang/StringBuilder;)V": "0.061614294516327786"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.28735632183908044",
            "Sieve.sieve([ZI)I": "99.6168582375479",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.09578544061302682"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "58.87096774193548",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.13440860215053763",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "40.86021505376344",
            "Towers.moveTopDisk(II)V": "0.13440860215053763"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.05511811023622",
            "NBody.innerBenchmarkLoop(I)Z": "0.6299212598425197",
            "java.lang.invoke.Invokers.callSiteForm(Ljava/lang/invoke/MethodType;Z)Ljava/lang/invoke/LambdaForm;": "0.15748031496062992",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.15748031496062992"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.604853764779092",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.24891101431238333",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "5.413814561294338",
            "richards.Scheduler.schedule()V": "58.05849408836341",
            "richards.Scheduler.lambda$createDevice$0(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.06222775357809583",
            "Richards.benchmark()Ljava/lang/Object;": "0.6845052893590542",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "27.131300560049784",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.795892968263846"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.399808703969392",
            "json.JsonPureStringParser.readExponent()Z": "8.464849354375897",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "7.986609277857484",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "37.68531802965088",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.925872788139646",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "23.19464371114299",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "1.0043041606886656",
            "java.lang.StringLatin1.hashCode([B)I": "1.530368244858919",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "8.321377331420372",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.8130081300813008"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "26.642335766423358",
            "jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;)J": "0.12165450121654502",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.12165450121654502",
            "Permute.permute(I)V": "72.87104622871047",
            "Permute.benchmark()Ljava/lang/Object;": "0.24330900243309003"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.8",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "2.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "46.0",
            "richards.HandlerTaskDataRecord::workInAdd": "1.9",
            "richards.TaskControlBlock::<init>": "2.8",
            "richards.Scheduler::schedule": "6.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "3.0",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::hash": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::push": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.zip.ZipFile$Source::findEND": "0.0",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet::get": "0.0",
            "Mandelbrot::mandelbrot": "97.8",
            "java.lang.invoke.InvokerBytecodeGenerator::emitPushArguments": "0.0",
            "java.lang.String::getChars": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.2",
            "List::makeList": "0.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "List::tail": "1.9",
            "List::isShorterThan": "81.2",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.4",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "12.7",
            "java.lang.String::<init>": "4.3",
            "java.lang.String::length": "3.8",
            "java.util.Arrays::copyOfRange": "8.3",
            "java.lang.String::equals": "19.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "10.1",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readValue": "2.7",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.9",
            "havlak.HavlakLoopFinder::findLoops": "5.7",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.9",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.2",
            "havlak.HavlakLoopFinder::doDFS": "5.2",
            "som.Vector::hasSome": "2.1",
            "som.Vector::forEach": "2.4"
        },
        "Permute.hpl": {
            "Permute::swap": "41.0",
            "java.lang.invoke.BoundMethodHandle$Species_LLLLLLL::copyWithExtendL": "0.0",
            "Permute::permute": "51.0",
            "java.lang.StringLatin1::equals": "0.0",
            "Permute::benchmark": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "5.7"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "54.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "Queens::benchmark": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "12.9",
            "Queens::setRowColumn": "26.3",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.8",
            "java.util.Arrays::setAll": "35.2",
            "som.Random::next": "11.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.3",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.6",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.3"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "5.7",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.AbstractStringBuilder::putStringAt": "0.0",
            "Sieve::sieve": "85.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "jdk.internal.org.objectweb.asm.SymbolTable$Entry::<init>": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "5.2"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "3.6",
            "deltablue.Variable::<init>": "2.5",
            "som.Vector::append": "5.8",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.0",
            "AGCT::Unknown not Java[ERR=-3]": "11.5",
            "AGCT::Unknown Java[ERR=-5]": "17.0",
            "deltablue.AbstractConstraint::satisfy": "3.6",
            "deltablue.EqualityConstraint::execute": "2.0",
            "som.Vector::<init>": "2.5",
            "som.Vector::forEach": "27.3"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.7",
            "Bounce$Ball::bounce": "76.4",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.6",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "Bounce$Ball::<init>": "1.5",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.9",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.2",
            "nbody.Body::getZ": "8.1",
            "nbody.Body::setVX": "27.7",
            "nbody.Body::setVY": "5.9",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "nbody.NBodySystem::advance": "40.0"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.6",
            "Towers::popDiskFrom": "22.8",
            "Towers::moveDisks": "4.0",
            "Towers::buildTowerAt": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "Towers::pushDisk": "39.3",
            "Towers$TowersDisk::setNext": "17.1",
            "AGCT::Unknown Java[ERR=-5]": "2.0",
            "Towers::moveTopDisk": "5.7",
            "Towers$TowersDisk::getNext": "3.0"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "13.7",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "3.1",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "9.9",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "4.1",
            "cd.CollisionDetector::isInVoxel": "22.0",
            "cd.RedBlackTree::treeInsert": "13.7"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.satisfy": "3.14%",
            "deltablue.UnaryConstraint.<init>": "11.21%",
            "som.Vector.append": "7.11%",
            "som.Vector.forEach": "4.90%",
            "itable": "4.63%",
            "deltablue.Planner.addPropagate": "3.12%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.89%",
            "deltablue.Strength.of": "3.48%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.06%",
            "deltablue.BinaryConstraint.getOutput": "1.77%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "75.65%",
            "som.Random.next": "0.87%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.65%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "17.83%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "1.77%",
            "Bounce.lambda$benchmark$0": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.68%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.59%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.85%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.24%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.34%",
            "java.util.Arrays.setAll": "35.34%",
            "Storage.lambda$buildTreeDepth$0": "4.23%",
            "SpinPause": "0.19%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.33%",
            "Storage.buildTreeDepth": "43.45%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.88%",
            "Towers.popDiskFrom": "18.66%",
            "Towers.moveDisks": "8.92%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.57%",
            "Towers.moveTopDisk": "4.83%",
            "Towers$TowersDisk.getSize": "0.36%",
            "Towers$TowersDisk.getNext": "3.80%",
            "Towers.benchmark": "0.12%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.46%",
            "cd.CollisionDetector.isInVoxel": "19.58%",
            "cd.RedBlackTree.forEach": "6.28%",
            "Node::set_req_X(unsigned": "4.07%",
            "cd.RedBlackTree.put": "6.57%",
            "cd.RedBlackTree.treeInsert": "11.85%",
            "cd.RedBlackTree.treeMinimum": "5.39%",
            "cd.RedBlackTree.findNode": "2.71%",
            "cd.Vector2D.compareNumbers": "3.93%",
            "cd.RedBlackTree.leftRotate": "2.11%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.66%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.93%",
            "som.Vector.hasSome": "2.00%",
            "som.Vector.append": "2.62%",
            "som.IdentitySet.lambda$contains$0": "32.09%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.71%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.20%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.12%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.84%",
            "havlak.HavlakLoopFinder.doDFS": "5.29%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.18%",
            "Sieve.benchmark": "7.23%",
            "Interpreter": "0.05%",
            "void": "0.02%",
            "Sieve.sieve": "83.82%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.08%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.28%",
            "Permute.swap": "40.55%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.69%",
            "nbody.Body.getZ": "7.65%",
            "nbody.Body.getY": "0.73%",
            "nbody.Body.setX": "1.19%",
            "nbody.Body.setY": "1.74%",
            "nbody.Body.setVX": "27.74%",
            "nbody.Body.setVY": "5.61%",
            "nbody.Body.getMass": "0.48%",
            "nbody.Body.getVZ": "0.46%",
            "nbody.NBodySystem.advance": "41.94%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.29%",
            "Interpreter": "0.04%",
            "List.makeList": "1.10%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.47%",
            "List$Element.length": "0.16%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "81.99%",
            "List$Element.<init>": "0.26%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.54%",
            "java.lang.String.length": "2.85%",
            "java.lang.String.substring": "2.90%",
            "java.lang.String.<init>": "5.12%",
            "java.lang.String.isLatin1": "3.34%",
            "json.JsonPureStringParser.isDigit": "2.30%",
            "json.JsonPureStringParser.readStringInternal": "6.49%",
            "java.util.Arrays.copyOfRange": "8.64%",
            "java.lang.String.equals": "23.74%",
            "json.JsonPureStringParser.read": "12.50%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.09%",
            "Queens.getRowColumn": "57.60%",
            "Queens.setRowColumn": "23.72%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.64%",
            "Queens.placeQueen": "13.69%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.06%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.07%",
            "Richards.benchmark": "4.62%",
            "richards.Packet.<init>": "6.94%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.20%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.73%",
            "itable": "37.16%",
            "richards.TaskControlBlock.<init>": "3.19%",
            "richards.RBObject.<init>": "5.78%",
            "richards.RBObject.append": "2.88%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.02%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "4.3",
            "Towers.moveDisks": "94.4",
            "java.io.PrintStream.println": "0.1",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.2"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.util.Arrays.fill": "0.2",
            "Sieve.benchmark": "6.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.8",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.1",
            "deltablue.AbstractConstraint.satisfy": "10.1",
            "deltablue.Planner.removePropagateFrom": "9.8",
            "som.Vector.<init>": "31.4",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "8.2",
            "deltablue.Planner.addPropagate": "2.1",
            "deltablue.AbstractConstraint.<init>": "4.5",
            "deltablue.Planner.constraintsConsuming": "4.3",
            "deltablue.Planner.addConstraintsConsumingTo": "17.7"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "som.Dictionary$Entry.<init>": "3.5",
            "som.Vector.<init>": "42.3",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.1",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "3.9"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "Run.reportBenchmark": "0.1",
            "richards.Scheduler.schedule": "14.1",
            "richards.Scheduler.createWorker": "0.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.Scheduler.queuePacket": "0.0",
            "richards.TaskControlBlock.runTask": "84.3",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.6"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "Bounce$Ball.bounce": "0.0",
            " ": "0",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "55.6",
            "Bounce$Ball.<init>": "43.0",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "2.0",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.0",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.8",
            "cd.RedBlackTree$Entry.<init>": "5.0"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.1",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.8",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.1",
            "List$Element.length": "0.2",
            "Run.printTotal": "0.1",
            "List.isShorterThan": "74.8",
            "List$Element.<init>": "20.9",
            "Run.printResult": "0.3",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "Run.runBenchmark": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.6",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "27.9",
            "Queens.placeQueen": "71.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.863687109412012",
            "java.lang.String.<init>(byte[], byte) String.java": "6.125820312017236",
            "json.JsonPureStringParser.isDigit()": "1.8785299679084464",
            "json.JsonPureStringParser.read()": "20.60615548131151",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.1885574455288106",
            "java.lang.String.length() String.java": "2.6324137050295993",
            "java.lang.String.substring(int, int) String.java": "10.356632323074198",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "8.00846986318864",
            "json.JsonPureStringParser.readValue()": "3.7776578521316786",
            "json.JsonPureStringParser.readStringInternal()": "3.2544707777361244"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.7610979475694335",
            "som.Vector.hasSome(TestInterface)": "2.5620219200017313",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.448624319733412",
            "havlak.HavlakLoopFinder.findLoops()": "11.22399298906164",
            "som.Vector.<init>(int)": "3.328031852164411",
            "som.Vector.append(Object)": "3.8516883594620626",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.166736992437276",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.522488017570624",
            "som.Vector.removeAll()": "2.996959762839863",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "36.989191470025"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.247904422391363",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.41750971512990964",
            "Queens.getRowColumn(int, int)": "60.972476474933345",
            "Queens.queens()": "1.1240646176574491",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.24087098949802482",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.40145164916337467",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.17663872563188487",
            "Queens.setRowColumn(int, int, boolean)": "22.609756880881264",
            "com.yourkit.probes.Table.createRow() a": "0.14452259369881487",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14452259369881487"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.092892934661265",
            "richards.Scheduler$$Lambda$11.0x00000008000c7ba0.apply(Packet, RBObject)": "3.5540817036166725",
            "richards.TaskControlBlock.runTask()": "40.74566171437775",
            "richards.Scheduler$$Lambda$10.0x00000008000c7978.apply(Packet, RBObject)": "3.912784079470878",
            "richards.Scheduler.<init>()": "1.7861914226209437",
            "richards.Scheduler.schedule()": "2.1814960817255784",
            "richards.RBObject.append(Packet, Packet)": "3.111194076286479",
            "richards.Packet.<init>(Packet, int, int)": "1.5629174947933255",
            "Richards.benchmark()": "25.742385810026835",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.8850175873971025"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.3390090001421652",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.8529903874544801",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.36581258270181",
            "som.Random.next()": "15.807661603403217",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.15310083877388103",
            "Storage.buildTreeDepth(int, Random)": "34.76482617586913",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.1604387432608303",
            "jdk.internal.misc.Unsafe.allocateInstance(Class) Unsafe.java (native)": "0.15310083877388103",
            "Storage$$Lambda$8.0x00000008000c2a98.apply(int)": "0.5959996937983226",
            "Storage$$Lambda$8.0x00000008000c2a98.<init>(Storage, int, Random)": "0.21324759686362002"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "36.04189947564255",
            "Towers.popDiskFrom(int)": "28.89491974997851",
            "Towers.moveDisks(int, int, int)": "7.208379895128511",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.11052030503604189",
            "Towers$TowersDisk.getSize()": "1.9279653211842864",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11052030503604189",
            "Towers.moveTopDisk(int, int)": "9.210025419670158",
            "java.lang.String.length() String.java": "0.17192047450050962",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "16.050004298011864",
            "java.lang.invoke.MethodHandle.invokeBasic(Object[]) MethodHandle.java (native)": "0.11052030503604189"
        },
        "YourKit_Permute.txt": {
            "java.lang.StringConcatHelper.newArrayWithSuffix(String, long) StringConcatHelper.java": "0.10007561268513987",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.04447805008228439",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.07783658764399769",
            "Permute.permute(int)": "56.72063336743317",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.22239025041142194",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.14455366276742426",
            "Permute.benchmark()": "0.5448561135079837",
            "sun.nio.fs.UnixFileAttributes.asBasicFileAttributes() UnixFileAttributes.java": "0.18903171284970866",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.10007561268513987",
            "Permute.swap(int, int)": "41.72041097718276"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.197666776207689",
            "deltablue.Variable.<init>()": "2.115511008872822",
            "som.Vector.forEach(ForEachInterface)": "38.71590535655602",
            "deltablue.EqualityConstraint.execute()": "10.33108774235951",
            "deltablue.BinaryConstraint.getOutput()": "2.1565888925402557",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.3414393690437065",
            "java.util.Arrays.copyOf(Object[], int) Arrays.java": "2.136049950706539",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "3.6764705882352935",
            "som.Vector.append(Object)": "10.002464673020043",
            "deltablue.Strength.of(Strength$Sym)": "2.752218205718041"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "4.826840397752749",
            "List.makeList(int)": "0.6594044259225067",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0791285311107008",
            "Benchmark.innerBenchmarkLoop(int)": "0.1186927966660512",
            "java.util.zip.ZipUtils.getBufferArray(ByteBuffer) ZipUtils.java": "0.1186927966660512",
            "List$Element.getNext()": "22.64394798617888",
            "com.yourkit.probes.TableIntBytes.<init>(ResourceRegistry, String, long) a": "0.10550470814760107",
            "List.isShorterThan(List$Element, List$Element)": "70.89916387518792",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.1582570622214016",
            "com.yourkit.probes.Table.createRow() a": "0.1186927966660512"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.3617343465636766",
            "nbody.Body.getZ()": "6.77956683013573",
            "nbody.Body.getX()": "0.541809644211667",
            "nbody.Body.getVZ()": "0.8196607438073936",
            "nbody.Body.setZ(double)": "0.6529500840499576",
            "nbody.NBodySystem.advance(double)": "44.984093024548145",
            "nbody.Body.setVY(double)": "4.681791028187994",
            "nbody.Body.setVZ(double)": "10.044317250385518",
            "nbody.Body.setVX(double)": "26.729275781108903",
            "nbody.Body.setY(double)": "0.458454314332949"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.49594564979178",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.05259697567389874",
            "java.util.zip.ZipFile.getInputStream(ZipEntry) ZipFile.java": "0.07012930089853166",
            "java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(Class, String, MethodType) InvokerBytecodeGenerator.java": "0.0613631382862152",
            "java.util.zip.ZipFile.<clinit>() ZipFile.java": "0.017532325224632914",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.07012930089853166",
            "java.util.concurrent.atomic.AtomicLong.addAndGet(long) AtomicLong.java": "0.07889546351084811",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.043830813061582284",
            "java.util.zip.ZipFile$InflaterCleanupAction.<init>(Inflater, ZipFile$CleanableResource) ZipFile.java": "0.017532325224632914",
            "sun.nio.fs.NativeBuffer.release() NativeBuffer.java": "0.07012930089853166"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.5889021256190667",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.889553222894047",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.2357286819963",
            "cd.RedBlackTree.findNode(Comparable)": "9.04343395745765",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.451527343837801",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.4690223051390983",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.180314234979433",
            "cd.RedBlackTree.put(Comparable, Object)": "6.391092929338338",
            "cd.Vector2D.compareNumbers(double, double)": "8.88609169307769",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.7986918114590122"
        },
        "YourKit_Sieve.txt": {
            "java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int) ConcurrentHashMap.java": "0.13962880219969065",
            "java.lang.invoke.InvokerBytecodeGenerator.storeInsnOpcode(LambdaForm$BasicType) InvokerBytecodeGenerator.java": "0.10740677092283896",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.09666609383055506",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.11814744801512285",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.8473964598728303",
            "Sieve.benchmark()": "89.3731740848943",
            "sun.invoke.util.Wrapper.hashPrim(Class) Wrapper.java": "0.10740677092283896",
            "java.util.stream.ReferencePipeline.<init>(Spliterator, int, boolean) ReferencePipeline.java": "0.11814744801512285",
            "Sieve.sieve(boolean[], int)": "7.6366214126138505",
            "jdk.internal.misc.Unsafe.getAndAddLong(Object, long, long) Unsafe.java": "0.09666609383055506"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.18020543419498225",
            "java.lang.invoke.MethodHandles.insertArgumentPrimitive(BoundMethodHandle, int, Class, Object) MethodHandles.java": "0.16018260817331756",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, long, Object) DirectMethodHandle$Holder": "0.18020543419498225",
            "Bounce.benchmark()": "65.33448130869189",
            "Benchmark.innerBenchmarkLoop(int)": "0.5806619546282761",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.2803195643033057",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.18020543419498225",
            "com.yourkit.probes.Table.createRow() a": "0.460524998498288",
            "Bounce$Ball.bounce()": "31.95643033057685",
            "Bounce$Ball.<init>(Random)": "0.38043369441162916"
        }
    },
    "Runtimes": {
        "NBody.data": 22.177500000000002,
        "YourKit_Storage.txt": 61.281,
        "rebench_test_Async_Bounce.txt": 68.2165,
        "Permute_not_profiled_": 29.7485,
        "JavaFlightRecorder_Sieve.jfr": 35.6995,
        "CD_not_profiled_": 41.858999999999995,
        "JProfiler_NBody.txt": 21.378,
        "JProfiler_List.txt": 29.203,
        "YourKit_Mandelbrot.txt": 37.614,
        "CD.data": 44.076499999999996,
        "Json_not_profiled_": 79.2535,
        "List.data": 24.075499999999998,
        "Queens_not_profiled_": 21.66,
        "Towers.hpl": 26.4435,
        "Bounce.hpl": 25.7515,
        "JavaFlightRecorder_Json.jfr": 79.342,
        "Sieve.data": 32.527,
        "Richards.hpl": 90.564,
        "YourKit_Richards.txt": 91.3945,
        "JavaFlightRecorder_Havlak.jfr": 153.657,
        "JavaFlightRecorder_CD.jfr": 41.481,
        "JavaFlightRecorder_Towers.jfr": 25.763,
        "rebench_test_Async_CD.txt": 131.808,
        "List_not_profiled_": 22.386000000000003,
        "Havlak_not_profiled_": 153.7525,
        "JProfiler_Json.txt": 1036.9495,
        "rebench_test_Async_NBody.txt": 56.6595,
        "JavaFlightRecorder_Bounce.jfr": 15.0735,
        "Havlak.data": 156.809,
        "Towers_not_profiled_": 25.889000000000003,
        "YourKit_DeltaBlue.txt": 11.8575,
        "rebench_test_Async_Towers.txt": 69.92150000000001,
        "YourKit_NBody.txt": 23.041,
        "JavaFlightRecorder_NBody.jfr": 21.375,
        "rebench_test_Async_Sieve.txt": 82.45349999999999,
        "Storage.hpl": 58.4545,
        "JProfiler_Queens.txt": 27.186,
        "rebench_test_Async_List.txt": 66.898,
        "rebench_test_Async_Richards.txt": 249.404,
        "YourKit_Towers.txt": 27.45,
        "JProfiler_Havlak.txt": 1904.79,
        "JavaFlightRecorder_List.jfr": 22.9805,
        "YourKit_Permute.txt": 29.7975,
        "Queens.data": 22.523,
        "Storage_not_profiled_": 60.981,
        "Json.hpl": 79.339,
        "Towers.data": 27.0035,
        "YourKit_List.txt": 24.951,
        "JProfiler_CD.txt": 479.937,
        "JProfiler_Permute.txt": 29.9035,
        "Sieve.hpl": 30.450499999999998,
        "DeltaBlue_not_profiled_": 14.725999999999999,
        "CD.hpl": 41.283500000000004,
        "JavaFlightRecorder_Queens.jfr": 21.5345,
        "JProfiler_Bounce.txt": 44.234,
        "Permute.hpl": 29.4745,
        "Richards_not_profiled_": 90.9645,
        "DeltaBlue.hpl": 14.878,
        "NBody.hpl": 21.258,
        "JProfiler_Towers.txt": 26.818,
        "JProfiler_Mandelbrot.txt": 37.623,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.0785,
        "rebench_test_Async_Mandelbrot.txt": 108.812,
        "YourKit_CD.txt": 43.677,
        "rebench_test_Async_Permute.txt": 78.946,
        "Mandelbrot.data": 38.901,
        "JProfiler_Storage.txt": 1041.1715,
        "YourKit_Sieve.txt": 28.4065,
        "JavaFlightRecorder_Permute.jfr": 29.576500000000003,
        "YourKit_Bounce.txt": 14.27,
        "JProfiler_Sieve.txt": 27.1295,
        "JProfiler_DeltaBlue.txt": 97.4025,
        "YourKit_Queens.txt": 22.5625,
        "Mandelbrot.hpl": 37.46,
        "JavaFlightRecorder_Storage.jfr": 57.712500000000006,
        "List.hpl": 22.357,
        "Mandelbrot_not_profiled_": 38.0005,
        "Queens.hpl": 20.872,
        "Storage.data": 65.8075,
        "JavaFlightRecorder_Richards.jfr": 93.64500000000001,
        "Bounce.data": 27.4745,
        "Permute.data": 31.255,
        "YourKit_Json.txt": 78.0695,
        "rebench_test_Async_DeltaBlue.txt": 34.2215,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.12,
        "YourKit_Havlak.txt": 153.388,
        "DeltaBlue.data": 12.227,
        "JProfiler_Richards.txt": 92.6395,
        "rebench_test_Async_Storage.txt": 151.0765,
        "Sieve_not_profiled_": 31.231,
        "Havlak.hpl": 152.4675,
        "Richards.data": 93.29750000000001,
        "rebench_test_Async_Havlak.txt": 454.2815,
        "Bounce_not_profiled_": 25.7815,
        "NBody_not_profiled_": 21.305500000000002,
        "Json.data": 87.003,
        "rebench_test_Async_Json.txt": 250.71800000000002,
        "rebench_test_Async_Queens.txt": 55.8385
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.05%",
            "[.] Interpreter": "0.52%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.30%",
            "[.] void nbody.NBodySystem.advance(double)": "0.05%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.33%",
            "0xffffffffb4c0634b": "0.07%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.16%",
            "[.] void Permute.permute(int)": "97.50%",
            "0xffffffffb4c063aa": "0.09%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.37%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.12%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.65%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.93%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.07%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.StayConstraint.<init>(deltablue.Variable, deltablue.Strength$Sym, deltablue.Planner)": "3.44%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.98%",
            "[.] vtable chunks": "6.05%",
            "[.] boolean deltablue.Planner.addPropagate(deltablue.AbstractConstraint, int)": "6.37%",
            "[.] void deltablue.Planner.chainTest(int)": "25.47%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.13%",
            "[.] Interpreter": "0.45%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] boolean Queens.placeQueen(int)": "94.07%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Towers.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.14%",
            "[.] Interpreter": "0.38%",
            "[.] void Towers.moveDisks(int, int, int)": "96.33%",
            "0xffffffffb4c0634b": "0.16%",
            "0xffffffffb4c063aa": "0.19%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.88%",
            "[.] boolean richards.Scheduler.start()": "23.12%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.90%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.68%",
            "[.] void richards.Scheduler.schedule()": "7.96%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.58%",
            "[.] Interpreter": "0.20%",
            "0xffffffffb51c12b7": "0.15%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.63%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "17.45%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.81%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.12%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.58%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.36%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.26%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.41%",
            "0xffffffffb4c063aa": "0.05%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.98%",
            "[.] Interpreter": "0.51%",
            "[.] java.lang.Object List.benchmark()": "0.35%",
            "0xffffffffb51c12b7": "0.14%",
            "[.] List$Element List.makeList(int)": "0.61%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.40%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "83.92%",
            "[.] java.lang.Object Sieve.benchmark()": "6.01%",
            "[.] int Sieve.sieve(boolean[], int)": "6.60%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.42%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "[.] java.lang.Object Bounce.benchmark()": "23.52%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.98%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.26%",
            "[.] StubRoutines (2)": "8.26%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.74%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.63%"
        }
    }
}