{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.08849557522123894",
            "Mandelbrot.mandelbrot(I)I": "99.82300884955752",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.08849557522123894"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.631911532385466",
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.1579778830963665",
            "Queens.placeQueen(I)Z": "89.0995260663507",
            "Queens.getRowColumn(II)Z": "9.004739336492891",
            "java.util.Arrays.fill([ZZ)V": "0.7898894154818326",
            "Queens.queens()Z": "0.315955766192733"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.14947683109118087",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "95.66517189835577",
            "Bounce$Ball.bounce()Z": "0.14947683109118087",
            "Bounce.benchmark()Ljava/lang/Object;": "4.0358744394618835"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.splitBucket([Lsom/Dictionary$Entry;ILsom/Dictionary$Entry;)V": "1.2932047966141549",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.9875382083235364",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "1.6694098283564545",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.879614389842464",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "24.38278861979779",
            "havlak.HavlakLoopFinder.findLoops()V": "8.111920996943335",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "3.0331530684222905",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "53.70326828121326",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "0.940512579355749",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.7288972490007054"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.205020920502092",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.9246861924686192",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.481171548117153",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.426778242677824",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "22.845188284518827",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "1.1715481171548117",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "11.715481171548117",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.928870292887026",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.698744769874477",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.0878661087866108"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "88.76755070202809",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "9.67238689547582",
            "List.makeList(I)LList$Element;": "1.5600624024960998"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "6.312292358803987",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "10.631229235880399",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "2.3255813953488373",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.654485049833887",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "45.84717607973422",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "4.651162790697675",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.3255813953488373",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "2.6578073089700998",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "5.3156146179401995",
            "deltablue.Planner.incrementalAdd(Ldeltablue/AbstractConstraint;)V": "4.318936877076412"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.lang.invoke.BoundMethodHandle.<init>(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;)V": "0.06234413965087282",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.965087281795512",
            "java.lang.invoke.MethodType.dropParameterTypes(II)Ljava/lang/invoke/MethodType;": "0.06234413965087282",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "85.84788029925187",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.06234413965087282"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.31948881789137384",
            "java.util.Arrays.fill([ZZ)V": "0.10649627263045794",
            "Sieve.sieve([ZI)I": "99.57401490947817"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "58.63453815261044",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.13386880856760375",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "41.231593038821956"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.16051364365971107",
            "nbody.NBodySystem.advance(D)V": "99.51845906902086",
            "nbody.Body.getVX()D": "0.16051364365971107",
            "NBody.innerBenchmarkLoop(I)Z": "0.16051364365971107"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.807692307692308",
            " ": "0",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.06868131868131869",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.6181318681318682",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.983516483516484",
            "richards.Scheduler.schedule()V": "58.24175824175825",
            "Richards.benchmark()Ljava/lang/Object;": "1.0302197802197803",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "27.335164835164836",
            "richards.IdleTaskDataRecord.setControl(I)V": "0.06868131868131869",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.8461538461538467"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.readName()Ljava/lang/String;": "5.646290247316846",
            "json.JsonPureStringParser.readExponent()Z": "7.419505366308913",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "11.805879608026132",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "29.491367242183856",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "8.912739150723285",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "17.73215118992067",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "3.686420905272982",
            "java.lang.StringLatin1.hashCode([B)I": "1.9598693420438638",
            "som.Vector.append(Ljava/lang/Object;)V": "6.719552029864675",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "4.993000466635558"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.nio.Buffer.remaining()I": "0.12239902080783353",
            "Permute.swap(II)V": "27.66217870257038",
            "java.nio.charset.CoderResult.isOverflow()Z": "0.12239902080783353",
            "Permute.permute(I)V": "71.84822521419828",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12239902080783353",
            "Permute.benchmark()Ljava/lang/Object;": "0.12239902080783353"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.1",
            "richards.Packet::setLink": "2.0",
            "Richards::benchmark": "4.9",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "46.6",
            "richards.HandlerTaskDataRecord::workInAdd": "2.0",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.8",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "sun.invoke.util.Wrapper::<clinit>": "0.0",
            "java.lang.StringConcatHelper::newArray": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "98.0",
            "java.nio.file.FileSystems$DefaultFileSystemHolder::defaultFileSystem": "0.0",
            "jdk.internal.org.objectweb.asm.Handler::getExceptionTableLength": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.8",
            "List::makeList": "0.8",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "79.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "16.2",
            "java.lang.String::<init>": "5.3",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "3.1",
            "java.util.Arrays::copyOfRange": "7.0",
            "java.lang.String::equals": "22.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "10.5",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "9.0"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.1",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.3",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "8.0",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.2",
            "havlak.HavlakLoopFinder::doDFS": "5.2",
            "som.Vector::<init>": "1.8",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "40.9",
            "java.lang.Long::getChars": "0.0",
            "Permute::permute": "50.9",
            "jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "5.8",
            "sun.nio.cs.US_ASCII$Encoder::encodeLoop": "0.0",
            "java.nio.Buffer::<init>": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "65.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "5.0",
            "AGCT::Unknown Java[ERR=-5]": "0.6",
            "Queens::placeQueen": "8.2",
            "Queens::setRowColumn": "18.8",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.3",
            "Storage::buildTreeDepth": "40.0",
            "java.util.Arrays::setAll": "34.0",
            "som.Random::next": "11.9",
            "AGCT::Unknown not Java[ERR=-3]": "5.3",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.5",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.6",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "0.9"
        },
        "Sieve.hpl": {
            "java.util.ImmutableCollections$List12::<init>": "0.0",
            "java.lang.invoke.MethodHandles$Lookup$ClassFile::newInstance": "0.0",
            "Sieve::benchmark": "5.6",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "82.4",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "9.6"
        },
        "DeltaBlue.hpl": {
            "deltablue.BinaryConstraint::<init>": "13.9",
            "java.util.Arrays::setAll": "2.6",
            "deltablue.Variable::<init>": "6.0",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "5.1",
            "som.Vector::append": "4.5",
            "AGCT::Unknown not Java[ERR=-3]": "13.2",
            "AGCT::Unknown Java[ERR=-5]": "14.6",
            "deltablue.AbstractConstraint::satisfy": "2.6",
            "som.Vector::<init>": "3.3",
            "som.Vector::forEach": "5.0"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.6",
            "Bounce$Ball::bounce": "75.7",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.6",
            "AGCT::Deopt[ERR=-9]": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.1",
            "nbody.Body::getY": "0.7",
            "nbody.Body::getVZ": "0.5",
            "nbody.Body::setVZ": "8.7",
            "nbody.Body::getZ": "8.0",
            "nbody.Body::setVX": "29.5",
            "nbody.Body::setVY": "5.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "nbody.NBodySystem::advance": "40.9"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.4",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Towers::popDiskFrom": "23.1",
            "Towers::moveDisks": "3.7",
            "AGCT::Unknown not Java[ERR=-3]": "5.1",
            "Towers::pushDisk": "38.0",
            "Towers$TowersDisk::setNext": "17.1",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Towers::moveTopDisk": "5.7",
            "Towers$TowersDisk::getNext": "2.7"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.2",
            "cd.RedBlackTree::forEach": "3.4",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "4.7",
            "cd.RedBlackTree::treeMinimum": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "8.3",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.Vector2D::compareNumbers": "6.5",
            "cd.CollisionDetector::isInVoxel": "21.7",
            "cd.RedBlackTree::treeInsert": "14.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.satisfy": "2.11%",
            "som.Dictionary.at": "3.61%",
            "deltablue.UnaryConstraint.<init>": "2.09%",
            "som.Vector.append": "10.49%",
            "som.Vector.<init>": "1.67%",
            "som.Vector.forEach": "5.11%",
            "itable": "2.96%",
            "deltablue.Planner.addPropagate": "1.97%",
            "deltablue.Planner.chainTest": "1.57%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "2.01%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "79.90%",
            "som.Random.next": "1.11%",
            "Interpreter": "0.03%",
            "java.util.Arrays.setAll": "0.87%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "13.73%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.08%",
            "Bounce$Ball.<init>": "2.09%",
            "Bounce.lambda$benchmark$0": "0.20%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.01%",
            "G1ServiceThread::sleep_before_next_cycle()": "0.01%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "99.43%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.00%",
            "LinearScan::build_intervals()": "0.00%",
            "LinearScan::allocate_registers()": "0.00%",
            "[no_Java_frame]": "0.00%",
            "__tls_get_addr": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.67%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.51%",
            "som.Random.next": "12.31%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.28%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.41%",
            "java.util.Arrays.setAll": "34.96%",
            "Storage.lambda$buildTreeDepth$0": "3.61%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.22%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.39%",
            "Storage.buildTreeDepth": "43.29%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "18.36%",
            "Towers.popDiskFrom": "19.14%",
            "Towers.moveDisks": "9.08%",
            "Towers.pushDisk": "43.51%",
            "Towers.moveTopDisk": "4.94%",
            "Towers$TowersDisk.getSize": "0.41%",
            "Towers.buildTowerAt": "0.03%",
            "Towers$TowersDisk.getNext": "3.80%",
            "Towers.benchmark": "0.08%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "10.96%",
            "cd.CollisionDetector.isInVoxel": "14.60%",
            "cd.RedBlackTree.forEach": "6.28%",
            "cd.RedBlackTree.put": "7.22%",
            "cd.RedBlackTree.treeInsert": "21.82%",
            "cd.RedBlackTree.findNode": "8.52%",
            "cd.RedBlackTree.treeMinimum": "7.14%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.27%",
            "cd.Vector2D.compareNumbers": "2.96%",
            "cd.RedBlackTree.leftRotate": "2.60%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.32%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.58%",
            "som.Vector.hasSome": "2.10%",
            "som.Vector.append": "2.59%",
            "havlak.HavlakLoopFinder.stepD": "3.18%",
            "som.IdentitySet.lambda$contains$0": "32.32%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.63%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.07%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.96%",
            "havlak.HavlakLoopFinder.doDFS": "5.70%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "11.60%",
            "Sieve.benchmark": "6.43%",
            "Interpreter": "0.03%",
            "Sieve.sieve": "79.54%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.05%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.23%",
            "Permute.swap": "40.94%",
            "Permute.benchmark": "0.04%",
            "Interpreter": "0.01%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "Permute.verifyResult": "0.01%",
            "Monitor::wait_without_safepoint_check(long)": "0.01%",
            "__tls_get_addr": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.05%",
            "nbody.Body.getZ": "7.92%",
            "nbody.Body.getY": "0.75%",
            "nbody.Body.setX": "1.22%",
            "nbody.Body.setY": "1.81%",
            "nbody.Body.setVX": "28.10%",
            "nbody.Body.setVY": "5.71%",
            "nbody.Body.getVZ": "0.46%",
            "nbody.Body.getMass": "0.45%",
            "nbody.NBodySystem.advance": "42.64%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.21%",
            "Interpreter": "0.02%",
            "List.makeList": "1.05%",
            "List$Element.setNext": "0.08%",
            "List.tail": "4.43%",
            "List$Element.length": "0.11%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "83.20%",
            "List$Element.<init>": "0.24%",
            "Benchmark.innerBenchmarkLoop": "0.04%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.40%",
            "java.lang.String.length": "2.94%",
            "java.lang.String.<init>": "6.81%",
            "json.JsonPureStringParser.readArray": "2.71%",
            "java.lang.String.isLatin1": "2.95%",
            "json.JsonPureStringParser.readStringInternal": "8.00%",
            "java.util.Arrays.copyOfRange": "7.69%",
            "java.lang.String.equals": "22.30%",
            "json.JsonPureStringParser.read": "15.31%",
            "json.JsonPureStringParser.readValue": "2.57%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.21%",
            "Queens.getRowColumn": "57.15%",
            "Queens.setRowColumn": "24.11%",
            "Interpreter": "0.02%",
            "Queens.queens": "0.70%",
            "Queens.placeQueen": "15.41%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.01%",
            "__tls_get_addr": "0.01%",
            "Queens.benchmark": "0.07%",
            "Benchmark.innerBenchmarkLoop": "0.06%"
        },
        "rebench_test_Async_Richards.txt": {
            "Richards.benchmark": "28.80%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.42%",
            "richards.Scheduler$$Lambda$2.0x0000000800c07c78.apply": "1.38%",
            "richards.TaskState.createRunning": "2.22%",
            "richards.HandlerTaskDataRecord.workInAdd": "3.98%",
            "itable": "38.01%",
            "richards.RBObject.append": "2.31%",
            "richards.Scheduler.createTask": "2.21%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "3.77%",
            "richards.Packet.setLink": "1.44%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "5.7",
            "Towers.moveDisks": "92.7",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "6.4",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.3",
            "java.lang.Integer.valueOf": "0.8",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.0",
            "deltablue.AbstractConstraint.satisfy": "10.8",
            "deltablue.Planner.removePropagateFrom": "9.3",
            "som.Vector.<init>": "27.9",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "7.2",
            "deltablue.Planner.addPropagate": "1.8",
            "deltablue.Planner.constraintsConsuming": "4.7",
            "deltablue.AbstractConstraint.<init>": "3.8",
            "deltablue.Planner.addConstraintsConsumingTo": "21.1"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.4",
            "havlak.UnionFindNode.<init>": "3.4",
            "som.Vector.<init>": "42.2",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.5",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.8",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.createHandler": "0.0",
            "richards.Scheduler.schedule": "14.5",
            "richards.Packet.<init>": "0.1",
            "richards.HandlerTaskDataRecord.workInAdd": "3.1",
            "Run.runBenchmark": "0.0",
            "richards.Scheduler.queuePacket": "0.0",
            "richards.TaskControlBlock.runTask": "81.2",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.util.Arrays.setAll": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "53.2",
            "Bounce$Ball.<init>": "45.6",
            "Bounce.lambda$benchmark$0": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.4",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.9",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.4",
            "List$Element.length": "0.1",
            "Run.printTotal": "0.1",
            "List.isShorterThan": "72.4",
            "List$Element.<init>": "24.2",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "100.0",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "1.0",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.8",
            "java.lang.String.substring": "90.7",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.5",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "30.0",
            "Queens.placeQueen": "69.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.783977207782797",
            "java.lang.String.<init>(byte[], byte) String.java": "6.917847363796885",
            "json.JsonPureStringParser.isWhiteSpace()": "2.030145095664191",
            "json.JsonPureStringParser.read()": "20.11379048561412",
            "java.lang.String.length() String.java": "3.040952632791109",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.9684474508031022",
            "json.JsonArray.<init>()": "2.077060213421136",
            "java.lang.String.substring(int, int) String.java": "9.220953144592395",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.858137213924409",
            "json.JsonPureStringParser.readStringInternal()": "3.7574744312608233"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.6948267658351224",
            "som.Vector.hasSome(TestInterface)": "2.111568897883827",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.481617510015153",
            "havlak.HavlakLoopFinder.findLoops()": "11.110404574846678",
            "som.Vector.<init>(int)": "3.205725574980431",
            "som.Vector.append(Object)": "3.5762916640171563",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "8.194115235090198",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.319616540842304",
            "som.Vector.removeAll()": "2.556686744478237",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.51926834028054"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.27216690374585",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.6638217164532955",
            "Queens.getRowColumn(int, int)": "61.40350877192983",
            "Queens.queens()": "0.632211158526948",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.1422475106685633",
            "Benchmark.innerBenchmarkLoop(int)": "0.1422475106685633",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0",
            "Queens.setRowColumn(int, int, boolean)": "22.364469732890786",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3793266951161688"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.0586180308639044",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.7248120795313775",
            "richards.TaskControlBlock.runTask()": "38.74980358337018",
            "richards.Scheduler.schedule()": "2.4702817071254475",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.4836307294274136",
            "richards.Scheduler$$Lambda$9.0x00000008000c7978.apply(Packet, RBObject)": "3.5702148341147364",
            "richards.RBObject.append(Packet, Packet)": "2.7772397890759466",
            "Richards.benchmark()": "27.20598714430319",
            "richards.Scheduler$$Lambda$10.0x00000008000c7ba0.apply(Packet, RBObject)": "3.9904550653564916",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.4872849923077767"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2628766708384052",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1143684959454134",
            "java.lang.StringLatin1.trim(byte[]) StringLatin1.java": "0.09715007400549759",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.31156600204588",
            "som.Random.next()": "14.252487327630059",
            "Storage.buildTreeDepth(int, Random)": "39.50579185882381",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.9602199020498676",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.1028647842411151",
            "Storage$$Lambda$8.0x00000008000c2a98.apply(int)": "0.5143239212055755",
            "Storage$$Lambda$8.0x00000008000c2a98.<init>(Storage, int, Random)": "0.3371679039014328"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "34.913567631351654",
            "Towers.pushDisk(Towers$TowersDisk, int)": "29.244674768560763",
            "Towers.moveDisks(int, int, int)": "8.199214140603143",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.21897011057990587",
            "Towers$TowersDisk.getSize()": "2.724961376105495",
            "Towers.moveTopDisk(int, int)": "8.041069060739876",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "15.948323053903144",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.20680510443657776",
            "Towers.benchmark()": "0.10948505528995293",
            "java.util.zip.ZipFile.<init>(File, int, Charset) ZipFile.java": "0.14598007371993724"
        },
        "YourKit_Permute.txt": {
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.15806171180833886",
            "com.yourkit.probes.builtin.Processes$FileOutputStream_write_arrayRange_Probe.onExit(int, Throwable) a": "0.10161110044821783",
            "javax.management.ObjectName$Property.<init>(int, int, int) ObjectName.java": "0.04516048908809682",
            "java.util.zip.ZipFile$Source.readAt(byte[], int, int, long) ZipFile.java": "0.23709256771250828",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.12419134499226626",
            "Permute.permute(int)": "56.811895272825794",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.09032097817619364",
            "com.yourkit.probes.Table.createRow() a": "0.21451232316845986",
            "Permute.benchmark()": "0.21451232316845986",
            "Permute.swap(int, int)": "41.908933873753845"
        },
        "YourKit_DeltaBlue.txt": {
            "som.Vector.forEach(ForEachInterface)": "34.58162521063354",
            "deltablue.Variable.setValue(int)": "4.778551847287544",
            "deltablue.EqualityConstraint.execute()": "2.892281381252987",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "5.180956213374916",
            "som.Vector.<init>(int)": "3.521038203264506",
            "deltablue.ScaleConstraint.execute()": "3.3198360202208197",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "4.099494479515103",
            "som.Vector.append(Object)": "2.4395764694046935",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.457609215059985",
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(AbstractConstraint, Vector, AbstractConstraint)": "2.4395764694046935"
        },
        "YourKit_List.txt": {
            "java.lang.invoke.LambdaForm$MH.0x00000008000c3400.invoke(Object, long, Object, Object) LambdaForm$MH": "0.11850993508289111",
            "List.tail(List$Element, List$Element, List$Element)": "5.003752814610958",
            "List$Element.<init>(Object)": "0.23701987016578221",
            "List.makeList(int)": "0.5135430520258615",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(int, int) MethodWriter.java": "0.10534216451812542",
            "List$Element.getNext()": "25.769326995246434",
            "List$Element.length()": "0.14484547621242247",
            "List.isShorterThan(List$Element, List$Element)": "67.48482414442411",
            "com.yourkit.probes.ReflectionUtilImpl.callMethod0(Class, Object, String, CallStatus) a": "0.18434878790671952",
            "com.yourkit.probes.Table.createRow() a": "0.11850993508289111"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.8416736209029956",
            "nbody.Body.getZ()": "7.237201807142241",
            "nbody.Body.getX()": "0.5611349313688815",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.31653765359270236",
            "nbody.Body.setZ(double)": "0.5899110816954908",
            "nbody.NBodySystem.advance(double)": "43.5958677448131",
            "nbody.Body.setVY(double)": "4.57540790193088",
            "nbody.Body.setVZ(double)": "7.222813731978936",
            "nbody.Body.setVX(double)": "31.768869960576673",
            "nbody.Body.setY(double)": "0.992777186268021"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.37090432503275",
            "sun.nio.fs.UnixFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.05242463958060288",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.2621231979030144",
            "java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes() InvokerBytecodeGenerator.java": "0.235910878112713",
            "sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "java.io.BufferedWriter.ensureOpen() BufferedWriter.java": "0.07863695937090433",
            "jdk.internal.loader.URLClassPath.getResource(String, boolean) URLClassPath.java": "0.0",
            "sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java": "0.0"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.638142407288514",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.869577180592497",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.813690421596501",
            "cd.RedBlackTree.findNode(Comparable)": "7.138708000856034",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.016417499770705",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.378275092482191",
            "cd.RedBlackTree$Node.successor()": "1.6814943899232628",
            "cd.RedBlackTree.put(Comparable, Object)": "6.473753401204561",
            "cd.Vector2D.compareNumbers(double, double)": "9.454584365159437",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.601180103335474"
        },
        "YourKit_Sieve.txt": {
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, long) DirectMethodHandle$Holder": "0.10101803733177689",
            "java.util.HashMap$HashIterator.nextNode() HashMap.java": "0.05612113185098716",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.683633955529615",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.15713916918276408",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.05612113185098716",
            "com.yourkit.probes.ProbeConstants.shouldIgnoreRow(int) a": "0.10101803733177689",
            "Sieve.benchmark()": "88.27854040160281",
            "com.yourkit.probes.Table.createRow() a": "0.15713916918276408",
            "Sieve.sieve(boolean[], int)": "9.10284758623012",
            "java.lang.Integer.valueOf(int) Integer.java": "0.10101803733177689"
        },
        "YourKit_Bounce.txt": {
            "java.lang.ClassLoader.definePackage(String, String, String, String, String, String, String, URL) ClassLoader.java": "0.3277234784955564",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.3277234784955564",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.2120563684383012",
            "Bounce.benchmark()": "64.06030112004318",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.5590576986100668",
            "Bounce.lambda$benchmark$0(Random, int)": "0.26988992346692875",
            "som.Random.next()": "0.1735006650858828",
            "java.security.SecureClassLoader.getPermissions(CodeSource) SecureClassLoader.java": "0.19277851676209198",
            "Bounce$Ball.bounce()": "31.673510304011714",
            "Bounce$Ball.<init>(Random)": "1.4265610240394808"
        }
    },
    "Runtimes": {
        "NBody.data": 22.046,
        "YourKit_Storage.txt": 61.3035,
        "rebench_test_Async_Bounce.txt": 67.769,
        "Permute_not_profiled_": 29.96,
        "JavaFlightRecorder_Sieve.jfr": 30.938000000000002,
        "CD_not_profiled_": 42.0355,
        "JProfiler_NBody.txt": 21.124,
        "JProfiler_List.txt": 28.707,
        "YourKit_Mandelbrot.txt": 37.537499999999994,
        "CD.data": 44.423,
        "Json_not_profiled_": 78.4015,
        "List.data": 23.552,
        "Queens_not_profiled_": 21.062,
        "Towers.hpl": 26.104,
        "Bounce.hpl": 25.9745,
        "JavaFlightRecorder_Json.jfr": 81.494,
        "Sieve.data": 32.315,
        "Richards.hpl": 90.64099999999999,
        "YourKit_Richards.txt": 90.363,
        "JavaFlightRecorder_Havlak.jfr": 152.40449999999998,
        "JavaFlightRecorder_CD.jfr": 42.688500000000005,
        "JavaFlightRecorder_Towers.jfr": 25.789,
        "rebench_test_Async_CD.txt": 129.671,
        "List_not_profiled_": 23.286,
        "Havlak_not_profiled_": 147.9625,
        "JProfiler_Json.txt": 1027.931,
        "rebench_test_Async_NBody.txt": 55.697,
        "JavaFlightRecorder_Bounce.jfr": 24.9365,
        "Havlak.data": 157.981,
        "Towers_not_profiled_": 25.572,
        "YourKit_DeltaBlue.txt": 12.282499999999999,
        "rebench_test_Async_Towers.txt": 70.2875,
        "YourKit_NBody.txt": 23.238500000000002,
        "JavaFlightRecorder_NBody.jfr": 20.9625,
        "rebench_test_Async_Sieve.txt": 79.6825,
        "Storage.hpl": 58.7855,
        "JProfiler_Queens.txt": 26.0065,
        "rebench_test_Async_List.txt": 65.167,
        "rebench_test_Async_Richards.txt": 249.7045,
        "YourKit_Towers.txt": 27.247999999999998,
        "JProfiler_Havlak.txt": 1892.534,
        "JavaFlightRecorder_List.jfr": 22.186,
        "YourKit_Permute.txt": 29.395,
        "Queens.data": 22.2695,
        "Storage_not_profiled_": 63.18000000000001,
        "Json.hpl": 79.6405,
        "Towers.data": 27.149,
        "YourKit_List.txt": 25.005,
        "JProfiler_CD.txt": 475.11,
        "JProfiler_Permute.txt": 30.0655,
        "Sieve.hpl": 31.3325,
        "DeltaBlue_not_profiled_": 12.1135,
        "CD.hpl": 42.303,
        "JavaFlightRecorder_Queens.jfr": 21.250500000000002,
        "JProfiler_Bounce.txt": 43.9615,
        "Permute.hpl": 29.581,
        "Richards_not_profiled_": 91.0795,
        "DeltaBlue.hpl": 11.961,
        "NBody.hpl": 21.237,
        "JProfiler_Towers.txt": 26.859,
        "JProfiler_Mandelbrot.txt": 38.289,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.912500000000001,
        "rebench_test_Async_Mandelbrot.txt": 105.472,
        "YourKit_CD.txt": 43.451499999999996,
        "rebench_test_Async_Permute.txt": 80.6455,
        "Mandelbrot.data": 38.934,
        "JProfiler_Storage.txt": 1033.3205,
        "YourKit_Sieve.txt": 29.3475,
        "JavaFlightRecorder_Permute.jfr": 29.3945,
        "YourKit_Bounce.txt": 13.968,
        "JProfiler_Sieve.txt": 29.774,
        "JProfiler_DeltaBlue.txt": 96.4905,
        "YourKit_Queens.txt": 22.034,
        "Mandelbrot.hpl": 37.149,
        "JavaFlightRecorder_Storage.jfr": 56.421,
        "List.hpl": 22.490499999999997,
        "Mandelbrot_not_profiled_": 37.948,
        "Queens.hpl": 22.1545,
        "Storage.data": 64.928,
        "JavaFlightRecorder_Richards.jfr": 91.3825,
        "Bounce.data": 26.939,
        "Permute.data": 30.421,
        "YourKit_Json.txt": 79.659,
        "rebench_test_Async_DeltaBlue.txt": 39.599000000000004,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.83,
        "YourKit_Havlak.txt": 156.8865,
        "DeltaBlue.data": 12.9285,
        "JProfiler_Richards.txt": 94.3835,
        "rebench_test_Async_Storage.txt": 150.949,
        "Sieve_not_profiled_": 30.7305,
        "Havlak.hpl": 153.216,
        "Richards.data": 94.897,
        "rebench_test_Async_Havlak.txt": 444.7285,
        "Bounce_not_profiled_": 26.0245,
        "NBody_not_profiled_": 21.305500000000002,
        "Json.data": 83.7205,
        "rebench_test_Async_Json.txt": 241.15949999999998,
        "rebench_test_Async_Queens.txt": 55.7735
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.45%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.27%",
            "[.] void nbody.NBodySystem.advance(double)": "95.91%",
            "0xffffffffb4c0634b": "0.22%",
            "0xffffffffb4c063aa": "0.21%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.38%",
            "0xffffffffb4c0634b": "0.10%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "[.] void Permute.permute(int)": "97.28%",
            "0xffffffffb4c063aa": "0.09%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.87%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.03%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.63%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.06%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.32%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "9.56%",
            "[.] vtable chunks": "6.94%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.74%",
            "[.] void deltablue.Planner.chainTest(int)": "23.74%",
            "[.] deltablue.Plan deltablue.Planner.makePlan(som.Vector)": "3.40%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.39%",
            "[.] Interpreter": "0.51%",
            "0xffffffffb51c12b7": "0.24%",
            "[.] boolean Queens.placeQueen(int)": "0.11%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.12%",
            "[.] Interpreter": "0.43%",
            "[.] void Towers.moveDisks(int, int, int)": "0.13%",
            "[.] java.lang.Object Towers.benchmark()": "0.07%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.65%",
            "[.] boolean richards.Scheduler.start()": "22.13%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.66%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.71%",
            "[.] void richards.Scheduler.schedule()": "8.18%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.36%",
            "[.] Interpreter": "0.19%",
            "0xffffffffb51c12b7": "0.15%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.41%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.31%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.19%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.47%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.10%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.36%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.27%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "94.95%",
            "[.] Interpreter": "0.50%",
            "[.] java.lang.Object List.benchmark()": "0.38%",
            "0xffffffffb51c12b7": "0.16%",
            "[.] List$Element List.makeList(int)": "0.70%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.41%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "83.87%",
            "[.] java.lang.Object Sieve.benchmark()": "6.24%",
            "[.] int Sieve.sieve(boolean[], int)": "6.12%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.49%",
            "0xffffffffb51c12b7": "0.21%",
            "0xffffffffb4c0634b": "0.07%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "72.34%",
            "[.] java.lang.Object Bounce.benchmark()": "24.00%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.46%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.67%",
            "[.] StubRoutines (2)": "8.37%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "18.96%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.92%"
        }
    }
}