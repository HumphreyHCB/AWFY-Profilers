{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4854368932038835",
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.16181229773462782",
            "Queens.placeQueen(I)Z": "87.05501618122977",
            "Queens.getRowColumn(II)Z": "10.517799352750808",
            "java.util.Arrays.fill([ZZ)V": "1.2944983818770226",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.16181229773462782",
            "java.nio.CharBuffer.hasArray()Z": "0.16181229773462782",
            "Queens.queens()Z": "0.16181229773462782"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "74.32065217391305",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.6304347826086956",
            "java.security.SecureClassLoader$1.<init>(Ljava/security/SecureClassLoader;Ljava/security/CodeSource;)V": "0.1358695652173913",
            "Bounce.benchmark()Ljava/lang/Object;": "23.913043478260867"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.9289363678588016",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.7663725034835114",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.5764050162563863",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.3005109150023224",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.754760798885275",
            "havlak.HavlakLoopFinder.findLoops()V": "8.801672085462146",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "4.226660473757548",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "51.69530887134231",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.2308406874129123",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.7431490942870413"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "7.6794657762938225",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.2520868113522536",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "16.110183639398997",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "0.8347245409015025",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "3.005008347245409",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "23.62270450751252",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "0.7512520868113522",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "11.686143572621035",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "25.041736227045075",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.178631051752921"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.55760368663596",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "11.213517665130569",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.30721966205837176",
            "List.makeList(I)LList$Element;": "0.9216589861751152"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "9.900990099009901",
            "deltablue.BinaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "1.6501650165016502",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.260726072607261",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "5.2805280528052805",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "44.554455445544555",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "2.9702970297029703",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.9702970297029703",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "5.2805280528052805",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "3.6303630363036303",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "7.260726072607261"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.476722532588454",
            "Storage.benchmark()Ljava/lang/Object;": "0.06207324643078833",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.33705772811918",
            "java.lang.invoke.DirectMethodHandle.shouldBeInitialized(Ljava/lang/invoke/MemberName;)Z": "0.06207324643078833",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.06207324643078833"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.10869565217391304",
            "java.lang.ref.Reference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V": "0.10869565217391304",
            "Sieve.benchmark()Ljava/lang/Object;": "0.32608695652173914",
            "java.util.Arrays.fill([ZZ)V": "0.21739130434782608",
            "Sieve.sieve([ZI)I": "99.23913043478261"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.io.Writer.write(Ljava/lang/String;)V": "0.13458950201884254",
            "java.lang.invoke.InvokerBytecodeGenerator.lookupPregenerated(Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.13458950201884254",
            "Towers.moveDisks(III)V": "57.73889636608345",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/MemberName;": "0.13458950201884254",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.13458950201884254",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "41.722745625841185"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.52229299363057",
            "NBody.innerBenchmarkLoop(I)Z": "0.3184713375796178",
            "java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.1592356687898089"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "5.663082437275985",
            " ": "0",
            "richards.HandlerTaskDataRecord.deviceInAdd(Lrichards/Packet;)V": "0.14336917562724014",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.7168458781362007",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.5125448028673834",
            "richards.Scheduler.schedule()V": "58.63799283154122",
            "java.net.URL.<init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V": "0.07168458781362007",
            "Richards.benchmark()Ljava/lang/Object;": "1.003584229390681",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.523297491039425",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.7275985663082434"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "3.5103926096997693",
            "json.JsonPureStringParser.readExponent()Z": "6.6050808314087766",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "17.96766743648961",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "30.669745958429562",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "3.648960739030023",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "16.489607390300232",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "7.852193995381063",
            "som.Vector.append(Ljava/lang/Object;)V": "7.482678983833718",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.094688221709007",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.8775981524249423"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "27.906976744186046",
            "Permute.permute(I)V": "71.97062423500611",
            "Permute.benchmark()Ljava/lang/Object;": "0.12239902080783353"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.3",
            "richards.Packet::setLink": "2.3",
            "Richards::benchmark": "5.2",
            "richards.RBObject::append": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "44.0",
            "richards.HandlerTaskDataRecord::workInAdd": "2.7",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "7.0",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.9",
            "richards.RBObject::<init>": "6.1"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.io.PrintStream::writeln": "0.0",
            "java.lang.String::checkBoundsOffCount": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.util.zip.ZipFile$Source::initCEN": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.8",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0",
            "java.lang.String::getChars": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "1.8",
            "List::isShorterThan": "80.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.6",
            "json.JsonPureStringParser::read": "13.7",
            "java.lang.String::<init>": "4.4",
            "java.lang.String::length": "3.2",
            "java.util.Arrays::copyOfRange": "7.7",
            "java.lang.String::equals": "19.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "java.lang.String::isLatin1": "2.7",
            "json.JsonPureStringParser::readStringInternal": "9.0"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.6",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.5",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.1",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::<init>": "1.8",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.6",
            "Permute::permute": "51.0",
            "Permute::benchmark": "0.1",
            "java.lang.String::charAt": "0.0",
            "java.nio.Buffer::limit": "0.0",
            "AGCT::No Java Frames[ERR=0]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "6.1"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "54.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "14.5",
            "Queens::setRowColumn": "26.4",
            "java.util.Arrays::fill": "0.2",
            "Queens::queens": "0.5"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.4",
            "java.util.Arrays::setAll": "33.9",
            "som.Random::next": "12.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.0"
        },
        "Sieve.hpl": {
            "java.lang.invoke.MethodTypeForm::canonicalizeAll": "0.0",
            "Sieve::benchmark": "5.8",
            "java.lang.StringConcatHelper::mix": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "86.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0",
            "java.util.Arrays::fill": "4.6"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "3.0",
            "deltablue.Variable::<init>": "3.5",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0::apply": "3.1",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.0",
            "som.Vector::append": "2.6",
            "AGCT::Unknown not Java[ERR=-3]": "12.8",
            "AGCT::Unknown Java[ERR=-5]": "17.4",
            "deltablue.UnaryConstraint::<init>": "3.7",
            "deltablue.AbstractConstraint::satisfy": "2.6",
            "som.Vector::forEach": "27.5"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.0",
            "Bounce$Ball::bounce": "75.2",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.8",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.2",
            "nbody.Body::getZ": "7.7",
            "nbody.Body::setVX": "27.9",
            "nbody.Body::setVY": "5.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "nbody.NBodySystem::advance": "40.2",
            "nbody.Body::setZ": "0.5"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.4",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "Towers::popDiskFrom": "22.5",
            "Towers::moveDisks": "4.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "Towers::pushDisk": "38.8",
            "Towers$TowersDisk::setNext": "17.4",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "Towers::moveTopDisk": "5.8",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.1",
            "cd.RedBlackTree::forEach": "3.6",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "10.5",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "cd.Vector2D::compareNumbers": "4.5",
            "cd.CollisionDetector::isInVoxel": "21.5",
            "cd.RedBlackTree::treeInsert": "13.5"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.satisfy": "3.57%",
            "deltablue.BinaryConstraint.<init>": "2.85%",
            "som.Vector.append": "4.46%",
            "deltablue.Planner.chainTest": "4.80%",
            "itable": "4.79%",
            "som.Vector.forEach": "4.57%",
            "deltablue.Planner.addPropagate": "2.81%",
            "deltablue.AbstractConstraint.<init>": "14.17%",
            "som.IdentityDictionary$IdEntry.match": "3.11%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.25%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "72.89%",
            "som.Random.next": "0.92%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.67%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "19.67%",
            "__tls_get_addr": "0.05%",
            "Bounce$Ball.<init>": "1.94%",
            "Bounce.lambda$benchmark$0": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.66%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.56%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.68%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.16%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.57%",
            "java.util.Arrays.setAll": "35.31%",
            "Storage.lambda$buildTreeDepth$0": "4.09%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.15%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.32%",
            "Storage.buildTreeDepth": "43.78%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.58%",
            "Towers.popDiskFrom": "20.22%",
            "Towers.moveDisks": "8.44%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "41.46%",
            "Towers.moveTopDisk": "4.96%",
            "Towers$TowersDisk.getSize": "0.66%",
            "Towers$TowersDisk.getNext": "3.51%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "12.91%",
            "cd.CollisionDetector.isInVoxel": "19.36%",
            "cd.RedBlackTree.forEach": "5.99%",
            "Node::set_req_X(unsigned": "3.57%",
            "cd.RedBlackTree.put": "6.76%",
            "cd.RedBlackTree.treeInsert": "13.32%",
            "cd.RedBlackTree.treeMinimum": "5.20%",
            "cd.RedBlackTree.findNode": "2.75%",
            "cd.Vector2D.compareNumbers": "3.85%",
            "cd.RedBlackTree.leftRotate": "2.22%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.87%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.95%",
            "som.Vector.append": "3.17%",
            "som.Vector.<init>": "2.28%",
            "som.IdentitySet.lambda$contains$0": "30.68%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.27%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.82%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.29%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "5.90%",
            "havlak.HavlakLoopFinder.doDFS": "5.12%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "9.17%",
            "Sieve.benchmark": "5.62%",
            "Interpreter": "0.04%",
            "Sieve.sieve": "82.29%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.04%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.36%",
            "Permute.swap": "40.63%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.96%",
            "nbody.Body.getZ": "7.84%",
            "nbody.Body.getY": "0.72%",
            "nbody.Body.setX": "1.23%",
            "nbody.Body.setY": "1.83%",
            "nbody.Body.setVX": "27.47%",
            "nbody.Body.setVY": "5.60%",
            "nbody.Body.getVZ": "0.48%",
            "nbody.Body.getMass": "0.45%",
            "nbody.NBodySystem.advance": "41.81%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.19%",
            "Interpreter": "0.05%",
            "List.makeList": "1.20%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.68%",
            "List$Element.length": "0.11%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "81.54%",
            "List$Element.<init>": "0.27%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.57%",
            "java.lang.String.length": "3.55%",
            "java.lang.String.<init>": "4.77%",
            "json.JsonPureStringParser.isWhiteSpace": "2.30%",
            "java.lang.String.isLatin1": "3.04%",
            "json.JsonPureStringParser.readStringInternal": "6.58%",
            "java.util.Arrays.copyOfRange": "8.58%",
            "java.lang.String.equals": "22.51%",
            "json.JsonPureStringParser.read": "14.79%",
            "json.JsonPureStringParser.readValue": "2.21%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.15%",
            "Queens.getRowColumn": "57.09%",
            "Queens.setRowColumn": "23.33%",
            "Interpreter": "0.06%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.66%",
            "Queens.placeQueen": "14.24%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.32%",
            "Richards.benchmark": "4.87%",
            "richards.Packet.<init>": "6.52%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.23%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.83%",
            "itable": "37.01%",
            "richards.TaskControlBlock.<init>": "3.05%",
            "richards.RBObject.<init>": "5.75%",
            "richards.RBObject.append": "2.73%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.34%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.2",
            "Towers.moveDisks": "95.3",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.5",
            "Benchmark.innerBenchmarkLoop": "0.2"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.3",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.4",
            "deltablue.AbstractConstraint.satisfy": "9.0",
            "deltablue.Planner.removePropagateFrom": "10.2",
            "som.Vector.<init>": "26.5",
            "deltablue.Variable.<init>": "5.7",
            "som.Vector.forEach": "7.1",
            "deltablue.Planner.addPropagate": "1.9",
            "deltablue.AbstractConstraint.<init>": "9.0",
            "deltablue.Planner.constraintsConsuming": "4.4",
            "deltablue.Planner.addConstraintsConsumingTo": "17.1"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepEProcessNonBackPreds": "9.8",
            "havlak.HavlakLoopFinder.findLoops": "6.1",
            "java.lang.ClassLoader.loadClass": "9.0",
            "som.Vector.<init>": "17.1",
            "som.Vector.forEach": "5.9",
            "java.lang.Integer.valueOf": "3.0",
            "som.Set.<init>": "5.9",
            "havlak.UnionFindNode.findSet": "5.9",
            "havlak.HavlakLoopFinder.processEdges": "3.0",
            "som.Set.contains": "19.4"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Mandelbrot.mandelbrot": "99.5",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.0",
            "Run.printResult": "0.2"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.8",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Scheduler.<init>": "0.1",
            "richards.Packet.<init>": "0.2",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "84.0",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.3",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.8",
            "Harness.processArguments": "0.0",
            "Bounce.benchmark": "51.2",
            "Bounce$Ball.<init>": "47.1",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.0",
            "cd.RedBlackTree.findNode": "1.6",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "44.6",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.6",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.6",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.3",
            "Run.runBenchmark": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.4",
            "List$Element.length": "0.1",
            "List.isShorterThan": "72.3",
            "List$Element.<init>": "24.6",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readName": "0.0",
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.6",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.4",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "22.6",
            "Queens.placeQueen": "76.4",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.2",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.627057342433577",
            "json.JsonPureStringParser.readChar(String)": "2.0462899416007385",
            "java.lang.String.<init>(byte[], byte) String.java": "6.6357056542443695",
            "json.JsonPureStringParser.isWhiteSpace()": "2.795754158894836",
            "json.JsonPureStringParser.read()": "21.658673785173246",
            "java.lang.String.length() String.java": "2.842069363334359",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.7536494275861787",
            "java.lang.String.substring(int, int) String.java": "8.98514966126744",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.888334042096313",
            "json.JsonPureStringParser.readStringInternal()": "3.006277815438122"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.065375145079239",
            "som.Vector.hasSome(TestInterface)": "2.078293976635464",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.898623509887084",
            "havlak.HavlakLoopFinder.findLoops()": "10.215747741102714",
            "som.Vector.<init>(int)": "2.6705426777017287",
            "som.Vector.append(Object)": "5.002657526222735",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.34778882971223",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.644705014589278",
            "som.Vector.removeAll()": "2.6618650410560694",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.8822227766268"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.665012171603806",
            "sun.reflect.generics.parser.SignatureParser.parseTypeArgument() SignatureParser.java": "0.031614555341279126",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.23710916505959345",
            "Queens.getRowColumn(int, int)": "61.45869558344662",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.4584110524485473",
            "Queens.setRowColumn(int, int, boolean)": "21.35563213303405",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.28453099807151216",
            "Queens.verifyResult(Object)": "0.18968733204767474",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14226549903575608",
            "com.yourkit.probes.builtin.Files.<clinit>() a": "0.11065094369447694"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.039081197828498",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.747562897670889",
            "richards.Scheduler.findTask(int)": "1.4301558578016462",
            "richards.TaskControlBlock.runTask()": "39.13592318019964",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.5899830716245402",
            "richards.Scheduler.schedule()": "2.947872278325842",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "3.422158659739653",
            "richards.RBObject.append(Packet, Packet)": "3.079213122409667",
            "Richards.benchmark()": "26.62570778121534",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.0649699375401322"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.6600001109243885",
            "javax.management.openmbean.TabularDataSupport.checkValueAndIndex(CompositeData) TabularDataSupport.java": "0.07764707187345748",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object) DirectMethodHandle$Holder": "0.0998319495515882",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.702689361796532",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.96824234760377",
            "Storage$$Lambda$10.0x00000008000c2aa0.apply(int)": "1.0149581537744798",
            "som.Random.next()": "12.678657593051698",
            "Storage$$Lambda$10.0x00000008000c2aa0.<init>(Storage, int, Random)": "0.21075633794224174",
            "Storage.buildTreeDepth(int, Random)": "37.958325707281645",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.1890761662312896"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "33.42833735273415",
            "Towers.popDiskFrom(int)": "29.216620703183594",
            "Towers.moveDisks(int, int, int)": "8.64267334387224",
            "java.io.RandomAccessFile.<init>(File, String, boolean) RandomAccessFile.java": "0.11538949724796048",
            "Towers$TowersDisk.getSize()": "2.0654720007384926",
            "Towers.moveTopDisk(int, int)": "8.077264807357233",
            "jdk.internal.org.objectweb.asm.ClassWriter.<init>(ClassReader, int) ClassWriter.java": "0.09231159779836838",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.63151517948836",
            "Towers.benchmark()": "0.10385054752316443",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.09231159779836838"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.190976903028669",
            "jdk.internal.org.objectweb.asm.MethodWriter.<init>(SymbolTable, int, String, String, String, String[], int) MethodWriter.java": "0.08987148377819718",
            "java.lang.invoke.LambdaForm$Name.useCount(LambdaForm$Name) LambdaForm.java": "0.11233935472274646",
            "Permute.permute(int)": "53.47353284802732",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.06740361283364789",
            "java.lang.invoke.MethodHandles$Lookup.lookupClassOrNull() MethodHandles.java": "0.04493574188909859",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.022467870944549294",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.20221083850094365",
            "Permute.benchmark()": "0.2134447739732183",
            "Permute.swap(int, int)": "45.553608340073694"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.234954657873042",
            "som.Vector.forEach(ForEachInterface)": "43.73454245671888",
            "deltablue.EqualityConstraint.execute()": "5.255564715581204",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.3075020610057715",
            "som.Vector.<init>(int)": "2.6793075020610058",
            "deltablue.ScaleConstraint.execute()": "2.061005770816158",
            "deltablue.BinaryConstraint.chooseMethod(int)": "6.141797197032152",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "3.5243198680956307",
            "som.Vector.append(Object)": "2.019785655399835",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.741137675185491"
        },
        "YourKit_List.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.11897679952409279",
            "List.tail(List$Element, List$Element, List$Element)": "3.304911097891466",
            "List.makeList(int)": "1.4409412386806792",
            "sun.reflect.generics.factory.CoreReflectionFactory.makeWildcard(FieldTypeSignature[], FieldTypeSignature[]) CoreReflectionFactory.java": "0.11897679952409279",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.linkToTargetMethod(Object, long, Object) LambdaForm$MH": "0.11897679952409279",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.33049110978914664",
            "List$Element.getNext()": "22.248661511005352",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.2643928878313173",
            "List.isShorterThan(List$Element, List$Element)": "71.51827615837134",
            "com.yourkit.probes.Table.createRow() a": "0.11897679952409279"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.6779233231341915",
            "nbody.Body.getZ()": "5.372174673227958",
            "nbody.Body.setX(double)": "0.5499076437162477",
            "nbody.Body.getX()": "0.5499076437162477",
            "nbody.NBodySystem.advance(double)": "40.83416759492957",
            "nbody.Body.setVY(double)": "6.3309880007332096",
            "nbody.Body.setVZ(double)": "11.294256990172164",
            "NBody.innerBenchmarkLoop(int)": "0.662709211658042",
            "nbody.Body.setVX(double)": "28.863101197106637",
            "nbody.Body.setY(double)": "1.085715091439771"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.26839134028596",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "jdk.internal.org.objectweb.asm.Type.getArgumentTypes(String) Type.java": "0.09672710645257733",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.079140359824836",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.079140359824836",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.079140359824836",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.39570179912417996",
            "Run.measure(Benchmark)": "8.793373313870667E-4",
            "Run.printResult(long)": "8.793373313870667E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.053738852046649",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.81134232792133",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.362298955713086",
            "cd.RedBlackTree.findNode(Comparable)": "8.582971263053585",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.76591203597835",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "1.9056330512996416",
            "cd.RedBlackTree.put(Comparable, Object)": "7.050842289808673",
            "cd.Vector2D.compareNumbers(double, double)": "9.528165256498207",
            "cd.Vector2D.compareTo(Vector2D)": "1.9971034377620243",
            "cd.RedBlackTree.forEach(ForEachInterface)": "2.843204512539065"
        },
        "YourKit_Sieve.txt": {
            "java.nio.CharBuffer.arrayOffset() CharBuffer.java": "0.10812564199599933",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.0973130777963994",
            "sun.reflect.generics.parser.SignatureParser.parseTypeArgument() SignatureParser.java": "0.05406282099799967",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.0973130777963994",
            "java.lang.Class.isAssignableFrom(Class) Class.java (native)": "0.1946261555927988",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.1464561820835804",
            "java.nio.Buffer.clear() Buffer.java": "0.0973130777963994",
            "Sieve.benchmark()": "87.74395847975346",
            "java.lang.Object.clone() Object.java (native)": "0.11893820619559925",
            "Sieve.sieve(boolean[], int)": "7.8066713521111515"
        },
        "YourKit_Bounce.txt": {
            "sun.reflect.generics.visitor.Reifier.visitWildcard(Wildcard) Reifier.java": "0.0",
            "java.io.FileCleanable.<clinit>() FileCleanable.java": "0.5350895245935378",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.10290183165260341",
            "Bounce.benchmark()": "66.78328874253961",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.5968306235850998",
            "Bounce.lambda$benchmark$0(Random, int)": "0.41160732661041366",
            "som.Random.next()": "0.18522329697468615",
            "com.yourkit.probes.Table.createRow() a": "0.18522329697468615",
            "Bounce$Ball.bounce()": "31.117513891747272",
            "javax.management.openmbean.CompositeType.isAssignableFrom(OpenType) CompositeType.java": "0.08232146532208273"
        }
    },
    "Runtimes": {
        "NBody.data": 22.130499999999998,
        "YourKit_Storage.txt": 59.852999999999994,
        "rebench_test_Async_Bounce.txt": 58.464,
        "Permute_not_profiled_": 29.848,
        "JavaFlightRecorder_Sieve.jfr": 30.8125,
        "CD_not_profiled_": 41.568,
        "JProfiler_NBody.txt": 21.6235,
        "JProfiler_List.txt": 28.2315,
        "YourKit_Mandelbrot.txt": 37.517,
        "CD.data": 44.263000000000005,
        "Json_not_profiled_": 80.08449999999999,
        "List.data": 23.313499999999998,
        "Queens_not_profiled_": 21.766,
        "Towers.hpl": 26.1545,
        "Bounce.hpl": 26.283,
        "JavaFlightRecorder_Json.jfr": 82.29050000000001,
        "Sieve.data": 31.955,
        "Richards.hpl": 94.334,
        "YourKit_Richards.txt": 90.458,
        "JavaFlightRecorder_Havlak.jfr": 153.85649999999998,
        "JavaFlightRecorder_CD.jfr": 41.6885,
        "JavaFlightRecorder_Towers.jfr": 26.147,
        "rebench_test_Async_CD.txt": 135.99450000000002,
        "List_not_profiled_": 22.5785,
        "Havlak_not_profiled_": 152.1345,
        "JProfiler_Json.txt": 1031.866,
        "rebench_test_Async_NBody.txt": 54.915,
        "JavaFlightRecorder_Bounce.jfr": 25.625500000000002,
        "Havlak.data": 159.809,
        "Towers_not_profiled_": 26.366500000000002,
        "YourKit_DeltaBlue.txt": 15.007,
        "rebench_test_Async_Towers.txt": 70.038,
        "YourKit_NBody.txt": 23.134999999999998,
        "JavaFlightRecorder_NBody.jfr": 20.994999999999997,
        "rebench_test_Async_Sieve.txt": 82.84299999999999,
        "Storage.hpl": 58.826,
        "JProfiler_Queens.txt": 26.209,
        "rebench_test_Async_List.txt": 66.5355,
        "rebench_test_Async_Richards.txt": 247.0215,
        "YourKit_Towers.txt": 27.693,
        "JProfiler_Havlak.txt": 1918.6715,
        "JavaFlightRecorder_List.jfr": 22.655,
        "YourKit_Permute.txt": 29.302,
        "Queens.data": 22.067,
        "Storage_not_profiled_": 61.0235,
        "Json.hpl": 79.2075,
        "Towers.data": 27.0285,
        "YourKit_List.txt": 25.0465,
        "JProfiler_CD.txt": 475.252,
        "JProfiler_Permute.txt": 29.994500000000002,
        "Sieve.hpl": 30.369,
        "DeltaBlue_not_profiled_": 12.043,
        "CD.hpl": 41.691500000000005,
        "JavaFlightRecorder_Queens.jfr": 20.881999999999998,
        "JProfiler_Bounce.txt": 43.909,
        "Permute.hpl": 29.360500000000002,
        "Richards_not_profiled_": 94.566,
        "DeltaBlue.hpl": 14.829,
        "NBody.hpl": 21.228,
        "JProfiler_Towers.txt": 27.401,
        "JProfiler_Mandelbrot.txt": 37.962500000000006,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.842,
        "rebench_test_Async_Mandelbrot.txt": 98.577,
        "YourKit_CD.txt": 42.6845,
        "rebench_test_Async_Permute.txt": 78.6565,
        "Mandelbrot.data": 39.7275,
        "JProfiler_Storage.txt": 1036.9755,
        "YourKit_Sieve.txt": 30.643,
        "JavaFlightRecorder_Permute.jfr": 29.374,
        "YourKit_Bounce.txt": 16.174999999999997,
        "JProfiler_Sieve.txt": 26.997,
        "JProfiler_DeltaBlue.txt": 96.165,
        "YourKit_Queens.txt": 20.4455,
        "Mandelbrot.hpl": 37.991,
        "JavaFlightRecorder_Storage.jfr": 57.735,
        "List.hpl": 22.6235,
        "Mandelbrot_not_profiled_": 37.5475,
        "Queens.hpl": 20.716,
        "Storage.data": 64.6035,
        "JavaFlightRecorder_Richards.jfr": 90.15,
        "Bounce.data": 27.13,
        "Permute.data": 31.249499999999998,
        "YourKit_Json.txt": 78.59899999999999,
        "rebench_test_Async_DeltaBlue.txt": 33.641000000000005,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.3545,
        "YourKit_Havlak.txt": 155.51799999999997,
        "DeltaBlue.data": 12.533999999999999,
        "JProfiler_Richards.txt": 92.767,
        "rebench_test_Async_Storage.txt": 149.60750000000002,
        "Sieve_not_profiled_": 31.110500000000002,
        "Havlak.hpl": 151.31799999999998,
        "Richards.data": 94.1165,
        "rebench_test_Async_Havlak.txt": 471.641,
        "Bounce_not_profiled_": 25.783,
        "NBody_not_profiled_": 21.2805,
        "Json.data": 84.021,
        "rebench_test_Async_Json.txt": 248.25900000000001,
        "rebench_test_Async_Queens.txt": 55.283
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.54%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.34%",
            "[.] void nbody.NBodySystem.advance(double)": "96.62%",
            "0xffffffffb4c0634b": "0.07%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "Permute.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.05%",
            "[.] Interpreter": "0.44%",
            "0xffffffffb4c0634b": "0.06%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.14%",
            "[.] void Permute.permute(int)": "97.57%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.13%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.72%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.01%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.95%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "24.33%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "6.97%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.34%",
            "[.] vtable chunks": "5.65%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "3.73%",
            "[.] void deltablue.Planner.chainTest(int)": "22.04%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.23%",
            "[.] Interpreter": "0.46%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] boolean Queens.placeQueen(int)": "0.05%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Interpreter": "0.47%",
            "[.] void Towers.moveDisks(int, int, int)": "0.10%",
            "[.] java.lang.Object Towers.benchmark()": "0.09%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.98%",
            "[.] boolean richards.Scheduler.start()": "21.99%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.68%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.56%",
            "[.] void richards.Scheduler.schedule()": "7.67%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.53%",
            "G1ParScanThreadState::trim_queue_to_threshold": "0.04%",
            "[.] Interpreter": "0.21%",
            "0xffffffffb51c12b7": "0.16%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.17%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.34%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.81%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.56%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.66%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.40%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.32%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.27%",
            "0xffffffffb5800d70": "0.19%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "96.15%",
            "[.] Interpreter": "0.56%",
            "[.] java.lang.Object List.benchmark()": "0.30%",
            "0xffffffffb51c12b7": "0.19%",
            "[.] List$Element List.makeList(int)": "0.53%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.39%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.22%",
            "[.] java.lang.Object Sieve.benchmark()": "7.00%",
            "[.] int Sieve.sieve(boolean[], int)": "7.24%"
        },
        "Bounce.data": {
            " ": "0",
            "0xffffffffb4c6958b": "0.08%",
            "[.] Interpreter": "0.53%",
            "0xffffffffb51c12b7": "0.24%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "72.24%",
            "[.] java.lang.Object Bounce.benchmark()": "24.19%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.56%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.52%",
            "[.] StubRoutines (2)": "8.60%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "18.98%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.84%"
        }
    }
}