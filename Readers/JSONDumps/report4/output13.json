{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.31545741324921134",
            " ": "0",
            "Queens.placeQueen(I)Z": "88.64353312302839",
            "Queens.getRowColumn(II)Z": "9.46372239747634",
            "java.util.Arrays.fill([ZZ)V": "0.946372239747634",
            "Queens.queens()Z": "0.6309148264984227"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "93.30357142857143",
            "java.nio.charset.CoderResult.isUnderflow()Z": "0.22321428571428573",
            "Bounce.benchmark()Ljava/lang/Object;": "6.4732142857142865"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.1649580615097856",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.65237651444548",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.704566635601118",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.537744641192917",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "26.46784715750233",
            "havlak.HavlakLoopFinder.findLoops()V": "8.084808946877912",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.912395153774464",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "52.84249767008387",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.1882572227399812",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.4426840633737185"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.150865622423742",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.1541632316570487",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "14.509480626545754",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.9678483099752677",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "24.319868095630667",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "0.9892827699917559",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "13.93239901071723",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.3520197856554",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.831821929101402",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.1541632316570487"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "90.12158054711246",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "8.966565349544073",
            "List.makeList(I)LList$Element;": "0.9118541033434651"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "8.641975308641975",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.4074074074074066",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "1.8518518518518516",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.7777777777777777",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "44.75308641975308",
            "deltablue.Planner.chainTest(I)V": "2.1604938271604937",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "5.864197530864197",
            "deltablue.Variable.value(I)Ldeltablue/Variable;": "2.7777777777777777",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "2.4691358024691357",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "5.246913580246913"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.lang.invoke.Invokers.callSiteForm(Ljava/lang/invoke/MethodType;Z)Ljava/lang/invoke/LambdaForm;": "0.058823529411764705",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "99.6470588235294",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.29411764705882354"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.StringConcatHelper.prepend(J[BLjava/lang/String;)J": "0.1037344398340249",
            "java.util.zip.ZipUtils.LG([BI)J": "0.1037344398340249",
            "Sieve.benchmark()Ljava/lang/Object;": "0.2074688796680498",
            "Sieve.sieve([ZI)I": "99.48132780082989",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1037344398340249"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "55.03978779840849",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "44.96021220159152"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.84326018808778",
            "NBody.innerBenchmarkLoop(I)Z": "0.15673981191222572"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.166666666666667",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.4166666666666667",
            "richards.Scheduler.lambda$createWorker$3(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.06944444444444445",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "4.791666666666667",
            "richards.Scheduler.schedule()V": "58.958333333333336",
            "java.lang.invoke.BoundMethodHandle$Species_LLLLL.<init>(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V": "0.06944444444444445",
            "Richards.benchmark()Ljava/lang/Object;": "0.9027777777777778",
            "java.lang.Thread.run()V": "0.06944444444444445",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.597222222222225",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.8194444444444446"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "3.9215686274509807",
            "json.JsonPureStringParser.readExponent()Z": "6.489262371615313",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "17.04014939309057",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "32.399626517273575",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.15499533146592",
            "json.JsonObject.<init>()V": "0.7936507936507937",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "15.779645191409898",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "9.15032679738562",
            "som.Vector.append(Ljava/lang/Object;)V": "8.356676003734828",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.7002801120448179"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "27.33644859813084",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.11682242990654206",
            "Permute.permute(I)V": "72.42990654205607",
            "Permute.benchmark()Ljava/lang/Object;": "0.11682242990654206"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.TaskControlBlock::runTask": "2.1",
            "richards.Packet::<init>": "6.9",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "47.2",
            "richards.HandlerTaskDataRecord::workInAdd": "2.1",
            "richards.TaskControlBlock::<init>": "3.4",
            "richards.Scheduler::schedule": "5.5",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.6"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.InvokerBytecodeGenerator::getInternalName": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "jdk.internal.org.objectweb.asm.ClassWriter::toByteArray": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::computeAllFrames": "0.0",
            "java.lang.String::toString": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "java.lang.String::equals": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "98.1",
            "sun.invoke.util.VerifyAccess::isTypeVisible": "0.0"
        },
        "List.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "List$Element::getNext": "8.5",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "1.8",
            "List::isShorterThan": "81.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.3",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.4",
            "json.JsonPureStringParser::read": "13.9",
            "java.lang.String::<init>": "4.7",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "8.0",
            "java.lang.String::equals": "22.1",
            "AGCT::Unknown not Java[ERR=-3]": "5.3",
            "AGCT::Unknown Java[ERR=-5]": "10.1",
            "java.lang.String::isLatin1": "2.4",
            "json.JsonPureStringParser::readStringInternal": "9.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.2",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.8",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.2",
            "havlak.HavlakLoopFinder::doDFS": "5.7",
            "som.Vector::hasSome": "1.9",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.0",
            "Permute::permute": "50.4",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.util.Arrays::equals": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "6.3",
            "java.lang.invoke.MemberName::isPrivate": "0.0"
        },
        "Queens.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Queens::getRowColumn": "53.9",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.7",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "13.0",
            "Queens::setRowColumn": "25.5",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.7",
            "java.util.Arrays::setAll": "34.5",
            "som.Random::next": "12.7",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.3",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.0"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.5",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Sieve::sieve": "85.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.ClassSpecializer$Factory::chooseFieldName": "0.0",
            "sun.nio.cs.StreamEncoder::implWrite": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantMemberReference": "0.0",
            "java.io.BufferedWriter::flushBuffer": "0.0",
            "java.util.Arrays::fill": "6.2"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.2",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0::apply": "2.6",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.0",
            "som.Vector::append": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "11.1",
            "AGCT::Unknown Java[ERR=-5]": "19.6",
            "deltablue.Plan::lambda$execute$0": "5.7",
            "deltablue.AbstractConstraint::satisfy": "1.8",
            "deltablue.EqualityConstraint::execute": "1.8",
            "som.Vector::forEach": "28.1"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.3",
            "Bounce$Ball::bounce": "75.3",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.8",
            "AGCT::Deopt[ERR=-9]": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.6",
            "nbody.Body::setVZ": "8.4",
            "nbody.Body::getZ": "7.8",
            "nbody.Body::setVX": "28.1",
            "nbody.Body::setVY": "6.2",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "nbody.NBodySystem::advance": "39.7"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "0.7",
            "Towers::popDiskFrom": "21.0",
            "Towers::moveDisks": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "Towers::pushDisk": "40.5",
            "Towers$TowersDisk::setNext": "18.6",
            "AGCT::Unknown Java[ERR=-5]": "3.8",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.7",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "13.6",
            "cd.RedBlackTree::forEach": "3.4",
            "cd.RedBlackTree::put": "6.4",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "2.9",
            "AGCT::Unknown not Java[ERR=-3]": "11.2",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "cd.Vector2D::compareNumbers": "4.4",
            "cd.CollisionDetector::isInVoxel": "22.8",
            "cd.RedBlackTree::treeInsert": "13.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.satisfy": "2.94%",
            "deltablue.Strength$Sym.customHash": "3.36%",
            "som.Vector.append": "4.16%",
            "som.Vector.forEach": "6.14%",
            "itable": "4.02%",
            "deltablue.Planner.addPropagate": "2.76%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.49%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "2.68%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.13%",
            "deltablue.Variable.setDeterminedBy": "11.02%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.77%",
            "som.Random.next": "0.90%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.68%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "18.92%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.05%",
            "Bounce$Ball.<init>": "1.84%",
            "Bounce.lambda$benchmark$0": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "Mandelbrot.mandelbrot": "98.45%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.56%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.42%",
            "som.Random.next": "11.34%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.31%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.30%",
            "java.util.Arrays.setAll": "34.58%",
            "Storage.lambda$buildTreeDepth$0": "4.15%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.17%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.32%",
            "Storage.buildTreeDepth": "44.00%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "18.05%",
            "Towers.popDiskFrom": "18.31%",
            "Towers.moveDisks": "9.24%",
            "Interpreter": "0.04%",
            "Towers.pushDisk": "42.69%",
            "Towers.moveTopDisk": "4.72%",
            "Towers$TowersDisk.getSize": "0.42%",
            "Towers$TowersDisk.getNext": "3.55%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "12.75%",
            "cd.CollisionDetector.isInVoxel": "19.73%",
            "cd.RedBlackTree.forEach": "6.17%",
            "Node::set_req_X(unsigned": "3.65%",
            "cd.RedBlackTree.put": "6.28%",
            "cd.RedBlackTree.treeInsert": "12.15%",
            "cd.RedBlackTree.treeMinimum": "5.36%",
            "cd.RedBlackTree.findNode": "2.77%",
            "cd.Vector2D.compareNumbers": "4.27%",
            "cd.RedBlackTree.leftRotate": "2.18%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.27%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.28%",
            "som.Vector.append": "3.54%",
            "som.Vector.<init>": "2.19%",
            "som.IdentitySet.lambda$contains$0": "32.32%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.47%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.19%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.25%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.98%",
            "havlak.HavlakLoopFinder.doDFS": "5.33%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.26%",
            "Sieve.benchmark": "6.42%",
            "Interpreter": "0.04%",
            "Sieve.sieve": "84.32%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.08%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.04%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.13%",
            "Permute.swap": "40.54%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.87%",
            "nbody.Body.getZ": "7.76%",
            "nbody.Body.getY": "0.71%",
            "nbody.Body.setX": "1.18%",
            "nbody.Body.setY": "1.74%",
            "nbody.Body.setVX": "27.66%",
            "nbody.Body.setVY": "5.59%",
            "nbody.Body.getMass": "0.50%",
            "nbody.Body.getVZ": "0.46%",
            "nbody.NBodySystem.advance": "41.63%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.16%",
            "Interpreter": "0.05%",
            "List.makeList": "1.01%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.37%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.79%",
            "List$Element.<init>": "0.24%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "6.96%",
            "java.lang.String.length": "3.48%",
            "java.lang.String.substring": "2.57%",
            "java.lang.String.<init>": "4.19%",
            "java.lang.String.isLatin1": "2.84%",
            "json.JsonPureStringParser.readStringInternal": "8.42%",
            "java.util.Arrays.copyOfRange": "7.61%",
            "java.lang.String.equals": "20.28%",
            "json.JsonPureStringParser.read": "13.72%",
            "json.JsonPureStringParser.readValue": "2.96%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.02%",
            "Queens.getRowColumn": "57.50%",
            "Queens.setRowColumn": "23.86%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.62%",
            "Queens.placeQueen": "13.67%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.09%",
            "Richards.benchmark": "4.66%",
            "richards.Packet.<init>": "6.91%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.22%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.79%",
            "itable": "37.29%",
            "richards.TaskControlBlock.<init>": "3.21%",
            "richards.RBObject.<init>": "5.66%",
            "richards.RBObject.append": "2.83%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.01%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.2",
            "Towers.moveDisks": "94.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.7",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "5.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.9",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.0",
            "deltablue.AbstractConstraint.satisfy": "9.5",
            "deltablue.Planner.removePropagateFrom": "10.0",
            "som.Vector.<init>": "33.5",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "6.8",
            "deltablue.Planner.constraintsConsuming": "4.6",
            "deltablue.AbstractConstraint.<init>": "3.9",
            "deltablue.Plan.lambda$execute$0": "1.1",
            "deltablue.Planner.addConstraintsConsumingTo": "16.7"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "havlak.HavlakLoopFinder.stepEProcessNonBackPreds": "3.4",
            "som.Vector.<init>": "42.1",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.1",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "13.7",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "85.0",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.5",
            "Run.printResult": "0.1",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "53.0",
            "Bounce$Ball.<init>": "45.8",
            "Bounce.lambda$benchmark$0": "0.0",
            "Run.printResult": "0.0",
            "java.lang.System.nanoTime": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "2.0",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.4",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "98.9",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.5",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.6",
            "java.io.PrintStream.println": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.2",
            "List$Element.length": "0.1",
            "List.isShorterThan": "74.9",
            "List$Element.<init>": "21.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.6",
            "Run.runBenchmark": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.0",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "28.3",
            "Queens.placeQueen": "70.9",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.82340311325819",
            "java.lang.String.<init>(byte[], byte) String.java": "5.367686527106819",
            "json.JsonPureStringParser.isWhiteSpace()": "2.181427804616211",
            "json.JsonPureStringParser.read()": "19.508319914117024",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "4.667740203972089",
            "java.lang.String.length() String.java": "2.0139559849704782",
            "java.lang.String.substring(int, int) String.java": "8.77724100912507",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.622114868491682",
            "json.JsonPureStringParser.readValue()": "4.680622651637146",
            "json.JsonPureStringParser.readStringInternal()": "3.246376811594204"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.hasSome(TestInterface)": "2.139439596488726",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.862928914418094",
            "havlak.HavlakLoopFinder.findLoops()": "12.026243792383596",
            "som.Vector.<init>(int)": "3.5398000596449832",
            "som.Vector.append(Object)": "3.8790849249467305",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.221559500192334",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.209263125137768",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "5.052535127869335",
            "som.Vector.removeAll()": "2.5003349627651072",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.150612225492615"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.365331027193234",
            "Queens.getRowColumn(int, int)": "60.343999231286624",
            "Queens.queens()": "0.784728227795394",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17616347970917007",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.304282374043112",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.16014861791742735",
            "Queens.setRowColumn(int, int, boolean)": "22.596969988149",
            "java.lang.Class.getPackageName() Class.java": "0.1921783415009128",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3202972358348547",
            "jdk.internal.org.objectweb.asm.SymbolTable.put(SymbolTable$Entry) SymbolTable.java": "0.3683418212100829"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.1007864523953033",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.6193802784172193",
            "richards.Scheduler.findTask(int)": "1.3434320695389488",
            "richards.TaskControlBlock.runTask()": "37.223961018684605",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.2641768392311215",
            "richards.Scheduler.schedule()": "2.8502545259137158",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "4.070236080954491",
            "richards.RBObject.append(Packet, Packet)": "3.115310042336265",
            "Richards.benchmark()": "28.00148140617398",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.4617484949929924"
        },
        "YourKit_Storage.txt": {
            "javax.management.openmbean.TabularType.isAssignableFrom(OpenType) TabularType.java": "0.10576190879092986",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.428335730603266",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.6028428801083002",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1105000423047637",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.11105000423047635",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.18952534055335",
            "jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init>(int, int, String, String, int) SymbolTable.java": "0.11633809967002286",
            "som.Random.next()": "15.615745832980796",
            "Storage.buildTreeDepth(int, Random)": "38.97326338945766",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.3108977070818177"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "32.00145516279633",
            "Towers.pushDisk(Towers$TowersDisk, int)": "31.8438125265264",
            "Towers.moveDisks(int, int, int)": "8.064027163038864",
            "Towers$TowersDisk.getSize()": "2.3040077608682465",
            "java.lang.StringLatin1.compareTo(byte[], byte[], int, int) StringLatin1.java": "0.109137209725338",
            "Towers.moveTopDisk(int, int)": "7.227308555144606",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.109137209725338",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.47407991269023",
            "Towers.benchmark()": "0.23040077608682466",
            "java.lang.invoke.InvokerBytecodeGenerator.addMethod() InvokerBytecodeGenerator.java": "0.218274419450676"
        },
        "YourKit_Permute.txt": {
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.044472610431050774",
            "Benchmark.innerBenchmarkLoop(int)": "0.044472610431050774",
            "java.lang.ClassLoader.findLoadedClass(String) ClassLoader.java": "0.14453598390091502",
            "Permute.permute(int)": "58.370301190754134",
            "java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(LambdaForm$BasicType) InvokerBytecodeGenerator.java": "0.05559076303881346",
            "com.yourkit.probes.ResourceCounter.open(Object, String) a": "0.20012674693972846",
            "Run.measure(Benchmark)": "0.0011118152607762694",
            "java.util.zip.ZipFile.<init>(File, int, Charset) ZipFile.java": "0.0011118152607762694",
            "Permute.swap(int, int)": "41.09269203829091",
            "jdk.internal.perf.PerfCounter.addElapsedTimeFrom(long) PerfCounter.java": "0.044472610431050774"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.586945522010457",
            "deltablue.Variable.<init>()": "1.4125484904705685",
            "som.Vector.forEach(ForEachInterface)": "47.668240850059036",
            "deltablue.EqualityConstraint.execute()": "4.680384550514421",
            "deltablue.BinaryConstraint.<init>(Variable, Variable, Strength$Sym, Planner)": "3.1202563670096137",
            "deltablue.BinaryConstraint.isSatisfied()": "2.8883454208129535",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.656434474616293",
            "som.Vector.append(Object)": "6.535672120087704",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.867262607522348",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, int) DirectMethodHandle$Holder": "1.3493000505987518"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "4.043467273186758",
            "List$Element.<init>(Object)": "0.11970791269302901",
            "List.makeList(int)": "0.38572549645531573",
            "List$Element.getNext()": "21.108495271537446",
            "List$Element.length()": "0.11970791269302901",
            "List.isShorterThan(List$Element, List$Element)": "73.30114520569809",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.2261149461979437",
            "com.yourkit.probes.Table.createRow() a": "0.11970791269302901",
            "Run.lambda$getSuiteFromName$5()": "0.29261934213851537",
            "java.lang.Integer.valueOf(int) Integer.java": "0.11970791269302901"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.1004229229939537",
            "nbody.Body.getZ()": "4.371150407311742",
            "nbody.Body.setX(double)": "0.6812182452953364",
            "nbody.Body.getX()": "0.6954102920723225",
            "nbody.NBodySystem.advance(double)": "43.981152961880156",
            "nbody.Body.setVY(double)": "7.890778008004312",
            "nbody.Body.setVZ(double)": "9.281598592148956",
            "NBody.innerBenchmarkLoop(int)": "0.5676818710794469",
            "nbody.Body.setVX(double)": "26.638471800403046",
            "nbody.Body.setY(double)": "0.6954102920723225"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.71110840396095",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "8.701554097561825E-4",
            "com.yourkit.probes.builtin.Processes.processWriteEnterImpl(FileOutputStream, int) a": "0.07831398687805642",
            "java.util.zip.ZipFile.getInputStream(ZipEntry) ZipFile.java": "0.01740310819512365",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.01740310819512365",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "java.lang.invoke.LambdaFormBuffer.insertName(int, LambdaForm$Name, boolean) LambdaFormBuffer.java": "0.09571709507318006",
            "com.yourkit.probes.Table.createRow() a": "0.07831398687805642",
            "Run.measure(Benchmark)": "8.701554097561825E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.8833127162832928",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.239387438736042",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.881277108811046",
            "cd.RedBlackTree.findNode(Comparable)": "7.10896763384119",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.392966193257442",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.131703803454269",
            "cd.RedBlackTree$Node.successor()": "1.785071167968933",
            "cd.RedBlackTree.put(Comparable, Object)": "6.584407246762599",
            "cd.Vector2D.compareNumbers(double, double)": "9.84137920235504",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.076898986893819"
        },
        "YourKit_Sieve.txt": {
            "java.lang.invoke.MethodTypeForm.parameterSlotCount() MethodTypeForm.java": "0.14146539284939594",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.17918949760923486",
            "com.yourkit.probes.ForeignKeyColumn.setValue(int, int) a": "0.08487923570963755",
            "sun.invoke.util.VerifyType.isNullReferenceConversion(Class, Class) VerifyType.java": "0.018862052379919458",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "5.3285297973272465",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(int, String, String, String) MethodWriter.java": "0.06601718332971811",
            "Sieve.benchmark()": "87.67081946186563",
            "com.yourkit.probes.Table.createRow() a": "0.08487923570963755",
            "Sieve.sieve(boolean[], int)": "6.290494468703139",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.11317231427951674"
        },
        "YourKit_Bounce.txt": {
            "jdk.internal.org.objectweb.asm.Type.getReturnTypeOffset(String) Type.java": "0.4014298549117809",
            "java.net.URI.<init>(String) URI.java": "0.2676199032745206",
            "sun.nio.fs.NativeBuffers.allocNativeBuffer(int) NativeBuffers.java": "0.1338099516372603",
            "java.util.zip.ZipUtils.SH(byte[], int) ZipUtils.java": "0.11469424426050884",
            "Bounce.benchmark()": "59.77481696710185",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.64993405080955",
            "som.Random.next()": "0.36319844015827796",
            "Bounce.lambda$benchmark$0(Random, int)": "0.19115707376751473",
            "Bounce$Ball.bounce()": "37.23739796991187",
            "Bounce$Ball.<init>(Random)": "0.7455125876933075"
        }
    },
    "Runtimes": {
        "NBody.data": 21.996,
        "YourKit_Storage.txt": 62.132999999999996,
        "rebench_test_Async_Bounce.txt": 60.936,
        "Permute_not_profiled_": 29.703,
        "JavaFlightRecorder_Sieve.jfr": 30.839,
        "CD_not_profiled_": 41.451,
        "JProfiler_NBody.txt": 21.211,
        "JProfiler_List.txt": 28.919,
        "YourKit_Mandelbrot.txt": 37.49,
        "CD.data": 44.428,
        "Json_not_profiled_": 78.8445,
        "List.data": 23.8325,
        "Queens_not_profiled_": 21.698999999999998,
        "Towers.hpl": 26.0525,
        "Bounce.hpl": 26.377,
        "JavaFlightRecorder_Json.jfr": 81.555,
        "Sieve.data": 33.667,
        "Richards.hpl": 90.132,
        "YourKit_Richards.txt": 90.7245,
        "JavaFlightRecorder_Havlak.jfr": 152.542,
        "JavaFlightRecorder_CD.jfr": 42.101,
        "JavaFlightRecorder_Towers.jfr": 25.999,
        "rebench_test_Async_CD.txt": 133.7965,
        "List_not_profiled_": 22.7085,
        "Havlak_not_profiled_": 150.514,
        "JProfiler_Json.txt": 1027.2215,
        "rebench_test_Async_NBody.txt": 57.608000000000004,
        "JavaFlightRecorder_Bounce.jfr": 15.1875,
        "Havlak.data": 157.0795,
        "Towers_not_profiled_": 25.773,
        "YourKit_DeltaBlue.txt": 12.6085,
        "rebench_test_Async_Towers.txt": 74.327,
        "YourKit_NBody.txt": 23.442,
        "JavaFlightRecorder_NBody.jfr": 21.5805,
        "rebench_test_Async_Sieve.txt": 82.3905,
        "Storage.hpl": 59.829,
        "JProfiler_Queens.txt": 26.3815,
        "rebench_test_Async_List.txt": 65.8695,
        "rebench_test_Async_Richards.txt": 250.834,
        "YourKit_Towers.txt": 27.391,
        "JProfiler_Havlak.txt": 1911.5905,
        "JavaFlightRecorder_List.jfr": 23.110999999999997,
        "YourKit_Permute.txt": 29.466,
        "Queens.data": 23.271500000000003,
        "Storage_not_profiled_": 61.74,
        "Json.hpl": 81.045,
        "Towers.data": 27.111,
        "YourKit_List.txt": 25.0465,
        "JProfiler_CD.txt": 476.744,
        "JProfiler_Permute.txt": 29.976,
        "Sieve.hpl": 31.947000000000003,
        "DeltaBlue_not_profiled_": 11.741,
        "CD.hpl": 41.096000000000004,
        "JavaFlightRecorder_Queens.jfr": 21.5225,
        "JProfiler_Bounce.txt": 44.189,
        "Permute.hpl": 30.085,
        "Richards_not_profiled_": 91.124,
        "DeltaBlue.hpl": 14.7105,
        "NBody.hpl": 21.63,
        "JProfiler_Towers.txt": 27.1685,
        "JProfiler_Mandelbrot.txt": 37.706500000000005,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.422,
        "rebench_test_Async_Mandelbrot.txt": 102.4545,
        "YourKit_CD.txt": 43.046,
        "rebench_test_Async_Permute.txt": 79.027,
        "Mandelbrot.data": 39.0475,
        "JProfiler_Storage.txt": 1047.4234999999999,
        "YourKit_Sieve.txt": 31.820999999999998,
        "JavaFlightRecorder_Permute.jfr": 30.128500000000003,
        "YourKit_Bounce.txt": 26.213,
        "JProfiler_Sieve.txt": 27.4615,
        "JProfiler_DeltaBlue.txt": 96.713,
        "YourKit_Queens.txt": 22.4785,
        "Mandelbrot.hpl": 37.698499999999996,
        "JavaFlightRecorder_Storage.jfr": 58.939,
        "List.hpl": 22.7255,
        "Mandelbrot_not_profiled_": 37.293499999999995,
        "Queens.hpl": 20.97,
        "Storage.data": 67.201,
        "JavaFlightRecorder_Richards.jfr": 93.048,
        "Bounce.data": 27.252499999999998,
        "Permute.data": 30.565,
        "YourKit_Json.txt": 78.99,
        "rebench_test_Async_DeltaBlue.txt": 33.485,
        "JavaFlightRecorder_Mandelbrot.jfr": 38.0295,
        "YourKit_Havlak.txt": 153.151,
        "DeltaBlue.data": 12.5505,
        "JProfiler_Richards.txt": 91.128,
        "rebench_test_Async_Storage.txt": 159.26600000000002,
        "Sieve_not_profiled_": 30.558999999999997,
        "Havlak.hpl": 153.547,
        "Richards.data": 98.0595,
        "rebench_test_Async_Havlak.txt": 451.974,
        "Bounce_not_profiled_": 25.9375,
        "NBody_not_profiled_": 21.2545,
        "Json.data": 85.4805,
        "rebench_test_Async_Json.txt": 245.767,
        "rebench_test_Async_Queens.txt": 56.150999999999996
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.49%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.27%",
            "[.] void nbody.NBodySystem.advance(double)": "95.57%",
            "0xffffffffb4c0634b": "0.21%",
            "0xffffffffb4c063aa": "0.30%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.37%",
            "0xffffffffb4c0634b": "0.08%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "[.] void Permute.permute(int)": "97.60%",
            "0xffffffffb4c063aa": "0.07%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.17%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.24%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.96%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.02%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.75%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.StayConstraint.<init>(deltablue.Variable, deltablue.Strength$Sym, deltablue.Planner)": "3.65%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.91%",
            "[.] vtable chunks": "6.86%",
            "[.] boolean deltablue.Planner.addPropagate(deltablue.AbstractConstraint, int)": "6.44%",
            "[.] void deltablue.Planner.chainTest(int)": "25.67%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.48%",
            "[.] Interpreter": "0.48%",
            "0xffffffffb51c12b7": "0.22%",
            "0xffffffffb4c0634b": "0.14%",
            "[.] boolean Queens.placeQueen(int)": "93.76%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.12%",
            "[.] Interpreter": "0.42%",
            "[.] void Towers.moveDisks(int, int, int)": "96.85%",
            "[.] java.lang.Object Towers.benchmark()": "0.08%",
            "0xffffffffb4c0634b": "0.08%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "35.93%",
            "[.] boolean richards.Scheduler.start()": "24.70%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.40%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.69%",
            "[.] void richards.Scheduler.schedule()": "7.87%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "96.88%",
            "InstanceKlass::allocate_objArray": "0.05%",
            "[.] Interpreter": "0.18%",
            "0xffffffffb51c12b7": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.13%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.05%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.02%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "22.51%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.83%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.43%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.29%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb5800d70": "0.16%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.47%",
            "[.] Interpreter": "0.49%",
            "[.] java.lang.Object List.benchmark()": "0.51%",
            "0xffffffffb51c12b7": "0.16%",
            "[.] List$Element List.makeList(int)": "0.65%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.35%",
            "0xffffffffb51c12b7": "0.20%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "84.57%",
            "[.] java.lang.Object Sieve.benchmark()": "5.88%",
            "[.] int Sieve.sieve(boolean[], int)": "5.81%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.44%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "[.] java.lang.Object Bounce.benchmark()": "24.05%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.36%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.44%",
            "[.] StubRoutines (2)": "8.42%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.66%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.88%"
        }
    }
}