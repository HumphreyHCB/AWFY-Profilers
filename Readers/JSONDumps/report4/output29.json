{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.nio.CharBuffer.wrap([CII)Ljava/nio/CharBuffer;": "0.08857395925597875",
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "99.82285208148805",
            "java.lang.Long.stringSize(J)I": "0.08857395925597875"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.6289308176100629",
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.15723270440251572",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStoreResult(Ljava/lang/invoke/LambdaForm$Name;)V": "0.15723270440251572",
            "Queens.placeQueen(I)Z": "85.84905660377358",
            "java.io.Writer.write(Ljava/lang/String;)V": "0.15723270440251572",
            "Queens.getRowColumn(II)Z": "11.949685534591195",
            "java.util.Arrays.fill([ZZ)V": "0.4716981132075472",
            "Queens.queens()Z": "0.6289308176100629"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "94.56193353474319",
            "Bounce.benchmark()Ljava/lang/Object;": "5.287009063444108",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.1510574018126888"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.9167842031029619",
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.8227550540667607",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.361542078044194",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "0.2585801598495534",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "31.42924306535026",
            "havlak.HavlakLoopFinder.findLoops()V": "2.891396332863188",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "3.7846732487070995",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "50.89327691584391",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.611189468735308",
            "som.Vector.append(Ljava/lang/Object;)V": "3.972731546779502"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.602649006622517",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.1589403973509935",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "14.569536423841061",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "1.076158940397351",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "3.3112582781456954",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "23.758278145695368",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "1.076158940397351",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.08609271523179",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.18543046357616",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "6.953642384105961"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "89.14728682170542",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "9.922480620155039",
            "List.makeList(I)LList$Element;": "0.9302325581395349"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "7.612456747404844",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.266435986159169",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "2.7681660899653977",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.7681660899653977",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "45.32871972318339",
            "deltablue.Planner.lambda$chainTest$7(I)Ldeltablue/Variable;": "2.0761245674740483",
            "deltablue.Planner.chainTest(I)V": "2.422145328719723",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "2.0761245674740483",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "8.650519031141869",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "6.228373702422145"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.333333333333334",
            "Storage.benchmark()Ljava/lang/Object;": "0.06116207951070336",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.48318042813456",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.06116207951070336",
            "java.lang.StringConcatHelper.newArrayWithSuffix(Ljava/lang/String;J)[B": "0.06116207951070336"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.2079002079002079",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.10395010395010396",
            "Sieve.benchmark()Ljava/lang/Object;": "0.5197505197505198",
            "Sieve.sieve([ZI)I": "99.16839916839918"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "55.77956989247311",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.13440860215053763",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "44.086021505376344"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.05956112852665",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.15673981191222572",
            "NBody.innerBenchmarkLoop(I)Z": "0.6269592476489029",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.15673981191222572"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.491228070175438",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.21052631578947367",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.43859649122807",
            "richards.Scheduler.schedule()V": "61.614035087719294",
            "Richards.benchmark()Ljava/lang/Object;": "1.1228070175438596",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "24.210526315789473",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.842105263157895",
            "richards.TaskControlBlock.getIdentity()I": "0.07017543859649122"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.074941451990632",
            "json.JsonPureStringParser.readExponent()Z": "6.885245901639345",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "28.103044496487122",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "22.295081967213115",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.168618266978923",
            "json.JsonObject.<init>()V": "0.7962529274004685",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "14.426229508196723",
            "java.lang.StringLatin1.hashCode([B)I": "1.124121779859485",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "8.852459016393443",
            "som.Vector.append(Ljava/lang/Object;)V": "6.885245901639345"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.11961722488038277",
            "Permute.swap(II)V": "24.04306220095694",
            "Permute.permute(I)V": "75.47846889952153",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.11961722488038277",
            "Permute.benchmark()Ljava/lang/Object;": "0.23923444976076555"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.0",
            "richards.Packet::setLink": "2.1",
            "Richards::benchmark": "5.0",
            "richards.RBObject::append": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "44.3",
            "richards.HandlerTaskDataRecord::workInAdd": "2.8",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "7.2",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "6.7"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.util.zip.ZipFile::getZipEntry": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.nio.ByteBuffer::clear": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.StringLatin1::replace": "0.0",
            "Mandelbrot::mandelbrot": "97.7",
            "java.util.Arrays::copyOf": "0.0"
        },
        "List.hpl": {
            "List::benchmark": "0.0",
            "List$Element::getNext": "9.3",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "1.8",
            "List::isShorterThan": "81.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.4",
            "json.JsonPureStringParser::read": "15.6",
            "java.lang.String::<init>": "6.1",
            "java.lang.String::length": "3.4",
            "java.util.Arrays::copyOfRange": "8.0",
            "java.lang.String::equals": "21.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "java.lang.String::isLatin1": "3.1",
            "json.JsonPureStringParser::readStringInternal": "7.8"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.1",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.0",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "7.4",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "7.0",
            "havlak.HavlakLoopFinder::doDFS": "5.1",
            "som.Vector::hasSome": "2.3",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.7",
            "java.lang.invoke.MethodHandles$Lookup::resolveOrFail": "0.0",
            "Permute::permute": "50.8",
            "Permute::benchmark": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantNameAndType": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "6.6",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "13.4",
            "Queens::setRowColumn": "25.5",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.1",
            "java.util.Arrays::setAll": "34.5",
            "som.Random::next": "11.8",
            "AGCT::Unknown not Java[ERR=-3]": "5.1",
            "AGCT::Unknown Java[ERR=-5]": "2.5",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.5",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "0.9"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Sieve::benchmark": "6.1",
            "java.lang.Object::getClass": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "86.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "5.1"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.1",
            "deltablue.Variable::<init>": "3.8",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0::apply": "2.4",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "3.8",
            "som.Vector::append": "2.8",
            "AGCT::Unknown not Java[ERR=-3]": "12.4",
            "AGCT::Unknown Java[ERR=-5]": "17.7",
            "deltablue.UnaryConstraint::<init>": "3.6",
            "deltablue.AbstractConstraint::satisfy": "2.7",
            "som.Vector::forEach": "27.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.9",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "75.7",
            "java.util.Arrays::setAll": "0.8",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.8",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.6",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "7.7",
            "nbody.Body::setVX": "27.9",
            "nbody.Body::setVY": "6.3",
            "nbody.Body::getMass": "0.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "nbody.NBodySystem::advance": "40.2"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.4",
            "Towers::popDiskFrom": "22.7",
            "Towers::moveDisks": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "Towers::pushDisk": "38.7",
            "Towers$TowersDisk::setNext": "17.7",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.7",
            "Towers$TowersDisk::getNext": "2.9"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.1",
            "cd.RedBlackTree::forEach": "3.6",
            "cd.RedBlackTree::put": "6.6",
            "cd.RedBlackTree::findNode": "3.0",
            "cd.RedBlackTree::treeMinimum": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "11.1",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "5.0",
            "cd.CollisionDetector::isInVoxel": "21.5",
            "cd.RedBlackTree::treeInsert": "13.1"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "4.92%",
            "deltablue.AbstractConstraint.satisfy": "2.71%",
            "vtable": "2.64%",
            "som.Vector.append": "1.90%",
            "som.Vector.forEach": "23.43%",
            "itable": "4.21%",
            "deltablue.Planner.addPropagate": "2.68%",
            "deltablue.AbstractConstraint.<init>": "4.30%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.42%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "5.35%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.48%",
            "som.Random.next": "0.84%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.63%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.25%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "Bounce$Ball.<init>": "1.75%",
            "Bounce.lambda$benchmark$0": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*,": "0.01%",
            "Mandelbrot.mandelbrot": "98.77%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.56%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.48%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.13%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.55%",
            "java.util.Arrays.setAll": "35.65%",
            "Storage.lambda$buildTreeDepth$0": "3.95%",
            "SpinPause": "0.19%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.31%",
            "Storage.buildTreeDepth": "43.73%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "18.07%",
            "Towers.popDiskFrom": "18.81%",
            "Towers.moveDisks": "8.86%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.56%",
            "Towers.moveTopDisk": "4.81%",
            "Towers$TowersDisk.getSize": "0.37%",
            "Towers$TowersDisk.getNext": "3.71%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.22%",
            "cd.CollisionDetector.isInVoxel": "19.66%",
            "cd.RedBlackTree.forEach": "6.08%",
            "Node::set_req_X(unsigned": "4.06%",
            "cd.RedBlackTree.put": "6.55%",
            "cd.RedBlackTree.treeInsert": "12.16%",
            "cd.RedBlackTree.treeMinimum": "5.24%",
            "cd.RedBlackTree.findNode": "2.73%",
            "cd.Vector2D.compareNumbers": "4.13%",
            "cd.RedBlackTree.leftRotate": "2.13%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.83%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.71%",
            "som.Vector.hasSome": "2.20%",
            "som.Vector.append": "2.87%",
            "som.IdentitySet.lambda$contains$0": "32.47%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.56%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.16%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.14%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "2.86%",
            "havlak.HavlakLoopFinder.doDFS": "5.40%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "11.62%",
            "Sieve.benchmark": "5.42%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "80.14%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.06%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.47%",
            "Permute.swap": "40.39%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.08%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.73%",
            "nbody.Body.getZ": "7.68%",
            "nbody.Body.getY": "0.73%",
            "nbody.Body.setX": "1.21%",
            "nbody.Body.setY": "1.81%",
            "nbody.Body.setVX": "27.59%",
            "nbody.Body.setVY": "5.53%",
            "nbody.Body.getMass": "0.49%",
            "nbody.Body.getVZ": "0.49%",
            "nbody.NBodySystem.advance": "41.96%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.39%",
            "Interpreter": "0.05%",
            "List.makeList": "0.92%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.67%",
            "List$Element.length": "0.10%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "81.74%",
            "List$Element.<init>": "0.21%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.49%",
            "java.lang.String.length": "2.76%",
            "java.lang.String.<init>": "5.70%",
            "json.JsonPureStringParser.isWhiteSpace": "2.22%",
            "java.lang.String.isLatin1": "3.07%",
            "json.JsonPureStringParser.readStringInternal": "7.18%",
            "java.util.Arrays.copyOfRange": "7.24%",
            "java.lang.String.equals": "21.62%",
            "json.JsonPureStringParser.read": "16.97%",
            "json.JsonPureStringParser.readValue": "2.33%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.04%",
            "Queens.getRowColumn": "67.99%",
            "Queens.setRowColumn": "18.19%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "Queens.queens": "0.60%",
            "Queens.placeQueen": "8.83%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.09%",
            "Queens.benchmark": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "7.32%",
            "Richards.benchmark": "5.55%",
            "richards.Packet.<init>": "7.48%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.17%",
            "richards.HandlerTaskDataRecord.workInAdd": "3.98%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.86%",
            "itable": "35.16%",
            "richards.TaskControlBlock.<init>": "3.17%",
            "richards.RBObject.<init>": "5.87%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "3.52%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.2",
            "Towers.moveDisks": "94.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "Towers.pushDisk": "0.1",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "95.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.0",
            "deltablue.AbstractConstraint.satisfy": "11.5",
            "deltablue.Planner.removePropagateFrom": "9.8",
            "som.Vector.<init>": "32.2",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "7.4",
            "deltablue.Planner.addPropagate": "2.0",
            "deltablue.Planner.constraintsConsuming": "4.5",
            "deltablue.AbstractConstraint.<init>": "3.6",
            "deltablue.Planner.addConstraintsConsumingTo": "15.9"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "som.Vector.hasSome": "3.4",
            "som.Vector.<init>": "42.6",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.6",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.Set.contains": "4.3",
            "som.IdentitySet.contains": "4.2"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "15.6",
            "richards.Scheduler.createWorker": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createPacket": "0.0",
            "richards.TaskControlBlock.runTask": "83.0",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.3",
            "Bounce.benchmark": "53.7",
            "Bounce$Ball.<init>": "45.1",
            "Bounce.lambda$benchmark$0": "0.3",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.0",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "15.0",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.2",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.3",
            "List$Element.length": "0.1",
            "List.isShorterThan": "77.4",
            "List$Element.<init>": "19.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "28.3",
            "Queens.placeQueen": "71.4",
            "Run.runBenchmark": "0.1",
            "Queens.benchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.089625928632067",
            "json.JsonPureStringParser.readChar(String)": "2.1075038116677156",
            "java.lang.String.<init>(byte[], byte) String.java": "6.6857285247895675",
            "json.JsonPureStringParser.read()": "21.062367753079958",
            "java.lang.String.length() String.java": "3.653288170526201",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.5636369011669413",
            "json.JsonArray.<init>()": "2.2975592656257264",
            "java.lang.String.substring(int, int) String.java": "9.25781233502131",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.833549433423576",
            "json.JsonPureStringParser.readStringInternal()": "3.691299261317803"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.5215589985241276",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.7733332450898",
            "havlak.HavlakLoopFinder.findLoops()": "10.767917298159462",
            "som.Vector.<init>(int)": "4.15185829853229",
            "havlak.HavlakLoopFinder$$Lambda$15.0x00000008000cc428.apply(Object)": "2.0318073820128792",
            "som.Vector.append(Object)": "3.6135727380424503",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.317595098954095",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.537923761998364",
            "som.Vector.removeAll()": "2.3097745157084524",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.81456062441126"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "8.698487026362194",
            "jdk.internal.loader.BuiltinClassLoader.getPermissions(CodeSource) BuiltinClassLoader.java": "0.13336692203962477",
            "Queens.getRowColumn(int, int)": "66.77237230117214",
            "Queens.queens()": "1.0224797356371231",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.13336692203962477",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.13336692203962477",
            "Queens.setRowColumn(int, int, boolean)": "21.798082480032004",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(MemberName) InvokerBytecodeGenerator.java": "0.16300401582620808",
            "com.yourkit.probes.builtin.Files$RandomAccessFile_open_Probe.onExit(RandomAccessFile, String, long, Throwable) a": "0.40010076611887435",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.13336692203962477"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.543107181792387",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.7136840847657593",
            "richards.TaskControlBlock.runTask()": "40.06436582488315",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.468436851301504",
            "richards.Scheduler.schedule()": "1.9376950762384078",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.5643434237839937",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.18468959543615",
            "richards.RBObject.append(Packet, Packet)": "2.38198354265916",
            "Richards.benchmark()": "27.46748107107122",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.0123654067292907"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.13180512612103013",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1587867338140565",
            "Storage$$Lambda$11.0x00000008000c2a90.<init>(Storage, int, Random)": "0.32402093504753243",
            "Storage$$Lambda$11.0x00000008000c2a90.apply(int)": "0.32402093504753243",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.96250144161859",
            "som.Random.next()": "14.558974556118788",
            "java.lang.invoke.LambdaForm$Name.internArguments() LambdaForm.java": "0.16475640765128766",
            "Storage.buildTreeDepth(int, Random)": "35.8894374667055",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.6910213249710315",
            "com.yourkit.probes.ReflectionUtilImpl.getJniMethod(Class, boolean, String, CallStatus) a": "0.16475640765128766"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "34.138400233258814",
            "Towers.popDiskFrom(int)": "29.15735251239187",
            "Towers.moveDisks(int, int, int)": "10.229371173097482",
            "java.util.concurrent.ConcurrentHashMap.get(Object) ConcurrentHashMap.java": "0.10934007192146952",
            "Towers$TowersDisk.getSize()": "1.3242297599377977",
            "Towers.moveTopDisk(int, int)": "10.763922635824667",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.12148896880163279",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.10934007192146952",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "13.485275536981241",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.12148896880163279"
        },
        "YourKit_Permute.txt": {
            "java.lang.Class.getModule() Class.java": "0.02260321191641332",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.04520642383282664",
            "java.lang.StringLatin1.compareTo(byte[], byte[]) StringLatin1.java": "0.04520642383282664",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.1356192714984799",
            "Permute.permute(int)": "54.04427969214425",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.25993693703875315",
            "com.yourkit.probes.Table.createRow() a": "0.09041284766565327",
            "Permute.benchmark()": "0.32774657278799313",
            "java.util.zip.ZipFile$ZipFileInflaterInputStream.fill() ZipFile.java": "0.02260321191641332",
            "Permute.swap(int, int)": "44.991693319620715"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.466648320243867",
            "som.Vector.forEach(ForEachInterface)": "40.26334173034993",
            "deltablue.EqualityConstraint.execute()": "4.254958826393446",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.127945130083194",
            "som.Vector.<init>(int)": "3.9797624843878996",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "2.603780774360169",
            "deltablue.BinaryConstraint.chooseMethod(int)": "5.7579542327314295",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "5.398082093185716",
            "deltablue.Strength.getArithmeticValue()": "1.5876712038781517",
            "deltablue.Plan$$Lambda$24.0x00000008000ccd88.apply(Object)": "4.149114079468236"
        },
        "YourKit_List.txt": {
            "java.util.zip.ZipUtils.SH(byte[], int) ZipUtils.java": "0.12128889667533659",
            "java.nio.Buffer.<init>(int, int, int, int, MemorySegmentProxy) Buffer.java": "0.12128889667533659",
            "List.tail(List$Element, List$Element, List$Element)": "3.9890570462110695",
            "List$Element.<init>(Object)": "0.12128889667533659",
            "List.makeList(int)": "0.5255852189264585",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.32343705780089754",
            "Benchmark.innerBenchmarkLoop(int)": "0.12128889667533659",
            "List$Element.getNext()": "21.818524857485546",
            "List.isShorterThan(List$Element, List$Element)": "72.51728366777624",
            "java.lang.invoke.LambdaForm$BasicType.basicType(Class) LambdaForm.java": "0.09433580852526179"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.7807392940230347",
            "nbody.Body.getZ()": "5.64379469799236",
            "nbody.Body.setX(double)": "0.8329264439785162",
            "nbody.Body.getX()": "0.7036792371542637",
            "nbody.NBodySystem.advance(double)": "43.80044231266335",
            "nbody.Body.setVY(double)": "6.5485251457621265",
            "nbody.Body.setVZ(double)": "10.741878967171209",
            "nbody.Body.getVX()": "0.5600712295717609",
            "nbody.Body.setVX(double)": "26.825975816411525",
            "nbody.Body.setY(double)": "0.7036792371542637"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.52230702790361",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType(String, String) SymbolTable.java": "0.05288114082247801",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.09694875817454301",
            "java.nio.CharBuffer.position(int) CharBuffer.java": "0.07932171123371701",
            "com.yourkit.probes.TableLongBytes.<init>(ResourceRegistry, String, long) a": "0.044067617352065006",
            "java.lang.Integer.numberOfLeadingZeros(int) Integer.java": "0.008813523470413002",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.11457580511536902",
            "jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(String, boolean) BuiltinClassLoader.java": "8.813523470413003E-4",
            "Run.measure(Benchmark)": "8.813523470413003E-4",
            "sun.nio.fs.NativeBuffers.<clinit>() NativeBuffers.java": "0.07932171123371701"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.307084513097231",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.770698370813996",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.801384585736098",
            "cd.RedBlackTree.findNode(Comparable)": "3.713476733326415",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "16.07690825266466",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.0235112738485257",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "1.5861956505625805",
            "cd.RedBlackTree.put(Comparable, Object)": "6.789510354744503",
            "cd.Vector2D.compareNumbers(double, double)": "6.596794995330358",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.847532502186577"
        },
        "YourKit_Sieve.txt": {
            "jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry) URLClassPath.java": "0.032312613767327636",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.949527697295434",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.10770871255775878",
            "Benchmark.innerBenchmarkLoop(int)": "0.09693784130198291",
            "Sieve.benchmark()": "90.25990112340186",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800144400.<clinit>() LambdaForm$DMH": "0.08616697004620703",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7c00.<clinit>() LambdaForm$MH": "0.37698049395215577",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.06462522753465527",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.19387568260396582",
            "Sieve.sieve(boolean[], int)": "6.828732376161907"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.17557207233569377",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.13655605626109518",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17557207233569377",
            "Bounce.benchmark()": "66.60033943933983",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17557207233569377",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.09754004018649655",
            "som.Random.next()": "0.3706521527086869",
            "Bounce.lambda$benchmark$0(Random, int)": "0.1950800803729931",
            "Bounce$Ball.bounce()": "30.66658863463452",
            "Bounce$Ball.<init>(Random)": "1.072940442051462"
        }
    },
    "Runtimes": {
        "NBody.data": 21.966,
        "YourKit_Storage.txt": 63.057,
        "rebench_test_Async_Bounce.txt": 64.80250000000001,
        "Permute_not_profiled_": 30.0255,
        "JavaFlightRecorder_Sieve.jfr": 31.1435,
        "CD_not_profiled_": 41.436499999999995,
        "JProfiler_NBody.txt": 21.196,
        "JProfiler_List.txt": 29.029,
        "YourKit_Mandelbrot.txt": 37.614,
        "CD.data": 44.647000000000006,
        "Json_not_profiled_": 78.69999999999999,
        "List.data": 23.851,
        "Queens_not_profiled_": 21.134999999999998,
        "Towers.hpl": 25.979,
        "Bounce.hpl": 26.131500000000003,
        "JavaFlightRecorder_Json.jfr": 81.752,
        "Sieve.data": 32.3675,
        "Richards.hpl": 94.351,
        "YourKit_Richards.txt": 90.465,
        "JavaFlightRecorder_Havlak.jfr": 152.039,
        "JavaFlightRecorder_CD.jfr": 42.3845,
        "JavaFlightRecorder_Towers.jfr": 25.908,
        "rebench_test_Async_CD.txt": 136.37400000000002,
        "List_not_profiled_": 23.058500000000002,
        "Havlak_not_profiled_": 151.197,
        "JProfiler_Json.txt": 1019.6089999999999,
        "rebench_test_Async_NBody.txt": 55.7425,
        "JavaFlightRecorder_Bounce.jfr": 24.35,
        "Havlak.data": 161.668,
        "Towers_not_profiled_": 26.444499999999998,
        "YourKit_DeltaBlue.txt": 12.289000000000001,
        "rebench_test_Async_Towers.txt": 72.04400000000001,
        "YourKit_NBody.txt": 23.125,
        "JavaFlightRecorder_NBody.jfr": 21.5135,
        "rebench_test_Async_Sieve.txt": 86.4965,
        "Storage.hpl": 60.0775,
        "JProfiler_Queens.txt": 26.497500000000002,
        "rebench_test_Async_List.txt": 65.76599999999999,
        "rebench_test_Async_Richards.txt": 259.928,
        "YourKit_Towers.txt": 27.041,
        "JProfiler_Havlak.txt": 1906.9470000000001,
        "JavaFlightRecorder_List.jfr": 22.104,
        "YourKit_Permute.txt": 29.264,
        "Queens.data": 22.654,
        "Storage_not_profiled_": 61.986000000000004,
        "Json.hpl": 80.14850000000001,
        "Towers.data": 27.455,
        "YourKit_List.txt": 24.7965,
        "JProfiler_CD.txt": 474.273,
        "JProfiler_Permute.txt": 30.0275,
        "Sieve.hpl": 31.0845,
        "DeltaBlue_not_profiled_": 14.462499999999999,
        "CD.hpl": 41.620000000000005,
        "JavaFlightRecorder_Queens.jfr": 21.500500000000002,
        "JProfiler_Bounce.txt": 43.9425,
        "Permute.hpl": 29.7965,
        "Richards_not_profiled_": 89.557,
        "DeltaBlue.hpl": 15.0055,
        "NBody.hpl": 21.178,
        "JProfiler_Towers.txt": 26.7485,
        "JProfiler_Mandelbrot.txt": 37.287,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.988,
        "rebench_test_Async_Mandelbrot.txt": 99.8255,
        "YourKit_CD.txt": 42.6315,
        "rebench_test_Async_Permute.txt": 79.8195,
        "Mandelbrot.data": 39.045500000000004,
        "JProfiler_Storage.txt": 1051.65,
        "YourKit_Sieve.txt": 27.483,
        "JavaFlightRecorder_Permute.jfr": 29.5655,
        "YourKit_Bounce.txt": 14.087499999999999,
        "JProfiler_Sieve.txt": 32.415000000000006,
        "JProfiler_DeltaBlue.txt": 97.4825,
        "YourKit_Queens.txt": 20.448500000000003,
        "Mandelbrot.hpl": 37.52,
        "JavaFlightRecorder_Storage.jfr": 57.379999999999995,
        "List.hpl": 23.058,
        "Mandelbrot_not_profiled_": 37.659499999999994,
        "Queens.hpl": 21.116500000000002,
        "Storage.data": 64.535,
        "JavaFlightRecorder_Richards.jfr": 89.20249999999999,
        "Bounce.data": 27.0105,
        "Permute.data": 30.636000000000003,
        "YourKit_Json.txt": 79.55799999999999,
        "rebench_test_Async_DeltaBlue.txt": 41.351,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.55,
        "YourKit_Havlak.txt": 155.80700000000002,
        "DeltaBlue.data": 12.854,
        "JProfiler_Richards.txt": 95.56,
        "rebench_test_Async_Storage.txt": 156.50549999999998,
        "Sieve_not_profiled_": 30.6415,
        "Havlak.hpl": 153.3405,
        "Richards.data": 97.31,
        "rebench_test_Async_Havlak.txt": 447.524,
        "Bounce_not_profiled_": 25.799,
        "NBody_not_profiled_": 21.179,
        "Json.data": 83.04249999999999,
        "rebench_test_Async_Json.txt": 248.765,
        "rebench_test_Async_Queens.txt": 59.5955
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.45%",
            "LinearScan::build_intervals": "0.03%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.34%",
            "[.] void nbody.NBodySystem.advance(double)": "0.10%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.41%",
            "0xffffffffb4c0634b": "0.10%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "[.] void Permute.permute(int)": "97.28%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.45%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.15%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.31%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.07%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.80%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.68%",
            "[.] vtable chunks": "6.47%",
            "[.] boolean deltablue.Planner.addPropagate(deltablue.AbstractConstraint, int)": "6.27%",
            "[.] void deltablue.Planner.chainTest(int)": "24.34%",
            "[.] deltablue.Plan deltablue.Planner.makePlan(som.Vector)": "3.35%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.51%",
            "[.] Interpreter": "0.48%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Queens.placeQueen(int)": "94.08%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.12%",
            "[.] Interpreter": "0.40%",
            "[.] void Towers.moveDisks(int, int, int)": "0.13%",
            "[.] java.lang.Object Towers.benchmark()": "0.09%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "35.56%",
            "[.] boolean richards.Scheduler.start()": "24.29%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.50%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.13%",
            "[.] void richards.Scheduler.schedule()": "7.43%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.55%",
            "[.] Interpreter": "0.18%",
            "0xffffffffb51c12b7": "0.15%",
            "0xffffffffb4c0634b": "0.05%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.19%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.44%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "8.63%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "22.01%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.45%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.08%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.29%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.09%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.11%",
            "[.] Interpreter": "0.47%",
            "[.] java.lang.Object List.benchmark()": "0.37%",
            "0xffffffffb51c12b7": "0.18%",
            "[.] List$Element List.makeList(int)": "0.74%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.37%",
            "0xffffffffb51c12b7": "0.19%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "84.79%",
            "[.] java.lang.Object Sieve.benchmark()": "6.07%",
            "[.] int Sieve.sieve(boolean[], int)": "5.94%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.49%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "[.] java.lang.Object Bounce.benchmark()": "23.87%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.90%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.66%",
            "[.] StubRoutines (2)": "8.43%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.45%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.02%"
        }
    }
}