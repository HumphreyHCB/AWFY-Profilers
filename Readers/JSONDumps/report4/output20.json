{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.48465266558966075",
            " ": "0",
            "Queens.placeQueen(I)Z": "84.49111470113085",
            "Queens.getRowColumn(II)Z": "12.924071082390952",
            "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;": "0.16155088852988692",
            "java.util.Arrays.fill([ZZ)V": "1.4539579967689822",
            "Queens.queens()Z": "0.48465266558966075"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.nio.CharBuffer.arrayOffset()I": "0.19011406844106463",
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "61.40684410646387",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.7110266159695817",
            "Bounce$Ball.bounce()Z": "0.19011406844106463",
            "Bounce.benchmark()Ljava/lang/Object;": "36.50190114068441"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.175115207373272",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.7373271889400922",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.686635944700461",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.8341013824884795",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.714285714285715",
            "som.Set.lambda$contains$1(Ljava/lang/Object;Ljava/lang/Object;)Z": "5.8986175115207375",
            "havlak.HavlakLoopFinder.findLoops()V": "8.778801843317973",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "3.5483870967741935",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "45.944700460829495",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.599078341013825"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "8.887043189368772",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.1627906976744187",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "14.617940199335548",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "0.9966777408637875",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.823920265780731",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "24.83388704318937",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.87375415282392",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "20.930232558139537",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.807308970099668",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.4119601328903655"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "89.06009244992295",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "8.936825885978427",
            "List$Element.length()I": "0.3081664098613251",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.15408320493066255",
            "List.makeList(I)LList$Element;": "1.5408320493066254"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "9.24092409240924",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "5.9405940594059405",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.9801980198019802",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "47.194719471947195",
            "deltablue.ScaleConstraint.execute()V": "9.57095709570957",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.9702970297029703",
            "deltablue.Planner.chainTest(I)V": "1.6501650165016502",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "3.9603960396039604",
            "deltablue.Variable.value(I)Ldeltablue/Variable;": "2.6402640264026402",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "3.3003300330033003"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$MH+0x0000000800c10000.2024918163.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.05991611743559017",
            "sun.net.www.protocol.jar.Handler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V": "0.05991611743559017",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.043139604553625",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.77711204313961",
            "java.io.PrintStream.writeln(Ljava/lang/String;)V": "0.05991611743559017"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.2159827213822894",
            "java.util.Arrays.fill([ZZ)V": "0.1079913606911447",
            "Sieve.sieve([ZI)I": "99.46004319654428",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1079913606911447",
            "java.nio.HeapCharBuffer.<init>([CIILjdk/internal/access/foreign/MemorySegmentProxy;)V": "0.1079913606911447"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.lang.invoke.StringConcatFactory.parseRecipe(Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;": "0.26881720430107525",
            "Towers.moveDisks(III)V": "61.55913978494623",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.17204301075269"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.15673981191222572",
            "nbody.NBodySystem.advance(D)V": "98.7460815047022",
            "java.lang.invoke.MethodHandles.dropArguments0(Ljava/lang/invoke/MethodHandle;ILjava/util/List;)Ljava/lang/invoke/MethodHandle;": "0.15673981191222572",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.15673981191222572",
            "NBody.innerBenchmarkLoop(I)Z": "0.7836990595611286"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "3.3145275035260933",
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.07052186177715092",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.5641748942172073",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.80818053596615",
            "richards.Scheduler.schedule()V": "58.956276445698165",
            "Richards.benchmark()Ljava/lang/Object;": "0.9873060648801129",
            "richards.WorkerTaskDataRecord.getCount()I": "0.07052186177715092",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "27.221438645980253",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "5.007052186177715"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.552058111380145",
            "json.JsonPureStringParser.readExponent()Z": "7.312348668280872",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "17.723970944309926",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "30.26634382566586",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.067796610169491",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "15.060532687651332",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "1.1138014527845037",
            "java.lang.StringLatin1.hashCode([B)I": "1.1138014527845037",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "8.668280871670701",
            "som.Vector.append(Ljava/lang/Object;)V": "7.990314769975787"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "26.75544794188862",
            "Permute.permute(I)V": "73.12348668280872",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.12106537530266344"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.5",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.4",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "46.0",
            "richards.TaskControlBlock::<init>": "2.9",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.6"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::visitAbstractType": "0.0",
            "java.lang.invoke.BoundMethodHandle$Species_LLLLLLLLLL::copyWithExtendL": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "jdk.internal.org.objectweb.asm.Symbol::<init>": "0.0",
            "java.io.OutputStreamWriter::write": "0.0",
            "Mandelbrot::mandelbrot": "98.5",
            "java.util.Arrays::copyOf": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "10.3",
            "List::makeList": "0.6",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "List::tail": "2.2",
            "List::isShorterThan": "79.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "List$Element::<init>": "0.3",
            "AGCT::Unknown Java[ERR=-5]": "2.4",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "14.4",
            "java.lang.String::<init>": "4.6",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "3.7",
            "java.util.Arrays::copyOfRange": "8.1",
            "java.lang.String::equals": "20.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "json.JsonPureStringParser::readValue": "2.6",
            "json.JsonPureStringParser::readStringInternal": "9.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.6",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.6",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.3",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "5.5",
            "som.Vector::hasSome": "2.1",
            "som.Vector::forEach": "1.9"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "java.util.ArrayList::grow": "0.0",
            "Permute::permute": "50.0",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::emitStaticInvoke": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "AGCT::Unknown Java[ERR=-5]": "6.2",
            "java.lang.invoke.MemberName::getInvocationType": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "55.4",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "12.6",
            "Queens::setRowColumn": "25.1",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "41.0",
            "java.util.Arrays::setAll": "34.9",
            "som.Random::next": "11.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.3",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.8",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.2"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "5.7",
            "jdk.internal.org.objectweb.asm.MethodWriter::putMethodInfo": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "85.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0",
            "java.util.Arrays::fill": "4.6"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.7",
            "deltablue.Variable::<init>": "3.9",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0::apply": "2.7",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "3.8",
            "AGCT::Unknown not Java[ERR=-3]": "11.2",
            "AGCT::Unknown Java[ERR=-5]": "17.9",
            "deltablue.AbstractConstraint::satisfy": "2.2",
            "deltablue.EqualityConstraint::execute": "2.0",
            "deltablue.AbstractConstraint::<init>": "4.4",
            "som.Vector::forEach": "28.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.0",
            "Bounce$Ball::bounce": "75.7",
            "java.util.Arrays::setAll": "0.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "2.6",
            "Bounce$$Lambda$2.0x0000000800c034f8::apply": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.5",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.3",
            "nbody.Body::getZ": "8.1",
            "nbody.Body::setVX": "29.2",
            "nbody.Body::setVY": "6.2",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "nbody.NBodySystem::advance": "39.4"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.4",
            "Towers::popDiskFrom": "22.5",
            "Towers::moveDisks": "3.6",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "Towers::pushDisk": "38.3",
            "Towers$TowersDisk::setNext": "17.9",
            "AGCT::Unknown Java[ERR=-5]": "3.6",
            "Towers::moveTopDisk": "5.3",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.1",
            "cd.RedBlackTree::forEach": "3.3",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::leftRotate": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.0",
            "AGCT::Unknown not Java[ERR=-3]": "10.4",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "cd.Vector2D::compareNumbers": "4.6",
            "cd.CollisionDetector::isInVoxel": "22.0",
            "cd.RedBlackTree::treeInsert": "13.2"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.satisfy": "2.72%",
            "som.Vector.append": "12.78%",
            "som.Vector.<init>": "6.11%",
            "som.Vector.forEach": "4.94%",
            "itable": "4.84%",
            "deltablue.Planner.addPropagate": "2.85%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.78%",
            "deltablue.Variable.getValue": "3.72%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "2.58%",
            "deltablue.AbstractConstraint.addConstraint": "2.09%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.85%",
            "som.Random.next": "0.82%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.68%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.52%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.68%",
            "Bounce.lambda$benchmark$0": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "Mandelbrot.mandelbrot": "98.64%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "Monitor::wait_without_safepoint_check(long)": "0.01%",
            "__tls_get_addr": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.57%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.42%",
            "som.Random.next": "10.97%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.28%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.37%",
            "java.util.Arrays.setAll": "35.17%",
            "Storage.lambda$buildTreeDepth$0": "4.21%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.20%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.37%",
            "Storage.buildTreeDepth": "43.29%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.84%",
            "Towers.popDiskFrom": "18.94%",
            "Towers.moveDisks": "8.78%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.35%",
            "Towers.moveTopDisk": "4.92%",
            "Towers$TowersDisk.getSize": "0.41%",
            "Towers$TowersDisk.getNext": "3.77%",
            "Towers.benchmark": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.15%",
            "cd.CollisionDetector.isInVoxel": "19.65%",
            "cd.RedBlackTree.forEach": "5.90%",
            "Node::set_req_X(unsigned": "4.84%",
            "cd.RedBlackTree.put": "6.42%",
            "cd.RedBlackTree.treeInsert": "12.09%",
            "cd.RedBlackTree.treeMinimum": "5.09%",
            "cd.RedBlackTree.findNode": "2.68%",
            "cd.Vector2D.compareNumbers": "3.95%",
            "cd.RedBlackTree.leftRotate": "2.11%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.61%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.42%",
            "som.Vector.hasSome": "1.73%",
            "som.Vector.append": "2.61%",
            "som.IdentitySet.lambda$contains$0": "31.74%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.68%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.28%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.29%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.87%",
            "havlak.HavlakLoopFinder.doDFS": "5.26%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "7.15%",
            "Sieve.benchmark": "5.69%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "84.35%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.51%",
            "Permute.swap": "40.30%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.39%",
            "nbody.Body.getZ": "7.91%",
            "nbody.Body.getY": "0.82%",
            "nbody.Body.setX": "1.74%",
            "nbody.Body.setY": "1.60%",
            "nbody.Body.setZ": "0.34%",
            "nbody.Body.setVX": "28.59%",
            "nbody.Body.setVY": "5.60%",
            "nbody.Body.getMass": "0.60%",
            "nbody.NBodySystem.advance": "40.81%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.11%",
            "Interpreter": "0.05%",
            "List.makeList": "1.41%",
            "List$Element.setNext": "0.08%",
            "List.tail": "4.65%",
            "List$Element.length": "0.17%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.33%",
            "List$Element.<init>": "0.34%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.23%",
            "java.lang.String.length": "3.28%",
            "java.lang.String.<init>": "4.62%",
            "json.JsonPureStringParser.isWhiteSpace": "2.30%",
            "java.lang.String.isLatin1": "3.00%",
            "json.JsonPureStringParser.readStringInternal": "7.34%",
            "java.util.Arrays.copyOfRange": "7.61%",
            "java.lang.String.equals": "22.12%",
            "json.JsonPureStringParser.read": "15.69%",
            "json.JsonPureStringParser.readValue": "2.23%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.06%",
            "Queens.getRowColumn": "57.31%",
            "Queens.setRowColumn": "23.60%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.66%",
            "Queens.placeQueen": "14.03%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.93%",
            "Richards.benchmark": "4.89%",
            "richards.Packet.<init>": "6.80%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.43%",
            "richards.HandlerTaskDataRecord.workInAdd": "4.12%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.83%",
            "itable": "36.93%",
            "richards.TaskControlBlock.<init>": "3.24%",
            "richards.RBObject.<init>": "5.32%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.12%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "5.3",
            "Towers.moveDisks": "92.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.8",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "5.5",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "93.8",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Harness.processArguments": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.4",
            "deltablue.AbstractConstraint.satisfy": "9.7",
            "deltablue.Planner.removePropagateFrom": "8.9",
            "som.Vector.<init>": "32.1",
            "deltablue.Variable.<init>": "4.6",
            "som.Vector.forEach": "6.8",
            "deltablue.Planner.constraintsConsuming": "5.5",
            "deltablue.AbstractConstraint.<init>": "4.0",
            "deltablue.Plan.lambda$execute$0": "1.9",
            "deltablue.Planner.addConstraintsConsumingTo": "18.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.4",
            "java.lang.Integer.valueOf": "9.1",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "3.8"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.1",
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.schedule": "14.7",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Scheduler.<init>": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.TaskControlBlock.runTask": "84.0",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.util.Arrays.setAll": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "1.0",
            "Bounce.benchmark": "51.7",
            "Bounce$Ball.<init>": "46.6",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "cd.Aircraft.<init>": "1.5",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "7.7",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "14.7",
            "cd.RedBlackTree$Node.<init>": "8.2",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.2",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.lambda$getSuiteFromName$8": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "Run.lambda$getSuiteFromName$5": "0.1",
            "java.io.PrintStream.println": "0.3",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "List.tail": "2.7",
            "List$Element.length": "0.2",
            "List.isShorterThan": "74.6",
            "List$Element.<init>": "21.0",
            "Run.printResult": "0.4"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "Harness.main": "0.0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.6",
            "som.Vector.<init>": "2.4",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "23.7",
            "Queens.placeQueen": "74.9",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.3",
            "java.util.Arrays.fill0": "0.3",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.925546154924856",
            "java.lang.String.<init>(byte[], byte) String.java": "5.447738678519679",
            "json.JsonPureStringParser.isWhiteSpace()": "2.3286745677291605",
            "json.JsonPureStringParser.read()": "21.06430626319972",
            "java.lang.String.length() String.java": "3.1828052029728853",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.1318123292269915",
            "java.lang.String.substring(int, int) String.java": "9.731140073174776",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.9718859289414326",
            "json.JsonPureStringParser.readStringInternal()": "3.225299264427797",
            "json.JsonPureStringParser.readValue()": "2.9235914280979243"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.077305893520842",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.004088167123927",
            "havlak.HavlakLoopFinder.findLoops()": "10.60273312001877",
            "som.Vector.<init>(int)": "2.2461024474696596",
            "som.Vector.append(Object)": "2.4915662545915858",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.128801159110509",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.3030913233974815",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.1533345063462175",
            "som.Vector.removeAll()": "2.860848088314837",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.88179940176344"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.144830420077756",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.23706419698454342",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.1896513575876347",
            "Queens.getRowColumn(int, int)": "58.2545753390018",
            "Queens.queens()": "1.0114739071340517",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.45832411417011726",
            "Benchmark.innerBenchmarkLoop(int)": "0.17384707778866515",
            "Queens.setRowColumn(int, int, boolean)": "24.401808009609",
            "java.lang.System.nanoTime() System.java (native)": "0.14223851819072603",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.30028131618042164"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.506154145825141",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9588890563153039",
            "richards.TaskControlBlock.runTask()": "37.82897759222031",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.322393446358414",
            "richards.Scheduler.schedule()": "2.1647010397180377",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "3.958205466513288",
            "richards.RBObject.append(Packet, Packet)": "3.5208550017824787",
            "richards.Packet.<init>(Packet, int, int)": "1.6391454392431999",
            "Richards.benchmark()": "26.98342110969411",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.6464958672218688"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$11.0x00000008000c2aa0.apply(int)": "0.6745233094416814",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.5100054290900518",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.250335890672385",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.644959446342504",
            "som.Random.next()": "15.39887360091253",
            "Storage$$Lambda$11.0x00000008000c2aa0.<init>(Storage, int, Random)": "0.2138732444571185",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1096785869010864",
            "Storage.buildTreeDepth(int, Random)": "37.6362070951078",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "1.8426002599382516",
            "com.yourkit.probes.CallCounterBase.update(long, Object) a": "0.12613037493624935"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "35.71596354411349",
            "Towers.popDiskFrom(int)": "30.16066898430893",
            "Towers.moveDisks(int, int, int)": "6.447900028187541",
            "Towers$TowersDisk.getSize()": "2.4194306116696414",
            "java.util.jar.JarEntry.<init>(String) JarEntry.java": "0.07046885276707694",
            "Towers.moveTopDisk(int, int)": "6.8354787184064625",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.2114065583012308",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.59372357418021",
            "Towers.benchmark()": "0.22315136709574362",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.14093770553415388"
        },
        "YourKit_Permute.txt": {
            "java.lang.String.getBytes(String) String.java": "0.06680547359513656",
            "java.util.IdentityHashMap.put(Object, Object) IdentityHashMap.java": "0.11134245599189425",
            "java.lang.invoke.LambdaForm$Name.<init>(LambdaForm$Name, Object) LambdaForm.java": "0.10020821039270482",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.08907396479351541",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.044536982396757706",
            "Permute.permute(int)": "56.92939774865553",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.12247670159108368",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.23381915758297794",
            "Permute.benchmark()": "0.3228931223764933",
            "Permute.swap(int, int)": "41.909300435348996"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.027904872039822",
            "deltablue.Variable.<init>()": "2.8659057770626983",
            "som.Vector.forEach(ForEachInterface)": "24.460757202473733",
            "deltablue.BinaryConstraint.getOutput()": "3.016742923223893",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "8.99994972095128",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "3.4441148373472776",
            "deltablue.ScaleConstraint.execute()": "3.242998642465685",
            "deltablue.BinaryConstraint.chooseMethod(int)": "3.192719593745287",
            "som.Vector.append(Object)": "19.131178038111525",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "3.3184172155462828"
        },
        "YourKit_List.txt": {
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.11981468661803076",
            "List.tail(List$Element, List$Element, List$Element)": "3.5278768837531276",
            "List$Element.<init>(Object)": "0.3860695457692102",
            "List.makeList(int)": "0.3195058309814154",
            "List$Element.setNext(List$Element)": "0.1597529154907077",
            "List$Element.getNext()": "24.149315725011977",
            "List.isShorterThan(List$Element, List$Element)": "70.31790830182649",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.11981468661803076",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.18637840140582562",
            "java.lang.Integer.valueOf(int) Integer.java": "0.10650194366047178"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.143199571360086",
            "nbody.Body.getZ()": "7.303798539240293",
            "nbody.Body.setX(double)": "0.6203998759200249",
            "nbody.Body.getX()": "0.4088999182200164",
            "nbody.Body.setZ(double)": "0.549899890020022",
            "nbody.NBodySystem.advance(double)": "45.105890978821805",
            "nbody.Body.setVY(double)": "5.188798962240208",
            "nbody.Body.setVZ(double)": "7.303798539240293",
            "nbody.Body.setVX(double)": "28.18589436282113",
            "nbody.Body.setY(double)": "1.4099997180000565"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.12943567987979",
            "java.io.RandomAccessFile.<init>(File, String, boolean) RandomAccessFile.java": "0.044191082239604045",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.07954394803128727",
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.07954394803128727",
            "jdk.internal.org.objectweb.asm.FieldVisitor.<init>(int, FieldVisitor) FieldVisitor.java": "0.23863184409386182",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.1060585973750497",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.03535286579168323",
            "java.net.URL$DefaultFactory.createURLStreamHandler(String) URL.java": "0.017676432895841615",
            "com.yourkit.probes.Table.createRow() a": "0.16792611251049536",
            "java.lang.invoke.MemberName.getDeclaringClass() MemberName.java": "0.07954394803128727"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.892104367204184",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.32941285709864",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.448265189266145",
            "cd.RedBlackTree.findNode(Comparable)": "9.447831873471786",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.993128849546564",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.522516945742672",
            "cd.RedBlackTree.put(Comparable, Object)": "6.909839363644804",
            "cd.Vector2D.compareNumbers(double, double)": "9.525209693893341",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.2712556872698",
            "cd.CollisionDetector.lambda$handleNewFrame$0(RedBlackTree, Vector, Aircraft)": "2.9171438298925993"
        },
        "YourKit_Sieve.txt": {
            "java.util.stream.MatchOps.makeRef(Predicate, MatchOps$MatchKind) MatchOps.java": "0.13516885709532522",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.753535185493261",
            "Benchmark.innerBenchmarkLoop(int)": "0.22874729662285803",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.07278323074363664",
            "Sieve.benchmark()": "87.30868407918814",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.10397604391948093",
            "java.lang.invoke.InvokerBytecodeGenerator.<init>(LambdaForm, int, String, String, MethodType) InvokerBytecodeGenerator.java": "0.05198802195974046",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.11437364831142902",
            "Sieve.sieve(boolean[], int)": "7.9125769422725",
            "java.util.TreeMap$PrivateEntryIterator.hasNext() TreeMap.java": "0.08318083513558473"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.17233455882352938",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.17233455882352938",
            "Bounce.benchmark()": "60.049019607843135",
            "Bounce.lambda$benchmark$0(Random, int)": "0.3829656862745097",
            "som.Random.next()": "0.1531862745098039",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.708486519607843",
            "com.yourkit.probes.Table.createRow() a": "0.5553002450980391",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c9800.invoke(Object, Object, long) LambdaForm$MH": "0.17233455882352938",
            "Bounce$Ball.bounce()": "35.577512254901954",
            "Bounce$Ball.<init>(Random)": "1.723345588235294"
        }
    },
    "Runtimes": {
        "NBody.data": 22.099,
        "YourKit_Storage.txt": 59.1345,
        "rebench_test_Async_Bounce.txt": 65.5675,
        "Permute_not_profiled_": 29.6385,
        "JavaFlightRecorder_Sieve.jfr": 30.912,
        "CD_not_profiled_": 41.7415,
        "JProfiler_NBody.txt": 21.237,
        "JProfiler_List.txt": 28.186999999999998,
        "YourKit_Mandelbrot.txt": 38.0235,
        "CD.data": 43.8975,
        "Json_not_profiled_": 78.011,
        "List.data": 23.575000000000003,
        "Queens_not_profiled_": 21.038,
        "Towers.hpl": 26.409,
        "Bounce.hpl": 25.818,
        "JavaFlightRecorder_Json.jfr": 80.4975,
        "Sieve.data": 32.452,
        "Richards.hpl": 91.415,
        "YourKit_Richards.txt": 90.85499999999999,
        "JavaFlightRecorder_Havlak.jfr": 153.6535,
        "JavaFlightRecorder_CD.jfr": 42.564499999999995,
        "JavaFlightRecorder_Towers.jfr": 25.6995,
        "rebench_test_Async_CD.txt": 132.3355,
        "List_not_profiled_": 22.32,
        "Havlak_not_profiled_": 152.3445,
        "JProfiler_Json.txt": 1029.7359999999999,
        "rebench_test_Async_NBody.txt": 56.176,
        "JavaFlightRecorder_Bounce.jfr": 15.17,
        "Havlak.data": 155.587,
        "Towers_not_profiled_": 25.586,
        "YourKit_DeltaBlue.txt": 12.09,
        "rebench_test_Async_Towers.txt": 71.5945,
        "YourKit_NBody.txt": 23.709,
        "JavaFlightRecorder_NBody.jfr": 21.51,
        "rebench_test_Async_Sieve.txt": 81.0475,
        "Storage.hpl": 58.198,
        "JProfiler_Queens.txt": 26.0655,
        "rebench_test_Async_List.txt": 64.1115,
        "rebench_test_Async_Richards.txt": 246.63299999999998,
        "YourKit_Towers.txt": 27.4665,
        "JProfiler_Havlak.txt": 1927.0245,
        "JavaFlightRecorder_List.jfr": 22.54,
        "YourKit_Permute.txt": 29.781,
        "Queens.data": 21.9405,
        "Storage_not_profiled_": 62.082,
        "Json.hpl": 78.505,
        "Towers.data": 27.2305,
        "YourKit_List.txt": 25.009500000000003,
        "JProfiler_CD.txt": 474.67150000000004,
        "JProfiler_Permute.txt": 29.9695,
        "Sieve.hpl": 30.314,
        "DeltaBlue_not_profiled_": 12.109,
        "CD.hpl": 42.265,
        "JavaFlightRecorder_Queens.jfr": 20.963,
        "JProfiler_Bounce.txt": 43.925,
        "Permute.hpl": 29.72,
        "Richards_not_profiled_": 92.27250000000001,
        "DeltaBlue.hpl": 15.291,
        "NBody.hpl": 20.999,
        "JProfiler_Towers.txt": 26.9805,
        "JProfiler_Mandelbrot.txt": 37.6395,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.840499999999999,
        "rebench_test_Async_Mandelbrot.txt": 99.44649999999999,
        "YourKit_CD.txt": 44.5655,
        "rebench_test_Async_Permute.txt": 78.027,
        "Mandelbrot.data": 38.897999999999996,
        "JProfiler_Storage.txt": 1040.0655,
        "YourKit_Sieve.txt": 26.441000000000003,
        "JavaFlightRecorder_Permute.jfr": 29.5805,
        "YourKit_Bounce.txt": 13.71,
        "JProfiler_Sieve.txt": 27.6445,
        "JProfiler_DeltaBlue.txt": 96.592,
        "YourKit_Queens.txt": 22.2455,
        "Mandelbrot.hpl": 38.113,
        "JavaFlightRecorder_Storage.jfr": 59.101,
        "List.hpl": 22.259500000000003,
        "Mandelbrot_not_profiled_": 37.541,
        "Queens.hpl": 20.994500000000002,
        "Storage.data": 65.9325,
        "JavaFlightRecorder_Richards.jfr": 88.812,
        "Bounce.data": 27.0225,
        "Permute.data": 30.5415,
        "YourKit_Json.txt": 78.832,
        "rebench_test_Async_DeltaBlue.txt": 32.950500000000005,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.832499999999996,
        "YourKit_Havlak.txt": 154.6495,
        "DeltaBlue.data": 12.555499999999999,
        "JProfiler_Richards.txt": 92.00649999999999,
        "rebench_test_Async_Storage.txt": 156.65699999999998,
        "Sieve_not_profiled_": 30.982,
        "Havlak.hpl": 154.6535,
        "Richards.data": 95.742,
        "rebench_test_Async_Havlak.txt": 450.7495,
        "Bounce_not_profiled_": 26.0405,
        "NBody_not_profiled_": 21.169,
        "Json.data": 86.128,
        "rebench_test_Async_Json.txt": 251.381,
        "rebench_test_Async_Queens.txt": 54.976
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.54%",
            "LinearScan::allocate_registers": "0.02%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.31%",
            "[.] void nbody.NBodySystem.advance(double)": "0.07%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.35%",
            "[.] java.lang.Object Permute.benchmark()": "0.03%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.11%",
            "[.] void Permute.permute(int)": "0.04%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.63%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.77%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.54%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.04%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.21%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.88%",
            "[.] vtable chunks": "6.45%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "6.07%",
            "[.] void deltablue.Planner.chainTest(int)": "23.98%",
            "[.] void deltablue.AbstractConstraint.addConstraint(deltablue.Planner)": "4.53%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.78%",
            "[.] Interpreter": "0.47%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Queens.placeQueen(int)": "92.92%",
            "0xffffffffb4c063aa": "0.20%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.11%",
            "[.] Interpreter": "0.45%",
            "[.] void Towers.moveDisks(int, int, int)": "0.11%",
            "[.] java.lang.Object Towers.benchmark()": "0.09%"
        },
        "Richards.data": {
            "[.] java.lang.Object Richards.benchmark()": "6.72%",
            " ": "0",
            "[.] vtable chunks": "35.65%",
            "[.] boolean richards.Scheduler.start()": "22.73%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.24%",
            "[.] void richards.Scheduler.schedule()": "8.24%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.37%",
            "[.] Interpreter": "0.20%",
            "0xffffffffb51c12b7": "0.09%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.93%",
            "0xffffffffb4c063aa": "0.06%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.01%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "10.46%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.27%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.71%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.81%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.28%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb5800d70": "0.06%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "96.23%",
            "[.] Interpreter": "0.46%",
            "[.] java.lang.Object List.benchmark()": "0.34%",
            "0xffffffffb51c12b7": "0.18%",
            "[.] List$Element List.makeList(int)": "0.55%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.36%",
            "0xffffffffb51c12b7": "0.24%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "83.96%",
            "[.] java.lang.Object Sieve.benchmark()": "6.86%",
            "[.] int Sieve.sieve(boolean[], int)": "5.77%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.46%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "[.] java.lang.Object Bounce.benchmark()": "23.68%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.49%",
            " ": "0",
            "[.] void json.JsonPureStringParser.skipWhiteSpace()": "5.23%",
            "[.] StubRoutines (2)": "8.11%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "20.10%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "18.90%"
        }
    }
}