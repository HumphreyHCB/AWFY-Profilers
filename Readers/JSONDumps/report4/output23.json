{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.08920606601248884",
            "Run.getSuiteFromName(Ljava/lang/String;)Ljava/util/function/Supplier;": "0.08920606601248884",
            "Mandelbrot.mandelbrot(I)I": "99.82158786797501"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.16447368421052633",
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.16447368421052633",
            "Queens.placeQueen(I)Z": "84.375",
            "Queens.getRowColumn(II)Z": "13.980263157894738",
            "java.util.Arrays.fill([ZZ)V": "0.493421052631579",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.16447368421052633",
            "Queens.queens()Z": "0.6578947368421053"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "92.8735632183908",
            "Bounce$Ball.bounce()Z": "0.22988505747126436",
            "Bounce.benchmark()Ljava/lang/Object;": "6.896551724137931"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.082201243380152",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.8519456596822473",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.983421597973751",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.154501496661294",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.14390973981119",
            "havlak.HavlakLoopFinder.findLoops()V": "8.38130324660373",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "4.167626064932074",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "49.80428275385678",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.0591756850103615",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.9440478931614091"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "8.928571428571429",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "0.9353741496598639",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.476190476190476",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "0.9353741496598639",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "3.2312925170068025",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "23.12925170068027",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "11.989795918367346",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "23.04421768707483",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "6.887755102040816",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.530612244897959"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "91.46706586826346",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "7.7844311377245505",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1497005988023952",
            "List.makeList(I)LList$Element;": "0.5988023952095808"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "5.190311418685121",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.844290657439446",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "44.63667820069204",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "3.1141868512110724",
            "deltablue.Planner.chainTest(I)V": "2.7681660899653977",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.7681660899653977",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "9.688581314878892",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "4.498269896193771",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "7.958477508650518",
            "deltablue.Planner.lambda$constraintsConsuming$3(Ldeltablue/AbstractConstraint;Lsom/ForEachInterface;Ldeltablue/AbstractConstraint;)V": "3.1141868512110724"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.599877074370006",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.40012292562999"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.10810810810810811",
            "java.util.Arrays.fill([ZZ)V": "0.10810810810810811",
            "Sieve.sieve([ZI)I": "99.78378378378379"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "63.14325452016689",
            "Towers.benchmark()Ljava/lang/Object;": "0.27816411682892905",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "36.57858136300417"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.36406995230524",
            "NBody.innerBenchmarkLoop(I)Z": "0.1589825119236884",
            "java.nio.CharBuffer.limit(I)Ljava/nio/Buffer;": "0.1589825119236884",
            "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Ljava/lang/Class;)Ljava/lang/String;": "0.1589825119236884",
            "jdk.jfr.internal.handlers.EventHandler1338_1683118089144-3669899.write(JJJ)V": "0.1589825119236884"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "3.053977272727273",
            " ": "0",
            "richards.Scheduler.lambda$createIdler$2(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.07102272727272728",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.7102272727272728",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "4.971590909090909",
            "richards.Scheduler.schedule()V": "59.87215909090909",
            "Richards.benchmark()Ljava/lang/Object;": "0.7102272727272728",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "25.426136363636367",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "5.184659090909092"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.335532516493873",
            "json.JsonPureStringParser.readExponent()Z": "7.492931196983977",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "25.212064090480677",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.17813383600377",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "23.232799245994343",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "5.843543826578699",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "21.77191328934967",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "0.9896324222431668",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "8.19981149858624",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.6126295947219604"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Harness.processArguments([Ljava/lang/String;)LRun;": "0.1201923076923077",
            "Permute.swap(II)V": "26.201923076923077",
            "Permute.permute(I)V": "73.19711538461539",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.2403846153846154",
            "Permute.benchmark()Ljava/lang/Object;": "0.2403846153846154"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.8",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "46.4",
            "richards.HandlerTaskDataRecord::workInAdd": "3.7",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "5.1",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.1"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.invoke.MethodType::insertParameterTypes": "0.0",
            "java.lang.invoke.LambdaFormBuffer::indexOf": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "0.9",
            "java.lang.String::isLatin1": "0.0",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet::get": "0.0",
            "Mandelbrot::mandelbrot": "98.8",
            "java.lang.invoke.Invokers::callSiteForm": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.1",
            "List::makeList": "0.8",
            "List::tail": "2.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "List::isShorterThan": "80.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "List$Element::setNext": "0.1",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "13.7",
            "java.lang.String::<init>": "4.5",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "3.7",
            "java.util.Arrays::copyOfRange": "8.0",
            "java.lang.String::equals": "22.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "9.9",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.5"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.5",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "13.0",
            "havlak.HavlakLoopFinder::findLoops": "5.6",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.1",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "5.4",
            "som.Vector::<init>": "2.2",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.6",
            "java.util.ArrayList::grow": "0.0",
            "Permute::permute": "50.3",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.1",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "AGCT::Unknown Java[ERR=-5]": "6.3"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "13.3",
            "Queens::setRowColumn": "24.1",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.5"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.3",
            "java.util.Arrays::setAll": "35.2",
            "som.Random::next": "12.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.2"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "5.8",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "86.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "4.5"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "3.8",
            "deltablue.Variable::<init>": "4.9",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0::apply": "3.7",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "5.1",
            "som.Vector::append": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "12.3",
            "AGCT::Unknown Java[ERR=-5]": "15.3",
            "deltablue.AbstractConstraint::satisfy": "4.3",
            "som.Dictionary::hash": "13.4",
            "som.Vector::forEach": "8.0"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.5",
            "Bounce$Ball::bounce": "75.1",
            "java.util.Arrays::setAll": "0.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "som.Random::next": "0.7",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "Bounce$Ball::<init>": "1.6",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.6",
            "nbody.Body::getZ": "7.7",
            "nbody.Body::setVX": "28.2",
            "nbody.Body::setVY": "5.1",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "nbody.NBodySystem::advance": "41.0"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.3",
            "Towers::popDiskFrom": "21.5",
            "Towers::moveDisks": "4.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "Towers::pushDisk": "39.5",
            "Towers$TowersDisk::setNext": "18.8",
            "AGCT::Unknown Java[ERR=-5]": "3.7",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.4",
            "Towers$TowersDisk::getNext": "3.3"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "13.9",
            "cd.RedBlackTree::forEach": "3.4",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "11.7",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "cd.Vector2D::compareNumbers": "4.8",
            "cd.CollisionDetector::isInVoxel": "20.9",
            "cd.RedBlackTree::treeInsert": "14.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.BinaryConstraint.chooseMethod": "3.19%",
            "deltablue.BinaryConstraint.<init>": "3.90%",
            "som.Dictionary.at": "3.84%",
            "som.Vector.append": "2.79%",
            "itable": "4.80%",
            "som.Vector.forEach": "4.48%",
            "java.lang.Object.<init>": "3.98%",
            "deltablue.AbstractConstraint.<init>": "11.40%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "3.88%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.18%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "76.46%",
            "som.Random.next": "0.80%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.61%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "17.04%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.66%",
            "Bounce.lambda$benchmark$0": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.63%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.61%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "11.13%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.27%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.36%",
            "java.util.Arrays.setAll": "35.51%",
            "Storage.lambda$buildTreeDepth$0": "4.04%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.31%",
            "__memset_avx2_unaligned_erms": "0.17%",
            "Storage.buildTreeDepth": "43.02%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.84%",
            "Towers.popDiskFrom": "18.65%",
            "Towers.moveDisks": "8.97%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.61%",
            "Towers.moveTopDisk": "4.88%",
            "Towers$TowersDisk.getSize": "0.38%",
            "Towers$TowersDisk.getNext": "3.84%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.33%",
            "cd.CollisionDetector.isInVoxel": "19.21%",
            "cd.RedBlackTree.forEach": "6.06%",
            "Node::set_req_X(unsigned": "3.95%",
            "cd.RedBlackTree.put": "6.36%",
            "cd.RedBlackTree.treeInsert": "12.15%",
            "cd.RedBlackTree.treeMinimum": "4.97%",
            "cd.RedBlackTree.findNode": "2.72%",
            "cd.Vector2D.compareNumbers": "4.41%",
            "cd.RedBlackTree.leftRotate": "2.03%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.14%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.79%",
            "som.Vector.append": "2.59%",
            "som.Vector.forEach": "2.36%",
            "som.IdentitySet.lambda$contains$0": "31.66%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.57%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.95%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.05%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.82%",
            "havlak.HavlakLoopFinder.doDFS": "6.17%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.68%",
            "Sieve.benchmark": "6.79%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "84.56%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.04%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.08%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.06%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.21%",
            "Permute.swap": "40.71%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.36%",
            "nbody.Body.getZ": "7.86%",
            "nbody.Body.getY": "0.84%",
            "nbody.Body.setX": "1.69%",
            "nbody.Body.setY": "1.53%",
            "nbody.Body.setZ": "0.34%",
            "nbody.Body.setVX": "28.76%",
            "nbody.Body.setVY": "5.57%",
            "nbody.Body.getMass": "0.60%",
            "nbody.NBodySystem.advance": "41.00%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.22%",
            "Interpreter": "0.05%",
            "List.makeList": "1.15%",
            "List$Element.setNext": "0.07%",
            "List.tail": "4.65%",
            "List$Element.length": "0.13%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.59%",
            "List$Element.<init>": "0.28%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "6.88%",
            "java.lang.String.length": "2.96%",
            "java.lang.String.<init>": "5.68%",
            "json.JsonPureStringParser.readArray": "2.65%",
            "json.JsonPureStringParser.isWhiteSpace": "2.35%",
            "java.lang.String.isLatin1": "2.89%",
            "json.JsonPureStringParser.readStringInternal": "6.23%",
            "java.util.Arrays.copyOfRange": "7.67%",
            "java.lang.String.equals": "24.27%",
            "json.JsonPureStringParser.read": "15.18%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.98%",
            "Queens.getRowColumn": "68.04%",
            "Queens.setRowColumn": "18.29%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "Queens.queens": "0.62%",
            "Queens.placeQueen": "8.83%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.78%",
            "Richards.benchmark": "4.80%",
            "richards.Packet.<init>": "7.08%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.32%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.79%",
            "itable": "37.51%",
            "richards.TaskControlBlock.<init>": "3.16%",
            "richards.RBObject.<init>": "5.63%",
            "richards.RBObject.append": "2.62%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.09%"
        }
    },
    "JProfiler": {
        "Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.5",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.3",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.4",
            "deltablue.AbstractConstraint.satisfy": "15.2",
            "deltablue.Planner.removePropagateFrom": "9.1",
            "som.Vector.<init>": "26.1",
            "deltablue.Variable.<init>": "5.3",
            "som.Vector.forEach": "6.7",
            "deltablue.Planner.addPropagate": "2.5",
            "deltablue.Planner.constraintsConsuming": "5.3",
            "deltablue.AbstractConstraint.<init>": "4.0",
            "deltablue.Planner.addConstraintsConsumingTo": "16.2"
        },
        "Permute.txt": {
            "Permute.permute": "98.0",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.swap": "0.1",
            "Permute.benchmark": "1.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.printResult": "0.1"
        },
        "Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "28.7",
            "Queens.placeQueen": "70.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1"
        },
        "CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.6",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.9"
        },
        "Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "54.0",
            "Bounce$Ball.<init>": "44.6",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Run.runBenchmark": "0.2",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "99.0",
            "java.lang.System.nanoTime": "0.1"
        },
        "Richards.txt": {
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.schedule": "14.7",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.1",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.3"
        },
        "Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.5",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.0",
            "Run.printResult": "0.1",
            "java.lang.System.nanoTime": "0.0"
        },
        "Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.5",
            "Towers.moveDisks": "95.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.1",
            "json.JsonValue.<init>": "4.2",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.7",
            "som.Dictionary$Entry.<init>": "3.4",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "43.0",
            "java.lang.Integer.valueOf": "8.6",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.6",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.0"
        },
        "Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.1",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.2",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.2",
            "List$Element.length": "0.1",
            "List.isShorterThan": "71.1",
            "List$Element.<init>": "25.5",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.787261893630955",
            "java.lang.String.<init>(byte[], byte) String.java": "6.961503480751742",
            "json.JsonPureStringParser.read()": "21.322260661130336",
            "java.lang.String.length() String.java": "2.817751408875705",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.7115013557506784",
            "json.JsonArray.<init>()": "2.0315010157505085",
            "java.lang.String.substring(int, int) String.java": "10.110755055377531",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.552253776126889",
            "json.JsonPureStringParser.readStringInternal()": "3.5105017552508784",
            "json.JsonPureStringParser.readValue()": "2.142001071000536"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.070787193382027",
            "som.Vector.hasSome(TestInterface)": "2.1270190319118307",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.938200825501542",
            "havlak.HavlakLoopFinder.findLoops()": "11.577528207544702",
            "som.Vector.append(Object)": "2.7356737087358316",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.5240625845353724",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.50237789819978",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.247493389879317",
            "som.Vector.removeAll()": "2.299362112446225",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.82385228234597"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.5841717388243",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.2503481403827197",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, long, Object) DirectMethodHandle$Holder": "0.14082082896527984",
            "Queens.getRowColumn(int, int)": "57.11066952480793",
            "Queens.queens()": "0.5319897983132793",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6102235921828794",
            "Queens.setRowColumn(int, int, boolean)": "24.565411275054373",
            "com.yourkit.probes.Table.createRow() a": "0.26599489915663965",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.35987545180015956",
            "javax.management.openmbean.CompositeType.isAssignableFrom(OpenType) CompositeType.java": "0.23470138160879972"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.5000018059864844",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.5675962681095297",
            "richards.Scheduler.findTask(int)": "1.5098047006216206",
            "richards.TaskControlBlock.runTask()": "39.760598431681345",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.998454075569699",
            "richards.Scheduler.schedule()": "1.748194916509245",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "4.254904156297295",
            "richards.RBObject.append(Packet, Packet)": "3.1749242388669967",
            "Richards.benchmark()": "26.761107719869827",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.3906095926778086"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.10280606447563498",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.201207700715314",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.4869760948845867",
            "com.yourkit.probes.ReflectionUtilImpl$MemberIdCache.get(Class, String) a": "0.14068198296665838",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.302996526237195",
            "som.Random.next()": "14.782429902496567",
            "com.yourkit.probes.Table.createRow() a": "0.10280606447563498",
            "Storage.buildTreeDepth(int, Random)": "35.327410261127405",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.6901966301254236",
            "sun.nio.fs.NativeBuffers.<clinit>() NativeBuffers.java": "0.11903860097178787"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.20201971453736",
            "Towers.popDiskFrom(int)": "31.297129688838478",
            "Towers.moveDisks(int, int, int)": "8.264662234716406",
            "Towers$TowersDisk.getSize()": "2.3889096678450343",
            "Towers.moveTopDisk(int, int)": "8.638683445338609",
            "java.lang.invoke.MethodHandles$Lookup$ClassDefiner.<init>(MethodHandles$Lookup, MethodHandles$Lookup$ClassFile, int) MethodHandles.java": "0.16891280479712364",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "16.23975966120917",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.12065200342651689",
            "Towers.benchmark()": "0.1085868030838652",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.3136952089089439"
        },
        "YourKit_Permute.txt": {
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.23661705220222867",
            "sun.reflect.generics.factory.CoreReflectionFactory.makeWildcard(FieldTypeSignature[], FieldTypeSignature[]) CoreReflectionFactory.java": "0.04506991470518642",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.07887235073407624",
            "java.security.Permissions.add(Permission) Permissions.java": "0.02253495735259321",
            "Permute.permute(int)": "57.22752419691045",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.15774470146815248",
            "jdk.internal.loader.URLClassPath$JarLoader$2.getBytes() URLClassPath.java": "0.15774470146815248",
            "Permute.benchmark()": "0.6647812419014997",
            "Permute.swap(int, int)": "41.40798413539002",
            "jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String) BuiltinClassLoader.java": "0.0011267478676296606"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.305971442005494",
            "som.Vector.forEach(ForEachInterface)": "40.68400603825881",
            "deltablue.Variable.setValue(int)": "2.2272266079338765",
            "deltablue.BinaryConstraint.isSatisfied()": "3.9100200450394715",
            "som.Vector.<init>(int)": "3.8110321957979663",
            "deltablue.ScaleConstraint.execute()": "2.152985721002747",
            "deltablue.BinaryConstraint.chooseMethod(int)": "2.3014674948650056",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "5.073127273627163",
            "som.Vector.append(Object)": "7.424088693112921",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "3.192358138038556"
        },
        "YourKit_List.txt": {
            "java.util.ArrayList$Itr.next() ArrayList.java": "0.22690567397658867",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.1201265332817234",
            "List.tail(List$Element, List$Element, List$Element)": "2.6427837321979153",
            "List$Element.<init>(Object)": "0.253600459150305",
            "List.makeList(int)": "0.1334739258685816",
            "Benchmark.innerBenchmarkLoop(int)": "0.1201265332817234",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0667369629342908",
            "com.sun.management.internal.GcInfoBuilder.getItemNames() GcInfoBuilder.java": "0.1201265332817234",
            "List$Element.getNext()": "23.264505278893765",
            "List.isShorterThan(List$Element, List$Element)": "72.9168057020061"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.315926229276697",
            "nbody.Body.getZ()": "4.56124495156325",
            "nbody.Body.getMass()": "0.5507385545231168",
            "nbody.Body.getX()": "0.6919535685034032",
            "nbody.Body.setZ(double)": "0.6213460615132601",
            "nbody.NBodySystem.advance(double)": "46.304403084135906",
            "nbody.Body.setVY(double)": "6.2275821165306295",
            "nbody.Body.setVZ(double)": "9.0236393933403",
            "nbody.Body.setVX(double)": "26.887338661846528",
            "nbody.Body.setY(double)": "1.1155986104442623"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.71107042766782",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "java.net.URI.<init>(String) URI.java": "0.03470625493479562",
            "Run.runBenchmark()": "8.676563733698905E-4",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.026029691201096716",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "8.676563733698905E-4",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.05205938240219343",
            "com.yourkit.probes.Table.createRow() a": "0.07808907360329014",
            "Run.measure(Benchmark)": "8.676563733698905E-4",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.09544220107068795"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.044731989087528",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.565848231295625",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.082575099446757",
            "cd.RedBlackTree.findNode(Comparable)": "9.48744913355585",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "9.281697224635362",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.011796442778108",
            "cd.RedBlackTree.put(Comparable, Object)": "6.073491533689969",
            "cd.Vector2D.compareNumbers(double, double)": "9.502690015698107",
            "cd.RedBlackTree.forEach(ForEachInterface)": "5.006629783731882",
            "cd.CollisionDetector.lambda$handleNewFrame$0(RedBlackTree, Vector, Aircraft)": "1.7984240927864905"
        },
        "YourKit_Sieve.txt": {
            "sun.invoke.util.Wrapper.asPrimitiveType(Class) Wrapper.java": "0.11571273786857136",
            "java.io.BufferedWriter.flushBuffer() BufferedWriter.java": "0.09467405825610384",
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.0525966990311688",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "4.712664233192725",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.09467405825610384",
            "java.util.TreeMap.containsKey(Object) TreeMap.java": "0.08415471844987008",
            "Sieve.benchmark()": "85.19613309068723",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.1367514174810389",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1367514174810389",
            "Sieve.sieve(boolean[], int)": "9.246499689679474"
        },
        "YourKit_Bounce.txt": {
            "sun.net.util.URLUtil.urlNoFragString(URL) URLUtil.java": "0.22809745982374283",
            "Bounce.benchmark()": "67.9937791601866",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.8087091757387246",
            "Bounce.lambda$benchmark$0(Random, int)": "0.8294453084499739",
            "som.Random.next()": "0.18662519440124414",
            "com.yourkit.probes.Table.createRow() a": "0.18662519440124414",
            "jdk.internal.org.objectweb.asm.ByteVector.putShort(int) ByteVector.java": "0.29030585795749086",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1658890616899948",
            "Bounce$Ball.bounce()": "28.387765681700355",
            "Bounce$Ball.<init>(Random)": "0.39398652151373764"
        }
    },
    "Runtimes": {
        "Permute_JProfiler_.txt": 30.067500000000003,
        "Havlak_honest_.hpl": 151.70749999999998,
        "Permute_not_profiled_": 29.366500000000002,
        "Permute_honest_.hpl": 30.1465,
        "List_YourKit_.txt": 24.692500000000003,
        "CD_not_profiled_": 42.2645,
        "Json_not_profiled_": 80.145,
        "Queens_not_profiled_": 20.863999999999997,
        "List_JProfiler_.txt": 28.595,
        "Permute_Perf_.data": 30.969,
        "Bounce_Perf_.data": 27.413,
        "Richards_Perf_.data": 93.04400000000001,
        "Sieve_JProfiler_.txt": 27.9625,
        "Permute_YourKit_.txt": 29.8335,
        "Queens_JProfiler_.txt": 27.1605,
        "Towers_JProfiler_.txt": 27.3505,
        "Storage_Perf_.data": 66.16300000000001,
        "JavaFlightRecorder_Sieve_JFR_.jfr": 32.259,
        "List_not_profiled_": 22.2515,
        "JavaFlightRecorder_Mandelbrot_JFR_.jfr": 38.1035,
        "DeltaBlue_YourKit_.txt": 11.7075,
        "Havlak_not_profiled_": 151.4525,
        "rebench_test_Async_CD_Async_.txt": 134.8935,
        "List_honest_.hpl": 22.592,
        "JavaFlightRecorder_Towers_JFR_.jfr": 26.066499999999998,
        "Mandelbrot_YourKit_.txt": 38.1435,
        "Queens_Perf_.data": 21.5435,
        "Towers_not_profiled_": 26.0585,
        "NBody_Perf_.data": 21.796999999999997,
        "CD_YourKit_.txt": 42.3665,
        "Sieve_honest_.hpl": 30.374499999999998,
        "Bounce_JProfiler_.txt": 44.039500000000004,
        "rebench_test_Async_Json_Async_.txt": 247.594,
        "rebench_test_Async_NBody_Async_.txt": 56.0165,
        "JavaFlightRecorder_Storage_JFR_.jfr": 58.147999999999996,
        "Storage_honest_.hpl": 59.662,
        "JavaFlightRecorder_Richards_JFR_.jfr": 94.12450000000001,
        "JavaFlightRecorder_DeltaBlue_JFR_.jfr": 11.854,
        "Havlak_YourKit_.txt": 156.853,
        "List_Perf_.data": 23.2755,
        "Json_Perf_.data": 82.5945,
        "rebench_test_Async_Mandelbrot_Async_.txt": 100.62,
        "Havlak_Perf_.data": 158.76749999999998,
        "JavaFlightRecorder_List_JFR_.jfr": 22.6045,
        "Storage_not_profiled_": 60.9875,
        "rebench_test_Async_Queens_Async_.txt": 56.3085,
        "Towers_YourKit_.txt": 27.2305,
        "NBody_JProfiler_.txt": 21.4895,
        "Mandelbrot_honest_.hpl": 37.966,
        "Havlak_JProfiler_.txt": 1933.7925,
        "Mandelbrot_Perf_.data": 39.492000000000004,
        "rebench_test_Async_Permute_Async_.txt": 79.12,
        "DeltaBlue_not_profiled_": 12.18,
        "CD_JProfiler_.txt": 477.9045,
        "DeltaBlue_honest_.hpl": 12.523499999999999,
        "JavaFlightRecorder_CD_JFR_.jfr": 41.7305,
        "Sieve_Perf_.data": 35.114999999999995,
        "NBody_honest_.hpl": 21.500500000000002,
        "rebench_test_Async_Sieve_Async_.txt": 93.1285,
        "CD_honest_.hpl": 40.9645,
        "rebench_test_Async_Havlak_Async_.txt": 443.0765,
        "Towers_Perf_.data": 27.1085,
        "JavaFlightRecorder_Bounce_JFR_.jfr": 15.283000000000001,
        "rebench_test_Async_DeltaBlue_Async_.txt": 40.551500000000004,
        "Richards_not_profiled_": 90.31649999999999,
        "rebench_test_Async_List_Async_.txt": 66.9085,
        "JavaFlightRecorder_Permute_JFR_.jfr": 30.058,
        "Richards_honest_.hpl": 93.06649999999999,
        "JavaFlightRecorder_Havlak_JFR_.jfr": 153.811,
        "rebench_test_Async_Bounce_Async_.txt": 62.33,
        "rebench_test_Async_Towers_Async_.txt": 72.91499999999999,
        "Json_YourKit_.txt": 79.661,
        "DeltaBlue_JProfiler_.txt": 96.43950000000001,
        "NBody_YourKit_.txt": 23.301,
        "Mandelbrot_not_profiled_": 37.772000000000006,
        "JavaFlightRecorder_NBody_JFR_.jfr": 21.3445,
        "Richards_YourKit_.txt": 91.4925,
        "rebench_test_Async_Storage_Async_.txt": 154.05200000000002,
        "DeltaBlue_Perf_.data": 15.106,
        "Json_honest_.hpl": 78.692,
        "Sieve_YourKit_.txt": 26.7,
        "Queens_YourKit_.txt": 22.764000000000003,
        "Richards_JProfiler_.txt": 95.3785,
        "Towers_honest_.hpl": 26.286,
        "CD_Perf_.data": 43.4345,
        "Json_JProfiler_.txt": 1027.2755,
        "Queens_honest_.hpl": 21.262500000000003,
        "Sieve_not_profiled_": 30.7285,
        "Bounce_YourKit_.txt": 14.023,
        "Bounce_not_profiled_": 25.752499999999998,
        "Storage_JProfiler_.txt": 1034.0895,
        "Bounce_honest_.hpl": 26.442,
        "rebench_test_Async_Richards_Async_.txt": 249.82549999999998,
        "JavaFlightRecorder_Queens_JFR_.jfr": 20.977,
        "NBody_not_profiled_": 21.167,
        "Mandelbrot_JProfiler_.txt": 38.263,
        "JavaFlightRecorder_Json_JFR_.jfr": 80.54050000000001,
        "Storage_YourKit_.txt": 60.626000000000005
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.50%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.33%",
            "[.] void nbody.NBodySystem.advance(double)": "96.51%",
            "0xffffffffb4c0634b": "0.12%",
            "0xffffffffb4c063aa": "0.11%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.37%",
            "[.] java.lang.Object Permute.benchmark()": "0.04%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "0.04%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.96%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.31%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.87%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.14%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.30%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.EqualityConstraint.execute()": "4.50%",
            "[.] vtable chunks": "7.22%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "5.69%",
            "[.] void deltablue.Planner.chainTest(int)": "28.99%",
            "[.] void deltablue.AbstractConstraint.addConstraint(deltablue.Planner)": "6.82%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.46%",
            "[.] Interpreter": "0.49%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Queens.getRowColumn(int, int)": "0.05%",
            "[.] boolean Queens.placeQueen(int)": "94.64%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.10%",
            "[.] Interpreter": "0.42%",
            "[.] void Towers.moveDisks(int, int, int)": "0.14%",
            "[.] java.lang.Object Towers.benchmark()": "0.08%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.49%",
            "[.] boolean richards.Scheduler.start()": "22.28%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.85%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.85%",
            "[.] void richards.Scheduler.schedule()": "7.62%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.79%",
            "[.] Interpreter": "0.18%",
            "0xffffffffb51c12b7": "0.15%",
            "0xffffffffb4c699f1": "0.06%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.97%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.38%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.69%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.82%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.07%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "13.05%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.28%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.02%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.98%",
            "[.] Interpreter": "0.49%",
            "[.] java.lang.Object List.benchmark()": "0.37%",
            "0xffffffffb51c12b7": "0.15%",
            "[.] List$Element List.makeList(int)": "0.53%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.35%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "84.70%",
            "[.] java.lang.Object Sieve.benchmark()": "6.09%",
            "[.] int Sieve.sieve(boolean[], int)": "6.13%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.57%",
            "0xffffffffb51c12b7": "0.27%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "[.] java.lang.Object Bounce.benchmark()": "34.46%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.30%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.61%",
            "[.] StubRoutines (2)": "8.21%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.18%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.69%"
        }
    }
}