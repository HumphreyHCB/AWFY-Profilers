{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Run.getSuiteFromName(Ljava/lang/String;)Ljava/util/function/Supplier;": "0.08718395815170009",
            "Mandelbrot.mandelbrot(I)I": "99.9128160418483"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.6504065040650406",
            " ": "0",
            "Queens.placeQueen(I)Z": "84.55284552845528",
            "Queens.getRowColumn(II)Z": "13.495934959349594",
            "java.util.Arrays.fill([ZZ)V": "1.1382113821138211",
            "Queens.queens()Z": "0.16260162601626016"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "93.18681318681318",
            "jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;)J": "0.21978021978021978",
            "Bounce$Ball.bounce()Z": "0.21978021978021978",
            "Bounce.benchmark()Ljava/lang/Object;": "6.153846153846153",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.21978021978021978"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.0912468075226376",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.975156721615974",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "4.434641281634549",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.2769909449732992",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "23.519851404690037",
            "havlak.HavlakLoopFinder.findLoops()V": "10.0069654051544",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "4.086371023914557",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "51.381472022289294",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.300208962154632",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6268864638959832"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.476309226932669",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.6625103906899419",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.295095594347465",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "3.3250207813798838",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "24.85453034081463",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "0.8312551953449709",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "11.305070656691605",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "20.448877805486283",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "8.229426433915211",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.4962593516209477"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.25341426403642",
            " ": "0",
            "Run.measure(LBenchmark;)V": "0.15174506828528073",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "10.925644916540213",
            "java.lang.invoke.LambdaForm$MH+0x0000000800c0bc00.398572781.<clinit>()V": "0.15174506828528073",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15174506828528073",
            "java.lang.invoke.LambdaForm$MH+0x0000000800c10400.1436901839.<clinit>()V": "0.15174506828528073",
            "List.makeList(I)LList$Element;": "1.2139605462822458"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "8.02675585284281",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.678929765886288",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "2.3411371237458196",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.6722408026755853",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "51.17056856187291",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "3.3444816053511706",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "7.6923076923076925",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "6.020066889632107",
            "deltablue.Planner.lambda$constraintsConsuming$3(Ldeltablue/AbstractConstraint;Lsom/ForEachInterface;Ldeltablue/AbstractConstraint;)V": "2.3411371237458196",
            "deltablue.Planner.incrementalAdd(Ldeltablue/AbstractConstraint;)V": "4.013377926421405"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.061124694376528114",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.141809290953544",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.73594132029339",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.061124694376528114"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)J": "0.10362694300518134",
            "Sieve.benchmark()Ljava/lang/Object;": "0.31088082901554404",
            "Sieve.sieve([ZI)I": "99.58549222797927"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.13262599469496023",
            "jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;)J": "0.13262599469496023",
            "Towers.moveDisks(III)V": "57.16180371352786",
            "Towers.benchmark()Ljava/lang/Object;": "0.13262599469496023",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "42.44031830238727"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.52456418383518",
            "NBody.innerBenchmarkLoop(I)Z": "0.4754358161648177"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "5.544554455445544",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.858085808580858",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "4.026402640264026",
            "richards.Scheduler.schedule()V": "58.94389438943894",
            "richards.Scheduler.lambda$createDevice$0(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.066006600660066",
            "Richards.benchmark()Ljava/lang/Object;": "1.518151815181518",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "24.88448844884488",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.158415841584158"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.0",
            "json.JsonPureStringParser.readExponent()Z": "6.142857142857142",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "16.428571428571427",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "32.238095238095234",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "5.904761904761904",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "14.523809523809524",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "6.952380952380952",
            "som.Vector.append(Ljava/lang/Object;)V": "7.7142857142857135",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "4.095238095238095",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.6666666666666666"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "28.950542822677924",
            "sun.nio.cs.StreamEncoder.implFlushBuffer()V": "0.12062726176115803",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(Ljava/lang/invoke/MemberName;Ljava/lang/invoke/LambdaForm$Name;)V": "0.12062726176115803",
            "Permute.permute(I)V": "70.20506634499397",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12062726176115803",
            "Permute.benchmark()Ljava/lang/Object;": "0.4825090470446321"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.5",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "45.5",
            "richards.TaskControlBlock::<init>": "3.5",
            "richards.Scheduler::schedule": "5.5",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "6.3"
        },
        "Mandelbrot.hpl": {
            "java.util.Arrays$ArrayList::iterator": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.invoke.MemberName::isStatic": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.lang.StringConcatHelper::newArrayWithSuffix": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "jdk.internal.ref.CleanerImpl::<init>": "0.0",
            "Mandelbrot::mandelbrot": "97.7"
        },
        "List.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "List$Element::getNext": "9.1",
            "List::makeList": "0.7",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "2.0",
            "List::isShorterThan": "80.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "16.2",
            "java.lang.String::<init>": "5.3",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "2.8",
            "java.util.Arrays::copyOfRange": "6.8",
            "java.lang.String::equals": "21.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.6",
            "AGCT::Unknown Java[ERR=-5]": "9.8",
            "java.lang.String::isLatin1": "2.7",
            "json.JsonPureStringParser::readStringInternal": "9.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.5",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.9",
            "havlak.HavlakLoopFinder::findLoops": "5.5",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "4.2",
            "AGCT::Unknown not Java[ERR=-3]": "8.3",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.2",
            "havlak.HavlakLoopFinder::doDFS": "5.2",
            "som.Vector::<init>": "2.3",
            "som.Vector::forEach": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "40.3",
            "jdk.internal.org.objectweb.asm.SymbolTable::addType": "0.0",
            "Permute::permute": "49.6",
            "Permute::benchmark": "0.1",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.invoke.MethodTypeForm::<init>": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "AGCT::Unknown Java[ERR=-5]": "6.3",
            "sun.nio.cs.StreamEncoder::isOpen": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "12.6",
            "Queens::setRowColumn": "25.3",
            "java.lang.AbstractStringBuilder::ensureCapacityInternal": "0.0",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.3",
            "Storage::buildTreeDepth": "38.9",
            "java.util.Arrays::setAll": "33.7",
            "som.Random::next": "11.5",
            "AGCT::Unknown not Java[ERR=-3]": "7.5",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.3",
            "Storage::lambda$buildTreeDepth$0": "3.4",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "0.9"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.io.BufferedOutputStream::flush": "0.0",
            "Run::printResult": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "86.1",
            "java.nio.charset.CharsetEncoder::encode": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "java.util.concurrent.ConcurrentHashMap::casTabAt": "0.0",
            "java.util.Arrays::fill": "5.3"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.5",
            "deltablue.Variable::<init>": "6.3",
            "som.Vector::append": "5.0",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.6",
            "AGCT::Unknown not Java[ERR=-3]": "14.2",
            "AGCT::Unknown Java[ERR=-5]": "15.4",
            "deltablue.AbstractConstraint::satisfy": "3.3",
            "deltablue.AbstractConstraint::<init>": "12.9",
            "som.Vector::forEach": "5.9",
            "som.Dictionary::at": "2.9"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.5",
            "Bounce$Ball::bounce": "75.4",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "2.1",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.8",
            "nbody.Body::getVZ": "0.5",
            "nbody.Body::setVZ": "8.1",
            "nbody.Body::getZ": "8.1",
            "nbody.Body::setVX": "27.3",
            "nbody.Body::setVY": "5.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "nbody.NBodySystem::advance": "41.6"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.1",
            "Towers::popDiskFrom": "21.4",
            "Towers::moveDisks": "3.7",
            "AGCT::Unknown not Java[ERR=-3]": "5.5",
            "Towers::pushDisk": "38.2",
            "Towers$TowersDisk::setNext": "18.6",
            "AGCT::Unknown Java[ERR=-5]": "3.8",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.3",
            "Towers$TowersDisk::getNext": "2.6"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.4",
            "cd.RedBlackTree::forEach": "3.6",
            "cd.RedBlackTree::put": "6.6",
            "cd.RedBlackTree::findNode": "3.0",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "10.7",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "4.3",
            "cd.CollisionDetector::isInVoxel": "21.8",
            "cd.RedBlackTree::treeInsert": "13.0"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.99%",
            "deltablue.AbstractConstraint.satisfy": "2.91%",
            "som.Vector.append": "4.86%",
            "vtable": "3.57%",
            "som.Vector.<init>": "2.98%",
            "deltablue.Variable.<init>": "2.50%",
            "som.Vector.forEach": "23.92%",
            "itable": "3.26%",
            "deltablue.Planner.chainTest": "2.65%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "5.48%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.24%",
            "som.Random.next": "0.92%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.66%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "Bounce.benchmark": "19.43%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.84%",
            "Bounce.lambda$benchmark$0": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.64%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.58%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "10.93%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.25%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.34%",
            "java.util.Arrays.setAll": "34.87%",
            "Storage.lambda$buildTreeDepth$0": "4.24%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.22%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.39%",
            "Storage.buildTreeDepth": "43.51%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.84%",
            "Towers.popDiskFrom": "18.84%",
            "Towers.moveDisks": "8.82%",
            "Interpreter": "0.04%",
            "Towers.pushDisk": "42.36%",
            "Towers.moveTopDisk": "4.98%",
            "Towers$TowersDisk.getSize": "0.38%",
            "Towers$TowersDisk.getNext": "3.85%",
            "Towers.benchmark": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "12.61%",
            "cd.CollisionDetector.isInVoxel": "19.23%",
            "cd.RedBlackTree.forEach": "5.82%",
            "Node::set_req_X(unsigned": "4.21%",
            "cd.RedBlackTree.put": "6.75%",
            "cd.RedBlackTree.treeInsert": "12.36%",
            "cd.RedBlackTree.treeMinimum": "5.06%",
            "cd.RedBlackTree.findNode": "2.75%",
            "cd.Vector2D.compareNumbers": "3.71%",
            "cd.RedBlackTree.leftRotate": "2.13%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.69%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.83%",
            "som.Vector.hasSome": "2.14%",
            "som.Vector.append": "2.91%",
            "som.Vector.forEach": "2.13%",
            "som.IdentitySet.lambda$contains$0": "32.49%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.87%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.00%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "2.94%",
            "havlak.HavlakLoopFinder.doDFS": "5.37%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "12.68%",
            "Sieve.benchmark": "5.21%",
            "Interpreter": "0.04%",
            "Sieve.sieve": "79.84%",
            "SpinPause": "0.02%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.32%",
            "Permute.swap": "40.42%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "Permute.verifyResult": "0.02%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.74%",
            "nbody.Body.getZ": "7.70%",
            "nbody.Body.getY": "0.72%",
            "nbody.Body.setX": "1.18%",
            "nbody.Body.setY": "1.75%",
            "nbody.Body.setVX": "27.61%",
            "nbody.Body.setVY": "5.57%",
            "nbody.Body.getMass": "0.48%",
            "nbody.Body.getVZ": "0.47%",
            "nbody.NBodySystem.advance": "41.75%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.17%",
            "Interpreter": "0.05%",
            "List.makeList": "1.27%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.64%",
            "List$Element.length": "0.11%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.36%",
            "List$Element.<init>": "0.30%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.07%",
            "java.lang.String.length": "2.92%",
            "java.lang.String.<init>": "5.39%",
            "json.JsonPureStringParser.readArray": "2.63%",
            "json.JsonPureStringParser.isWhiteSpace": "2.29%",
            "java.lang.String.isLatin1": "2.90%",
            "json.JsonPureStringParser.readStringInternal": "7.69%",
            "java.util.Arrays.copyOfRange": "6.94%",
            "java.lang.String.equals": "21.95%",
            "json.JsonPureStringParser.read": "16.51%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.97%",
            "Queens.getRowColumn": "58.39%",
            "Queens.setRowColumn": "23.44%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "Queens.queens": "0.59%",
            "Queens.placeQueen": "13.40%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.06%",
            "Richards.benchmark": "4.68%",
            "richards.Packet.<init>": "7.17%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.25%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.90%",
            "itable": "37.20%",
            "richards.TaskControlBlock.<init>": "3.11%",
            "richards.RBObject.<init>": "5.67%",
            "richards.RBObject.append": "2.69%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.12%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "5.1",
            "Towers.moveDisks": "93.0",
            "java.io.PrintStream.println": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.7",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.5",
            "java.io.PrintStream.println": "0.1",
            "Sieve.sieve": "92.6",
            "java.lang.Integer.valueOf": "0.3",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.4",
            "deltablue.AbstractConstraint.satisfy": "9.7",
            "deltablue.Planner.removePropagateFrom": "10.0",
            "som.Vector.<init>": "28.2",
            "deltablue.Variable.<init>": "5.1",
            "som.Vector.forEach": "7.5",
            "deltablue.Planner.addPropagate": "2.2",
            "deltablue.AbstractConstraint.<init>": "8.5",
            "deltablue.Planner.constraintsConsuming": "3.9",
            "deltablue.Planner.addConstraintsConsumingTo": "16.8"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0",
            "java.lang.System.nanoTime": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.5",
            "richards.Scheduler.createWorker": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.1",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.5",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.9",
            "Bounce.benchmark": "55.5",
            "Bounce$Ball.<init>": "43.0",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "3.0",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.4",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "43.3",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "97.8",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.3",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.1",
            "Run.printTotal": "0.1",
            "List.isShorterThan": "74.9",
            "List$Element.<init>": "21.1",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.6",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.5",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "Queens.setRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "18.4",
            "Queens.placeQueen": "80.8",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.935231146462534",
            "java.lang.String.<init>(byte[], byte) String.java": "6.450400266559588",
            "json.JsonPureStringParser.read()": "22.260288602014576",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.874913496287816",
            "java.lang.String.length() String.java": "2.6057908361598336",
            "json.JsonArray.<init>()": "1.973566174271874",
            "java.lang.String.substring(int, int) String.java": "10.068604919391356",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.2624415832956",
            "json.JsonPureStringParser.readStringInternal()": "3.404615240031782",
            "json.JsonPureStringParser.readValue()": "3.2593744393277917"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.488156802094914",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.067689225348093",
            "havlak.HavlakLoopFinder.findLoops()": "10.957868883430951",
            "som.Vector.<init>(int)": "2.4472866752490137",
            "som.Vector.append(Object)": "2.1968462075843926",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.102381820658264",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.300119947802937",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.318999644110916",
            "som.Vector.removeAll()": "2.9240023022948267",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.555085918655195"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.312093628088427",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "Queens.getRowColumn(int, int)": "60.7444733420026",
            "Queens.queens()": "1.3166449934980495",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.47139141742522755",
            "Queens.setRowColumn(int, int, boolean)": "21.81404421326398",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.14629388816644995",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14629388816644995",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.04876462938881665"
        },
        "YourKit_Richards.txt": {
            "richards.Scheduler$$Lambda$17.0x00000008000c7b98.apply(Packet, RBObject)": "3.4059331716265953",
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.124808528889162",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.823706015706939",
            "richards.Scheduler$$Lambda$16.0x00000008000c7970.apply(Packet, RBObject)": "3.496037223786029",
            "richards.TaskControlBlock.runTask()": "38.08878492883583",
            "richards.Scheduler.schedule()": "3.312224957380784",
            "richards.RBObject.append(Packet, Packet)": "2.7896214548560687",
            "Richards.benchmark()": "28.667505235045436",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.5966438042651658",
            "richards.Packet.setLink(Packet)": "1.5317688867103736"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.33533778176899215",
            "Storage$$Lambda$7.0x00000008000c2a98.<init>(Storage, int, Random)": "0.1136738243284719",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.250412067613191",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.449011606097464",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.38262609268964",
            "som.Random.next()": "14.788964545134196",
            "java.util.AbstractCollection.containsAll(Collection) AbstractCollection.java": "0.12504120676131908",
            "Storage.buildTreeDepth(int, Random)": "38.88213161155382",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.194234463630061",
            "jdk.internal.perf.Perf.createLong(String, int, int, long) Perf.java (native)": "0.07388798581350674"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "34.18607180404336",
            "Towers.popDiskFrom(int)": "29.146979565695506",
            "Towers.moveDisks(int, int, int)": "9.510229236402306",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.10875738643916233",
            "Towers.buildTowerAt(int, int)": "0.22959892692712047",
            "Towers$TowersDisk.getSize()": "1.631360796587435",
            "Towers.moveTopDisk(int, int)": "7.347165661667855",
            "java.io.RandomAccessFile.open(String, int) RandomAccessFile.java": "0.10875738643916233",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.17158290333885",
            "java.lang.Class.descriptorString() Class.java": "0.3746087755126703"
        },
        "YourKit_Permute.txt": {
            "javax.management.openmbean.OpenType.isAssignableFrom(OpenType) OpenType.java": "0.04541222951340795",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "0.001135305737835199",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.15894280329692784",
            "Permute.permute(int)": "56.84475829340842",
            "java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(Class, Object) InvokerBytecodeGenerator.java": "0.03405917213505597",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.022706114756703977",
            "java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls() LambdaFormBuffer.java": "0.0908244590268159",
            "Run.measure(Benchmark)": "0.001135305737835199",
            "Permute.benchmark()": "0.2157080901886878",
            "Permute.swap(int, int)": "42.58531822619831"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "7.363438274851605",
            "som.Vector.forEach(ForEachInterface)": "39.0462594234478",
            "deltablue.EqualityConstraint.execute()": "3.982267638440154",
            "deltablue.Plan$$Lambda$27.0x00000008000ccd88.apply(Object)": "2.9303478848899247",
            "deltablue.BinaryConstraint.isSatisfied()": "1.9786109650111456",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "7.689032484283819",
            "som.Vector.<init>(int)": "5.810604352944123",
            "deltablue.ScaleConstraint.execute()": "3.531444886918627",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.0287023818468706",
            "som.Vector.append(Object)": "2.078793798682596"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "3.7586360747941536",
            "List$Element.<init>(Object)": "0.24336492570609627",
            "List.makeList(int)": "0.39208793585982177",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.10816218920270944",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.04056082095101604",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.10816218920270944",
            "List$Element.getNext()": "24.05256682395251",
            "sun.nio.fs.UnixNativeDispatcher.stat(UnixPath, UnixFileAttributes) UnixNativeDispatcher.java": "0.0013520273650338682",
            "java.util.concurrent.ConcurrentHashMap$ValueIterator.<init>(ConcurrentHashMap$Node[], int, int, int, ConcurrentHashMap) ConcurrentHashMap.java": "0.02704054730067736",
            "List.isShorterThan(List$Element, List$Element)": "71.26536241093518"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.3343364515167428",
            "nbody.Body.getZ()": "5.848368276860618",
            "nbody.Body.setX(double)": "1.4053117946825269",
            "nbody.Body.getX()": "0.6955583630246851",
            "nbody.Body.setZ(double)": "0.6813632943915282",
            "nbody.NBodySystem.advance(double)": "44.203443723650395",
            "nbody.Body.setVY(double)": "7.196899797010517",
            "nbody.Body.setVZ(double)": "7.807287748236261",
            "nbody.Body.setVX(double)": "27.52423807969111",
            "nbody.Body.setY(double)": "0.6955583630246851"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.53809406723101",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.11415926095050756",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.05268888966946503",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.05268888966946503",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.026344444834732514",
            "java.nio.DirectByteBuffer.<init>(long, int) DirectByteBuffer.java": "0.01756296322315501",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.07903333450419754",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.026344444834732514",
            "java.lang.String.substring(int, int) String.java": "0.03512592644631002",
            "java.security.BasicPermission.newPermissionCollection() BasicPermission.java": "0.04390740805788752"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.0952864751700995",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.69135802469136",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.562944490625288",
            "cd.RedBlackTree.findNode(Comparable)": "7.4812967581047385",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "5.92654167051507",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.1326005972722517",
            "cd.RedBlackTree$Node.successor()": "2.1089252178196483",
            "cd.RedBlackTree.put(Comparable, Object)": "5.880360826329238",
            "cd.Vector2D.compareNumbers(double, double)": "11.345094054985992",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.271143129829747"
        },
        "YourKit_Sieve.txt": {
            "java.lang.AbstractStringBuilder.append(int) AbstractStringBuilder.java": "0.18673942588000952",
            "com.yourkit.probes.Table.ensureCreated() a": "0.09336971294000476",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.03112323764666826",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.2593603137222355",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.888143083897874",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, Object, Object) DirectMethodHandle$Holder": "0.09336971294000476",
            "Sieve.benchmark()": "91.27408160512911",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.05187206274444709",
            "com.yourkit.probes.Table.createRow() a": "0.09336971294000476",
            "Sieve.sieve(boolean[], int)": "6.006784865806973"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.fs.NativeBuffers.allocNativeBuffer(int) NativeBuffers.java": "0.3124145741398836",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.17573319795368453",
            "Bounce.benchmark()": "62.67817393681414",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.7419846135822236",
            "som.Random.next()": "0.17573319795368453",
            "Bounce.lambda$benchmark$0(Random, int)": "0.17573319795368453",
            "java.lang.Object.hashCode() Object.java (native)": "0.21478501972116998",
            "Bounce$Ball.bounce()": "34.20939586831725",
            "java.lang.StringConcatHelper.newArray(long) StringConcatHelper.java": "0.19525910883742723",
            "Bounce$Ball.<init>(Random)": "0.5662514156285391"
        }
    },
    "Runtimes": {
        "NBody.data": 21.796999999999997,
        "YourKit_Storage.txt": 60.626000000000005,
        "rebench_test_Async_Bounce.txt": 62.33,
        "Permute_not_profiled_": 29.366500000000002,
        "JavaFlightRecorder_Sieve.jfr": 32.259,
        "CD_not_profiled_": 42.2645,
        "JProfiler_NBody.txt": 21.4895,
        "JProfiler_List.txt": 28.595,
        "YourKit_Mandelbrot.txt": 38.1435,
        "CD.data": 43.4345,
        "Json_not_profiled_": 80.145,
        "List.data": 23.2755,
        "Queens_not_profiled_": 20.863999999999997,
        "Towers.hpl": 26.286,
        "Bounce.hpl": 26.442,
        "JavaFlightRecorder_Json.jfr": 80.54050000000001,
        "Sieve.data": 35.114999999999995,
        "Richards.hpl": 93.06649999999999,
        "YourKit_Richards.txt": 91.4925,
        "JavaFlightRecorder_Havlak.jfr": 153.811,
        "JavaFlightRecorder_CD.jfr": 41.7305,
        "JavaFlightRecorder_Towers.jfr": 26.066499999999998,
        "rebench_test_Async_CD.txt": 134.8935,
        "List_not_profiled_": 22.2515,
        "Havlak_not_profiled_": 151.4525,
        "JProfiler_Json.txt": 1027.2755,
        "rebench_test_Async_NBody.txt": 56.0165,
        "JavaFlightRecorder_Bounce.jfr": 15.283000000000001,
        "Havlak.data": 158.76749999999998,
        "Towers_not_profiled_": 26.0585,
        "YourKit_DeltaBlue.txt": 11.7075,
        "rebench_test_Async_Towers.txt": 72.91499999999999,
        "YourKit_NBody.txt": 23.301,
        "JavaFlightRecorder_NBody.jfr": 21.3445,
        "rebench_test_Async_Sieve.txt": 93.1285,
        "Storage.hpl": 59.662,
        "JProfiler_Queens.txt": 27.1605,
        "rebench_test_Async_List.txt": 66.9085,
        "rebench_test_Async_Richards.txt": 249.82549999999998,
        "YourKit_Towers.txt": 27.2305,
        "JProfiler_Havlak.txt": 1933.7925,
        "JavaFlightRecorder_List.jfr": 22.6045,
        "YourKit_Permute.txt": 29.8335,
        "Queens.data": 21.5435,
        "Storage_not_profiled_": 60.9875,
        "Json.hpl": 78.692,
        "Towers.data": 27.1085,
        "YourKit_List.txt": 24.692500000000003,
        "JProfiler_CD.txt": 477.9045,
        "JProfiler_Permute.txt": 30.067500000000003,
        "Sieve.hpl": 30.374499999999998,
        "DeltaBlue_not_profiled_": 12.18,
        "CD.hpl": 40.9645,
        "JavaFlightRecorder_Queens.jfr": 20.977,
        "JProfiler_Bounce.txt": 44.039500000000004,
        "Permute.hpl": 30.1465,
        "Richards_not_profiled_": 90.31649999999999,
        "DeltaBlue.hpl": 12.523499999999999,
        "NBody.hpl": 21.500500000000002,
        "JProfiler_Towers.txt": 27.3505,
        "JProfiler_Mandelbrot.txt": 38.263,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.854,
        "rebench_test_Async_Mandelbrot.txt": 100.62,
        "YourKit_CD.txt": 42.3665,
        "rebench_test_Async_Permute.txt": 79.12,
        "Mandelbrot.data": 39.492000000000004,
        "JProfiler_Storage.txt": 1034.0895,
        "YourKit_Sieve.txt": 26.7,
        "JavaFlightRecorder_Permute.jfr": 30.058,
        "YourKit_Bounce.txt": 14.023,
        "JProfiler_Sieve.txt": 27.9625,
        "JProfiler_DeltaBlue.txt": 96.43950000000001,
        "YourKit_Queens.txt": 22.764000000000003,
        "Mandelbrot.hpl": 37.966,
        "JavaFlightRecorder_Storage.jfr": 58.147999999999996,
        "List.hpl": 22.592,
        "Mandelbrot_not_profiled_": 37.772000000000006,
        "Queens.hpl": 21.262500000000003,
        "Storage.data": 66.16300000000001,
        "JavaFlightRecorder_Richards.jfr": 94.12450000000001,
        "Bounce.data": 27.413,
        "Permute.data": 30.969,
        "YourKit_Json.txt": 79.661,
        "rebench_test_Async_DeltaBlue.txt": 40.551500000000004,
        "JavaFlightRecorder_Mandelbrot.jfr": 38.1035,
        "YourKit_Havlak.txt": 156.853,
        "DeltaBlue.data": 15.106,
        "JProfiler_Richards.txt": 95.3785,
        "rebench_test_Async_Storage.txt": 154.05200000000002,
        "Sieve_not_profiled_": 30.7285,
        "Havlak.hpl": 151.70749999999998,
        "Richards.data": 93.04400000000001,
        "rebench_test_Async_Havlak.txt": 443.0765,
        "Bounce_not_profiled_": 25.752499999999998,
        "NBody_not_profiled_": 21.167,
        "Json.data": 82.5945,
        "rebench_test_Async_Json.txt": 247.594,
        "rebench_test_Async_Queens.txt": 56.3085
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.07%",
            "[.] Interpreter": "0.54%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.31%",
            "[.] void nbody.NBodySystem.advance(double)": "97.04%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.32%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "[.] void Permute.permute(int)": "0.08%",
            "0xffffffffb4c063aa": "0.06%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.97%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.22%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.84%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.94%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.10%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.EqualityConstraint.execute()": "4.56%",
            "[.] vtable chunks": "6.13%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "5.50%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "5.02%",
            "[.] void deltablue.Planner.chainTest(int)": "28.68%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.64%",
            "[.] Interpreter": "0.48%",
            "0xffffffffb51c12b7": "0.25%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "[.] boolean Queens.placeQueen(int)": "94.18%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.08%",
            "[.] Interpreter": "0.39%",
            "[.] void Towers.moveDisks(int, int, int)": "0.10%",
            "[.] java.lang.Object Towers.benchmark()": "0.07%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.59%",
            "[.] boolean richards.Scheduler.start()": "21.75%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.90%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.87%",
            "[.] void richards.Scheduler.schedule()": "7.77%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.37%",
            "[.] Interpreter": "0.20%",
            "0xffffffffb51c12b7": "0.16%",
            "0xffffffffb4c699f1": "0.04%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.32%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "17.81%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "10.05%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.46%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.55%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.27%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.27%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.13%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.43%",
            "[.] Interpreter": "0.48%",
            "[.] java.lang.Object List.benchmark()": "0.38%",
            "0xffffffffb51c12b7": "0.16%",
            "[.] List$Element List.makeList(int)": "0.51%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.33%",
            "0xffffffffb51c12b7": "0.19%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "85.15%",
            "[.] java.lang.Object Sieve.benchmark()": "5.58%",
            "[.] int Sieve.sieve(boolean[], int)": "6.03%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.48%",
            "0xffffffffb51c12b7": "0.25%",
            "0xffffffffb4c0634b": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "73.03%",
            "[.] java.lang.Object Bounce.benchmark()": "23.51%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.93%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.67%",
            "[.] StubRoutines (2)": "8.43%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "18.90%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.36%"
        }
    }
}