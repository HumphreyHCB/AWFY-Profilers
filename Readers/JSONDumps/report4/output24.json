{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4862236628849271",
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.1620745542949757",
            "Queens.placeQueen(I)Z": "83.14424635332253",
            "Queens.getRowColumn(II)Z": "15.559157212317666",
            "java.util.Arrays.fill([ZZ)V": "0.4862236628849271",
            "Queens.queens()Z": "0.1620745542949757"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "95.03386004514672",
            "Bounce.benchmark()Ljava/lang/Object;": "4.514672686230249",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.22573363431151242",
            "jdk.jfr.internal.MetadataRepository.getInstance()Ljdk/jfr/internal/MetadataRepository;": "0.22573363431151242"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.1243851018973998",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.65589130944015",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.4668540641836496",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "1.8271257905832747",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "24.97071913797142",
            "havlak.HavlakLoopFinder.findLoops()V": "9.440149918013587",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.693839306629187",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "52.72897634106348",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.3586319981260249",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6324666198172874"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "8.547717842323651",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.3278008298755186",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.269709543568464",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "0.995850622406639",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.904564315352697",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.228215767634854",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "13.112033195020746",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "20.580912863070537",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.717842323651452",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.1618257261410787"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "89.03903903903904",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "10.51051051051051",
            "List.makeList(I)LList$Element;": "0.45045045045045046"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "6.1688311688311686",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "8.116883116883116",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "1.948051948051948",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.571428571428571",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "48.701298701298704",
            "deltablue.ScaleConstraint.execute()V": "2.2727272727272725",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "3.571428571428571",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "1.948051948051948",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "9.09090909090909",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "6.4935064935064934"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.06009615384615385",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.040865384615385",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.8389423076923",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.06009615384615385"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.3271537622682661",
            "Sieve.sieve([ZI)I": "99.67284623773173"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "62.56756756756757",
            "Towers.benchmark()Ljava/lang/Object;": "0.40540540540540543",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "36.891891891891895",
            "Towers.moveTopDisk(II)V": "0.13513513513513514"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.15772870662460567",
            "nbody.NBodySystem.advance(D)V": "99.68454258675078",
            "java.util.Arrays.copyOf([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;": "0.15772870662460567"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.0650406504065035",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.47425474254742545",
            "richards.DeviceTaskDataRecord.setPending(Lrichards/Packet;)V": "0.06775067750677506",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.8617886178861784",
            "richards.Scheduler.schedule()V": "59.349593495934954",
            "Richards.benchmark()Ljava/lang/Object;": "0.6775067750677506",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.964769647696475",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.539295392953929"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.704752760441671",
            "json.JsonPureStringParser.readExponent()Z": "7.297167546807489",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "17.618819011041765",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "31.156985117618817",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "3.936629860777724",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "15.12241958713394",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "1.2001920307249159",
            "som.Vector.append(Ljava/lang/Object;)V": "8.353336533845415",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "8.305328852616418",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.672107537205953"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.12091898428053205",
            "Permute.swap(II)V": "28.053204353083437",
            "Permute.permute(I)V": "71.46311970979444",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12091898428053205",
            "Permute.benchmark()Ljava/lang/Object;": "0.2418379685610641"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.1",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "2.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "46.5",
            "richards.HandlerTaskDataRecord::workInAdd": "2.2",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "5.9",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.6",
            "richards.RBObject::<init>": "5.6"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.String::getBytes": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::emitStaticInvoke": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.8",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0",
            "java.lang.invoke.LambdaForm$MH.0x0000000800c08400::invoke": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0"
        },
        "List.hpl": {
            "java.lang.invoke.InvokerBytecodeGenerator::getInternalName": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "List$Element::getNext": "9.1",
            "List::makeList": "0.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "2.0",
            "List::isShorterThan": "80.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "3.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.6",
            "json.JsonPureStringParser::read": "16.3",
            "java.lang.String::<init>": "5.4",
            "java.lang.String::length": "2.8",
            "java.util.Arrays::copyOfRange": "7.1",
            "java.lang.String::equals": "21.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "10.1",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.8",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.9",
            "havlak.HavlakLoopFinder::findLoops": "5.9",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.5",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "5.9",
            "havlak.HavlakLoopFinder::doDFS": "5.5",
            "som.Vector::hasSome": "2.0",
            "som.Vector::forEach": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "40.2",
            "jdk.internal.org.objectweb.asm.Frame::setInputFrameFromDescriptor": "0.0",
            "Permute::permute": "50.4",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "5.6",
            "java.nio.CharBuffer::wrap": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "54.5",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "12.1",
            "Queens::setRowColumn": "26.3",
            "Queens::queens": "0.8",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.3",
            "Storage::buildTreeDepth": "38.3",
            "java.util.Arrays::setAll": "34.0",
            "som.Random::next": "12.2",
            "AGCT::Unknown not Java[ERR=-3]": "6.8",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.5",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "0.9"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "6.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.1",
            "Sieve::sieve": "87.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "4.3"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.8",
            "som.Vector::append": "5.0",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.8",
            "AGCT::Unknown not Java[ERR=-3]": "13.3",
            "AGCT::Unknown Java[ERR=-5]": "15.5",
            "deltablue.AbstractConstraint::satisfy": "3.9",
            "deltablue.AbstractConstraint::<init>": "3.0",
            "som.Vector::<init>": "5.9",
            "deltablue.StayConstraint::<init>": "12.7",
            "som.Vector::forEach": "7.4"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.4",
            "Bounce$Ball::bounce": "76.0",
            "java.util.Arrays::setAll": "0.4",
            "Bounce::lambda$benchmark$0": "0.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "java.lang.invoke.InvokerBytecodeGenerator::addMethod": "0.0",
            "Bounce$Ball::<init>": "1.6",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.5",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "7.8",
            "nbody.Body::setVX": "28.2",
            "nbody.Body::setVY": "5.4",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "nbody.NBodySystem::advance": "41.9"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.0",
            "Towers::popDiskFrom": "20.1",
            "Towers::moveDisks": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.7",
            "Towers::pushDisk": "39.5",
            "Towers$TowersDisk::setNext": "18.3",
            "AGCT::Unknown Java[ERR=-5]": "4.2",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.9",
            "Towers$TowersDisk::getNext": "2.9"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.6",
            "cd.RedBlackTree::forEach": "3.3",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "3.2",
            "cd.RedBlackTree::treeMinimum": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "9.5",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "cd.Vector2D::compareNumbers": "4.7",
            "cd.CollisionDetector::isInVoxel": "21.8",
            "cd.RedBlackTree::treeInsert": "13.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "2.78%",
            "deltablue.AbstractConstraint.satisfy": "2.55%",
            "som.Vector.append": "3.60%",
            "som.Vector.forEach": "8.65%",
            "itable": "4.87%",
            "deltablue.Planner.chainTest": "3.60%",
            "deltablue.Planner.addPropagate": "2.80%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.84%",
            "deltablue.ScaleConstraint.execute": "1.77%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "17.62%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.64%",
            "som.Random.next": "0.93%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.73%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.39%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.05%",
            "Bounce$Ball.<init>": "1.89%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.66%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.57%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.53%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.19%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.55%",
            "java.util.Arrays.setAll": "35.52%",
            "Storage.lambda$buildTreeDepth$0": "4.11%",
            "SpinPause": "0.19%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.34%",
            "Storage.buildTreeDepth": "43.52%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.89%",
            "Towers.popDiskFrom": "18.84%",
            "Towers.moveDisks": "8.80%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.42%",
            "Towers.moveTopDisk": "4.86%",
            "Towers$TowersDisk.getSize": "0.43%",
            "Towers$TowersDisk.getNext": "3.78%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.31%",
            "cd.CollisionDetector.isInVoxel": "19.82%",
            "cd.RedBlackTree.forEach": "5.84%",
            "Node::set_req_X(unsigned": "3.34%",
            "cd.RedBlackTree.put": "6.16%",
            "cd.RedBlackTree.treeInsert": "12.12%",
            "cd.RedBlackTree.treeMinimum": "4.98%",
            "cd.RedBlackTree.findNode": "2.72%",
            "cd.Vector2D.compareNumbers": "4.26%",
            "cd.RedBlackTree.leftRotate": "2.15%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.13%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.00%",
            "som.Vector.append": "3.52%",
            "som.Vector.<init>": "2.19%",
            "som.IdentitySet.lambda$contains$0": "32.15%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.35%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.83%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.20%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.80%",
            "havlak.HavlakLoopFinder.doDFS": "6.28%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "8.01%",
            "Sieve.benchmark": "6.72%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "82.40%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.19%",
            "Permute.swap": "40.66%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.90%",
            "nbody.Body.getZ": "8.18%",
            "nbody.Body.getY": "0.77%",
            "nbody.Body.setX": "1.05%",
            "nbody.Body.setY": "1.39%",
            "nbody.Body.setZ": "0.39%",
            "nbody.Body.setVX": "29.13%",
            "nbody.Body.setVY": "6.01%",
            "nbody.Body.getMass": "0.41%",
            "nbody.NBodySystem.advance": "40.07%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.17%",
            "Interpreter": "0.05%",
            "List.makeList": "1.05%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.52%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.06%",
            "List.isShorterThan": "82.05%",
            "List$Element.<init>": "0.23%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.34%",
            "java.lang.String.length": "3.57%",
            "java.lang.String.<init>": "4.68%",
            "json.JsonPureStringParser.readArray": "2.61%",
            "java.lang.String.isLatin1": "3.24%",
            "json.JsonPureStringParser.readStringInternal": "6.63%",
            "java.util.Arrays.copyOfRange": "8.74%",
            "java.lang.String.equals": "20.50%",
            "json.JsonPureStringParser.read": "13.21%",
            "json.JsonPureStringParser.readValue": "3.04%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.95%",
            "Queens.getRowColumn": "66.77%",
            "Queens.setRowColumn": "19.52%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.58%",
            "Queens.placeQueen": "9.06%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.09%",
            "Queens.benchmark": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.40%",
            "Richards.benchmark": "4.49%",
            "richards.Packet.<init>": "6.73%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.42%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.72%",
            "itable": "37.25%",
            "richards.TaskControlBlock.<init>": "3.10%",
            "richards.RBObject.<init>": "5.66%",
            "richards.RBObject.append": "2.71%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.09%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.6",
            "Towers.moveDisks": "93.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "4.5",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.6",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.9",
            "deltablue.AbstractConstraint.satisfy": "15.0",
            "deltablue.Planner.removePropagateFrom": "9.2",
            "som.Vector.<init>": "26.4",
            "deltablue.Variable.<init>": "6.0",
            "som.Vector.forEach": "7.4",
            "deltablue.Planner.addPropagate": "1.6",
            "deltablue.Planner.constraintsConsuming": "4.2",
            "deltablue.AbstractConstraint.<init>": "4.2",
            "deltablue.Planner.addConstraintsConsumingTo": "17.5"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Vector.hasSome": "3.3",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.1",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "9.0",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.8",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.3"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "13.8",
            "richards.Scheduler.createWorker": "0.1",
            "richards.Packet.<init>": "0.2",
            "richards.Scheduler.lambda$createWorker$3": "0.0",
            "richards.Scheduler.queuePacket": "0.0",
            "richards.TaskControlBlock.runTask": "84.8",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "Run.runBenchmark": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "52.7",
            "Bounce$Ball.<init>": "46.4",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "8.0",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.5",
            "cd.RedBlackTree$InsertResult.<init>": "15.0",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "nbody.Body.getVZ": "0.1",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.5",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.9",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.6",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.4",
            "List$Element.length": "0.1",
            "List.isShorterThan": "72.1",
            "List$Element.<init>": "24.4",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "Queens.getRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "20.2",
            "Queens.placeQueen": "79.0",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "21.9968618665481",
            "java.lang.String.<init>(byte[], byte) String.java": "5.694814384109246",
            "json.JsonPureStringParser.isWhiteSpace()": "2.774725627092268",
            "json.JsonPureStringParser.read()": "19.65395024305571",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "5.609306660624123",
            "java.lang.String.length() String.java": "2.3813900990606984",
            "java.lang.String.substring(int, int) String.java": "9.179254116128043",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.417795012334491",
            "json.JsonPureStringParser.readValue()": "3.9034275770959024",
            "json.JsonPureStringParser.readStringInternal()": "2.9200887570169787"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.867462405612955",
            "som.Vector.hasSome(TestInterface)": "2.7166356499604274",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.113499754005434",
            "havlak.HavlakLoopFinder.findLoops()": "10.798091937795462",
            "som.Vector.append(Object)": "5.482470213266595",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.1283877730004925",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.206571263556441",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.184046717576847",
            "som.Vector.removeAll()": "2.526257246144303",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.23502106996941"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.800206872030252",
            "Queens.getRowColumn(int, int)": "59.200956783139915",
            "Queens.queens()": "0.9697126418204737",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.21010440572776928",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.14545689627307104",
            "Queens.setRowColumn(int, int, boolean)": "24.679186734331054",
            "jdk.internal.org.objectweb.asm.SymbolTable.addType(String) SymbolTable.java": "0.35556130200084035",
            "java.util.Arrays.equals(Object[], Object[]) Arrays.java": "0.40404693409186404",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.30707566990981666",
            "javax.management.openmbean.SimpleType.isValue(Object) SimpleType.java": "0.14545689627307104"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.9166453461597506",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9042258463022932",
            "richards.Scheduler$$Lambda$15.0x00000008000c7978.apply(Packet, RBObject)": "3.263865030226388",
            "richards.TaskControlBlock.runTask()": "37.94928399646202",
            "richards.Scheduler.<init>()": "1.8896060701310664",
            "richards.Scheduler.schedule()": "2.5621157740075002",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.7470632524616048",
            "richards.RBObject.append(Packet, Packet)": "2.8106519689183562",
            "Richards.benchmark()": "27.784884613416573",
            "richards.Scheduler$$Lambda$17.0x00000008000c7ba0.apply(Packet, RBObject)": "4.173946096885257"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$10.0x00000008000c2a98.<init>(Storage, int, Random)": "0.16103893116160833",
            "com.yourkit.probes.builtin.FilesLW.<clinit>() a": "0.132281979168464",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.569387649464258",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.2243042255465259",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.6269015534505467",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.9719849773682789",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.76733900420427",
            "som.Random.next()": "14.522260756537895",
            "Storage.buildTreeDepth(int, Random)": "37.04470555756855",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.6628937545651663"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.432953422809085",
            "Towers.popDiskFrom(int)": "32.24018698344618",
            "Towers.moveDisks(int, int, int)": "11.264788800269871",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2530059516638153",
            "Towers$TowersDisk.getSize()": "1.4216524903014383",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.10843112214163513",
            "Towers.moveTopDisk(int, int)": "5.132406448037397",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.1325269270619985",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "16.361051540926724",
            "com.yourkit.probes.Table.createRow() a": "0.10843112214163513"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType(String, String) SymbolTable.java": "0.11166821141025784",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.15633549597436097",
            "Benchmark.innerBenchmarkLoop(int)": "0.14516867483333518",
            "java.lang.invoke.LambdaForm.useCount(LambdaForm$Name) LambdaForm.java": "0.08933456912820627",
            "Harness.main(String[])": "0.0011166821141025784",
            "Permute.permute(int)": "57.68779801453919",
            "com.yourkit.probes.Table.createRow() a": "0.2121696016794899",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.1340018536923094",
            "Permute.benchmark()": "0.5471742359102634",
            "Permute.swap(int, int)": "40.91523266071847"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "9.757860498735091",
            "som.Vector.forEach(ForEachInterface)": "24.239764572254636",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "5.8856936341576755",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "5.137074707006041",
            "deltablue.Planner.incrementalAdd(AbstractConstraint)": "3.252620166245031",
            "som.Vector.<init>(int)": "3.020290154370386",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.1942278899272036",
            "som.Vector.append(Object)": "3.8721668645774177",
            "deltablue.Variable.addConstraint(AbstractConstraint)": "10.996953895399866",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.6791780680468795"
        },
        "YourKit_List.txt": {
            "com.yourkit.probes.builtin.FilesLW.<clinit>() a": "0.2153895859135211",
            "List.tail(List$Element, List$Element, List$Element)": "4.348177265629206",
            "List$Element.<init>(Object)": "0.1211566420763556",
            "List.makeList(int)": "1.1846427225243659",
            "List$Element.getNext()": "24.43325615206505",
            "List$Element.length()": "0.1211566420763556",
            "List.isShorterThan(List$Element, List$Element)": "69.0189004361639",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.17500403855473587",
            "jdk.internal.org.objectweb.asm.FieldWriter.computeFieldInfoSize() FieldWriter.java": "0.09423294383716546",
            "java.lang.StringConcatHelper.newString(byte[], long) StringConcatHelper.java": "0.1211566420763556"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.532251030485489",
            "nbody.Body.getZ()": "5.191114612495252",
            "nbody.Body.setX(double)": "0.9706962283527706",
            "nbody.Body.getX()": "0.8300156155480213",
            "nbody.Body.setZ(double)": "0.40797377713377314",
            "nbody.NBodySystem.advance(double)": "45.214748955446446",
            "nbody.Body.setVY(double)": "5.7819731862751995",
            "nbody.Body.setVZ(double)": "9.608485854564382",
            "nbody.Body.setVX(double)": "26.50422745241478",
            "nbody.Body.setY(double)": "1.0973087798770451"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.50138405848533",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2572929235573852",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "Run.runBenchmark()": "8.872169777840869E-4",
            "java.lang.StringConcatHelper.prepend(long, byte[], long) StringConcatHelper.java": "0.07984952800056781",
            "java.lang.System.nanoTime() System.java (native)": "0.07984952800056781",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.07984952800056781",
            "sun.nio.cs.StreamEncoder.write(char[], int, int) StreamEncoder.java": "0.0",
            "Run.measure(Benchmark)": "8.872169777840869E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.561401484558286",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.46836660128456",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.976385523633706",
            "cd.RedBlackTree.findNode(Comparable)": "8.822737587015883",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.668897350101917",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.0537671628014302",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "3.0844967501249947",
            "cd.RedBlackTree.put(Comparable, Object)": "5.007499711549555",
            "cd.Vector2D.compareNumbers(double, double)": "8.999653859466942",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.830583439098496"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.2437268044092394",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.359718606325818",
            "jdk.internal.org.objectweb.asm.MethodWriter.<init>(SymbolTable, int, String, String, String, String[], int) MethodWriter.java": "0.07754943776657618",
            "Sieve.benchmark()": "86.98831219187944",
            "java.nio.charset.CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean) CharsetEncoder.java": "0.09970641998559794",
            "java.nio.Buffer.limit(int) Buffer.java": "0.09970641998559794",
            "java.lang.String.substring(int, int) String.java": "0.2437268044092394",
            "com.yourkit.probes.Table.createRow() a": "0.21049133108070675",
            "Sieve.sieve(boolean[], int)": "9.228383094222565",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.15509887553315235"
        },
        "YourKit_Bounce.txt": {
            "Bounce.benchmark()": "69.8423047145593",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.16299254309115355",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.14261847520475934",
            "Bounce.lambda$benchmark$0(Random, int)": "0.7945886475693735",
            "som.Random.next()": "0.48897762927346067",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.24448881463673033",
            "com.yourkit.probes.ResourceCounter.open(Object, String) a": "0.22411474675033613",
            "Bounce$Ball.bounce()": "26.66965486329",
            "Bounce$Ball.<init>(Random)": "0.9779552585469213",
            "jdk.internal.org.objectweb.asm.SymbolTable.put(SymbolTable$Entry) SymbolTable.java": "0.12224440731836517"
        }
    },
    "Runtimes": {
        "NBody.data": 21.9705,
        "YourKit_Storage.txt": 58.2985,
        "rebench_test_Async_Bounce.txt": 59.700500000000005,
        "Permute_not_profiled_": 29.645,
        "JavaFlightRecorder_Sieve.jfr": 30.923,
        "CD_not_profiled_": 41.329,
        "JProfiler_NBody.txt": 21.374499999999998,
        "JProfiler_List.txt": 28.925,
        "YourKit_Mandelbrot.txt": 37.19,
        "CD.data": 43.932500000000005,
        "Json_not_profiled_": 77.27199999999999,
        "List.data": 23.0555,
        "Queens_not_profiled_": 20.8545,
        "Towers.hpl": 26.072000000000003,
        "Bounce.hpl": 26.2175,
        "JavaFlightRecorder_Json.jfr": 79.5135,
        "Sieve.data": 32.8525,
        "Richards.hpl": 89.39850000000001,
        "YourKit_Richards.txt": 91.835,
        "JavaFlightRecorder_Havlak.jfr": 151.57999999999998,
        "JavaFlightRecorder_CD.jfr": 42.085499999999996,
        "JavaFlightRecorder_Towers.jfr": 25.852,
        "rebench_test_Async_CD.txt": 137.865,
        "List_not_profiled_": 23.200000000000003,
        "Havlak_not_profiled_": 152.675,
        "JProfiler_Json.txt": 1026.2800000000002,
        "rebench_test_Async_NBody.txt": 56.966,
        "JavaFlightRecorder_Bounce.jfr": 14.915,
        "Havlak.data": 156.81400000000002,
        "Towers_not_profiled_": 26.091,
        "YourKit_DeltaBlue.txt": 14.998,
        "rebench_test_Async_Towers.txt": 72.3365,
        "YourKit_NBody.txt": 23.1065,
        "JavaFlightRecorder_NBody.jfr": 21.158,
        "rebench_test_Async_Sieve.txt": 84.5995,
        "Storage.hpl": 59.6315,
        "JProfiler_Queens.txt": 26.880000000000003,
        "rebench_test_Async_List.txt": 65.886,
        "rebench_test_Async_Richards.txt": 249.0245,
        "YourKit_Towers.txt": 26.9595,
        "JProfiler_Havlak.txt": 1903.512,
        "JavaFlightRecorder_List.jfr": 22.8515,
        "YourKit_Permute.txt": 29.651,
        "Queens.data": 21.721,
        "Storage_not_profiled_": 60.7465,
        "Json.hpl": 78.7675,
        "Towers.data": 26.7575,
        "YourKit_List.txt": 24.746499999999997,
        "JProfiler_CD.txt": 475.845,
        "JProfiler_Permute.txt": 29.9465,
        "Sieve.hpl": 30.506500000000003,
        "DeltaBlue_not_profiled_": 11.6555,
        "CD.hpl": 42.167500000000004,
        "JavaFlightRecorder_Queens.jfr": 20.9575,
        "JProfiler_Bounce.txt": 44.367000000000004,
        "Permute.hpl": 30.099,
        "Richards_not_profiled_": 90.8255,
        "DeltaBlue.hpl": 12.251000000000001,
        "NBody.hpl": 21.164,
        "JProfiler_Towers.txt": 26.746000000000002,
        "JProfiler_Mandelbrot.txt": 37.562,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.816500000000001,
        "rebench_test_Async_Mandelbrot.txt": 108.85,
        "YourKit_CD.txt": 42.662499999999994,
        "rebench_test_Async_Permute.txt": 78.83,
        "Mandelbrot.data": 38.959,
        "JProfiler_Storage.txt": 1037.5435,
        "YourKit_Sieve.txt": 31.398,
        "JavaFlightRecorder_Permute.jfr": 29.564,
        "YourKit_Bounce.txt": 16.137,
        "JProfiler_Sieve.txt": 27.9705,
        "JProfiler_DeltaBlue.txt": 96.757,
        "YourKit_Queens.txt": 22.086,
        "Mandelbrot.hpl": 37.668499999999995,
        "JavaFlightRecorder_Storage.jfr": 59.052499999999995,
        "List.hpl": 22.336,
        "Mandelbrot_not_profiled_": 37.4025,
        "Queens.hpl": 21.110999999999997,
        "Storage.data": 65.291,
        "JavaFlightRecorder_Richards.jfr": 91.7195,
        "Bounce.data": 27.032,
        "Permute.data": 30.716,
        "YourKit_Json.txt": 78.0565,
        "rebench_test_Async_DeltaBlue.txt": 34.518,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.6255,
        "YourKit_Havlak.txt": 154.3735,
        "DeltaBlue.data": 12.597,
        "JProfiler_Richards.txt": 93.553,
        "rebench_test_Async_Storage.txt": 147.15550000000002,
        "Sieve_not_profiled_": 31.2515,
        "Havlak.hpl": 153.7295,
        "Richards.data": 93.3045,
        "rebench_test_Async_Havlak.txt": 456.696,
        "Bounce_not_profiled_": 25.9735,
        "NBody_not_profiled_": 21.078,
        "Json.data": 83.385,
        "rebench_test_Async_Json.txt": 253.8375,
        "rebench_test_Async_Queens.txt": 59.9075
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.65%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.33%",
            "[.] void nbody.NBodySystem.advance(double)": "0.11%",
            "0xffffffffb4c699f1": "0.02%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.37%",
            "[.] java.lang.Object Permute.benchmark()": "0.03%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "0.04%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.16%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.77%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.83%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.15%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.01%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "4.98%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.78%",
            "[.] vtable chunks": "5.76%",
            "[.] void deltablue.Planner.chainTest(int)": "24.59%",
            "[.] void deltablue.AbstractConstraint.addConstraint(deltablue.Planner)": "8.47%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.83%",
            "[.] Interpreter": "0.47%",
            "0xffffffffb51c12b7": "0.27%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "[.] boolean Queens.placeQueen(int)": "93.35%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.08%",
            "[.] Interpreter": "0.37%",
            "[.] void Towers.moveDisks(int, int, int)": "0.14%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.35%",
            "[.] boolean richards.Scheduler.start()": "22.70%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.98%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.77%",
            "[.] void richards.Scheduler.schedule()": "7.90%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.32%",
            "[.] Interpreter": "0.22%",
            "0xffffffffb51c12b7": "0.12%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.43%",
            "0xffffffffb4c063aa": "0.06%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.09%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "10.17%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.77%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.84%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.70%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.31%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c0634b": "0.06%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "96.03%",
            "[.] Interpreter": "0.51%",
            "[.] java.lang.Object List.benchmark()": "0.35%",
            "0xffffffffb51c12b7": "0.18%",
            "[.] List$Element List.makeList(int)": "0.60%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.35%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "84.33%",
            "[.] java.lang.Object Sieve.benchmark()": "6.03%",
            "[.] int Sieve.sieve(boolean[], int)": "6.43%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.45%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "[.] java.lang.Object Bounce.benchmark()": "23.32%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.27%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.67%",
            "[.] StubRoutines (2)": "8.39%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.14%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.92%"
        }
    }
}