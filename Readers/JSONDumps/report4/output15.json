{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.15432098765432098",
            " ": "0",
            "Queens.placeQueen(I)Z": "89.0432098765432",
            "Queens.getRowColumn(II)Z": "8.950617283950617",
            "java.util.Arrays.fill([ZZ)V": "1.2345679012345678",
            "java.lang.StringConcatHelper.prepend(J[BJ)J": "0.15432098765432098",
            "Queens.queens()Z": "0.4629629629629629"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "58.95522388059702",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "3.1716417910447765",
            "Bounce.benchmark()Ljava/lang/Object;": "37.87313432835821"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.1857707509881423",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.5115089514066496",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "4.022320390606835",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "29.969774471053242",
            "havlak.HavlakLoopFinder.findLoops()V": "2.6970471983259707",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "3.789816321785631",
            "havlak.LoopStructureGraph.lambda$calculateNestingLevelRec$1(ILhavlak/SimpleLoop;Lhavlak/SimpleLoop;)V": "0.3255056963496861",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "51.80190653336433",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6045105789351314",
            "som.Vector.append(Ljava/lang/Object;)V": "3.952569169960474"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "8.340425531914894",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.5319148936170213",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.574468085106382",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "1.1063829787234043",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "3.148936170212766",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.19148936170213",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "10.97872340425532",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.70212765957447",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "8.085106382978724",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.4468085106382977"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.87782805429863",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "12.066365007541478",
            "List$Element.length()I": "0.15082956259426847",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15082956259426847",
            "List.makeList(I)LList$Element;": "0.7541478129713424"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "2.479338842975207",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "9.917355371900827",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "14.049586776859504",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "41.59779614325069",
            "deltablue.ScaleConstraint.execute()V": "2.7548209366391188",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.7548209366391188",
            "deltablue.EqualityConstraint.execute()V": "2.479338842975207",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.958677685950414",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "7.43801652892562",
            "deltablue.Planner.lambda$constraintsConsuming$3(Ldeltablue/AbstractConstraint;Lsom/ForEachInterface;Ldeltablue/AbstractConstraint;)V": "3.3057851239669422"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.641975308641975",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.23456790123457",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.06172839506172839",
            "java.lang.StringLatin1.regionMatchesCI([BI[BII)Z": "0.06172839506172839"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.21645021645021645",
            "java.util.Arrays.fill([ZZ)V": "0.10822510822510822",
            "Sieve.sieve([ZI)I": "99.67532467532467"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.13513513513513514",
            "Towers.moveDisks(III)V": "61.891891891891895",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.2702702702702703",
            "Towers.benchmark()Ljava/lang/Object;": "0.13513513513513514",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.432432432432435",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "0.13513513513513514"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "Run.getSuiteFromName(Ljava/lang/String;)Ljava/util/function/Supplier;": "0.15723270440251572",
            "nbody.NBodySystem.advance(D)V": "99.68553459119497",
            "NBody.innerBenchmarkLoop(I)Z": "0.15723270440251572"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.175084175084175",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.40404040404040403",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "4.107744107744107",
            "richards.Scheduler.schedule()V": "59.19191919191919",
            "java.nio.charset.CoderResult.isUnderflow()Z": "0.06734006734006734",
            "Richards.benchmark()Ljava/lang/Object;": "1.2794612794612794",
            "java.lang.Thread.run()V": "0.06734006734006734",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "0.06734006734006734",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "25.858585858585858",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.781144781144781"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.431599229287091",
            "json.JsonPureStringParser.readExponent()Z": "6.8882466281310215",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "16.32947976878613",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "29.96146435452794",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.383429672447013",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "15.992292870905588",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "7.466281310211946",
            "java.lang.StringLatin1.hashCode([B)I": "1.0115606936416186",
            "som.Vector.append(Ljava/lang/Object;)V": "8.23699421965318",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.13102119460501"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Harness.processArguments([Ljava/lang/String;)LRun;": "0.12106537530266344",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.12106537530266344",
            "Permute.swap(II)V": "27.11864406779661",
            "Permute.permute(I)V": "72.5181598062954",
            "Permute.benchmark()Ljava/lang/Object;": "0.12106537530266344"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.8",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "45.1",
            "richards.HandlerTaskDataRecord::workInAdd": "3.4",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.9",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.9",
            "richards.RBObject::<init>": "5.3"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.DirectMethodHandle::make": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.lang.invoke.LambdaForm$Name::isParam": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.ref.Reference::<init>": "0.0",
            "Mandelbrot::mandelbrot": "98.0",
            "sun.invoke.util.VerifyAccess::isTypeVisible": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.2",
            "List::makeList": "0.9",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "1.9",
            "List::isShorterThan": "80.8",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "List$Element::setNext": "0.1",
            "List$Element::length": "0.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "14.3",
            "java.lang.String::<init>": "6.3",
            "json.JsonPureStringParser::readArray": "2.4",
            "java.lang.String::length": "2.9",
            "java.util.Arrays::copyOfRange": "7.8",
            "java.lang.String::equals": "22.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.6",
            "AGCT::Unknown Java[ERR=-5]": "10.5",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.3"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.1",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.3",
            "havlak.HavlakLoopFinder::findLoops": "6.0",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.7",
            "som.Vector::append": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "7.9",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "5.4",
            "som.Vector::<init>": "2.0",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.4",
            "Permute::permute": "51.2",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "sun.invoke.util.Wrapper::stackSlots": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "6.4",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0",
            "java.lang.Long::stringSize": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "65.9",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "5.2",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "8.1",
            "Queens::setRowColumn": "18.4",
            "Queens::queens": "0.4",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.7",
            "java.util.Arrays::setAll": "34.7",
            "som.Random::next": "11.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.3"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.9",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "86.1",
            "java.lang.Class::isPrimitive": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "java.nio.charset.CoderResult::isUnderflow": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "4.8"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "3.3",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "5.2",
            "som.Vector::append": "4.1",
            "AGCT::Unknown not Java[ERR=-3]": "11.5",
            "AGCT::Unknown Java[ERR=-5]": "15.7",
            "deltablue.AbstractConstraint::satisfy": "2.6",
            "deltablue.AbstractConstraint::<init>": "14.8",
            "som.Vector::<init>": "4.8",
            "som.Vector::forEach": "7.1",
            "som.Dictionary::at": "2.8"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.4",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "75.6",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.2",
            "som.Random::next": "0.8",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.0",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.3",
            "nbody.Body::getZ": "8.0",
            "nbody.Body::setVX": "27.5",
            "nbody.Body::setVY": "6.1",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "nbody.NBodySystem::advance": "41.0"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.4",
            "Towers::popDiskFrom": "21.9",
            "Towers::moveDisks": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.8",
            "Towers::pushDisk": "39.1",
            "Towers$TowersDisk::setNext": "17.0",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.4",
            "Towers$TowersDisk::getNext": "3.1"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.4",
            "cd.RedBlackTree::forEach": "4.0",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "11.8",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "cd.Vector2D::compareNumbers": "4.3",
            "cd.CollisionDetector::isInVoxel": "20.5",
            "cd.RedBlackTree::treeInsert": "13.3"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.83%",
            "deltablue.BinaryConstraint.chooseMethod": "3.14%",
            "som.Vector.append": "2.22%",
            "vtable": "1.93%",
            "som.Vector.forEach": "23.85%",
            "itable": "3.39%",
            "deltablue.Planner.addPropagate": "2.23%",
            "deltablue.Plan.lambda$execute$0": "4.02%",
            "deltablue.ScaleConstraint.execute": "1.87%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "5.41%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.29%",
            "som.Random.next": "0.90%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.72%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.91%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "1.82%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "os::PlatformMonitor::wait(long)": "0.01%",
            "Mandelbrot.mandelbrot": "98.75%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "__pthread_mutex_cond_lock": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.62%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.18%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.33%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.31%",
            "java.util.Arrays.setAll": "35.69%",
            "Storage.lambda$buildTreeDepth$0": "4.29%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.19%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.36%",
            "Storage.buildTreeDepth": "43.53%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.75%",
            "Towers.popDiskFrom": "18.91%",
            "Towers.moveDisks": "8.81%",
            "Interpreter": "0.04%",
            "Towers.pushDisk": "42.39%",
            "Towers.moveTopDisk": "4.91%",
            "Towers$TowersDisk.getSize": "0.38%",
            "Towers$TowersDisk.getNext": "3.91%",
            "Towers.benchmark": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "12.67%",
            "cd.CollisionDetector.isInVoxel": "19.92%",
            "cd.RedBlackTree.forEach": "6.00%",
            "Node::set_req_X(unsigned": "4.04%",
            "cd.RedBlackTree.put": "6.45%",
            "cd.RedBlackTree.treeInsert": "12.11%",
            "cd.RedBlackTree.treeMinimum": "5.22%",
            "cd.RedBlackTree.findNode": "2.74%",
            "cd.Vector2D.compareNumbers": "4.34%",
            "cd.RedBlackTree.leftRotate": "2.17%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.18%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.22%",
            "som.Vector.hasSome": "2.01%",
            "som.Vector.append": "3.54%",
            "som.Vector.<init>": "2.12%",
            "som.IdentitySet.lambda$contains$0": "31.76%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "9.27%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.94%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.00%",
            "havlak.HavlakLoopFinder.doDFS": "5.32%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.24%",
            "Sieve.benchmark": "6.39%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "85.53%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.05%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.35%",
            "Permute.swap": "40.62%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.56%",
            "nbody.Body.getZ": "7.85%",
            "nbody.Body.getY": "0.87%",
            "nbody.Body.getX": "0.32%",
            "nbody.Body.setX": "1.57%",
            "nbody.Body.setY": "1.44%",
            "nbody.Body.setVX": "28.93%",
            "nbody.Body.setVY": "5.97%",
            "nbody.Body.getMass": "0.58%",
            "nbody.NBodySystem.advance": "40.26%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.16%",
            "Interpreter": "0.05%",
            "List.makeList": "0.99%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.48%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "82.04%",
            "List$Element.<init>": "0.24%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.57%",
            "java.lang.String.length": "3.23%",
            "java.lang.String.<init>": "5.73%",
            "json.JsonPureStringParser.readArray": "2.64%",
            "json.JsonPureStringParser.isWhiteSpace": "2.20%",
            "java.lang.String.isLatin1": "3.10%",
            "json.JsonPureStringParser.readStringInternal": "6.75%",
            "java.util.Arrays.copyOfRange": "8.17%",
            "java.lang.String.equals": "22.08%",
            "json.JsonPureStringParser.read": "15.91%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.96%",
            "Queens.getRowColumn": "57.52%",
            "Queens.setRowColumn": "23.76%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "Queens.queens": "0.60%",
            "Queens.placeQueen": "13.77%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.32%",
            "Richards.benchmark": "4.81%",
            "richards.Packet.<init>": "6.24%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.42%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.87%",
            "itable": "37.66%",
            "richards.TaskControlBlock.<init>": "3.06%",
            "richards.RBObject.<init>": "5.76%",
            "richards.RBObject.append": "2.52%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.35%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.5",
            "Towers.moveDisks": "94.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "Sieve.benchmark": "4.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.0",
            "java.lang.Integer.valueOf": "0.8",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.3",
            "deltablue.AbstractConstraint.satisfy": "10.4",
            "deltablue.Planner.removePropagateFrom": "10.0",
            "som.Vector.<init>": "30.5",
            "deltablue.Variable.<init>": "4.4",
            "som.Vector.forEach": "7.1",
            "deltablue.AbstractConstraint.<init>": "4.7",
            "deltablue.Planner.constraintsConsuming": "4.1",
            "deltablue.Plan.lambda$execute$0": "3.2",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "9.0",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "3.9"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.3",
            "Mandelbrot.mandelbrot": "99.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "12.7",
            "richards.Scheduler.<init>": "0.0",
            "richards.Packet.<init>": "0.3",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "85.6",
            "richards.RBObject.<init>": "0.6",
            "richards.RBObject.append": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.util.Arrays.setAll": "0.0",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "53.2",
            "Bounce$Ball.<init>": "45.7",
            "Bounce.lambda$benchmark$0": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.5",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "45.2",
            "cd.RedBlackTree$InsertResult.<init>": "14.8",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.5",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.1",
            "List$Element.length": "0.2",
            "List.isShorterThan": "77.1",
            "List$Element.<init>": "19.8",
            "Run.printResult": "0.1",
            "java.lang.System.nanoTime": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "18.3",
            "Queens.placeQueen": "81.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.218590299874652",
            "json.JsonPureStringParser.readChar(String)": "2.0634461479124484",
            "java.lang.String.<init>(byte[], byte) String.java": "6.3099026130556375",
            "json.JsonPureStringParser.isWhiteSpace()": "1.897599074341915",
            "json.JsonPureStringParser.read()": "22.605341818532448",
            "java.lang.String.length() String.java": "3.012245685083406",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.661266994503906",
            "java.lang.String.substring(int, int) String.java": "10.00482113585961",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.363899334683253",
            "json.JsonPureStringParser.readStringInternal()": "3.062385498023335"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.hasSome(TestInterface)": "2.4503908598917623",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.8671935400738775",
            "havlak.HavlakLoopFinder.findLoops()": "11.775191134782236",
            "som.Vector.<init>(int)": "5.4698909028433995",
            "som.Set.<init>(int)": "1.5612919852246374",
            "som.Vector.append(Object)": "5.886521776479685",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.282449961343529",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.224293445580277",
            "som.Vector.removeAll()": "2.7081006786358564",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.37007129971652"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.333675706335944",
            "jdk.internal.org.objectweb.asm.Frame.pop(String) Frame.java": "0.12264107556223267",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.13797121000751175",
            "Queens.getRowColumn(int, int)": "57.610645245358796",
            "Queens.queens()": "0.8891477978261869",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.3832533611319771",
            "Queens.setRowColumn(int, int, boolean)": "25.831276540295256",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.21462188223390719",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.44457389891309346",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.030660268890558166"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.2698850574712646",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.092873563218391",
            "richards.TaskControlBlock.runTask()": "39.816091954022994",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "2.975632183908046",
            "richards.Scheduler.schedule()": "2.589425287356322",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.3213793103448284",
            "richards.RBObject.append(Packet, Packet)": "2.902068965517242",
            "richards.Packet.<init>(Packet, int, int)": "1.548505747126437",
            "Richards.benchmark()": "25.8832183908046",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.9420689655172418"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2653194934022082",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.4078177200933495",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.09204962015994977",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.37902784771744025",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.62980350113439",
            "som.Random.next()": "14.662963023126116",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, Object) DirectMethodHandle$Holder": "0.048732151849385175",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.07039088600466747",
            "Storage.buildTreeDepth(int, Random)": "36.45706426687893",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.6332526545486057"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "34.57465879484666",
            "Towers.popDiskFrom(int)": "32.67442694265841",
            "Towers.moveDisks(int, int, int)": "7.290197671917201",
            "java.nio.Buffer.<init>(int, int, int, int, MemorySegmentProxy) Buffer.java": "0.10756029352008985",
            "Towers$TowersDisk.getSize()": "0.9560914979563543",
            "Towers.moveTopDisk(int, int)": "7.50531825895738",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "15.787460860004298",
            "com.yourkit.probes.Table.createRow() a": "0.22707173076463413",
            "Towers.benchmark()": "0.22707173076463413",
            "java.util.Arrays$ArrayList.iterator() Arrays.java": "0.1314625809689987"
        },
        "YourKit_Permute.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.19970931200142014",
            "sun.management.MappedMXBeanType.newMappedType(Type) MappedMXBeanType.java": "0.0443798471114267",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0887596942228534",
            "Permute.permute(int)": "57.638326435965425",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.09985465600071007",
            "sun.invoke.util.BytecodeDescriptor.unparseSig(Class, StringBuilder) BytecodeDescriptor.java": "0.16642442666785012",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.05547480888928337",
            "sun.nio.fs.UnixFileAttributes.asBasicFileAttributes() UnixFileAttributes.java": "0.15532946488999344",
            "Permute.benchmark()": "0.09985465600071007",
            "Permute.swap(int, int)": "41.31763766073826"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.961822248502455",
            "deltablue.Variable.<init>()": "2.8022726688433557",
            "som.Vector.forEach(ForEachInterface)": "22.443890274314214",
            "deltablue.BinaryConstraint.getOutput()": "3.1107797516517985",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "9.332339254955395",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "3.6249582229992034",
            "som.Vector.<init>(int)": "2.827981592410726",
            "deltablue.BinaryConstraint.chooseMethod(int)": "2.5451834331696532",
            "som.Vector.append(Object)": "18.84464097488238",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "3.4449957580276114"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.21054570815733026",
            "sun.management.MappedMXBeanType$CompositeDataMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.052636427039332565",
            "List.tail(List$Element, List$Element, List$Element)": "4.618846472701433",
            "List$Element.<init>(Object)": "0.6579553379916572",
            "List.makeList(int)": "1.8554340531364728",
            "Benchmark.innerBenchmarkLoop(int)": "0.11843196083849829",
            "List$Element.getNext()": "23.094232363507164",
            "List.isShorterThan(List$Element, List$Element)": "68.87476478096667",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.4474096298343268",
            "sun.management.LazyCompositeData.isTypeMatched(CompositeType, CompositeType) LazyCompositeData.java": "0.03947732027949943"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "3.276965833828796",
            "nbody.Body.getZ()": "5.710493204098281",
            "nbody.Body.setX(double)": "0.3871520816337818",
            "nbody.Body.getMass()": "0.40097894169213116",
            "nbody.Body.setZ(double)": "0.8987459037927076",
            "nbody.NBodySystem.advance(double)": "45.31062041121082",
            "nbody.Body.setVY(double)": "5.268033682231102",
            "nbody.Body.setVZ(double)": "8.392904055418054",
            "nbody.Body.setVX(double)": "27.888776737690634",
            "nbody.Body.setY(double)": "0.6775161428591181"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.33895009721321",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07777057679844457",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(MethodType, int) DirectMethodHandle.java": "0.0691294015986174",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0691294015986174",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.07777057679844457",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(int, int) MethodWriter.java": "0.06048822639879022",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.05184705119896305",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.08641175199827175",
            "java.lang.invoke.MethodHandle.invokeBasic(Object[]) MethodHandle.java (native)": "0.08641175199827175",
            "java.security.BasicPermission.newPermissionCollection() BasicPermission.java": "0.05184705119896305"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.8943143011203643",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.200919990147717",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "16.622397965636836",
            "cd.RedBlackTree.findNode(Comparable)": "8.101505135835014",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.14144682097471",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.369873318288632",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "1.9371717292752582",
            "cd.RedBlackTree.put(Comparable, Object)": "7.296014485517811",
            "cd.Vector2D.compareNumbers(double, double)": "8.227987138777385",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.6080655576192098"
        },
        "YourKit_Sieve.txt": {
            "java.io.PrintStream.println(String) PrintStream.java": "0.08019808928052288",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11027237276071897",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.2054474552143795",
            "Benchmark.innerBenchmarkLoop(int)": "0.04009904464026144",
            "Sieve.benchmark()": "91.00478181107334",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.08019808928052288",
            "java.lang.invoke.MethodHandles$Lookup.getDirectFieldCommon(byte, Class, MemberName, boolean) MethodHandles.java": "0.08019808928052288",
            "Sieve.sieve(boolean[], int)": "6.125129068799935",
            "jdk.internal.org.objectweb.asm.Frame.pop() Frame.java": "0.0501238058003268",
            "java.util.zip.Inflater.<init>(boolean) Inflater.java": "0.19047046204124185"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.15536695733234931",
            "Bounce.benchmark()": "61.098055970946376",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.19420869666543666",
            "java.util.ImmutableCollections$MapN.probe(Object) ImmutableCollections.java": "0.15536695733234931",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.233050435998524",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5632052203297664",
            "som.Random.next()": "0.36899652366432967",
            "Bounce$Ball.bounce()": "35.92860888310578",
            "jdk.internal.loader.URLClassPath$JarLoader$1.run() URLClassPath.java": "0.233050435998524",
            "Bounce$Ball.<init>(Random)": "0.5632052203297664"
        }
    },
    "Runtimes": {
        "NBody.data": 22.298499999999997,
        "YourKit_Storage.txt": 61.979,
        "rebench_test_Async_Bounce.txt": 59.8935,
        "Permute_not_profiled_": 29.539,
        "JavaFlightRecorder_Sieve.jfr": 30.9205,
        "CD_not_profiled_": 42.089,
        "JProfiler_NBody.txt": 21.498,
        "JProfiler_List.txt": 28.5585,
        "YourKit_Mandelbrot.txt": 37.189499999999995,
        "CD.data": 44.8445,
        "Json_not_profiled_": 79.096,
        "List.data": 23.389,
        "Queens_not_profiled_": 21.131,
        "Towers.hpl": 26.1535,
        "Bounce.hpl": 26.478,
        "JavaFlightRecorder_Json.jfr": 80.17150000000001,
        "Sieve.data": 33.941,
        "Richards.hpl": 90.6495,
        "YourKit_Richards.txt": 91.01400000000001,
        "JavaFlightRecorder_Havlak.jfr": 153.308,
        "JavaFlightRecorder_CD.jfr": 41.585,
        "JavaFlightRecorder_Towers.jfr": 25.759999999999998,
        "rebench_test_Async_CD.txt": 134.875,
        "List_not_profiled_": 23.585,
        "Havlak_not_profiled_": 148.96550000000002,
        "JProfiler_Json.txt": 1022.284,
        "rebench_test_Async_NBody.txt": 56.032,
        "JavaFlightRecorder_Bounce.jfr": 15.1275,
        "Havlak.data": 158.4315,
        "Towers_not_profiled_": 25.805,
        "YourKit_DeltaBlue.txt": 12.097,
        "rebench_test_Async_Towers.txt": 72.304,
        "YourKit_NBody.txt": 23.4175,
        "JavaFlightRecorder_NBody.jfr": 21.3385,
        "rebench_test_Async_Sieve.txt": 81.476,
        "Storage.hpl": 59.512,
        "JProfiler_Queens.txt": 26.828000000000003,
        "rebench_test_Async_List.txt": 66.7515,
        "rebench_test_Async_Richards.txt": 250.9615,
        "YourKit_Towers.txt": 27.336,
        "JProfiler_Havlak.txt": 1910.0835,
        "JavaFlightRecorder_List.jfr": 22.9495,
        "YourKit_Permute.txt": 29.755000000000003,
        "Queens.data": 22.4955,
        "Storage_not_profiled_": 60.2385,
        "Json.hpl": 80.7575,
        "Towers.data": 26.771,
        "YourKit_List.txt": 24.7865,
        "JProfiler_CD.txt": 476.2135,
        "JProfiler_Permute.txt": 29.7635,
        "Sieve.hpl": 31.0905,
        "DeltaBlue_not_profiled_": 15.036999999999999,
        "CD.hpl": 42.248,
        "JavaFlightRecorder_Queens.jfr": 22.168999999999997,
        "JProfiler_Bounce.txt": 44.2545,
        "Permute.hpl": 29.689,
        "Richards_not_profiled_": 91.2135,
        "DeltaBlue.hpl": 11.962,
        "NBody.hpl": 21.358,
        "JProfiler_Towers.txt": 27.0595,
        "JProfiler_Mandelbrot.txt": 38.194500000000005,
        "JavaFlightRecorder_DeltaBlue.jfr": 14.463999999999999,
        "rebench_test_Async_Mandelbrot.txt": 110.12100000000001,
        "YourKit_CD.txt": 43.677,
        "rebench_test_Async_Permute.txt": 78.22200000000001,
        "Mandelbrot.data": 38.91,
        "JProfiler_Storage.txt": 1040.929,
        "YourKit_Sieve.txt": 30.7745,
        "JavaFlightRecorder_Permute.jfr": 29.68,
        "YourKit_Bounce.txt": 26.204,
        "JProfiler_Sieve.txt": 31.386499999999998,
        "JProfiler_DeltaBlue.txt": 99.2925,
        "YourKit_Queens.txt": 20.809,
        "Mandelbrot.hpl": 37.5375,
        "JavaFlightRecorder_Storage.jfr": 57.5125,
        "List.hpl": 22.441499999999998,
        "Mandelbrot_not_profiled_": 37.314499999999995,
        "Queens.hpl": 21.8185,
        "Storage.data": 63.332499999999996,
        "JavaFlightRecorder_Richards.jfr": 93.697,
        "Bounce.data": 26.9815,
        "Permute.data": 30.894,
        "YourKit_Json.txt": 78.273,
        "rebench_test_Async_DeltaBlue.txt": 39.766999999999996,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.358,
        "YourKit_Havlak.txt": 154.88600000000002,
        "DeltaBlue.data": 12.3375,
        "JProfiler_Richards.txt": 92.48349999999999,
        "rebench_test_Async_Storage.txt": 147.089,
        "Sieve_not_profiled_": 30.8065,
        "Havlak.hpl": 153.3725,
        "Richards.data": 93.049,
        "rebench_test_Async_Havlak.txt": 450.534,
        "Bounce_not_profiled_": 25.905,
        "NBody_not_profiled_": 21.225,
        "Json.data": 83.93700000000001,
        "rebench_test_Async_Json.txt": 247.598,
        "rebench_test_Async_Queens.txt": 57.701
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.50%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.27%",
            "[.] void nbody.NBodySystem.advance(double)": "0.07%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.35%",
            "0xffffffffb4c0634b": "0.04%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "[.] void Permute.permute(int)": "0.07%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.64%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.31%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.49%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.93%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.42%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "8.91%",
            "[.] void deltablue.StayConstraint.<init>(deltablue.Variable, deltablue.Strength$Sym, deltablue.Planner)": "3.85%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "7.20%",
            "[.] vtable chunks": "6.40%",
            "[.] void deltablue.Planner.chainTest(int)": "24.93%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.25%",
            "[.] Interpreter": "0.51%",
            "0xffffffffb51c12b7": "0.23%",
            "0xffffffffb4c0634b": "0.06%",
            "[.] boolean Queens.placeQueen(int)": "94.55%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.08%",
            "[.] Interpreter": "0.46%",
            "[.] void Towers.moveDisks(int, int, int)": "0.13%",
            "[.] java.lang.Object Towers.benchmark()": "0.09%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.66%",
            "[.] boolean richards.Scheduler.start()": "22.33%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.99%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.16%",
            "[.] void richards.Scheduler.schedule()": "7.92%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.51%",
            "[.] Interpreter": "0.20%",
            "0xffffffffb51c12b7": "0.17%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.60%",
            "0xffffffffb4c063aa": "0.11%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.57%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "10.17%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.12%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.01%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.39%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.28%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c0634b": "0.09%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.76%",
            "[.] Interpreter": "0.50%",
            "[.] java.lang.Object List.benchmark()": "0.36%",
            "0xffffffffb51c12b7": "0.15%",
            "[.] List$Element List.makeList(int)": "0.69%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.36%",
            "0xffffffffb51c12b7": "0.20%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "83.97%",
            "[.] java.lang.Object Sieve.benchmark()": "6.12%",
            "[.] int Sieve.sieve(boolean[], int)": "6.51%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.42%",
            "0xffffffffb51c12b7": "0.20%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "[.] java.lang.Object Bounce.benchmark()": "24.10%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.24%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.69%",
            "[.] StubRoutines (2)": "8.31%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.15%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.79%"
        }
    }
}