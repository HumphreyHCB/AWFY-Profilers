{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.08818342151675485",
            "java.net.URL.<init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V": "0.08818342151675485",
            "Mandelbrot.mandelbrot(I)I": "99.82363315696648"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.6349206349206349",
            " ": "0",
            "Queens.placeQueen(I)Z": "86.82539682539682",
            "Queens.getRowColumn(II)Z": "10.793650793650793",
            "java.util.Arrays.fill([ZZ)V": "1.2698412698412698",
            "Queens.queens()Z": "0.47619047619047616"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "94.42815249266863",
            "Bounce.benchmark()Ljava/lang/Object;": "5.425219941348974",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1466275659824047"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.011029411764706",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.78125",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "3.2398897058823533",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.469669117647059",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "26.355698529411768",
            "havlak.HavlakLoopFinder.findLoops()V": "8.662683823529413",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "3.2858455882352944",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "49.63235294117647",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.0340073529411766",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.896139705882353"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.212730318257957",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.0887772194304859",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "14.74036850921273",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.0938023450586267",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "27.638190954773872",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "0.8375209380234506",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "11.809045226130655",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "19.34673366834171",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "8.626465661641541",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.256281407035176"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "88.7218045112782",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "10.375939849624059",
            "List$Element.length()I": "0.15037593984962405",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/MemberName;": "0.15037593984962405",
            "List.makeList(I)LList$Element;": "0.6015037593984962"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "8.223684210526317",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "6.25",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "4.276315789473685",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "48.026315789473685",
            "deltablue.ScaleConstraint.execute()V": "2.3026315789473686",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "4.276315789473685",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "2.6315789473684212",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "5.592105263157896",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "6.907894736842106",
            "deltablue.Planner.projectionTest(I)V": "1.6447368421052633"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(I)V": "0.060459492140266025",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.060459492140266025",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.394195888754535",
            "java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(Ljava/lang/invoke/MethodHandle;ILjava/lang/Object;ZLjava/lang/invoke/LambdaForm$NamedFunction;Ljava/lang/invoke/LambdaForm$NamedFunction;)Ljava/lang/invoke/LambdaForm;": "0.060459492140266025",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.3639661426844",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.060459492140266025"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.10427528675703858",
            "Sieve.benchmark()Ljava/lang/Object;": "0.20855057351407716",
            "java.net.URLStreamHandler.toExternalForm(Ljava/net/URL;)Ljava/lang/String;": "0.10427528675703858",
            "Sieve.sieve([ZI)I": "99.58289885297184"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.util.jar.JavaUtilJarAccessImpl.entryFor(Ljava/util/jar/JarFile;Ljava/lang/String;)Ljava/util/jar/JarEntry;": "0.13157894736842105",
            "Towers.moveDisks(III)V": "98.94736842105263",
            "java.lang.invoke.MemberName.checkForTypeAlias(Ljava/lang/Class;)V": "0.13157894736842105",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "0.6578947368421052",
            "java.lang.invoke.LambdaForm$MH+0x0000000800c0e800.589835301.invoke(Ljava/lang/Object;J)J": "0.13157894736842105"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.52229299363057",
            "NBody.innerBenchmarkLoop(I)Z": "0.47770700636942676"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "3.647214854111406",
            " ": "0",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.33156498673740054",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.4482758620689657",
            "richards.Scheduler.schedule()V": "60.875331564986745",
            "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Ljava/lang/Class;)Ljava/lang/String;": "0.06631299734748011",
            "Richards.benchmark()Ljava/lang/Object;": "0.6631299734748011",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.591511936339526",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.376657824933687"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "3.9196940726577436",
            "json.JsonPureStringParser.readExponent()Z": "8.365200764818356",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "16.108986615678777",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "31.261950286806883",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "5.019120458891013",
            "json.JsonObject.<init>()V": "0.8604206500956023",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "20.793499043977054",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "7.552581261950286",
            "java.lang.StringLatin1.hashCode([B)I": "0.8126195028680688",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.2504780114722753"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.1201923076923077",
            "Permute.swap(II)V": "27.764423076923077",
            "Permute.permute(I)V": "71.9951923076923",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1201923076923077"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "richards.Packet::setLink": "2.1",
            "Richards::benchmark": "5.0",
            "richards.RBObject::append": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "46.4",
            "richards.HandlerTaskDataRecord::workInAdd": "2.1",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.8",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.9",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.StringLatin1::indexOf": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::getAbstractTypeFromDescriptor": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "java.lang.invoke.LambdaForm$MH.0x0000000800c0b800::invoke": "0.0",
            "Mandelbrot::mandelbrot": "97.6",
            "java.lang.AbstractStringBuilder::getCoder": "0.0",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.1",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "List::tail": "1.9",
            "List::isShorterThan": "80.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.7",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "17.1",
            "java.lang.String::<init>": "5.4",
            "json.JsonPureStringParser::readArray": "2.4",
            "java.lang.String::length": "3.0",
            "java.util.Arrays::copyOfRange": "7.0",
            "java.lang.String::equals": "21.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "10.1",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.5",
            "havlak.HavlakLoopFinder::findLoops": "5.8",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "4.6",
            "AGCT::Unknown not Java[ERR=-3]": "8.3",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.2",
            "havlak.HavlakLoopFinder::doDFS": "4.9",
            "som.Vector::hasSome": "2.4",
            "som.Vector::<init>": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "39.7",
            "Permute::permute": "49.7",
            "Permute::benchmark": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.LambdaForm::internArgument": "0.0",
            "java.lang.invoke.DirectMethodHandle::<init>": "0.0",
            "java.lang.StringLatin1::lastIndexOf": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "java.lang.invoke.MethodHandles$Lookup::isClassAccessible": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "6.8"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "65.4",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "7.8",
            "Queens::setRowColumn": "20.0",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.4"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.3",
            "Storage::buildTreeDepth": "39.1",
            "java.util.Arrays::setAll": "35.1",
            "som.Random::next": "11.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.9",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.3",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.7",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.1"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.6",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8Reference": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.LambdaForm::arguments": "0.0",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet::add": "0.0",
            "Sieve::sieve": "84.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "5.6"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.9",
            "deltablue.Variable::<init>": "5.4",
            "som.Vector::append": "4.7",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.6",
            "AGCT::Unknown not Java[ERR=-3]": "13.5",
            "som.Dictionary::getBucket": "11.3",
            "AGCT::Unknown Java[ERR=-5]": "15.8",
            "deltablue.AbstractConstraint::satisfy": "2.8",
            "som.Vector::<init>": "3.4",
            "som.Vector::forEach": "6.0"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.2",
            "Bounce$Ball::bounce": "75.8",
            "java.util.Arrays::setAll": "0.7",
            "java.lang.invoke.InvokerBytecodeGenerator::emitLoadInsn": "0.0",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.7"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.2",
            "nbody.Body::getZ": "8.3",
            "nbody.Body::setVX": "29.4",
            "nbody.Body::setVY": "5.8",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "nbody.NBodySystem::advance": "39.8"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.6",
            "Towers::popDiskFrom": "23.0",
            "Towers::moveDisks": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "Towers::pushDisk": "39.0",
            "Towers$TowersDisk::setNext": "16.4",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "6.4",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "12.0",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "6.6",
            "cd.RedBlackTree::findNode": "4.8",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "9.1",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "6.3",
            "cd.CollisionDetector::isInVoxel": "20.8",
            "cd.RedBlackTree::treeInsert": "14.1"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.satisfy": "3.19%",
            "deltablue.UnaryConstraint.<init>": "11.31%",
            "som.Vector.append": "7.65%",
            "som.Vector.forEach": "5.05%",
            "itable": "4.92%",
            "deltablue.Planner.addPropagate": "3.31%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "3.20%",
            "deltablue.Strength.of": "3.59%",
            "deltablue.ScaleConstraint.execute": "1.92%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.27%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "75.52%",
            "som.Random.next": "0.82%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.60%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "18.14%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.67%",
            "Bounce.lambda$benchmark$0": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.51%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.58%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.42%",
            "som.Random.next": "11.05%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.32%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.34%",
            "java.util.Arrays.setAll": "35.10%",
            "Storage.lambda$buildTreeDepth$0": "4.21%",
            "SpinPause": "0.21%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.31%",
            "Storage.buildTreeDepth": "43.40%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.86%",
            "Towers.popDiskFrom": "18.65%",
            "Towers.moveDisks": "8.88%",
            "Interpreter": "0.04%",
            "Towers.pushDisk": "42.44%",
            "Towers.moveTopDisk": "4.82%",
            "Towers$TowersDisk.getSize": "0.36%",
            "Towers$TowersDisk.getNext": "3.81%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.17%",
            "cd.CollisionDetector.isInVoxel": "19.84%",
            "cd.RedBlackTree.forEach": "6.02%",
            "Node::set_req_X(unsigned": "3.54%",
            "cd.RedBlackTree.put": "6.37%",
            "cd.RedBlackTree.treeInsert": "12.37%",
            "cd.RedBlackTree.treeMinimum": "5.02%",
            "cd.RedBlackTree.findNode": "2.84%",
            "cd.Vector2D.compareNumbers": "4.31%",
            "cd.RedBlackTree.leftRotate": "2.10%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.15%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.64%",
            "som.Vector.hasSome": "2.26%",
            "som.Vector.append": "3.46%",
            "som.IdentitySet.lambda$contains$0": "32.19%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.62%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.93%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.26%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.03%",
            "havlak.HavlakLoopFinder.doDFS": "5.30%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.07%",
            "Sieve.benchmark": "6.21%",
            "Interpreter": "0.05%",
            "void": "0.02%",
            "Sieve.sieve": "85.62%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.04%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.08%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.05%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.37%",
            "Permute.swap": "40.31%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "Permute.verifyResult": "0.03%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.79%",
            "nbody.Body.getZ": "7.66%",
            "nbody.Body.getY": "0.74%",
            "nbody.Body.setX": "1.22%",
            "nbody.Body.setY": "1.81%",
            "nbody.Body.setVX": "27.56%",
            "nbody.Body.setVY": "5.56%",
            "nbody.Body.getMass": "0.48%",
            "nbody.Body.getVZ": "0.47%",
            "nbody.NBodySystem.advance": "41.79%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.12%",
            "Interpreter": "0.05%",
            "List.makeList": "1.27%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.60%",
            "List$Element.length": "0.11%",
            "List.verifyResult": "0.06%",
            "List.isShorterThan": "81.20%",
            "List$Element.<init>": "0.29%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.54%",
            "java.lang.String.length": "3.06%",
            "java.lang.String.<init>": "5.90%",
            "json.JsonPureStringParser.isWhiteSpace": "2.26%",
            "java.lang.String.isLatin1": "3.07%",
            "json.JsonPureStringParser.readStringInternal": "6.55%",
            "java.util.Arrays.copyOfRange": "7.97%",
            "java.lang.String.equals": "21.72%",
            "json.JsonPureStringParser.read": "15.85%",
            "json.JsonPureStringParser.readValue": "2.37%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.09%",
            "Queens.getRowColumn": "57.52%",
            "Queens.setRowColumn": "23.83%",
            "Interpreter": "0.05%",
            "Queens.queens": "0.63%",
            "Queens.placeQueen": "13.70%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.26%",
            "Richards.benchmark": "4.65%",
            "richards.Packet.<init>": "6.82%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.35%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.71%",
            "itable": "37.03%",
            "richards.TaskControlBlock.<init>": "3.15%",
            "richards.RBObject.<init>": "5.68%",
            "richards.RBObject.append": "2.70%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.08%"
        }
    },
    "JProfiler": {
        "Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.9",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "93.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2"
        },
        "DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.4",
            "deltablue.AbstractConstraint.satisfy": "12.4",
            "deltablue.Planner.removePropagateFrom": "8.9",
            "som.Vector.<init>": "29.3",
            "deltablue.Variable.<init>": "4.6",
            "som.Vector.forEach": "7.4",
            "deltablue.Planner.addPropagate": "1.8",
            "deltablue.Planner.constraintsConsuming": "5.1",
            "deltablue.AbstractConstraint.<init>": "4.6",
            "deltablue.Planner.addConstraintsConsumingTo": "17.5"
        },
        "Permute.txt": {
            "Permute.permute": "98.3",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.9",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "Queens.txt": {
            "Run.reportBenchmark": "0.3",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "23.9",
            "Queens.placeQueen": "74.9",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.3",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Queens.benchmark": "0.1"
        },
        "CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "8.1",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.0",
            "cd.RedBlackTree$Node.<init>": "7.6",
            "cd.RedBlackTree$Entry.<init>": "4.6"
        },
        "Bounce.txt": {
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.getSuiteFromName": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "52.3",
            "Bounce$Ball.<init>": "46.5",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.3",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.1",
            "richards.Scheduler.<init>": "0.1",
            "richards.Packet.<init>": "0.2",
            "richards.TaskControlBlock.addInputAndCheckPriority": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.6",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.3",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.8",
            "Towers.moveDisks": "94.7",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "Towers.pushDisk": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.6",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.6",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.2",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readValue": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.0",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.3"
        },
        "Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.2",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "74.6",
            "List$Element.<init>": "21.3",
            "Benchmark.innerBenchmarkLoop": "0.2"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.982622016298137",
            "java.lang.String.<init>(byte[], byte) String.java": "6.905990632965432",
            "json.JsonPureStringParser.read()": "20.554739393026207",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.3567299925080465",
            "java.lang.String.length() String.java": "3.130715753610996",
            "json.JsonArray.<init>()": "2.0048300079942076",
            "java.lang.String.substring(int, int) String.java": "11.020286870665446",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.566969274619856",
            "json.JsonPureStringParser.readStringInternal()": "3.5283333961150665",
            "json.JsonPureStringParser.readValue()": "2.2099170025489383"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "2.006150463448891",
            "som.Vector.forEach(ForEachInterface)": "2.296144165824459",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.730621820078385",
            "havlak.HavlakLoopFinder.findLoops()": "11.104161842455513",
            "som.Vector.<init>(int)": "3.289480803066143",
            "som.Vector.append(Object)": "4.200580420231173",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.987811607971798",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "3.9084225857483252",
            "som.Vector.removeAll()": "2.8263565321081465",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.714330233574785"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "8.778012185946329",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.26555330982694775",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.1917885015416845",
            "Queens.getRowColumn(int, int)": "63.18693477715651",
            "Queens.queens()": "1.017954354336633",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.20654146319873715",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.4425888497115796",
            "Benchmark.innerBenchmarkLoop(int)": "0.2803062714840004",
            "Queens.setRowColumn(int, int, boolean)": "25.08003481698951",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.2803062714840004"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.9982032825916822",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9400138887357945",
            "richards.TaskControlBlock.runTask()": "38.396108214562595",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.181317813222223",
            "richards.Scheduler.schedule()": "2.5205483478650663",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.0937342695370056",
            "richards.RBObject.append(Packet, Packet)": "2.9063465643750255",
            "richards.Scheduler$$Lambda$12.0x00000008000c7520.apply(Packet, RBObject)": "1.5358443285825039",
            "Richards.benchmark()": "27.24102835433178",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.9400138887357945"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.14572853472657016",
            "Storage$$Lambda$7.0x00000008000c2a98.<init>(Storage, int, Random)": "0.21049677238282358",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.3979144627474693",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.8959606209115054",
            "jdk.internal.org.objectweb.asm.Label.resolve(byte[], int) Label.java": "0.15112588786459127",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.201904186187114",
            "som.Random.next()": "13.498780198190813",
            "Storage.buildTreeDepth(int, Random)": "37.155379002137366",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.7079816058205073",
            "com.yourkit.probes.builtin.Files.<clinit>() a": "0.11334441589844345"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.71938800370316",
            "Towers.popDiskFrom(int)": "29.41821371144569",
            "Towers.moveDisks(int, int, int)": "8.234663548214199",
            "Towers$TowersDisk.getSize()": "1.5592262339813865",
            "com.yourkit.probes.ForeignKeyColumn.setValue(int, int) a": "0.10963309457681625",
            "Towers.moveTopDisk(int, int)": "8.502655557179748",
            "java.util.Objects.equals(Object, Object) Objects.java": "0.1949032792476733",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.649807533011742",
            "Towers.benchmark()": "0.2192661891536325",
            "com.yourkit.probes.Table.createRow() a": "0.10963309457681625"
        },
        "YourKit_Permute.txt": {
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.0011159219747355264",
            "Permute.permute(int)": "55.1042271124403",
            "java.lang.ThreadLocal$ThreadLocalMap.<init>(ThreadLocal, Object) ThreadLocal.java": "0.1897067357050395",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.10043297772619737",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation(String, boolean) MethodWriter.java": "0.30129893317859213",
            "java.io.File.toPath() File.java": "0.03347765924206579",
            "Permute.benchmark()": "0.5468017676204079",
            "jdk.internal.loader.NativeLibraries.find(String) NativeLibraries.java": "0.06695531848413158",
            "Permute.swap(int, int)": "43.554434673927595",
            "java.lang.Integer.valueOf(int) Integer.java": "0.10043297772619737"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.682983323038912",
            "som.Vector.forEach(ForEachInterface)": "41.36426806670784",
            "deltablue.BinaryConstraint.getOutput()": "2.0846201358863494",
            "deltablue.BinaryConstraint.isSatisfied()": "2.0074119827053734",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.682983323038912",
            "deltablue.Planner.makePlan(Vector)": "2.6250772081531806",
            "som.Vector.append(Object)": "2.91460778258184",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "12.777949351451511",
            "deltablue.Variable.getValue()": "5.636195182211241",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, int) DirectMethodHandle$Holder": "1.7178814082767138"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "2.388203882843841",
            "List$Element.<init>(Object)": "0.36225564515047026",
            "com.yourkit.probes.builtin.Processes$FileOutputStream_write_arrayRange_Probe.onExit(int, Throwable) a": "0.12075188171682343",
            "List.makeList(int)": "0.8318462962714502",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.1073350059705097",
            "jdk.internal.org.objectweb.asm.SymbolTable.addType(String) SymbolTable.java": "0.32200501791152913",
            "List$Element.setNext(List$Element)": "0.12075188171682343",
            "List$Element.getNext()": "23.88203882843841",
            "List.isShorterThan(List$Element, List$Element)": "71.63269960956892",
            "sun.nio.fs.UnixFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.12075188171682343"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.62582678059443",
            "nbody.Body.getZ()": "5.478752093564594",
            "nbody.Body.setX(double)": "0.6954892554006868",
            "nbody.Body.getX()": "1.1638799784256393",
            "nbody.NBodySystem.advance(double)": "46.640361086666466",
            "nbody.Body.setVY(double)": "5.833593550401679",
            "nbody.Body.setVZ(double)": "8.218128140346892",
            "nbody.Body.getVX()": "0.5819399892128196",
            "nbody.Body.setVX(double)": "25.406648309535296",
            "nbody.Body.setY(double)": "1.1354926618786725"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.56283962658492",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry) URLClassPath.java": "0.026125121917235608",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.11320886164135431",
            "Harness.main(String[])": "8.708373972411871E-4",
            "sun.nio.fs.UnixNativeDispatcher.<clinit>() UnixNativeDispatcher.java": "0.0",
            "java.util.ArrayDeque.addFirst(Object) ArrayDeque.java": "0.06966699177929496",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.026125121917235608",
            "jdk.internal.misc.Unsafe.compareAndSetLong(Object, long, long, long) Unsafe.java (native)": "0.03483349588964748",
            "jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String) BuiltinClassLoader.java": "8.708373972411871E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.407942912113946",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.095036397834797",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "16.468763909428976",
            "cd.RedBlackTree.findNode(Comparable)": "8.729737102818499",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.789280227432625",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.5198501012247476",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.1106436745301305",
            "cd.RedBlackTree.put(Comparable, Object)": "5.951440837365572",
            "cd.Vector2D.compareNumbers(double, double)": "8.622051201056758",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.005915545536778"
        },
        "YourKit_Sieve.txt": {
            "java.lang.invoke.MethodTypeForm.canonicalizeAll(Class[], int) MethodTypeForm.java": "0.2521846869072289",
            "java.util.zip.ZipCoder$UTF8ZipCoder.checkedHash(byte[], int, int) ZipCoder.java": "0.010964551604662125",
            "java.util.concurrent.ConcurrentHashMap$Traverser.advance() ConcurrentHashMap.java": "0.06578730962797276",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.09868096444195915",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.335449491793033",
            "Benchmark.innerBenchmarkLoop(int)": "0.09868096444195915",
            "Sieve.benchmark()": "89.13083999429843",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.03289365481398638",
            "Sieve.sieve(boolean[], int)": "7.927370810170717",
            "sun.nio.fs.UnixFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.0438582064186485"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.17035452669833998",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17035452669833998",
            "Bounce.benchmark()": "63.27724252806117",
            "Benchmark.innerBenchmarkLoop(int)": "0.26499593041964",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.35963733414093996",
            "som.Random.next()": "0.45427873786223993",
            "Bounce.lambda$benchmark$0(Random, int)": "0.37856561488519996",
            "com.yourkit.probes.Table.createRow() a": "0.22713936893111997",
            "Bounce$Ball.bounce()": "32.38628835342885",
            "Bounce$Ball.<init>(Random)": "2.0253260396358197"
        }
    },
    "Runtimes": {
        "Permute_JProfiler_.txt": 29.7635,
        "Havlak_honest_.hpl": 153.3725,
        "Permute_not_profiled_": 29.539,
        "Permute_honest_.hpl": 29.689,
        "List_YourKit_.txt": 24.7865,
        "CD_not_profiled_": 42.089,
        "Json_not_profiled_": 79.096,
        "Queens_not_profiled_": 21.131,
        "List_JProfiler_.txt": 28.5585,
        "Permute_Perf_.data": 30.894,
        "Bounce_Perf_.data": 26.9815,
        "Richards_Perf_.data": 93.049,
        "Sieve_JProfiler_.txt": 31.386499999999998,
        "Permute_YourKit_.txt": 29.755000000000003,
        "Queens_JProfiler_.txt": 26.828000000000003,
        "Towers_JProfiler_.txt": 27.0595,
        "Storage_Perf_.data": 63.332499999999996,
        "JavaFlightRecorder_Sieve_JFR_.jfr": 30.9205,
        "List_not_profiled_": 23.585,
        "JavaFlightRecorder_Mandelbrot_JFR_.jfr": 37.358,
        "DeltaBlue_YourKit_.txt": 12.097,
        "Havlak_not_profiled_": 148.96550000000002,
        "rebench_test_Async_CD_Async_.txt": 134.875,
        "List_honest_.hpl": 22.441499999999998,
        "JavaFlightRecorder_Towers_JFR_.jfr": 25.759999999999998,
        "Mandelbrot_YourKit_.txt": 37.189499999999995,
        "Queens_Perf_.data": 22.4955,
        "Towers_not_profiled_": 25.805,
        "NBody_Perf_.data": 22.298499999999997,
        "CD_YourKit_.txt": 43.677,
        "Sieve_honest_.hpl": 31.0905,
        "Bounce_JProfiler_.txt": 44.2545,
        "rebench_test_Async_Json_Async_.txt": 247.598,
        "rebench_test_Async_NBody_Async_.txt": 56.032,
        "JavaFlightRecorder_Storage_JFR_.jfr": 57.5125,
        "Storage_honest_.hpl": 59.512,
        "JavaFlightRecorder_Richards_JFR_.jfr": 93.697,
        "JavaFlightRecorder_DeltaBlue_JFR_.jfr": 14.463999999999999,
        "Havlak_YourKit_.txt": 154.88600000000002,
        "List_Perf_.data": 23.389,
        "Json_Perf_.data": 83.93700000000001,
        "rebench_test_Async_Mandelbrot_Async_.txt": 110.12100000000001,
        "Havlak_Perf_.data": 158.4315,
        "JavaFlightRecorder_List_JFR_.jfr": 22.9495,
        "Storage_not_profiled_": 60.2385,
        "rebench_test_Async_Queens_Async_.txt": 57.701,
        "Towers_YourKit_.txt": 27.336,
        "NBody_JProfiler_.txt": 21.498,
        "Mandelbrot_honest_.hpl": 37.5375,
        "Havlak_JProfiler_.txt": 1910.0835,
        "Mandelbrot_Perf_.data": 38.91,
        "rebench_test_Async_Permute_Async_.txt": 78.22200000000001,
        "DeltaBlue_not_profiled_": 15.036999999999999,
        "CD_JProfiler_.txt": 476.2135,
        "DeltaBlue_honest_.hpl": 11.962,
        "JavaFlightRecorder_CD_JFR_.jfr": 41.585,
        "Sieve_Perf_.data": 33.941,
        "NBody_honest_.hpl": 21.358,
        "rebench_test_Async_Sieve_Async_.txt": 81.476,
        "CD_honest_.hpl": 42.248,
        "rebench_test_Async_Havlak_Async_.txt": 450.534,
        "Towers_Perf_.data": 26.771,
        "JavaFlightRecorder_Bounce_JFR_.jfr": 15.1275,
        "rebench_test_Async_DeltaBlue_Async_.txt": 39.766999999999996,
        "Richards_not_profiled_": 91.2135,
        "rebench_test_Async_List_Async_.txt": 66.7515,
        "JavaFlightRecorder_Permute_JFR_.jfr": 29.68,
        "Richards_honest_.hpl": 90.6495,
        "JavaFlightRecorder_Havlak_JFR_.jfr": 153.308,
        "rebench_test_Async_Bounce_Async_.txt": 59.8935,
        "rebench_test_Async_Towers_Async_.txt": 72.304,
        "Json_YourKit_.txt": 78.273,
        "DeltaBlue_JProfiler_.txt": 99.2925,
        "NBody_YourKit_.txt": 23.4175,
        "Mandelbrot_not_profiled_": 37.314499999999995,
        "JavaFlightRecorder_NBody_JFR_.jfr": 21.3385,
        "Richards_YourKit_.txt": 91.01400000000001,
        "rebench_test_Async_Storage_Async_.txt": 147.089,
        "DeltaBlue_Perf_.data": 12.3375,
        "Json_honest_.hpl": 80.7575,
        "Sieve_YourKit_.txt": 30.7745,
        "Queens_YourKit_.txt": 20.809,
        "Richards_JProfiler_.txt": 92.48349999999999,
        "Towers_honest_.hpl": 26.1535,
        "CD_Perf_.data": 44.8445,
        "Json_JProfiler_.txt": 1022.284,
        "Queens_honest_.hpl": 21.8185,
        "Sieve_not_profiled_": 30.8065,
        "Bounce_YourKit_.txt": 26.204,
        "Bounce_not_profiled_": 25.905,
        "Storage_JProfiler_.txt": 1040.929,
        "Bounce_honest_.hpl": 26.478,
        "rebench_test_Async_Richards_Async_.txt": 250.9615,
        "JavaFlightRecorder_Queens_JFR_.jfr": 22.168999999999997,
        "NBody_not_profiled_": 21.225,
        "Mandelbrot_JProfiler_.txt": 38.194500000000005,
        "JavaFlightRecorder_Json_JFR_.jfr": 80.17150000000001,
        "Storage_YourKit_.txt": 61.979
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.47%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.27%",
            "[.] void nbody.NBodySystem.advance(double)": "96.54%",
            "0xffffffffb4c0634b": "0.13%",
            "0xffffffffb4c063aa": "0.14%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.32%",
            "0xffffffffb4c0634b": "0.05%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "0.05%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.10%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.27%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.43%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.00%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.28%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "4.94%",
            "[.] void deltablue.EqualityConstraint.execute()": "4.92%",
            "[.] vtable chunks": "7.48%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "5.87%",
            "[.] void deltablue.Planner.chainTest(int)": "25.76%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.44%",
            "[.] Interpreter": "0.53%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Queens.placeQueen(int)": "93.75%",
            "0xffffffffb4c063aa": "0.14%"
        },
        "Towers.data": {
            "[.] void Towers.pushDisk(Towers$TowersDisk, int)": "0.05%",
            " ": "0",
            "[.] Interpreter": "0.45%",
            "[.] void Towers.moveDisks(int, int, int)": "0.16%",
            "[.] java.lang.Object Towers.benchmark()": "0.09%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.69%",
            "[.] boolean richards.Scheduler.start()": "23.29%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.67%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.44%",
            "[.] void richards.Scheduler.schedule()": "7.76%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.02%",
            "[.] Interpreter": "0.23%",
            "0xffffffffb51c12b7": "0.18%",
            "SpinPause": "0.05%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.40%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.33%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.66%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.54%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.04%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.75%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.32%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.41%",
            "0xffffffffb4c0634b": "0.07%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.56%",
            "[.] Interpreter": "0.50%",
            "[.] java.lang.Object List.benchmark()": "0.33%",
            "0xffffffffb51c12b7": "0.19%",
            "[.] List$Element List.makeList(int)": "0.60%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.31%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "85.51%",
            "[.] java.lang.Object Sieve.benchmark()": "5.34%",
            "[.] int Sieve.sieve(boolean[], int)": "5.94%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.51%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "[.] java.lang.Object Bounce.benchmark()": "24.24%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.55%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.60%",
            "[.] StubRoutines (2)": "8.55%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.17%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.63%"
        }
    }
}