{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.3091190108191654",
            " ": "0",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.1545595054095827",
            "Queens.placeQueen(I)Z": "86.70788253477589",
            "Queens.getRowColumn(II)Z": "11.746522411128284",
            "java.util.Arrays.fill([ZZ)V": "0.7727975270479135",
            "Queens.queens()Z": "0.3091190108191654"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.lang.invoke.DirectMethodHandle.make(Ljava/lang/Class;Ljava/lang/invoke/MemberName;)Ljava/lang/invoke/DirectMethodHandle;": "0.21739130434782608",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "90.65217391304347",
            "java.lang.invoke.InvokerBytecodeGenerator.lookupPregenerated(Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.21739130434782608",
            "Bounce$Ball.bounce()Z": "0.21739130434782608",
            "Bounce.benchmark()Ljava/lang/Object;": "8.478260869565217",
            "java.io.BufferedOutputStream.flushBuffer()V": "0.21739130434782608"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.023493835775762",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.7676203768318214",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.8613631076994652",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "0.8606652709932543",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.28494998836939",
            "havlak.HavlakLoopFinder.findLoops()V": "9.327750639683648",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "4.093975343103048",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "52.221446848104215",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.0467550593161201",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6513142591300303"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "7.213930348258706",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "0.912106135986733",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "17.993366500829186",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.902155887230514",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "22.71973466003317",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "0.912106135986733",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.106135986733001",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "23.051409618573796",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.3797678275290215",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.7412935323383083"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "89.375",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "9.53125",
            "List.makeList(I)LList$Element;": "0.9375",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.15625"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "10.0",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.586206896551724",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "2.7586206896551726",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "45.862068965517246",
            "deltablue.ScaleConstraint.execute()V": "1.7241379310344829",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "4.827586206896552",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "1.7241379310344829",
            "deltablue.Planner.chainTest(I)V": "1.7241379310344829",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "8.275862068965518",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "2.7586206896551726"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.0612369871402327",
            "java.lang.Long.getChars(JI[B)I": "0.0612369871402327",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.369871402327005",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.50765462339253"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.util.Objects.checkIndex(II)I": "0.11061946902654868",
            "Sieve.benchmark()Ljava/lang/Object;": "0.11061946902654868",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.11061946902654868",
            "java.io.BufferedWriter.write(Ljava/lang/String;II)V": "0.11061946902654868",
            "Sieve.sieve([ZI)I": "99.5575221238938"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "60.30219780219781",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "39.697802197802204"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.20886075949367",
            "NBody.innerBenchmarkLoop(I)Z": "0.31645569620253167",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.15822784810126583",
            "java.lang.invoke.DirectMethodHandle.shouldBeInitialized(Ljava/lang/invoke/MemberName;)Z": "0.15822784810126583",
            "sun.nio.cs.StreamEncoder.isOpen()Z": "0.15822784810126583"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.035567715458276",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.7523939808481532",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.06839945280437756",
            "Run.measure(LBenchmark;)V": "0.06839945280437756",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.488372093023256",
            "richards.Scheduler.schedule()V": "59.98632010943913",
            "Richards.benchmark()Ljava/lang/Object;": "1.2995896032831737",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.333789329685363",
            "richards.Scheduler.queuePacket(Lrichards/Packet;)Lrichards/TaskControlBlock;": "0.06839945280437756",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.8987688098495212"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.943502824858757",
            "json.JsonPureStringParser.readExponent()Z": "7.297551789077213",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "18.126177024482107",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "30.74387947269303",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.284369114877589",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "13.88888888888889",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "1.0357815442561205",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "10.875706214689265",
            "som.Vector.append(Ljava/lang/Object;)V": "7.344632768361581",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.5178907721280602"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "25.245098039215684",
            "java.lang.invoke.LambdaForm$NamedFunction.returnType()Ljava/lang/invoke/LambdaForm$BasicType;": "0.12254901960784313",
            "Permute.permute(I)V": "74.63235294117646"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.3",
            "Richards::benchmark": "4.8",
            "richards.RBObject::append": "3.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "45.2",
            "richards.TaskControlBlock::<init>": "3.4",
            "richards.Scheduler::schedule": "5.4",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.5"
        },
        "Mandelbrot.hpl": {
            "java.lang.Class::isAssignableFrom": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Run::printResult": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::pop": "0.0",
            "Mandelbrot::mandelbrot": "98.0",
            "java.io.BufferedWriter::ensureOpen": "0.0",
            "java.lang.invoke.LambdaForm$MH.0x0000000800c08400::invoke": "0.0",
            "java.lang.Thread::start0": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.7",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "List::tail": "2.0",
            "List::isShorterThan": "81.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "List$Element::setNext": "0.1",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.3",
            "json.JsonPureStringParser::read": "16.2",
            "java.lang.String::<init>": "5.5",
            "java.lang.String::length": "3.0",
            "java.util.Arrays::copyOfRange": "7.1",
            "java.lang.String::equals": "22.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "9.9",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.8"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.3",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.0",
            "havlak.HavlakLoopFinder::findLoops": "6.5",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.2",
            "havlak.HavlakLoopFinder::doDFS": "5.2",
            "som.Vector::hasSome": "2.1",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "50.2",
            "java.lang.StringConcatHelper::newArray": "0.0",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "sun.nio.cs.StreamEncoder::write": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "5.9",
            "java.lang.AbstractStringBuilder::<init>": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "55.4",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "13.7",
            "Queens::setRowColumn": "25.7",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "37.8",
            "java.util.Arrays::setAll": "33.6",
            "som.Random::next": "12.2",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.0"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.8",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.Integer::valueOf": "0.0",
            "Sieve::sieve": "85.8",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.Class$ReflectionData::<init>": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0",
            "java.util.Arrays::fill": "4.7"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "2.9",
            "deltablue.Variable::<init>": "4.1",
            "som.Vector::append": "5.1",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.6",
            "AGCT::Unknown not Java[ERR=-3]": "12.5",
            "AGCT::Unknown Java[ERR=-5]": "15.5",
            "deltablue.AbstractConstraint::satisfy": "4.3",
            "java.util.Arrays::copyOf": "3.0",
            "som.Dictionary::at": "14.7",
            "som.Vector::forEach": "6.3"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.5",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "76.1",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.2"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.4",
            "nbody.Body::getZ": "7.8",
            "nbody.Body::setVX": "29.2",
            "nbody.Body::setVY": "5.5",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "nbody.NBodySystem::advance": "40.2"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.2",
            "Towers::popDiskFrom": "21.5",
            "Towers::moveDisks": "4.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "Towers::pushDisk": "38.4",
            "Towers$TowersDisk::setNext": "17.9",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.6",
            "Towers$TowersDisk::getNext": "3.1"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.6",
            "cd.RedBlackTree::forEach": "3.6",
            "cd.RedBlackTree::put": "6.0",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "11.3",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "4.5",
            "cd.CollisionDetector::isInVoxel": "22.1",
            "cd.RedBlackTree::treeInsert": "13.2"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "4.50%",
            "deltablue.AbstractConstraint.satisfy": "2.82%",
            "vtable": "3.43%",
            "som.Vector.append": "2.10%",
            "som.Vector.forEach": "24.55%",
            "itable": "3.53%",
            "deltablue.Planner.addPropagate": "2.62%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.59%",
            "deltablue.Strength.of": "3.03%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "5.48%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.37%",
            "som.Random.next": "0.84%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.67%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.92%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.74%",
            "Bounce.lambda$benchmark$0": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.72%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.56%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.42%",
            "som.Random.next": "10.83%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.08%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.54%",
            "java.util.Arrays.setAll": "35.39%",
            "Storage.lambda$buildTreeDepth$0": "4.09%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.16%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.30%",
            "Storage.buildTreeDepth": "43.52%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "18.12%",
            "Towers.popDiskFrom": "18.39%",
            "Towers.moveDisks": "9.05%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.43%",
            "Towers.moveTopDisk": "4.66%",
            "Towers$TowersDisk.getSize": "0.41%",
            "Towers$TowersDisk.getNext": "3.50%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.17%",
            "cd.CollisionDetector.isInVoxel": "19.37%",
            "cd.RedBlackTree.forEach": "6.05%",
            "Node::set_req_X(unsigned": "4.99%",
            "cd.RedBlackTree.put": "6.51%",
            "cd.RedBlackTree.treeInsert": "12.31%",
            "cd.RedBlackTree.treeMinimum": "5.12%",
            "cd.RedBlackTree.findNode": "2.66%",
            "cd.Vector2D.compareNumbers": "3.95%",
            "cd.RedBlackTree.leftRotate": "2.09%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.46%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.94%",
            "som.Vector.hasSome": "2.15%",
            "som.Vector.append": "2.84%",
            "som.IdentitySet.lambda$contains$0": "31.88%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "9.30%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.07%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.08%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.73%",
            "havlak.HavlakLoopFinder.doDFS": "5.29%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.42%",
            "Sieve.benchmark": "7.13%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "84.52%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.48%",
            "Permute.swap": "40.42%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "I2C/C2I": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.49%",
            "nbody.Body.getZ": "8.00%",
            "nbody.Body.getY": "0.77%",
            "nbody.Body.setX": "1.58%",
            "nbody.Body.setY": "1.53%",
            "nbody.Body.setZ": "0.35%",
            "nbody.Body.setVX": "28.73%",
            "nbody.Body.setVY": "6.05%",
            "nbody.Body.getMass": "0.58%",
            "nbody.NBodySystem.advance": "40.15%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.21%",
            "Interpreter": "0.05%",
            "List.makeList": "1.04%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.36%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "81.82%",
            "List$Element.<init>": "0.22%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.00%",
            "java.lang.String.length": "3.28%",
            "java.lang.String.<init>": "5.60%",
            "json.JsonPureStringParser.readArray": "2.97%",
            "json.JsonPureStringParser.isWhiteSpace": "2.58%",
            "java.lang.String.isLatin1": "3.02%",
            "json.JsonPureStringParser.readStringInternal": "6.62%",
            "java.util.Arrays.copyOfRange": "8.06%",
            "java.lang.String.equals": "23.13%",
            "json.JsonPureStringParser.read": "15.09%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.96%",
            "Queens.getRowColumn": "57.83%",
            "Queens.setRowColumn": "23.55%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.59%",
            "Queens.placeQueen": "13.71%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.18%",
            "Richards.benchmark": "4.49%",
            "richards.Packet.<init>": "6.71%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.39%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.67%",
            "itable": "37.67%",
            "richards.TaskControlBlock.<init>": "3.22%",
            "richards.RBObject.<init>": "5.65%",
            "richards.RBObject.append": "2.74%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.05%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "4.3",
            "Towers.moveDisks": "94.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.0",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "6.1",
            "deltablue.AbstractConstraint.satisfy": "8.8",
            "deltablue.Planner.removePropagateFrom": "9.9",
            "som.Vector.<init>": "26.9",
            "deltablue.Variable.<init>": "4.9",
            "som.Vector.forEach": "7.2",
            "deltablue.Planner.addPropagate": "1.7",
            "deltablue.AbstractConstraint.<init>": "4.4",
            "deltablue.Planner.constraintsConsuming": "4.3",
            "deltablue.Planner.addConstraintsConsumingTo": "21.9"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.2",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.5",
            "havlak.HavlakLoopFinder.stepD": "3.6",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.1",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.1",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.schedule": "13.7",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.HandlerTaskDataRecord.workInAdd": "2.8",
            "richards.TaskControlBlock.runTask": "82.3",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.4",
            "Bounce.benchmark": "54.0",
            "Bounce$Ball.<init>": "45.0",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.7",
            "som.Vector.<init>": "5.8",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.6",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.7",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.2",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.1",
            "Run.reportBenchmark": "0.1",
            "Permute.swap": "0.1",
            "Permute.benchmark": "1.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.7",
            "List$Element.length": "0.1",
            "List.isShorterThan": "75.9",
            "List$Element.<init>": "20.3",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.3",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.6",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.0",
            "json.JsonValue.<init>": "4.2",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "24.7",
            "Queens.placeQueen": "74.2",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.544185927308607",
            "java.lang.String.<init>(byte[], byte) String.java": "6.424248119497849",
            "json.JsonPureStringParser.read()": "20.87880638836801",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.874197502915259",
            "java.lang.String.length() String.java": "3.3189100989693014",
            "json.JsonArray.<init>()": "1.725662393801284",
            "java.lang.String.substring(int, int) String.java": "9.392900009824316",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.83857795167291",
            "json.JsonPureStringParser.readStringInternal()": "3.775954346832513",
            "json.JsonPureStringParser.readValue()": "3.3231815405381164"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "2.5391068785309803",
            "som.Vector.forEach(ForEachInterface)": "3.3156191472042256",
            "som.Vector.hasSome(TestInterface)": "2.296446794570591",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.048854092903517",
            "havlak.HavlakLoopFinder.findLoops()": "11.563856001094178",
            "som.Vector.<init>(int)": "2.4199828373140617",
            "som.Vector.append(Object)": "4.213461457857665",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.42319256842463",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.312731492205097",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.025516810828826"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.043064326743039",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.11107232395036652",
            "Queens.getRowColumn(int, int)": "64.83450223731396",
            "Queens.queens()": "0.6346989940020945",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.38081939640125667",
            "Queens.setRowColumn(int, int, boolean)": "20.072355685316236",
            "java.lang.ThreadLocal$ThreadLocalMap.<init>(ThreadLocal, Object) ThreadLocal.java": "0.19040969820062834",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.19040969820062834",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.19040969820062834",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.11107232395036652"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.4566513736030138",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.5675082164788",
            "richards.Scheduler$$Lambda$18.0x00000008000c7b98.apply(Packet, RBObject)": "4.000103514693541",
            "richards.Scheduler$$Lambda$16.0x00000008000c7970.apply(Packet, RBObject)": "3.6378020872998564",
            "richards.Scheduler.findTask(int)": "1.5157508697082736",
            "richards.TaskControlBlock.runTask()": "39.39103784571135",
            "richards.Scheduler.schedule()": "2.4732617849630123",
            "richards.RBObject.append(Packet, Packet)": "3.3753184001064724",
            "Richards.benchmark()": "26.074611912323054",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.5416295430935367"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.42903628421146467",
            "Storage$$Lambda$12.0x00000008000c2a98.<init>(Storage, int, Random)": "0.10586609610412766",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.6381385397165018",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.2173040920032094",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.32415084247125",
            "som.Random.next()": "13.640010698047606",
            "javax.management.openmbean.CompositeType.keySet() CompositeType.java": "0.14486939466880627",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.07243469733440314",
            "Storage.buildTreeDepth(int, Random)": "38.418249086208434",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.68565570116787"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "31.489217840670353",
            "Towers.popDiskFrom(int)": "29.110622781386585",
            "Towers.moveDisks(int, int, int)": "10.963270628576947",
            "Towers$TowersDisk.getSize()": "1.400594045060491",
            "java.lang.String.indexOf(int, int) String.java": "0.4708893772186134",
            "jdk.internal.org.objectweb.asm.ByteVector.<init>(int) ByteVector.java": "0.09659269276279249",
            "Towers.moveTopDisk(int, int)": "8.174156625051314",
            "Benchmark.innerBenchmarkLoop(int)": "0.10866677935814156",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.062833546642196",
            "java.lang.invoke.MemberName.<init>(Class, String, MethodType, byte) MemberName.java": "0.07244451957209437"
        },
        "YourKit_Permute.txt": {
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.10263193905943528",
            "Permute.permute(int)": "57.34844683665556",
            "jdk.internal.org.objectweb.asm.Frame.push(int) Frame.java": "0.10263193905943528",
            "com.yourkit.probes.ResourceRegistry.<init>(Class, ResourceRegistry, String, String) a": "0.27368517082516075",
            "com.yourkit.probes.Table.createRow() a": "0.10263193905943528",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.17105323176572548",
            "Permute.benchmark()": "0.10263193905943528",
            "Run.printResult(long)": "0.00114035487843817",
            "Permute.swap(int, int)": "41.69137435569949",
            "java.lang.String.getBytes(byte[], int, byte) String.java": "0.10263193905943528"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.717724467693817",
            "som.Vector.forEach(ForEachInterface)": "42.72753279659979",
            "deltablue.EqualityConstraint.execute()": "5.33327884261719",
            "deltablue.BinaryConstraint.isSatisfied()": "2.7381584862479063",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "5.292410805509013",
            "som.Vector.<init>(int)": "4.250275859250481",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "3.4329151170869263",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "3.0446687645592387",
            "som.Vector.append(Object)": "2.7790265233560834",
            "deltablue.Plan$$Lambda$23.0x00000008000ccd88.apply(Object)": "2.4520822264906617"
        },
        "YourKit_List.txt": {
            "List.benchmark()": "0.11993443584173984",
            "List.tail(List$Element, List$Element, List$Element)": "4.330965738729494",
            "List.makeList(int)": "1.0660838741487986",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11993443584173984",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.11993443584173984",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.21321677482975973",
            "List$Element.setNext(List$Element)": "0.23986887168347967",
            "List$Element.getNext()": "22.92080329419917",
            "List.isShorterThan(List$Element, List$Element)": "70.32155754854013",
            "java.lang.Integer.valueOf(int) Integer.java": "0.2265428232566197"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0705108205462746",
            "nbody.Body.getZ()": "5.743540289871515",
            "nbody.Body.getMass()": "0.4112658479167257",
            "nbody.Body.getVZ()": "0.4112658479167257",
            "nbody.NBodySystem.advance(double)": "43.25382193606943",
            "nbody.Body.setVY(double)": "6.268258785489405",
            "nbody.Body.setVZ(double)": "9.246390787645007",
            "nbody.Body.getVX()": "0.7090790481322857",
            "nbody.Body.setVX(double)": "28.604248801656407",
            "nbody.Body.setY(double)": "1.2621607056754687"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.57729098658358",
            "Run.runBenchmark()": "8.751739408207381E-4",
            "java.util.WeakHashMap.hash(Object) WeakHashMap.java": "0.0875173940820738",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.01750347881641476",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.1400278305313181",
            "java.util.ArrayList.clear() ArrayList.java": "0.07001391526565905",
            "java.io.RandomAccessFile.open(String, int) RandomAccessFile.java": "0.03500695763282952",
            "java.lang.ThreadLocal.createMap(Thread, Object) ThreadLocal.java": "0.06126217585745166",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "8.751739408207381E-4",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.00875173940820738"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.7411409317996984",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.446845590798187",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.553231865535805",
            "cd.RedBlackTree.findNode(Comparable)": "6.699972890283103",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "9.9299020177375",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.130049184772085",
            "cd.RedBlackTree.put(Comparable, Object)": "6.74644669067813",
            "cd.Vector2D.compareNumbers(double, double)": "8.868750242051043",
            "cd.Vector2D.plus(Vector2D)": "1.5413810464350723",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.329809070136711"
        },
        "YourKit_Sieve.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.09252215391574314",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.17476406850751483",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.09252215391574314",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.6345580525114625",
            "Benchmark.innerBenchmarkLoop(int)": "0.09252215391574314",
            "Sieve.benchmark()": "91.68945453050145",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.20560478647942923",
            "java.util.AbstractCollection.containsAll(Collection) AbstractCollection.java": "0.24672574377531506",
            "Sieve.sieve(boolean[], int)": "5.4896477990007595",
            "java.nio.ByteBuffer.flip() ByteBuffer.java": "0.09252215391574314"
        },
        "YourKit_Bounce.txt": {
            "java.lang.invoke.InvokerBytecodeGenerator.loadMethod(byte[]) InvokerBytecodeGenerator.java": "0.17869907076483196",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.23826542768644265",
            "java.io.OutputStreamWriter.write(char[], int, int) OutputStreamWriter.java": "0.17869907076483196",
            "java.lang.AbstractStringBuilder.<init>(int) AbstractStringBuilder.java": "0.575808116908903",
            "Bounce.benchmark()": "60.42014137082041",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.3573981415296639",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5956635692161065",
            "com.yourkit.probes.Table.createRow() a": "0.17869907076483196",
            "Bounce$Ball.bounce()": "36.45461043602572",
            "Bounce$Ball.<init>(Random)": "0.3573981415296639"
        }
    },
    "Runtimes": {
        "NBody.data": 22.256500000000003,
        "YourKit_Storage.txt": 62.367000000000004,
        "rebench_test_Async_Bounce.txt": 65.718,
        "Permute_not_profiled_": 29.573,
        "JavaFlightRecorder_Sieve.jfr": 30.551,
        "CD_not_profiled_": 41.248999999999995,
        "JProfiler_NBody.txt": 21.256,
        "JProfiler_List.txt": 29.217,
        "YourKit_Mandelbrot.txt": 37.464,
        "CD.data": 43.9525,
        "Json_not_profiled_": 81.452,
        "List.data": 23.301499999999997,
        "Queens_not_profiled_": 22.0745,
        "Towers.hpl": 25.963,
        "Bounce.hpl": 26.173,
        "JavaFlightRecorder_Json.jfr": 81.65100000000001,
        "Sieve.data": 34.114,
        "Richards.hpl": 92.2535,
        "YourKit_Richards.txt": 91.1985,
        "JavaFlightRecorder_Havlak.jfr": 153.79149999999998,
        "JavaFlightRecorder_CD.jfr": 42.1915,
        "JavaFlightRecorder_Towers.jfr": 25.657,
        "rebench_test_Async_CD.txt": 135.971,
        "List_not_profiled_": 22.582,
        "Havlak_not_profiled_": 154.0775,
        "JProfiler_Json.txt": 1029.7759999999998,
        "rebench_test_Async_NBody.txt": 57.4835,
        "JavaFlightRecorder_Bounce.jfr": 15.1115,
        "Havlak.data": 156.39100000000002,
        "Towers_not_profiled_": 25.964,
        "YourKit_DeltaBlue.txt": 12.5455,
        "rebench_test_Async_Towers.txt": 73.455,
        "YourKit_NBody.txt": 23.3925,
        "JavaFlightRecorder_NBody.jfr": 21.111,
        "rebench_test_Async_Sieve.txt": 83.8615,
        "Storage.hpl": 60.7225,
        "JProfiler_Queens.txt": 26.688499999999998,
        "rebench_test_Async_List.txt": 65.792,
        "rebench_test_Async_Richards.txt": 248.2375,
        "YourKit_Towers.txt": 27.519,
        "JProfiler_Havlak.txt": 1915.4105,
        "JavaFlightRecorder_List.jfr": 22.250999999999998,
        "YourKit_Permute.txt": 29.4215,
        "Queens.data": 21.644,
        "Storage_not_profiled_": 62.043000000000006,
        "Json.hpl": 79.4195,
        "Towers.data": 27.112499999999997,
        "YourKit_List.txt": 24.766,
        "JProfiler_CD.txt": 475.0285,
        "JProfiler_Permute.txt": 29.6785,
        "Sieve.hpl": 31.752000000000002,
        "DeltaBlue_not_profiled_": 14.8405,
        "CD.hpl": 41.3325,
        "JavaFlightRecorder_Queens.jfr": 21.791,
        "JProfiler_Bounce.txt": 44.352000000000004,
        "Permute.hpl": 29.638,
        "Richards_not_profiled_": 90.098,
        "DeltaBlue.hpl": 12.06,
        "NBody.hpl": 21.432499999999997,
        "JProfiler_Towers.txt": 27.735999999999997,
        "JProfiler_Mandelbrot.txt": 38.3965,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.7285,
        "rebench_test_Async_Mandelbrot.txt": 108.6935,
        "YourKit_CD.txt": 43.158,
        "rebench_test_Async_Permute.txt": 78.34100000000001,
        "Mandelbrot.data": 39.54,
        "JProfiler_Storage.txt": 1040.2440000000001,
        "YourKit_Sieve.txt": 30.336,
        "JavaFlightRecorder_Permute.jfr": 29.454,
        "YourKit_Bounce.txt": 14.266,
        "JProfiler_Sieve.txt": 29.775,
        "JProfiler_DeltaBlue.txt": 96.187,
        "YourKit_Queens.txt": 20.433,
        "Mandelbrot.hpl": 37.8875,
        "JavaFlightRecorder_Storage.jfr": 58.446,
        "List.hpl": 22.601,
        "Mandelbrot_not_profiled_": 37.51,
        "Queens.hpl": 21.028,
        "Storage.data": 64.7305,
        "JavaFlightRecorder_Richards.jfr": 91.542,
        "Bounce.data": 27.467,
        "Permute.data": 31.1725,
        "YourKit_Json.txt": 79.35749999999999,
        "rebench_test_Async_DeltaBlue.txt": 41.054500000000004,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.712,
        "YourKit_Havlak.txt": 154.62599999999998,
        "DeltaBlue.data": 12.187000000000001,
        "JProfiler_Richards.txt": 91.88,
        "rebench_test_Async_Storage.txt": 153.394,
        "Sieve_not_profiled_": 31.4645,
        "Havlak.hpl": 152.964,
        "Richards.data": 94.735,
        "rebench_test_Async_Havlak.txt": 463.20849999999996,
        "Bounce_not_profiled_": 25.97,
        "NBody_not_profiled_": 21.048499999999997,
        "Json.data": 83.5835,
        "rebench_test_Async_Json.txt": 254.04250000000002,
        "rebench_test_Async_Queens.txt": 56.1405
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.42%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.30%",
            "[.] void nbody.NBodySystem.advance(double)": "0.11%",
            "0xffffffffb4c063aa": "0.09%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.43%",
            "0xffffffffb4c0634b": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.13%",
            "[.] void Permute.permute(int)": "97.18%",
            "0xffffffffb4c063aa": "0.10%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.32%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.82%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.93%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.02%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.40%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "9.05%",
            "[.] void deltablue.StayConstraint.<init>(deltablue.Variable, deltablue.Strength$Sym, deltablue.Planner)": "3.41%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "7.00%",
            "[.] vtable chunks": "6.33%",
            "[.] void deltablue.Planner.chainTest(int)": "24.37%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.50%",
            "[.] Interpreter": "0.61%",
            "0xffffffffb51c12b7": "0.26%",
            "[.] boolean Queens.placeQueen(int)": "0.10%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.13%",
            "[.] Interpreter": "0.42%",
            "[.] void Towers.moveDisks(int, int, int)": "0.11%",
            "[.] java.lang.Object Towers.benchmark()": "0.08%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.40%",
            "[.] boolean richards.Scheduler.start()": "22.12%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.97%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.86%",
            "[.] void richards.Scheduler.schedule()": "7.71%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.57%",
            "[.] Interpreter": "0.23%",
            "0xffffffffb51c12b7": "0.20%",
            "SpinPause": "0.06%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.30%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.11%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "10.30%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.49%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.09%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.80%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.27%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.13%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.79%",
            "[.] Interpreter": "0.47%",
            "[.] java.lang.Object List.benchmark()": "0.41%",
            "0xffffffffb51c12b7": "0.14%",
            "[.] List$Element List.makeList(int)": "0.70%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.39%",
            "0xffffffffb51c12b7": "0.21%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "84.69%",
            "[.] java.lang.Object Sieve.benchmark()": "5.88%",
            "[.] int Sieve.sieve(boolean[], int)": "5.84%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.47%",
            "0xffffffffb51c12b7": "0.18%",
            "0xffffffffb4c0634b": "0.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "72.55%",
            "[.] java.lang.Object Bounce.benchmark()": "23.82%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.03%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.52%",
            "[.] StubRoutines (2)": "8.40%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.65%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.01%"
        }
    }
}