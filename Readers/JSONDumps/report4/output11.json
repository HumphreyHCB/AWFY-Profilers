{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.nio.ByteBuffer.flip()Ljava/nio/ByteBuffer;": "0.088261253309797",
            "Mandelbrot.mandelbrot(I)I": "99.82347749338041",
            "jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(ILjdk/internal/org/objectweb/asm/AnnotationVisitor;)V": "0.088261253309797"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.49916805324459235",
            " ": "0",
            "Queens.placeQueen(I)Z": "83.86023294509151",
            "Queens.getRowColumn(II)Z": "13.810316139767053",
            "java.util.Arrays.fill([ZZ)V": "0.9983361064891847",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.16638935108153077",
            "Queens.queens()Z": "0.6655574043261231"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "95.34883720930233",
            "Bounce$Ball.bounce()Z": "0.14534883720930233",
            "Bounce.benchmark()Ljava/lang/Object;": "4.5058139534883725"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.9622154423844168",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.42243604787608546",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.9662051161699132",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "0.30509270124383947",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "31.401079558789018",
            "havlak.HavlakLoopFinder.findLoops()V": "3.4733630603144805",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.60502229523586",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "51.41985449425018",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "1.3142454822811547",
            "som.Vector.append(Ljava/lang/Object;)V": "3.4733630603144805"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "7.864238410596027",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.2417218543046358",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.149006622516557",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "0.7450331125827815",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.8145695364238414",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "26.572847682119207",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "14.321192052980134",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "19.867549668874172",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "6.7052980132450335",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.6556291390728477"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "90.78341013824885",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "8.294930875576037",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15360983102918588",
            "List.makeList(I)LList$Element;": "0.7680491551459294"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "7.817589576547231",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.817589576547231",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "1.3029315960912051",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.6058631921824102",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "48.20846905537459",
            "deltablue.ScaleConstraint.execute()V": "1.9543973941368078",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "1.9543973941368078",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "1.3029315960912051",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "8.794788273615634",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "6.514657980456025"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "jdk.internal.misc.VM.isSystemDomainLoader(Ljava/lang/ClassLoader;)Z": "0.06042296072507553",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.06042296072507553",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "99.81873111782478",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.06042296072507553"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.10706638115631692",
            "Sieve.sieve([ZI)I": "99.67880085653105",
            "java.lang.invoke.LambdaForm$MH+0x0000000800c0e400.589835301.linkToTargetMethod(Ljava/lang/Object;JLjava/lang/Object;)Ljava/lang/Object;": "0.10706638115631692",
            "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Ljava/lang/Class;)Ljava/lang/String;": "0.10706638115631692"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "55.630026809651476",
            "Towers.benchmark()Ljava/lang/Object;": "0.4021447721179625",
            "jdk.internal.org.objectweb.asm.ClassWriter.<init>(Ljdk/internal/org/objectweb/asm/ClassReader;I)V": "0.13404825737265416",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "43.83378016085791"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.68203497615262",
            "NBody.innerBenchmarkLoop(I)Z": "0.1589825119236884",
            "java.util.ImmutableCollections$ListN.get(I)Ljava/lang/Object;": "0.1589825119236884"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.817073170731708",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.6097560975609756",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "2.9878048780487805",
            "java.lang.invoke.InvokerBytecodeGenerator.lookupPregenerated(Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.06097560975609756",
            "java.lang.invoke.LambdaForm$MH+0x0000000800c12400.1172131546.linkToTargetMethod(Ljava/lang/Object;JLjava/lang/Object;)Ljava/lang/Object;": "0.06097560975609756",
            "richards.Scheduler.schedule()V": "60.0609756097561",
            "Richards.benchmark()Ljava/lang/Object;": "1.0975609756097562",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12195121951219512",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "25.975609756097562",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.085365853658536"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.111531190926276",
            "json.JsonPureStringParser.readExponent()Z": "8.88468809073724",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "18.28922495274102",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "30.340264650283554",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.111531190926276",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "21.550094517958414",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "6.805293005671078",
            "java.lang.StringLatin1.hashCode([B)I": "0.7088846880907372",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "2.9300567107750473",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "0.8979206049149339"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.11976047904191617",
            "Permute.swap(II)V": "27.305389221556887",
            "Permute.permute(I)V": "72.33532934131736",
            "Permute.benchmark()Ljava/lang/Object;": "0.23952095808383234"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "44.9",
            "richards.HandlerTaskDataRecord::workInAdd": "3.9",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.6",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.9"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.BoundMethodHandle$SpeciesData::<clinit>": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.io.RandomAccessFile::<init>": "0.0",
            "java.lang.invoke.LambdaForm$Name::<init>": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.Class::getDeclaredMethods0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "java.lang.invoke.MemberName::isInvocable": "0.0",
            "Mandelbrot::mandelbrot": "98.3"
        },
        "List.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "List$Element::getNext": "8.8",
            "List::makeList": "1.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "List::tail": "1.8",
            "List::isShorterThan": "80.8",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.3",
            "json.JsonPureStringParser::read": "15.7",
            "java.lang.String::<init>": "4.3",
            "java.lang.String::length": "3.0",
            "java.util.Arrays::copyOfRange": "7.6",
            "java.lang.String::equals": "21.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "10.6",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "8.7"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.6",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.2",
            "havlak.HavlakLoopFinder::findLoops": "5.5",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "5.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.6",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "7.7",
            "havlak.HavlakLoopFinder::doDFS": "5.0",
            "som.Vector::<init>": "2.3",
            "som.Vector::forEach": "1.8"
        },
        "Permute.hpl": {
            "Permute::swap": "40.5",
            "Permute::permute": "51.3",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::putMethodInfo": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.AbstractStringBuilder::putStringAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "AGCT::Unknown Java[ERR=-5]": "6.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "67.6",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "8.2",
            "Queens::setRowColumn": "18.0",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.5",
            "java.util.Arrays::setAll": "34.1",
            "som.Random::next": "12.5",
            "AGCT::Unknown not Java[ERR=-3]": "5.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.4",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.6",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "0.9"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Sieve::benchmark": "6.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "sun.invoke.util.Wrapper::findPrimitiveType": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "86.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "4.8"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.7",
            "som.Vector::append": "6.1",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "5.0",
            "AGCT::Unknown not Java[ERR=-3]": "12.0",
            "AGCT::Unknown Java[ERR=-5]": "15.8",
            "deltablue.AbstractConstraint::satisfy": "3.7",
            "deltablue.AbstractConstraint::<init>": "2.9",
            "som.Vector::<init>": "6.9",
            "deltablue.StayConstraint::<init>": "11.8",
            "som.Vector::forEach": "7.5"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.6",
            "Bounce$Ball::bounce": "75.5",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "som.Random::next": "1.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.5"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.6",
            "nbody.Body::setVZ": "8.1",
            "nbody.Body::getZ": "8.2",
            "nbody.Body::setVX": "28.0",
            "nbody.Body::setVY": "6.1",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "nbody.NBodySystem::advance": "40.0"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Towers::popDiskFrom": "22.4",
            "Towers::moveDisks": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "Towers::pushDisk": "39.2",
            "Towers$TowersDisk::setNext": "17.6",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "Towers::moveTopDisk": "5.1",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "13.9",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "6.6",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "10.7",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.5",
            "cd.CollisionDetector::isInVoxel": "21.7",
            "cd.RedBlackTree::treeInsert": "13.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "som.Dictionary.getBucket": "3.81%",
            "deltablue.AbstractConstraint.satisfy": "3.03%",
            "deltablue.UnaryConstraint.<init>": "10.67%",
            "som.Vector.append": "7.81%",
            "vtable": "1.88%",
            "som.Vector.forEach": "6.67%",
            "itable": "4.94%",
            "deltablue.Planner.addPropagate": "3.07%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "3.05%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.22%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "75.72%",
            "som.Random.next": "0.89%",
            "Interpreter": "0.04%",
            "java.util.Arrays.setAll": "0.65%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.03%",
            "Bounce.benchmark": "17.75%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.70%",
            "Bounce.lambda$benchmark$0": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.02%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.65%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "Monitor::wait_without_safepoint_check(long)": "0.01%",
            "__tls_get_addr": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.53%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.42%",
            "som.Random.next": "11.40%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.20%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.51%",
            "java.util.Arrays.setAll": "35.11%",
            "Storage.lambda$buildTreeDepth$0": "3.86%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.16%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.32%",
            "Storage.buildTreeDepth": "43.40%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.75%",
            "Towers.popDiskFrom": "18.69%",
            "Towers.moveDisks": "8.83%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.39%",
            "Towers.moveTopDisk": "4.93%",
            "Towers$TowersDisk.getSize": "0.38%",
            "Towers$TowersDisk.getNext": "3.88%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.19%",
            "cd.CollisionDetector.isInVoxel": "19.48%",
            "cd.RedBlackTree.forEach": "6.08%",
            "Node::set_req_X(unsigned": "3.43%",
            "cd.RedBlackTree.put": "6.96%",
            "cd.RedBlackTree.treeInsert": "12.78%",
            "cd.RedBlackTree.treeMinimum": "4.96%",
            "cd.RedBlackTree.findNode": "2.84%",
            "cd.Vector2D.compareNumbers": "3.81%",
            "cd.RedBlackTree.leftRotate": "2.20%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.60%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.29%",
            "som.Vector.hasSome": "2.28%",
            "som.Vector.append": "2.53%",
            "som.IdentitySet.lambda$contains$0": "32.15%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.64%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.02%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.11%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.69%",
            "havlak.HavlakLoopFinder.doDFS": "5.21%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.19%",
            "Sieve.benchmark": "5.90%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "86.31%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.41%",
            "Permute.swap": "40.57%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.41%",
            "nbody.Body.getZ": "7.82%",
            "nbody.Body.getY": "0.82%",
            "nbody.Body.setX": "1.75%",
            "nbody.Body.setY": "1.60%",
            "nbody.Body.setZ": "0.35%",
            "nbody.Body.setVX": "28.55%",
            "nbody.Body.setVY": "5.80%",
            "nbody.Body.getMass": "0.63%",
            "nbody.NBodySystem.advance": "40.70%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.22%",
            "Interpreter": "0.05%",
            "List.makeList": "1.06%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.41%",
            "List$Element.length": "0.13%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.61%",
            "List$Element.<init>": "0.22%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.28%",
            "java.lang.String.length": "3.07%",
            "java.lang.String.<init>": "6.46%",
            "json.JsonPureStringParser.isWhiteSpace": "2.17%",
            "java.lang.String.isLatin1": "2.91%",
            "json.JsonPureStringParser.readStringInternal": "7.91%",
            "java.util.Arrays.copyOfRange": "7.59%",
            "java.lang.String.equals": "21.89%",
            "json.JsonPureStringParser.read": "14.52%",
            "json.JsonPureStringParser.readValue": "2.17%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.08%",
            "Queens.getRowColumn": "55.97%",
            "Queens.setRowColumn": "23.83%",
            "Interpreter": "0.06%",
            "resource_allocate_bytes(unsigned": "0.03%",
            "Queens.queens": "0.61%",
            "Queens.placeQueen": "14.73%",
            "__tls_get_addr": "0.05%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.01%",
            "Richards.benchmark": "4.71%",
            "richards.Packet.<init>": "6.90%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.25%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.72%",
            "itable": "37.54%",
            "richards.TaskControlBlock.<init>": "3.16%",
            "richards.RBObject.<init>": "5.65%",
            "richards.RBObject.append": "2.66%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.04%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.4",
            "Towers.moveDisks": "95.5",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "7.4",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "91.6",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.5",
            "deltablue.AbstractConstraint.satisfy": "10.1",
            "deltablue.Planner.removePropagateFrom": "9.6",
            "som.Vector.<init>": "26.5",
            "deltablue.Variable.<init>": "5.2",
            "som.Vector.forEach": "7.1",
            "deltablue.Planner.addPropagate": "2.0",
            "deltablue.Planner.constraintsConsuming": "4.2",
            "deltablue.AbstractConstraint.<init>": "4.1",
            "deltablue.Planner.addConstraintsConsumingTo": "23.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.4",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.3",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.6",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.8",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.schedule": "16.2",
            "richards.Scheduler.createWorker": "0.0",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.Scheduler.createIdler": "0.0",
            "richards.TaskControlBlock.runTask": "82.5",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "som.Random.<init>": "0.6",
            "java.lang.Math.abs": "0.0",
            "Bounce.benchmark": "54.5",
            "Bounce$Ball.<init>": "44.0",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "7.7",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "2.0",
            "cd.RedBlackTree.<init>": "1.4",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "15.2",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.5"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.3",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.5",
            "Run.printTotal": "0.1",
            "List$Element.length": "0.1",
            "List.isShorterThan": "76.5",
            "List$Element.<init>": "19.9",
            "Run.printResult": "0.2"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "som.Random.<init>": "0.0",
            "Harness.processArguments": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.1",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "20.9",
            "Queens.placeQueen": "78.3",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.427009014578296",
            "json.JsonPureStringParser.readChar(String)": "2.1933074483535373",
            "java.lang.String.<init>(byte[], byte) String.java": "7.270094379967228",
            "json.JsonPureStringParser.read()": "19.388329741333685",
            "java.lang.String.length() String.java": "3.789594915591537",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.416986700427229",
            "java.lang.String.substring(int, int) String.java": "9.924927913012919",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.668840214588459",
            "json.JsonPureStringParser.readStringInternal()": "4.022475050069229",
            "json.JsonPureStringParser.readValue()": "1.871509444347999"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.5489928967597555",
            "som.Vector.hasSome(TestInterface)": "1.9040752961157754",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.687899723124012",
            "havlak.HavlakLoopFinder.findLoops()": "11.787132785478608",
            "som.Vector.<init>(int)": "2.9700036268100884",
            "som.Vector.append(Object)": "4.67946960113935",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.373039532229959",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.825426592479236",
            "som.Vector.removeAll()": "2.5675161658425263",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.190283687315905"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "11.524875770819614",
            "jdk.internal.org.objectweb.asm.AnnotationWriter.putAnnotations(SymbolTable, AnnotationWriter, AnnotationWriter, AnnotationWriter, AnnotationWriter, ByteVector) AnnotationWriter.java": "0.08980422678560737",
            "Queens.getRowColumn(int, int)": "66.69460575944441",
            "Queens.queens()": "0.583727474106448",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.2843800514877567",
            "Queens.setRowColumn(int, int, boolean)": "19.51745195473867",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c6800.invoke(Object, long) LambdaForm$MH": "0.13470634017841107",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.6136622163683171",
            "com.yourkit.probes.ResourceRegistry.getOrCreate(Object) a": "0.13470634017841107",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.2843800514877567"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.9130980306584475",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9675231393086394",
            "richards.Scheduler.findTask(int)": "1.5129198261596932",
            "richards.TaskControlBlock.runTask()": "38.3976142418126",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.4840797919735245",
            "richards.Scheduler.schedule()": "2.7567144909352104",
            "richards.RBObject.append(Packet, Packet)": "3.6513738112123364",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.5168112305202484",
            "Richards.benchmark()": "27.407124543123672",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.869328823668467"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.21843122692820166",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.08191171009807563",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.6054695179222824",
            "java.util.HashMap.tableSizeFor(int) HashMap.java": "0.08191171009807563",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.26757825298704707",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.994080513750255",
            "som.Random.next()": "15.120901684104762",
            "sun.invoke.util.BytecodeDescriptor.unparseMethod(Class, Class[]) BytecodeDescriptor.java": "0.08737249077128068",
            "Storage.buildTreeDepth(int, Random)": "38.078023634258756",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.997968589589568"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "35.16723784255199",
            "Towers.popDiskFrom(int)": "30.745230988441364",
            "Towers.moveDisks(int, int, int)": "9.507314736337841",
            "java.util.zip.ZipFile$CleanableResource.getInflater() ZipFile.java": "0.24566704745059023",
            "Towers$TowersDisk.getSize()": "1.5477023989387182",
            "Towers.moveTopDisk(int, int)": "7.849062166046357",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "14.285538809251822",
            "com.yourkit.probes.Table.createRow() a": "0.12283352372529512",
            "Towers.benchmark()": "0.11055017135276558",
            "java.util.Arrays$ArrayList.iterator() Arrays.java": "0.1474002284703541"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.org.objectweb.asm.ByteVector.enlarge(int) ByteVector.java": "0.05728623640884041",
            "java.util.zip.ZipFile$Source.isMetaName(byte[], int, int) ZipFile.java": "0.17185870922652124",
            "jdk.internal.loader.BuiltinClassLoader.getPermissions(CodeSource) BuiltinClassLoader.java": "0.09165797825414465",
            "jdk.internal.org.objectweb.asm.MethodWriter.computeAllFrames() MethodWriter.java": "0.1947732037900574",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.1260297200994489",
            "Benchmark.innerBenchmarkLoop(int)": "0.11457247281768082",
            "Permute.permute(int)": "52.176304121171846",
            "com.yourkit.probes.Table.createRow() a": "0.21768769835359358",
            "Permute.benchmark()": "0.5728623640884041",
            "Permute.swap(int, int)": "46.22999278193421"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.52723234566655",
            "som.Vector.forEach(ForEachInterface)": "38.46347988491243",
            "deltablue.EqualityConstraint.execute()": "2.7005199131795474",
            "deltablue.BinaryConstraint.getOutput()": "2.7257584170410385",
            "som.Vector.<init>(int)": "5.6786633688354975",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "3.634344556054718",
            "deltablue.ScaleConstraint.execute()": "2.2462268436727078",
            "deltablue.BinaryConstraint.chooseMethod(int)": "2.271465347534199",
            "som.Vector.append(Object)": "3.154812982686387",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.9024279440714764"
        },
        "YourKit_List.txt": {
            "jdk.internal.org.objectweb.asm.MethodWriter.putMethodInfo(ByteVector) MethodWriter.java": "0.21224381508257606",
            "List.tail(List$Element, List$Element, List$Element)": "4.36426344763547",
            "List.makeList(int)": "1.4061152749220664",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.15918286131193207",
            "com.yourkit.probes.builtin.Processes.processWriteEnterImpl(FileOutputStream, int) a": "0.11938714598394905",
            "java.lang.Math.min(int, int) Math.java": "0.11938714598394905",
            "List$Element.setNext(List$Element)": "0.11938714598394905",
            "List$Element.getNext()": "20.99887245473237",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.34489619950918615",
            "List.isShorterThan(List$Element, List$Element)": "71.96391855143595"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.8772010588099897",
            "nbody.Body.getZ()": "4.430889630567384",
            "nbody.Body.getX()": "0.561054206467948",
            "nbody.NBodySystem.createBodies()": "1.0214063758775462",
            "nbody.Body.setZ(double)": "0.7049142594084474",
            "nbody.NBodySystem.advance(double)": "44.55345839567269",
            "nbody.Body.setVY(double)": "8.47335711819542",
            "nbody.Body.setVZ(double)": "8.890551271722869",
            "nbody.Body.setVX(double)": "25.37691333870411",
            "nbody.Body.setY(double)": "1.2803544711704453"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.36617740009831",
            "java.lang.invoke.MethodHandleNatives.refKindHasReceiver(byte) MethodHandleNatives.java": "0.1053444764379521",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.017557412739658683",
            "Run.runBenchmark()": "8.778706369829343E-4",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.11412318280778144",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.017557412739658683",
            "sun.nio.fs.UnixNativeDispatcher.<clinit>() UnixNativeDispatcher.java": "0.0",
            "java.io.PrintStream.writeln(String) PrintStream.java": "8.778706369829343E-4",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.2984760165741976",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.07900835732846406"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.666396511134267",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "20.948631855196634",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "17.066110918142876",
            "cd.RedBlackTree.findNode(Comparable)": "7.355949210759909",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.073791053992514",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.5008683570684265",
            "cd.RedBlackTree$Node.successor()": "2.3619312261201806",
            "cd.RedBlackTree.put(Comparable, Object)": "7.518042530199528",
            "cd.Vector2D.compareNumbers(double, double)": "9.702442977885841",
            "cd.RedBlackTree.forEach(ForEachInterface)": "2.832773725444792"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.11735210967088068",
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.12802048327732438",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "4.246012695364592",
            "jdk.internal.org.objectweb.asm.SymbolTable.hash(int, String, String, String) SymbolTable.java": "0.06401024163866219",
            "Sieve.benchmark()": "87.66202592414787",
            "com.yourkit.probes.Table.closeRow(int, Throwable) a": "0.09601536245799328",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.14935723049021177",
            "com.yourkit.probes.Table.createRow() a": "0.09601536245799328",
            "Sieve.sieve(boolean[], int)": "7.12647356910439",
            "Run.printResult(long)": "0.09601536245799328"
        },
        "YourKit_Bounce.txt": {
            "java.lang.invoke.MethodType.checkPtypes(Class[]) MethodType.java": "0.19943758600745898",
            "jdk.internal.misc.Unsafe.ensureClassInitialized(Class) Unsafe.java": "0.21938134460820485",
            "Bounce.benchmark()": "68.44697951775991",
            "Benchmark.innerBenchmarkLoop(int)": "0.17949382740671305",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.378931413414172",
            "java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(Class, Object) InvokerBytecodeGenerator.java": "0.07977503440298359",
            "som.Random.next()": "0.17949382740671305",
            "java.lang.Object.clone() Object.java (native)": "0.15955006880596717",
            "Bounce$Ball.bounce()": "29.397100177499446",
            "Bounce$Ball.<init>(Random)": "0.757862826828344"
        }
    },
    "Runtimes": {
        "NBody.data": 22.121,
        "YourKit_Storage.txt": 61.6365,
        "rebench_test_Async_Bounce.txt": 65.70949999999999,
        "Permute_not_profiled_": 29.58,
        "JavaFlightRecorder_Sieve.jfr": 30.957,
        "CD_not_profiled_": 41.837500000000006,
        "JProfiler_NBody.txt": 21.51,
        "JProfiler_List.txt": 28.69,
        "YourKit_Mandelbrot.txt": 37.727999999999994,
        "CD.data": 45.2965,
        "Json_not_profiled_": 78.0265,
        "List.data": 23.4205,
        "Queens_not_profiled_": 21.615499999999997,
        "Towers.hpl": 25.8035,
        "Bounce.hpl": 25.845,
        "JavaFlightRecorder_Json.jfr": 81.1095,
        "Sieve.data": 31.768,
        "Richards.hpl": 91.40700000000001,
        "YourKit_Richards.txt": 92.47,
        "JavaFlightRecorder_Havlak.jfr": 151.933,
        "JavaFlightRecorder_CD.jfr": 42.0125,
        "JavaFlightRecorder_Towers.jfr": 26.005000000000003,
        "rebench_test_Async_CD.txt": 134.4275,
        "List_not_profiled_": 22.317,
        "Havlak_not_profiled_": 151.5325,
        "JProfiler_Json.txt": 1024.4535,
        "rebench_test_Async_NBody.txt": 56.0805,
        "JavaFlightRecorder_Bounce.jfr": 25.8965,
        "Havlak.data": 160.86700000000002,
        "Towers_not_profiled_": 25.988999999999997,
        "YourKit_DeltaBlue.txt": 12.0515,
        "rebench_test_Async_Towers.txt": 72.8505,
        "YourKit_NBody.txt": 23.3485,
        "JavaFlightRecorder_NBody.jfr": 21.1905,
        "rebench_test_Async_Sieve.txt": 80.458,
        "Storage.hpl": 60.89,
        "JProfiler_Queens.txt": 26.996499999999997,
        "rebench_test_Async_List.txt": 66.28550000000001,
        "rebench_test_Async_Richards.txt": 247.425,
        "YourKit_Towers.txt": 27.0915,
        "JProfiler_Havlak.txt": 1910.2145,
        "JavaFlightRecorder_List.jfr": 22.878999999999998,
        "YourKit_Permute.txt": 29.737,
        "Queens.data": 22.875999999999998,
        "Storage_not_profiled_": 59.644499999999994,
        "Json.hpl": 79.4355,
        "Towers.data": 26.942,
        "YourKit_List.txt": 25.0165,
        "JProfiler_CD.txt": 478.1,
        "JProfiler_Permute.txt": 30.0745,
        "Sieve.hpl": 30.4065,
        "DeltaBlue_not_profiled_": 14.3895,
        "CD.hpl": 41.5875,
        "JavaFlightRecorder_Queens.jfr": 20.672,
        "JProfiler_Bounce.txt": 44.5015,
        "Permute.hpl": 29.5685,
        "Richards_not_profiled_": 96.227,
        "DeltaBlue.hpl": 12.2175,
        "NBody.hpl": 21.188,
        "JProfiler_Towers.txt": 27.095,
        "JProfiler_Mandelbrot.txt": 38.396,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.779,
        "rebench_test_Async_Mandelbrot.txt": 111.8415,
        "YourKit_CD.txt": 42.5925,
        "rebench_test_Async_Permute.txt": 77.156,
        "Mandelbrot.data": 38.854,
        "JProfiler_Storage.txt": 1036.6970000000001,
        "YourKit_Sieve.txt": 34.088,
        "JavaFlightRecorder_Permute.jfr": 29.626,
        "YourKit_Bounce.txt": 14.49,
        "JProfiler_Sieve.txt": 29.0105,
        "JProfiler_DeltaBlue.txt": 96.4575,
        "YourKit_Queens.txt": 22.319499999999998,
        "Mandelbrot.hpl": 37.694500000000005,
        "JavaFlightRecorder_Storage.jfr": 57.044,
        "List.hpl": 23.008,
        "Mandelbrot_not_profiled_": 37.491,
        "Queens.hpl": 21.854,
        "Storage.data": 63.262,
        "JavaFlightRecorder_Richards.jfr": 95.1685,
        "Bounce.data": 27.257,
        "Permute.data": 30.795,
        "YourKit_Json.txt": 78.0325,
        "rebench_test_Async_DeltaBlue.txt": 34.026,
        "JavaFlightRecorder_Mandelbrot.jfr": 38.049,
        "YourKit_Havlak.txt": 156.208,
        "DeltaBlue.data": 12.956,
        "JProfiler_Richards.txt": 93.3825,
        "rebench_test_Async_Storage.txt": 154.1405,
        "Sieve_not_profiled_": 31.1645,
        "Havlak.hpl": 154.37,
        "Richards.data": 96.116,
        "rebench_test_Async_Havlak.txt": 441.41999999999996,
        "Bounce_not_profiled_": 26.052500000000002,
        "NBody_not_profiled_": 21.0385,
        "Json.data": 82.90350000000001,
        "rebench_test_Async_Json.txt": 251.128,
        "rebench_test_Async_Queens.txt": 56.3435
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.44%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.34%",
            "[.] void nbody.NBodySystem.advance(double)": "96.42%",
            "0xffffffffb4c0634b": "0.13%",
            "0xffffffffb5800d70": "0.13%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.34%",
            "0xffffffffb4c0634b": "0.07%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "[.] void Permute.permute(int)": "97.41%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.20%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.19%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.46%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.12%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.03%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] vtable chunks": "7.02%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.99%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "13.95%",
            "[.] void deltablue.Planner.chainTest(int)": "24.09%",
            "[.] deltablue.Plan deltablue.Planner.makePlan(som.Vector)": "3.38%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.49%",
            "[.] Interpreter": "0.49%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "[.] boolean Queens.placeQueen(int)": "94.53%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.10%",
            "[.] Interpreter": "0.38%",
            "[.] void Towers.moveDisks(int, int, int)": "0.11%",
            "[.] java.lang.Object Towers.benchmark()": "0.07%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.67%",
            "[.] boolean richards.Scheduler.start()": "22.68%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.64%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.42%",
            "[.] void richards.Scheduler.schedule()": "7.92%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "16.78%",
            "[.] Interpreter": "0.19%",
            "0xffffffffb51c12b7": "0.12%",
            "0xffffffffb4c0634b": "0.07%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.48%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.79%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "8.69%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "22.02%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.70%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.89%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.29%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c0634b": "0.10%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.08%",
            "[.] Interpreter": "0.52%",
            "[.] java.lang.Object List.benchmark()": "0.39%",
            "0xffffffffb51c12b7": "0.19%",
            "[.] List$Element List.makeList(int)": "0.57%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.42%",
            "0xffffffffb51c12b7": "0.23%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "82.45%",
            "[.] java.lang.Object Sieve.benchmark()": "6.63%",
            "[.] int Sieve.sieve(boolean[], int)": "6.89%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.43%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "72.85%",
            "[.] java.lang.Object Bounce.benchmark()": "23.86%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.19%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.84%",
            "[.] StubRoutines (2)": "8.92%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.18%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.10%"
        }
    }
}