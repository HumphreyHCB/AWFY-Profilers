{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.17761989342806395",
            "java.util.zip.ZipUtils.LG([BI)J": "0.08880994671403197",
            "Mandelbrot.mandelbrot(I)I": "99.7335701598579"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.49504950495049505",
            " ": "0",
            "Queens.placeQueen(I)Z": "84.48844884488449",
            "Queens.getRowColumn(II)Z": "14.191419141914192",
            "java.util.Arrays.fill([ZZ)V": "0.49504950495049505",
            "Queens.queens()Z": "0.33003300330033003"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.14836795252225518",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "94.36201780415429",
            "Bounce.benchmark()Ljava/lang/Object;": "5.341246290801187",
            "jdk.internal.org.objectweb.asm.ByteVector.enlarge(I)V": "0.14836795252225518"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "0.8343265792610249",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.7389749702026222",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "1.4779499404052443",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.599523241954708",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "25.95947556615018",
            "havlak.HavlakLoopFinder.findLoops()V": "8.462455303933254",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "3.3373063170440997",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "52.87246722288438",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "0.9296781883194278",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.7151370679380215"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "8.184143222506394",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.8755328218243819",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.942028985507246",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "0.6820119352088662",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.131287297527707",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "27.024722932651322",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.361466325660698",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.909633418584825",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "5.797101449275362",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.0230179028132993"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "89.92125984251969",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "8.818897637795276",
            "java.lang.invoke.LambdaForm$Name.initIndex(I)Z": "0.15748031496062992",
            "List.makeList(I)LList$Element;": "1.1023622047244095"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "8.262108262108262",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.988603988603989",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "10.256410256410257",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "44.44444444444444",
            "deltablue.ScaleConstraint.execute()V": "1.9943019943019944",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "2.5641025641025643",
            "deltablue.EqualityConstraint.execute()V": "1.9943019943019944",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "7.407407407407407",
            "deltablue.Variable.value(I)Ldeltablue/Variable;": "1.9943019943019944",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "5.982905982905983"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.465101914762199",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.41136504014824",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.06176652254478073",
            "java.lang.invoke.LambdaForm$Name.useCount(Ljava/lang/invoke/LambdaForm$Name;)I": "0.06176652254478073"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.10672358591248667",
            "Sieve.benchmark()Ljava/lang/Object;": "0.21344717182497333",
            "Sieve.sieve([ZI)I": "99.67982924226254"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "63.5743519781719",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "36.289222373806275",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "0.1364256480218281"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.68304278922345",
            "NBody.innerBenchmarkLoop(I)Z": "0.31695721077654515"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.329004329004329",
            "richards.Scheduler.lambda$createIdler$2(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.07215007215007214",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.1443001443001443",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.463203463203463",
            "richards.Scheduler.schedule()V": "60.96681096681096",
            "Richards.benchmark()Ljava/lang/Object;": "1.3708513708513708",
            "java.lang.StringConcatHelper.prepend(J[BJ)J": "0.07215007215007214",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "24.458874458874458",
            "richards.Scheduler.lambda$createHandler$1(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.07215007215007214",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "5.05050505050505"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.768717215069147",
            "json.JsonPureStringParser.readExponent()Z": "7.5822603719599435",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "17.16738197424893",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "31.90271816881259",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.86409155937053",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "12.923223652837388",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "7.15307582260372",
            "java.lang.StringLatin1.hashCode([B)I": "1.335240820219361",
            "som.Vector.append(Ljava/lang/Object;)V": "7.248450166905103",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.24272770624702"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "25.153374233128833",
            "Permute.permute(I)V": "74.60122699386503",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.12269938650306748",
            "Permute.benchmark()Ljava/lang/Object;": "0.12269938650306748"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.0",
            "Richards::benchmark": "4.8",
            "richards.RBObject::append": "2.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "45.8",
            "richards.HandlerTaskDataRecord::workInAdd": "2.2",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "6.0",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.3"
        },
        "Mandelbrot.hpl": {
            "java.lang.Long::getChars": "0.0",
            "java.lang.invoke.MemberName::testFlags": "0.0",
            "java.lang.StringConcatHelper::mix": "0.0",
            "java.lang.StringLatin1::inflate": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "java.lang.ClassLoader::findBootstrapClass": "0.0",
            "Mandelbrot::mandelbrot": "98.0",
            "java.nio.charset.CoderResult::isUnderflow": "0.0",
            "java.lang.Long::stringSize": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.8",
            "List::makeList": "0.7",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "List::tail": "2.4",
            "List::isShorterThan": "79.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.4",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "15.7",
            "java.lang.String::<init>": "4.2",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "3.6",
            "java.util.Arrays::copyOfRange": "7.6",
            "java.lang.String::equals": "22.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "9.8",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "8.7"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "13.0",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078::apply": "1.9",
            "havlak.HavlakLoopFinder::findLoops": "5.9",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "4.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "5.1",
            "som.Vector::<init>": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "38.8",
            "Permute::permute": "50.8",
            "Permute::benchmark": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::endCurrentBasicBlockWithNoSuccessor": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "6.8",
            "java.lang.invoke.InvokerBytecodeGenerator::emitReferenceCast": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Queens::benchmark": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "14.3",
            "Queens::setRowColumn": "23.5",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "38.8",
            "java.util.Arrays::setAll": "34.2",
            "som.Random::next": "11.9",
            "AGCT::Unknown not Java[ERR=-3]": "5.7",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.3",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "4.0",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.2"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "6.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Sieve::verifyResult": "0.0",
            "Sieve::sieve": "86.4",
            "java.util.Arrays::equals": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.nio.Buffer::<init>": "0.0",
            "java.util.Arrays::fill": "5.2"
        },
        "DeltaBlue.hpl": {
            "deltablue.ScaleConstraint::execute": "1.7",
            "deltablue.Planner::addPropagate": "2.5",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "17.1",
            "som.Vector::append": "5.1",
            "AGCT::Unknown not Java[ERR=-3]": "15.4",
            "AGCT::Unknown Java[ERR=-5]": "14.0",
            "deltablue.AbstractConstraint::satisfy": "2.2",
            "deltablue.EqualityConstraint::execute": "2.8",
            "som.Vector::<init>": "5.7",
            "som.Vector::forEach": "10.3"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "16.8",
            "Bounce$Ball::bounce": "74.6",
            "java.util.Arrays::setAll": "0.4",
            "Bounce::lambda$benchmark$0": "0.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "som.Random::next": "1.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "2.5",
            "Bounce$$Lambda$2.0x0000000800c034f8::apply": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.4",
            "nbody.Body::setX": "1.8",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.6",
            "nbody.Body::getZ": "8.2",
            "nbody.Body::setVX": "29.0",
            "nbody.Body::setVY": "6.2",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "nbody.NBodySystem::advance": "38.6"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "0.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "Towers::popDiskFrom": "20.1",
            "Towers::moveDisks": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "Towers::pushDisk": "40.2",
            "Towers$TowersDisk::setNext": "18.2",
            "AGCT::Unknown Java[ERR=-5]": "4.1",
            "Towers::moveTopDisk": "5.7",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.7",
            "cd.RedBlackTree::forEach": "3.2",
            "cd.RedBlackTree::put": "7.3",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "9.9",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "cd.Vector2D::compareNumbers": "4.6",
            "cd.CollisionDetector::isInVoxel": "21.6",
            "cd.RedBlackTree::treeInsert": "13.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "2.69%",
            "deltablue.AbstractConstraint.satisfy": "2.72%",
            "som.Vector.append": "5.07%",
            "vtable": "1.89%",
            "som.Vector.<init>": "1.94%",
            "som.Vector.forEach": "7.99%",
            "deltablue.Planner.chainTest": "4.06%",
            "itable": "3.96%",
            "deltablue.Planner.addPropagate": "2.17%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "14.68%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "76.04%",
            "som.Random.next": "0.81%",
            "Interpreter": "0.04%",
            "java.util.Arrays.setAll": "0.57%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "17.84%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "1.69%",
            "Bounce.lambda$benchmark$0": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.55%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.57%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.42%",
            "som.Random.next": "10.48%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.10%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.55%",
            "java.util.Arrays.setAll": "35.51%",
            "Storage.lambda$buildTreeDepth$0": "4.08%",
            "SpinPause": "0.19%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.34%",
            "Storage.buildTreeDepth": "43.56%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.74%",
            "Towers.popDiskFrom": "18.84%",
            "Towers.moveDisks": "8.86%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.54%",
            "Towers.moveTopDisk": "4.85%",
            "Towers$TowersDisk.getSize": "0.40%",
            "Towers$TowersDisk.getNext": "3.76%",
            "Towers.benchmark": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "12.95%",
            "cd.CollisionDetector.isInVoxel": "19.24%",
            "cd.RedBlackTree.forEach": "6.42%",
            "Node::set_req_X(unsigned": "4.01%",
            "cd.RedBlackTree.put": "6.65%",
            "cd.RedBlackTree.treeInsert": "12.63%",
            "cd.RedBlackTree.treeMinimum": "5.39%",
            "cd.RedBlackTree.findNode": "2.77%",
            "cd.Vector2D.compareNumbers": "3.76%",
            "cd.RedBlackTree.leftRotate": "2.17%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.10%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.99%",
            "som.Vector.hasSome": "2.27%",
            "som.Vector.append": "3.34%",
            "som.Vector.<init>": "2.18%",
            "som.IdentitySet.lambda$contains$0": "31.69%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.90%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.90%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.76%",
            "havlak.HavlakLoopFinder.doDFS": "6.25%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "4.96%",
            "Sieve.benchmark": "5.69%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "86.43%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.05%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.39%",
            "Permute.swap": "40.48%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.64%",
            "nbody.Body.getZ": "7.33%",
            "nbody.Body.getY": "0.78%",
            "nbody.Body.setX": "1.22%",
            "nbody.Body.setY": "1.75%",
            "nbody.Body.setVX": "27.67%",
            "nbody.Body.setVY": "5.75%",
            "nbody.Body.getMass": "0.44%",
            "nbody.Body.getVZ": "0.43%",
            "nbody.NBodySystem.advance": "42.38%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.25%",
            "Interpreter": "0.05%",
            "List.makeList": "1.51%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.65%",
            "List$Element.length": "0.15%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "81.30%",
            "List$Element.<init>": "0.36%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.62%",
            "java.lang.String.length": "2.81%",
            "java.lang.String.substring": "2.73%",
            "java.lang.String.<init>": "6.13%",
            "json.JsonPureStringParser.isWhiteSpace": "2.44%",
            "java.lang.String.isLatin1": "3.41%",
            "json.JsonPureStringParser.readStringInternal": "6.40%",
            "java.util.Arrays.copyOfRange": "9.58%",
            "java.lang.String.equals": "19.90%",
            "json.JsonPureStringParser.read": "12.18%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.16%",
            "Queens.getRowColumn": "57.09%",
            "Queens.setRowColumn": "23.63%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "Queens.queens": "0.68%",
            "Queens.placeQueen": "14.09%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "Queens.benchmark": "0.06%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.65%",
            "Richards.benchmark": "4.84%",
            "richards.Packet.<init>": "7.38%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.22%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.80%",
            "itable": "35.87%",
            "richards.TaskControlBlock.<init>": "3.06%",
            "richards.RBObject.<init>": "6.16%",
            "richards.RBObject.append": "2.89%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "3.52%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.7",
            "Towers.moveDisks": "92.9",
            "java.io.PrintStream.println": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "1.0",
            "Run.printResult": "0.2"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.2",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.9",
            "Sieve.sieve": "94.0",
            "java.lang.Integer.valueOf": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.7",
            "deltablue.Planner.removePropagateFrom": "9.7",
            "som.Vector.<init>": "33.7",
            "deltablue.Variable.<init>": "4.6",
            "som.Vector.forEach": "6.9",
            "deltablue.Planner.addPropagate": "1.5",
            "deltablue.Planner.constraintsConsuming": "4.9",
            "deltablue.AbstractConstraint.<init>": "3.5",
            "deltablue.Planner.addConstraintsConsumingTo": "15.9"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.7",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.3",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.2"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.5",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.schedule": "13.9",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "richards.TaskControlBlock.runTask": "84.9",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "1.5",
            "Bounce.benchmark": "51.8",
            "Bounce$Ball.<init>": "46.1",
            "Bounce.lambda$benchmark$0": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.9",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.6",
            "cd.RedBlackTree.<init>": "1.4",
            "cd.Vector2D.<init>": "44.4",
            "cd.RedBlackTree$InsertResult.<init>": "15.2",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.6",
            "nbody.NBodySystem.advance": "98.7",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "97.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.6",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "List.makeList": "0.4",
            "Run.runBenchmark": "0.1",
            "List.tail": "1.7",
            "List$Element.length": "0.1",
            "List.isShorterThan": "71.9",
            "List$Element.<init>": "25.6",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.6",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "21.1",
            "Queens.placeQueen": "77.6",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.4",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "21.800129505719845",
            "java.lang.String.<init>(byte[], byte) String.java": "5.5994620531637604",
            "json.JsonPureStringParser.isWhiteSpace()": "2.0131498115525748",
            "json.JsonPureStringParser.read()": "18.645502996895193",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "4.964385927045114",
            "java.lang.String.length() String.java": "2.49049461222999",
            "java.lang.String.substring(int, int) String.java": "8.953328130966813",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "8.069202543625167",
            "json.JsonPureStringParser.readValue()": "4.619867505686631",
            "json.JsonPureStringParser.readStringInternal()": "3.8436633515416174"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.181052504536659",
            "som.Vector.hasSome(TestInterface)": "2.2241475178772325",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.8599390514614305",
            "havlak.HavlakLoopFinder.findLoops()": "9.762973116263435",
            "som.Vector.<init>(int)": "2.8232880314139295",
            "som.Vector.append(Object)": "4.732779020599228",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.586239595860329",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.829762197250852",
            "som.Vector.removeAll()": "2.153026521666042",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.40964400708624"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.05152224824356",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.144364954605242",
            "Queens.getRowColumn(int, int)": "58.259279458471",
            "Queens.queens()": "0.4812165153508068",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.288729909210484",
            "Queens.setRowColumn(int, int, boolean)": "25.1515832023355",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.144364954605242",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.6255814699560488",
            "jdk.internal.org.objectweb.asm.SymbolTable.put(SymbolTable$Entry) SymbolTable.java": "0.38497321228064546",
            "java.lang.AbstractStringBuilder.newCapacity(int) AbstractStringBuilder.java": "0.17644605562862917"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.279777018941716",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9408691591512712",
            "richards.TaskControlBlock.runTask()": "37.34713831246535",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.571637042874238",
            "richards.Scheduler.schedule()": "2.685112220179202",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "4.027668330268804",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.6380643843212794",
            "richards.RBObject.append(Packet, Packet)": "2.7142982225724546",
            "Richards.benchmark()": "27.13933397542539",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.9408691591512712"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.52400967745532",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.2152564860134016",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.69563957053506",
            "java.lang.invoke.LambdaFormEditor.putInCache(LambdaFormEditor$TransformKey, LambdaForm) LambdaFormEditor.java": "0.12821513384545064",
            "som.Random.next()": "14.231879856845019",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.763716232035945",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.16166256006600296",
            "Storage.buildTreeDepth(int, Random)": "36.89251112126923",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.8653295128939837",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.13936427591896808"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "33.14381926585402",
            "Towers.popDiskFrom(int)": "31.24099039359727",
            "Towers.moveDisks(int, int, int)": "8.983658736290982",
            "Towers$TowersDisk.getSize()": "1.1301650271585573",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.14991985054144127",
            "Towers.moveTopDisk(int, int)": "7.911155190109902",
            "java.util.zip.Inflater.init(boolean) Inflater.java (native)": "0.19604903532342322",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.16145214673693675",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "16.491183559558543",
            "Towers.benchmark()": "0.23064592390990968"
        },
        "YourKit_Permute.txt": {
            "java.util.concurrent.ConcurrentHashMap.transfer(ConcurrentHashMap$Node[], ConcurrentHashMap$Node[]) ConcurrentHashMap.java": "0.07734550235903782",
            "jdk.internal.org.objectweb.asm.Type.getDescriptor() Type.java": "0.04419742991945018",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.14364164723821307",
            "Benchmark.innerBenchmarkLoop(int)": "0.08839485983890036",
            "Permute.permute(int)": "54.318641371004276",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.0994442173187629",
            "com.yourkit.probes.Table.createRow() a": "0.08839485983890036",
            "Permute.benchmark()": "0.20993779211738836",
            "Run.printResult(long)": "0.0994442173187629",
            "Permute.swap(int, int)": "44.68360164856413"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.298916261229954",
            "som.Vector.forEach(ForEachInterface)": "44.40497335701599",
            "deltablue.EqualityConstraint.execute()": "2.1365871238448277",
            "deltablue.BinaryConstraint.getOutput()": "2.5227173269493144",
            "deltablue.BinaryConstraint.isSatisfied()": "3.346461760238886",
            "som.Vector.<init>(int)": "7.310731845444953",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.419749272788118",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "1.6474888665791438",
            "som.Vector.append(Object)": "3.706849949803074",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.7029114217314083"
        },
        "YourKit_List.txt": {
            "jdk.internal.loader.URLClassPath$JarLoader.getResource(String, boolean) URLClassPath.java": "0.17120130639766112",
            "List.tail(List$Element, List$Element, List$Element)": "2.9894381963283903",
            "List$Element.<init>(Object)": "0.2502172939658124",
            "List.makeList(int)": "0.39507993784075646",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.09218531882950982",
            "List$Element.getNext()": "27.062975742091815",
            "List$Element.length()": "0.11852398135222693",
            "List.isShorterThan(List$Element, List$Element)": "68.29615192140542",
            "com.yourkit.probes.ResourceRegistry.<init>(Class, ResourceRegistry, String, String) a": "0.13169331261358547",
            "javax.management.openmbean.CompositeType.getType(String) CompositeType.java": "0.11852398135222693"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0148813378812083",
            "nbody.Body.getZ()": "4.188074780881654",
            "nbody.Body.getX()": "0.8347365542650719",
            "nbody.Body.setZ(double)": "0.40297626757624155",
            "nbody.NBodySystem.advance(double)": "46.8172070866255",
            "nbody.Body.setVY(double)": "5.987075975418446",
            "nbody.Body.setVZ(double)": "8.692773772001782",
            "NBody.innerBenchmarkLoop(int)": "0.5325043535828907",
            "nbody.Body.setVX(double)": "28.050026625217672",
            "nbody.Body.setY(double)": "1.0218326784968983"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.0101575456053",
            "Mandelbrot.innerBenchmarkLoop(int)": "0.06909894969596461",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.1468352681039248",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, long, Object) DirectMethodHandle$Holder": "0.07773631840796018",
            "java.lang.String.getChars(int, int, char[], int) String.java": "0.06909894969596461",
            "jdk.internal.org.objectweb.asm.ByteVector.put12(int, int) ByteVector.java": "0.23320895522388052",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.07773631840796018",
            "java.io.BufferedWriter.ensureOpen() BufferedWriter.java": "0.08637368711995576",
            "com.yourkit.probes.Table.createRow() a": "0.07773631840796018",
            "java.lang.invoke.LambdaForm$Name.cloneWithIndex(int) LambdaForm.java": "0.06046158098396903"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.894177277784646",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.511867968846584",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "12.733341574978366",
            "cd.RedBlackTree.findNode(Comparable)": "9.835888243293361",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.672456422301892",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.7274694028928175",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "1.630300407961429",
            "cd.RedBlackTree.put(Comparable, Object)": "6.938434911608357",
            "cd.Vector2D.compareNumbers(double, double)": "8.924156261589813",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.7319198912102856"
        },
        "YourKit_Sieve.txt": {
            "java.nio.Buffer.position(int) Buffer.java": "0.09956192751891675",
            "java.lang.invoke.MethodType.form() MethodType.java": "0.08849949112792602",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.11062436390990751",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.07743705473693525",
            "java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(Object, long, Object) DelegatingMethodHandle$Holder": "0.09956192751891675",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.8695517500774368",
            "java.lang.invoke.LambdaFormBuffer.replaceFunctions(List, List, Object[]) LambdaFormBuffer.java": "0.17699898225585203",
            "Sieve.benchmark()": "88.6322403646179",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.22124872781981503",
            "Sieve.sieve(boolean[], int)": "8.484888711889907"
        },
        "YourKit_Bounce.txt": {
            "java.util.jar.Manifest.read(InputStream, String) Manifest.java": "0.2080024203918009",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.17018379850238255",
            "Bounce.benchmark()": "64.5185689433477",
            "Bounce.lambda$benchmark$0(Random, int)": "0.47273277361772936",
            "som.Random.next()": "0.17018379850238255",
            "com.yourkit.probes.Table.createRow() a": "0.9265562362907496",
            "com.yourkit.probes.builtin.Files$RandomAccessFile_open_Probe.onEnter() a": "0.3781862188941834",
            "Run.measure(Benchmark)": "0.17018379850238255",
            "Bounce$Ball.bounce()": "31.257090991604265",
            "Bounce$Ball.<init>(Random)": "0.9265562362907496"
        }
    },
    "Runtimes": {
        "NBody.data": 22.121,
        "YourKit_Storage.txt": 61.6365,
        "rebench_test_Async_Bounce.txt": 65.70949999999999,
        "Permute_not_profiled_": 29.58,
        "JavaFlightRecorder_Sieve.jfr": 30.957,
        "CD_not_profiled_": 41.837500000000006,
        "JProfiler_NBody.txt": 21.51,
        "JProfiler_List.txt": 28.69,
        "YourKit_Mandelbrot.txt": 37.727999999999994,
        "CD.data": 45.2965,
        "Json_not_profiled_": 78.0265,
        "List.data": 23.4205,
        "Queens_not_profiled_": 21.615499999999997,
        "Towers.hpl": 25.8035,
        "Bounce.hpl": 25.845,
        "JavaFlightRecorder_Json.jfr": 81.1095,
        "Sieve.data": 31.768,
        "Richards.hpl": 91.40700000000001,
        "YourKit_Richards.txt": 92.47,
        "JavaFlightRecorder_Havlak.jfr": 151.933,
        "JavaFlightRecorder_CD.jfr": 42.0125,
        "JavaFlightRecorder_Towers.jfr": 26.005000000000003,
        "rebench_test_Async_CD.txt": 134.4275,
        "List_not_profiled_": 22.317,
        "Havlak_not_profiled_": 151.5325,
        "JProfiler_Json.txt": 1024.4535,
        "rebench_test_Async_NBody.txt": 56.0805,
        "JavaFlightRecorder_Bounce.jfr": 25.8965,
        "Havlak.data": 160.86700000000002,
        "Towers_not_profiled_": 25.988999999999997,
        "YourKit_DeltaBlue.txt": 12.0515,
        "rebench_test_Async_Towers.txt": 72.8505,
        "YourKit_NBody.txt": 23.3485,
        "JavaFlightRecorder_NBody.jfr": 21.1905,
        "rebench_test_Async_Sieve.txt": 80.458,
        "Storage.hpl": 60.89,
        "JProfiler_Queens.txt": 26.996499999999997,
        "rebench_test_Async_List.txt": 66.28550000000001,
        "rebench_test_Async_Richards.txt": 247.425,
        "YourKit_Towers.txt": 27.0915,
        "JProfiler_Havlak.txt": 1910.2145,
        "JavaFlightRecorder_List.jfr": 22.878999999999998,
        "YourKit_Permute.txt": 29.737,
        "Queens.data": 22.875999999999998,
        "Storage_not_profiled_": 59.644499999999994,
        "Json.hpl": 79.4355,
        "Towers.data": 26.942,
        "YourKit_List.txt": 25.0165,
        "JProfiler_CD.txt": 478.1,
        "JProfiler_Permute.txt": 30.0745,
        "Sieve.hpl": 30.4065,
        "DeltaBlue_not_profiled_": 14.3895,
        "CD.hpl": 41.5875,
        "JavaFlightRecorder_Queens.jfr": 20.672,
        "JProfiler_Bounce.txt": 44.5015,
        "Permute.hpl": 29.5685,
        "Richards_not_profiled_": 96.227,
        "DeltaBlue.hpl": 12.2175,
        "NBody.hpl": 21.188,
        "JProfiler_Towers.txt": 27.095,
        "JProfiler_Mandelbrot.txt": 38.396,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.779,
        "rebench_test_Async_Mandelbrot.txt": 111.8415,
        "YourKit_CD.txt": 42.5925,
        "rebench_test_Async_Permute.txt": 77.156,
        "Mandelbrot.data": 38.854,
        "JProfiler_Storage.txt": 1036.6970000000001,
        "YourKit_Sieve.txt": 34.088,
        "JavaFlightRecorder_Permute.jfr": 29.626,
        "YourKit_Bounce.txt": 14.49,
        "JProfiler_Sieve.txt": 29.0105,
        "JProfiler_DeltaBlue.txt": 96.4575,
        "YourKit_Queens.txt": 22.319499999999998,
        "Mandelbrot.hpl": 37.694500000000005,
        "JavaFlightRecorder_Storage.jfr": 57.044,
        "List.hpl": 23.008,
        "Mandelbrot_not_profiled_": 37.491,
        "Queens.hpl": 21.854,
        "Storage.data": 63.262,
        "JavaFlightRecorder_Richards.jfr": 95.1685,
        "Bounce.data": 27.257,
        "Permute.data": 30.795,
        "YourKit_Json.txt": 78.0325,
        "rebench_test_Async_DeltaBlue.txt": 34.026,
        "JavaFlightRecorder_Mandelbrot.jfr": 38.049,
        "YourKit_Havlak.txt": 156.208,
        "DeltaBlue.data": 12.956,
        "JProfiler_Richards.txt": 93.3825,
        "rebench_test_Async_Storage.txt": 154.1405,
        "Sieve_not_profiled_": 31.1645,
        "Havlak.hpl": 154.37,
        "Richards.data": 96.116,
        "rebench_test_Async_Havlak.txt": 441.41999999999996,
        "Bounce_not_profiled_": 26.052500000000002,
        "NBody_not_profiled_": 21.0385,
        "Json.data": 82.90350000000001,
        "rebench_test_Async_Json.txt": 251.128,
        "rebench_test_Async_Queens.txt": 56.3435
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "0xffffffffb4c6958b": "0.07%",
            "[.] Interpreter": "0.51%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.31%",
            "[.] void nbody.NBodySystem.advance(double)": "96.68%",
            "0xffffffffb4c063aa": "0.09%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.39%",
            "0xffffffffb4c0634b": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "97.31%",
            "0xffffffffb4c063aa": "0.15%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.68%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.29%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.75%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.82%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.11%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] vtable chunks": "6.76%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.60%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "9.83%",
            "[.] void deltablue.Planner.chainTest(int)": "24.40%",
            "[.] deltablue.Plan deltablue.Planner.makePlan(som.Vector)": "3.12%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.50%",
            "[.] Interpreter": "0.56%",
            "0xffffffffb51c12b7": "0.28%",
            "[.] boolean Queens.placeQueen(int)": "92.90%",
            "0xffffffffb5800d70": "0.19%"
        },
        "Towers.data": {
            "[.] void Towers.pushDisk(Towers$TowersDisk, int)": "0.06%",
            " ": "0",
            "[.] Interpreter": "0.46%",
            "[.] void Towers.moveDisks(int, int, int)": "0.10%",
            "[.] java.lang.Object Towers.benchmark()": "0.11%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.17%",
            "[.] boolean richards.Scheduler.start()": "22.63%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.85%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.91%",
            "[.] void richards.Scheduler.schedule()": "7.45%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.30%",
            "[.] Interpreter": "0.22%",
            "0xffffffffb51c12b7": "0.13%",
            "0xffffffffb4c0634b": "0.07%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.94%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.13%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.24%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.58%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.58%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.17%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.31%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.32%",
            "0xffffffffb4c063aa": "0.07%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "96.13%",
            "[.] Interpreter": "0.45%",
            "[.] java.lang.Object List.benchmark()": "0.33%",
            "0xffffffffb51c12b7": "0.19%",
            "[.] List$Element List.makeList(int)": "0.57%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.47%",
            "0xffffffffb51c12b7": "0.22%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "83.46%",
            "[.] java.lang.Object Sieve.benchmark()": "6.43%",
            "[.] int Sieve.sieve(boolean[], int)": "6.74%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.67%",
            "0xffffffffb51c12b7": "0.30%",
            "0xffffffffb4c0634b": "0.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "61.10%",
            "[.] java.lang.Object Bounce.benchmark()": "33.76%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.93%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.99%",
            "[.] StubRoutines (2)": "8.69%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.19%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.15%"
        }
    }
}