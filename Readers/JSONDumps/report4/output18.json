{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.778816199376947",
            " ": "0",
            "Queens.placeQueen(I)Z": "87.53894080996884",
            "java.nio.charset.CharsetEncoder.encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;": "0.1557632398753894",
            "Queens.getRowColumn(II)Z": "10.591900311526478",
            "java.util.Arrays.fill([ZZ)V": "0.3115264797507788",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1557632398753894",
            "Queens.queens()Z": "0.46728971962616817"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "94.8905109489051",
            "Bounce.benchmark()Ljava/lang/Object;": "4.963503649635036",
            "som.Random.next()I": "0.145985401459854"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.1988716502115657",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.3761165961448049",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.432063939821345",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "31.570286788904564",
            "havlak.HavlakLoopFinder.findLoops()V": "2.891396332863188",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "2.7973671838269865",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "51.41043723554302",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "0.8227550540667607",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.6346967559943583",
            "som.Vector.append(Ljava/lang/Object;)V": "4.066760695815703"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.808811305070657",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.1637572734829593",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "16.29260182876143",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "2.743142144638404",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "23.524522028262677",
            "cd.CollisionDetector.lambda$handleNewFrame$3(Lsom/Vector;Lsom/Vector;)V": "1.0806317539484622",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.219451371571072",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "19.285120532003326",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "7.896924355777224",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.1637572734829593"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.89024390243902",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "11.890243902439025",
            "List$Element.length()I": "0.1524390243902439",
            "List.makeList(I)LList$Element;": "1.0670731707317074"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "9.491525423728813",
            "deltablue.Strength.stronger(Ldeltablue/Strength;)Z": "2.0338983050847457",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.4576271186440675",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "45.08474576271186",
            "deltablue.Planner.lambda$chainTest$7(I)Ldeltablue/Variable;": "2.0338983050847457",
            "deltablue.Planner.lambda$removePropagateFrom$4(Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "4.067796610169491",
            "deltablue.Planner.chainTest(I)V": "2.0338983050847457",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "8.135593220338983",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "6.779661016949152",
            "deltablue.Planner.lambda$constraintsConsuming$3(Ldeltablue/AbstractConstraint;Lsom/ForEachInterface;Ldeltablue/AbstractConstraint;)V": "2.3728813559322033"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "13.63910681955341",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "86.36089318044658"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "0.28708133971291866",
            "java.nio.charset.CharsetEncoder.encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;": "0.09569377990430622",
            "java.util.Arrays.fill([ZZ)V": "0.28708133971291866",
            "Sieve.sieve([ZI)I": "99.23444976076556",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.09569377990430622"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.moveDisks(III)V": "59.10326086956521",
            "Towers.benchmark()Ljava/lang/Object;": "0.1358695652173913",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "40.76086956521739"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.getMass()D": "0.1592356687898089",
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.68152866242038",
            "jdk.internal.org.objectweb.asm.Frame.execute(IILjdk/internal/org/objectweb/asm/Symbol;Ljdk/internal/org/objectweb/asm/SymbolTable;)V": "0.1592356687898089"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "3.5410764872521248",
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.0708215297450425",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.141643059490085",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.824362606232295",
            "richards.Scheduler.schedule()V": "60.552407932011334",
            "Richards.benchmark()Ljava/lang/Object;": "0.9206798866855525",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "26.062322946175637",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.886685552407932"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "4.809523809523809",
            "json.JsonPureStringParser.readExponent()Z": "7.476190476190475",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "15.619047619047619",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "31.95238095238095",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "3.761904761904762",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "14.95238095238095",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "7.19047619047619",
            "som.Vector.append(Ljava/lang/Object;)V": "7.7142857142857135",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.238095238095238",
            "json.JsonPureStringParser.readString()Ljson/JsonValue;": "1.1904761904761905"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "27.825030376670714",
            "sun.net.www.protocol.jar.Handler.canonicalizeString(Ljava/lang/String;I)Ljava/lang/String;": "0.12150668286755771",
            "Permute.permute(I)V": "71.32442284325637",
            "Permute.benchmark()Ljava/lang/Object;": "0.7290400972053462"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "richards.Packet::setLink": "2.0",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.3",
            "Richards::benchmark": "4.8",
            "richards.RBObject::append": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "46.5",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.6"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.DelegatingMethodHandle$Holder::reinvoke_L": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.String::getBytes": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.lang.invoke.Invokers::basicInvoker": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "98.6",
            "java.util.Arrays::copyOf": "0.0",
            "java.lang.invoke.MethodHandles$Lookup::checkAccess": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.0",
            "List::makeList": "0.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "2.1",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "List::isShorterThan": "81.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::length": "0.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "15.9",
            "java.lang.String::<init>": "4.9",
            "json.JsonPureStringParser::readArray": "2.7",
            "java.lang.String::length": "2.8",
            "java.util.Arrays::copyOfRange": "6.6",
            "java.lang.String::equals": "24.2",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "10.1",
            "java.lang.String::isLatin1": "2.7",
            "json.JsonPureStringParser::readStringInternal": "8.5"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.8",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.1",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "8.7",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "5.2",
            "som.Vector::<init>": "1.9",
            "som.Vector::forEach": "1.9"
        },
        "Permute.hpl": {
            "Permute::swap": "40.0",
            "Permute::permute": "51.6",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.StringConcatHelper::newArrayWithSuffix": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "6.0"
        },
        "Queens.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Queens::getRowColumn": "66.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "java.lang.System::arraycopy": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "8.4",
            "Queens::setRowColumn": "18.2",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.6",
            "java.util.Arrays::setAll": "34.7",
            "som.Random::next": "12.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.5",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.5",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "6.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "86.4",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "5.1"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "2.2",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "6.1",
            "som.Vector::append": "4.8",
            "AGCT::Unknown not Java[ERR=-3]": "12.2",
            "AGCT::Unknown Java[ERR=-5]": "16.7",
            "deltablue.Plan::lambda$execute$0": "4.2",
            "deltablue.AbstractConstraint::satisfy": "1.6",
            "deltablue.EqualityConstraint::execute": "1.8",
            "som.Vector::<init>": "1.6",
            "som.Vector::forEach": "29.1"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.5",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "76.9",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "som.Random::next": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "Bounce$Ball::<init>": "1.5",
            "java.lang.invoke.MemberName$Factory::resolve": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "7.8",
            "nbody.Body::setVX": "29.7",
            "nbody.Body::setVY": "5.8",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "nbody.NBodySystem::advance": "38.9"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.5",
            "Towers::popDiskFrom": "23.0",
            "Towers::moveDisks": "4.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "Towers::pushDisk": "38.6",
            "Towers$TowersDisk::setNext": "16.9",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.4",
            "Towers$TowersDisk::getNext": "3.0"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.4",
            "cd.RedBlackTree::forEach": "3.3",
            "cd.RedBlackTree::put": "6.7",
            "cd.RedBlackTree::findNode": "3.1",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "10.5",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "cd.Vector2D::compareNumbers": "4.7",
            "cd.CollisionDetector::isInVoxel": "21.7",
            "cd.RedBlackTree::treeInsert": "13.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.04%",
            "deltablue.AbstractConstraint.satisfy": "2.73%",
            "som.Vector.append": "3.64%",
            "som.Vector.forEach": "9.04%",
            "itable": "4.13%",
            "deltablue.Planner.chainTest": "4.01%",
            "deltablue.Planner.addPropagate": "3.37%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "2.72%",
            "deltablue.ScaleConstraint.execute": "1.83%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "17.77%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "75.91%",
            "som.Random.next": "0.84%",
            "Interpreter": "0.04%",
            "java.util.Arrays.setAll": "0.61%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "17.68%",
            "__tls_get_addr": "0.03%",
            "Bounce$Ball.<init>": "1.73%",
            "Bounce.lambda$benchmark$0": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.75%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "WatcherThread::sleep()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "StatSamplerTask::task()": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.58%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.43%",
            "som.Random.next": "10.90%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.22%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.36%",
            "java.util.Arrays.setAll": "35.22%",
            "Storage.lambda$buildTreeDepth$0": "4.26%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.20%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.35%",
            "Storage.buildTreeDepth": "43.46%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.99%",
            "Towers.popDiskFrom": "18.65%",
            "Towers.moveDisks": "8.94%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.50%",
            "Towers.moveTopDisk": "4.70%",
            "Towers$TowersDisk.getSize": "0.42%",
            "Towers$TowersDisk.getNext": "3.51%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.31%",
            "cd.CollisionDetector.isInVoxel": "19.45%",
            "cd.RedBlackTree.forEach": "6.18%",
            "Node::set_req_X(unsigned": "4.34%",
            "cd.RedBlackTree.put": "6.40%",
            "cd.RedBlackTree.treeInsert": "12.91%",
            "cd.RedBlackTree.treeMinimum": "5.31%",
            "cd.RedBlackTree.findNode": "2.81%",
            "cd.Vector2D.compareNumbers": "3.71%",
            "cd.RedBlackTree.leftRotate": "2.11%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.67%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.76%",
            "som.Vector.hasSome": "2.20%",
            "som.Vector.append": "2.61%",
            "som.IdentitySet.lambda$contains$0": "31.96%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.90%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.02%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000800c09078.apply": "2.16%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.69%",
            "havlak.HavlakLoopFinder.doDFS": "5.46%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "4.77%",
            "Sieve.benchmark": "5.90%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "86.63%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.04%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.12%",
            "Permute.swap": "40.60%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.50%",
            "nbody.Body.getZ": "7.89%",
            "nbody.Body.getY": "0.83%",
            "nbody.Body.setX": "1.69%",
            "nbody.Body.setY": "1.56%",
            "nbody.Body.setZ": "0.34%",
            "nbody.Body.setVX": "28.56%",
            "nbody.Body.setVY": "5.90%",
            "nbody.Body.getMass": "0.63%",
            "nbody.NBodySystem.advance": "40.44%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.06%",
            "Interpreter": "0.05%",
            "List.makeList": "1.06%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.43%",
            "List$Element.length": "0.14%",
            "List.verifyResult": "0.07%",
            "List.isShorterThan": "82.06%",
            "List$Element.<init>": "0.25%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.36%",
            "java.lang.String.length": "2.99%",
            "java.lang.String.<init>": "5.54%",
            "json.JsonPureStringParser.isWhiteSpace": "2.38%",
            "json.JsonPureStringParser.readArray": "2.11%",
            "java.lang.String.isLatin1": "3.09%",
            "json.JsonPureStringParser.readStringInternal": "7.46%",
            "java.util.Arrays.copyOfRange": "7.29%",
            "java.lang.String.equals": "21.80%",
            "json.JsonPureStringParser.read": "16.78%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.95%",
            "Queens.getRowColumn": "56.48%",
            "Queens.setRowColumn": "24.05%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.64%",
            "Queens.placeQueen": "14.37%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.74%",
            "Richards.benchmark": "4.57%",
            "richards.Packet.<init>": "7.14%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.30%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.79%",
            "itable": "37.36%",
            "richards.TaskControlBlock.<init>": "3.16%",
            "richards.RBObject.<init>": "5.69%",
            "richards.RBObject.append": "2.65%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "4.12%"
        }
    },
    "JProfiler": {
        "Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.4",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.7",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.9",
            "deltablue.Planner.removePropagateFrom": "8.8",
            "som.Vector.<init>": "33.0",
            "deltablue.Variable.<init>": "4.5",
            "som.Vector.forEach": "7.1",
            "deltablue.Planner.addPropagate": "1.3",
            "deltablue.Planner.constraintsConsuming": "5.6",
            "deltablue.AbstractConstraint.<init>": "4.2",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "Permute.txt": {
            "Permute.permute": "99.0",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "21.4",
            "Queens.placeQueen": "77.7",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.3",
            "java.util.Arrays.fill0": "0.1"
        },
        "CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.0",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.8",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "54.7",
            "Bounce$Ball.<init>": "43.9",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.schedule": "15.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "richards.TaskControlBlock.runTask": "83.8",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.4",
            "richards.Scheduler.createTask": "0.0",
            "Run.printResult": "0.0"
        },
        "Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0"
        },
        "Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.4",
            "Towers.moveDisks": "95.6",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.4",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "41.8",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.5",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.2"
        },
        "Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.1",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.6",
            "List$Element.length": "0.2",
            "List.isShorterThan": "76.9",
            "List$Element.<init>": "19.4"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.855530474040638",
            "java.lang.String.<init>(byte[], byte) String.java": "6.258978042273755",
            "json.JsonPureStringParser.isWhiteSpace()": "2.377043573431836",
            "json.JsonPureStringParser.read()": "21.838019016348593",
            "java.lang.String.length() String.java": "3.5185375196661886",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.2962240919351538",
            "java.lang.String.substring(int, int) String.java": "10.175114576920448",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "5.9853615158355575",
            "json.JsonPureStringParser.readStringInternal()": "3.7066488815924488",
            "json.JsonPureStringParser.readValue()": "2.7660920719611473"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.810588668267293",
            "som.Vector.hasSome(TestInterface)": "2.0548185275407023",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.914722840468972",
            "havlak.HavlakLoopFinder.findLoops()": "11.393508701214492",
            "som.Vector.<init>(int)": "3.9738174935595243",
            "som.Vector.append(Object)": "3.8073289987907684",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.5336043882862205",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "3.6649375230017003",
            "som.Vector.removeAll()": "2.760203992218854",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.43800494207953"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.563028853101265",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.7546442735344647",
            "Run.runBenchmark()": "0.0016056261139031165",
            "Queens.getRowColumn(int, int)": "60.4839357107304",
            "Queens.queens()": "0.4656315730319037",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6261941844222154",
            "Queens.setRowColumn(int, int, boolean)": "22.510878116921692",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.14450635025128047",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.4495753118928726"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.725142709656659",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.8469294379099868",
            "richards.TaskControlBlock.runTask()": "35.84920206614756",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.1441375912151854",
            "richards.Scheduler.schedule()": "2.8324053993356415",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.067042533008417",
            "richards.RBObject.append(Packet, Packet)": "2.708382914394318",
            "Richards.benchmark()": "29.63802194192396",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "3.673747121505164",
            "richards.Packet.setLink(Packet)": "1.7564265434933446"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$10.0x00000008000c2a98.<init>(Storage, int, Random)": "0.28060128847530424",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.6986399427344311",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.5382963493199715",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.6377952755905516",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.874731567644965",
            "som.Random.next()": "14.161775232641377",
            "java.lang.invoke.LambdaForm$NamedFunction.methodType() LambdaForm.java": "0.10880458124552614",
            "Storage.buildTreeDepth(int, Random)": "36.11166785969937",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.74874731567645",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.28060128847530424"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "30.918409085440672",
            "Towers.popDiskFrom(int)": "27.754385120666008",
            "Towers.moveDisks(int, int, int)": "12.475638218522171",
            "Towers$TowersDisk.getSize()": "1.6842713120473518",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.1082745843459012",
            "Towers.moveTopDisk(int, int)": "9.588315969298138",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitField(int, String, String, String, Object) ClassWriter.java": "0.0962440749741344",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.1323356030894348",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.047231779793556",
            "java.lang.Object.equals(Object) Object.java": "0.060152546858834"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.reflect.UTF8.encode(String) UTF8.java": "0.08985533291400843",
            "Run.runBenchmark()": "0.0011231916614251056",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.1010872495282595",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.15724683259951475",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "0.0011231916614251056",
            "Permute.permute(int)": "55.45197232455745",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.02246383322850211",
            "java.lang.invoke.InvokerBytecodeGenerator.classData(Object) InvokerBytecodeGenerator.java": "0.05615958307125527",
            "Permute.benchmark()": "0.21340641567077004",
            "Permute.swap(int, int)": "43.905562045107374"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.269191958394784",
            "som.Vector.forEach(ForEachInterface)": "17.95648011591503",
            "deltablue.BinaryConstraint.getOutput()": "3.260110222774199",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "7.322311055913479",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "4.269191958394784",
            "som.Vector.<init>(int)": "3.5447230200005175",
            "deltablue.ScaleConstraint.execute()": "3.182488550803385",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.485264819270874",
            "java.lang.Object.<init>() Object.java": "4.243318067737846",
            "som.Dictionary.getBucket(int)": "13.63554037620637"
        },
        "YourKit_List.txt": {
            "java.lang.invoke.LambdaForm.compileToBytecode() LambdaForm.java": "0.12109143748990903",
            "List.tail(List$Element, List$Element, List$Element)": "3.081104353909908",
            "List$Element.<init>(Object)": "0.269092083310909",
            "List.makeList(int)": "0.659275604111727",
            "List$Element.getNext()": "21.016091706581992",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.25563747914536356",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.20181906248318174",
            "List.isShorterThan(List$Element, List$Element)": "73.85232226467897",
            "java.util.concurrent.atomic.AtomicLong.addAndGet(long) AtomicLong.java": "0.12109143748990903",
            "java.nio.Buffer.limit(int) Buffer.java": "0.12109143748990903"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.7060687301974167",
            "nbody.Body.getZ()": "5.964072199681725",
            "nbody.Body.getMass()": "0.6881621768863528",
            "nbody.Body.getX()": "1.275967369643446",
            "nbody.Body.getVZ()": "0.47311149660936763",
            "nbody.NBodySystem.advance(double)": "43.81299192843113",
            "nbody.Body.setVY(double)": "6.021419047755588",
            "nbody.Body.setVZ(double)": "7.698814353916072",
            "nbody.Body.setVX(double)": "29.218219093633063",
            "nbody.Body.setY(double)": "1.232957233588049"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.71227649272868",
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.0",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.060847871628375974",
            "sun.nio.fs.UnixFileAttributes.get(UnixPath, boolean) UnixFileAttributes.java": "0.0",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.0",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.07823297780791195",
            "sun.nio.fs.UnixNativeDispatcher.stat(UnixPath, UnixFileAttributes) UnixNativeDispatcher.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.07823297780791195",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.06954042471814396",
            "Run.measure(Benchmark)": "8.692553089767996E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.90083622716726",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.759798807169435",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.46995343912048",
            "cd.RedBlackTree.findNode(Comparable)": "8.502421477178938",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.058613762710806",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.0788887677717733",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.390332777924848",
            "cd.RedBlackTree.put(Comparable, Object)": "6.3846022081380305",
            "cd.Vector2D.compareNumbers(double, double)": "9.771555818552716",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.667253219552454"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.1132666090036657",
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.09267268009390829",
            "jdk.internal.reflect.UTF8.encode(String) UTF8.java": "0.1750483957329379",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.811071296181885",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0617817867292722",
            "Sieve.benchmark()": "88.56419127641169",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.102969644548787",
            "com.yourkit.probes.Table.createRow() a": "0.09267268009390829",
            "Sieve.sieve(boolean[], int)": "7.640347625519996",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Class) InvokerBytecodeGenerator.java": "0.0823757156390296"
        },
        "YourKit_Bounce.txt": {
            "Run.runBenchmark()": "0.11551568125373018",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.17327352188059528",
            "Bounce.benchmark()": "64.26522400415855",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17327352188059528",
            "som.Random.next()": "0.17327352188059528",
            "Bounce.lambda$benchmark$0(Random, int)": "0.17327352188059528",
            "java.lang.invoke.MemberName.isGetter() MemberName.java": "0.11551568125373018",
            "jdk.internal.org.objectweb.asm.Frame.getAbstractTypeFromDescriptor(SymbolTable, String, int) Frame.java": "0.8856202229452649",
            "Bounce$Ball.bounce()": "33.03748483856683",
            "Bounce$Ball.<init>(Random)": "0.7508519281492462"
        }
    },
    "Runtimes": {
        "Permute_JProfiler_.txt": 29.838,
        "Havlak_honest_.hpl": 152.356,
        "Permute_not_profiled_": 29.6445,
        "Permute_honest_.hpl": 29.3415,
        "List_YourKit_.txt": 24.503,
        "CD_not_profiled_": 40.79,
        "Json_not_profiled_": 81.41550000000001,
        "Queens_not_profiled_": 21.899,
        "List_JProfiler_.txt": 28.834,
        "Permute_Perf_.data": 30.863,
        "Bounce_Perf_.data": 27.4255,
        "Richards_Perf_.data": 93.537,
        "Sieve_JProfiler_.txt": 27.275,
        "Permute_YourKit_.txt": 29.302999999999997,
        "Queens_JProfiler_.txt": 26.1695,
        "Towers_JProfiler_.txt": 27.4115,
        "Storage_Perf_.data": 65.8135,
        "JavaFlightRecorder_Sieve_JFR_.jfr": 30.416,
        "List_not_profiled_": 22.499499999999998,
        "JavaFlightRecorder_Mandelbrot_JFR_.jfr": 37.285,
        "DeltaBlue_YourKit_.txt": 14.9575,
        "Havlak_not_profiled_": 152.2095,
        "rebench_test_Async_CD_Async_.txt": 135.685,
        "List_honest_.hpl": 22.353,
        "JavaFlightRecorder_Towers_JFR_.jfr": 25.557,
        "Mandelbrot_YourKit_.txt": 37.364,
        "Queens_Perf_.data": 21.625,
        "Towers_not_profiled_": 26.0895,
        "NBody_Perf_.data": 21.95,
        "CD_YourKit_.txt": 41.994,
        "Sieve_honest_.hpl": 31.1665,
        "Bounce_JProfiler_.txt": 44.1515,
        "rebench_test_Async_Json_Async_.txt": 242.713,
        "rebench_test_Async_NBody_Async_.txt": 56.687,
        "JavaFlightRecorder_Storage_JFR_.jfr": 57.6835,
        "Storage_honest_.hpl": 59.646,
        "JavaFlightRecorder_Richards_JFR_.jfr": 89.363,
        "JavaFlightRecorder_DeltaBlue_JFR_.jfr": 11.993500000000001,
        "Havlak_YourKit_.txt": 151.9725,
        "List_Perf_.data": 23.24,
        "Json_Perf_.data": 83.774,
        "rebench_test_Async_Mandelbrot_Async_.txt": 107.2825,
        "Havlak_Perf_.data": 157.8225,
        "JavaFlightRecorder_List_JFR_.jfr": 21.947000000000003,
        "Storage_not_profiled_": 61.0705,
        "rebench_test_Async_Queens_Async_.txt": 58.2055,
        "Towers_YourKit_.txt": 27.576999999999998,
        "NBody_JProfiler_.txt": 21.327,
        "Mandelbrot_honest_.hpl": 37.961,
        "Havlak_JProfiler_.txt": 1920.642,
        "Mandelbrot_Perf_.data": 39.055,
        "rebench_test_Async_Permute_Async_.txt": 78.4555,
        "DeltaBlue_not_profiled_": 11.8965,
        "CD_JProfiler_.txt": 478.63,
        "DeltaBlue_honest_.hpl": 12.1935,
        "JavaFlightRecorder_CD_JFR_.jfr": 41.786500000000004,
        "Sieve_Perf_.data": 33.135000000000005,
        "NBody_honest_.hpl": 21.554499999999997,
        "rebench_test_Async_Sieve_Async_.txt": 81.91,
        "CD_honest_.hpl": 42.0315,
        "rebench_test_Async_Havlak_Async_.txt": 452.6195,
        "Towers_Perf_.data": 26.8,
        "JavaFlightRecorder_Bounce_JFR_.jfr": 15.0535,
        "rebench_test_Async_DeltaBlue_Async_.txt": 39.5905,
        "Richards_not_profiled_": 89.5195,
        "rebench_test_Async_List_Async_.txt": 64.672,
        "JavaFlightRecorder_Permute_JFR_.jfr": 29.49,
        "Richards_honest_.hpl": 90.28450000000001,
        "JavaFlightRecorder_Havlak_JFR_.jfr": 151.19400000000002,
        "rebench_test_Async_Bounce_Async_.txt": 62.515,
        "rebench_test_Async_Towers_Async_.txt": 70.5235,
        "Json_YourKit_.txt": 80.69999999999999,
        "DeltaBlue_JProfiler_.txt": 96.23949999999999,
        "NBody_YourKit_.txt": 22.999499999999998,
        "Mandelbrot_not_profiled_": 37.569500000000005,
        "JavaFlightRecorder_NBody_JFR_.jfr": 21.0965,
        "Richards_YourKit_.txt": 93.19200000000001,
        "rebench_test_Async_Storage_Async_.txt": 154.17000000000002,
        "DeltaBlue_Perf_.data": 12.608,
        "Json_honest_.hpl": 85.273,
        "Sieve_YourKit_.txt": 32.0625,
        "Queens_YourKit_.txt": 20.7905,
        "Richards_JProfiler_.txt": 91.04650000000001,
        "Towers_honest_.hpl": 26.2725,
        "CD_Perf_.data": 43.364999999999995,
        "Json_JProfiler_.txt": 1026.2485000000001,
        "Queens_honest_.hpl": 20.6615,
        "Sieve_not_profiled_": 30.863,
        "Bounce_YourKit_.txt": 13.808,
        "Bounce_not_profiled_": 25.764,
        "Storage_JProfiler_.txt": 1035.913,
        "Bounce_honest_.hpl": 25.977,
        "rebench_test_Async_Richards_Async_.txt": 260.885,
        "JavaFlightRecorder_Queens_JFR_.jfr": 21.052,
        "NBody_not_profiled_": 21.0875,
        "Mandelbrot_JProfiler_.txt": 37.82,
        "JavaFlightRecorder_Json_JFR_.jfr": 83.45,
        "Storage_YourKit_.txt": 61.1325
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.49%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.28%",
            "[.] void nbody.NBodySystem.advance(double)": "97.00%",
            "0xffffffffb4c0634b": "0.11%",
            "0xffffffffb4c063aa": "0.08%"
        },
        "Permute.data": {
            " ": "0",
            "0xffffffffb4c6958b": "0.12%",
            "[.] Interpreter": "0.32%",
            "0xffffffffb4c0634b": "0.17%",
            "[.] void Permute.permute(int)": "97.14%",
            "0xffffffffb4c063aa": "0.15%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "35.08%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.30%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.75%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.13%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.04%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.StayConstraint.<init>(deltablue.Variable, deltablue.Strength$Sym, deltablue.Planner)": "3.99%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "7.17%",
            "[.] vtable chunks": "5.99%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "9.59%",
            "[.] void deltablue.Planner.chainTest(int)": "24.59%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.45%",
            "[.] Interpreter": "0.52%",
            "0xffffffffb51c12b7": "0.28%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "[.] boolean Queens.placeQueen(int)": "93.93%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.09%",
            "[.] Interpreter": "0.40%",
            "[.] void Towers.moveDisks(int, int, int)": "0.10%",
            "[.] java.lang.Object Towers.benchmark()": "0.08%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.56%",
            "[.] boolean richards.Scheduler.start()": "22.57%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.62%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.16%",
            "[.] void richards.Scheduler.schedule()": "7.73%"
        },
        "Storage.data": {
            " ": "0",
            "0xffffffffb4c696c9": "0.07%",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.36%",
            "[.] Interpreter": "0.21%",
            "0xffffffffb51c12b7": "0.12%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "79.01%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.45%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.99%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.62%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.95%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.80%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.29%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb4c063aa": "0.09%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.47%",
            "[.] Interpreter": "0.43%",
            "[.] java.lang.Object List.benchmark()": "0.40%",
            "0xffffffffb51c12b7": "0.17%",
            "[.] List$Element List.makeList(int)": "0.62%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.34%",
            "0xffffffffb51c12b7": "0.24%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "82.59%",
            "[.] java.lang.Object Sieve.benchmark()": "7.02%",
            "[.] int Sieve.sieve(boolean[], int)": "6.93%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.74%",
            "0xffffffffb51c12b7": "0.30%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "61.08%",
            "[.] java.lang.Object Bounce.benchmark()": "0.10%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.43%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.54%",
            "[.] StubRoutines (2)": "8.79%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.09%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.74%"
        }
    }
}