{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.nio.CharBuffer.position(I)Ljava/nio/Buffer;": "0.08984725965858041",
            "Mandelbrot.mandelbrot(I)I": "99.82030548068283",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.08984725965858041"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.8210180623973727",
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.16420361247947454",
            "Queens.placeQueen(I)Z": "83.2512315270936",
            "Queens.getRowColumn(II)Z": "13.957307060755337",
            "java.util.Arrays.fill([ZZ)V": "1.1494252873563218",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/MemberName;": "0.16420361247947454",
            "Queens.queens()Z": "0.4926108374384236"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "94.80812641083521",
            "java.lang.invoke.StringConcatFactory.parseRecipe(Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;": "0.22573363431151242",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.22573363431151242",
            "Bounce.benchmark()Ljava/lang/Object;": "4.74040632054176"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "som.Dictionary.transferEntries([Lsom/Dictionary$Entry;)V": "1.244912616710558",
            "havlak.SimpleLoop.setParent(Lhavlak/SimpleLoop;)V": "0.4548719176442423",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "3.5910940866650707",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "31.14675604500838",
            "havlak.HavlakLoopFinder.findLoops()V": "2.5137658606655497",
            "som.IdentityDictionary.newEntry(Lsom/Dictionary$CustomHash;Ljava/lang/Object;I)Lsom/Dictionary$Entry;": "3.1362221690208285",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "51.280823557577214",
            "havlak.UnionFindNode.findSet()Lhavlak/UnionFindNode;": "0.9336844625329184",
            "havlak.LoopStructureGraph.createNewLoop(Lhavlak/BasicBlock;Z)Lhavlak/SimpleLoop;": "0.7900406990663156",
            "som.Vector.append(Ljava/lang/Object;)V": "4.069906631553747"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "9.075487701441899",
            "cd.Motion.findIntersection(Lcd/Motion;)Lcd/Vector3D;": "1.3570822731128074",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "15.691263782866836",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "3.9016115351993212",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.530110262934688",
            "cd.Simulator.simulate(D)Lsom/Vector;": "0.932994062765055",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "12.044105173876165",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "20.27141645462256",
            "cd.RedBlackTree$Node.successor()Lcd/RedBlackTree$Node;": "5.682782018659881",
            "cd.CollisionDetector.putIntoMap(Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "1.86598812553011"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "88.9922480620155",
            " ": "0",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "10.387596899224807",
            "List.makeList(I)LList$Element;": "0.6201550387596899"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(Ldeltablue/AbstractConstraint;Lsom/Vector;Ldeltablue/AbstractConstraint;)V": "9.642857142857142",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "2.857142857142857",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "3.928571428571429",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "49.285714285714285",
            "deltablue.Planner.lambda$chainTest$7(I)Ldeltablue/Variable;": "1.0714285714285714",
            "deltablue.Planner.makePlan(Lsom/Vector;)Ldeltablue/Plan;": "1.7857142857142858",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "8.214285714285715",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "2.857142857142857",
            "deltablue.Plan$$Lambda$82+0x0000000800c12420.2124643775.apply(Ljava/lang/Object;)V": "8.214285714285715",
            "deltablue.Planner.lambda$constraintsConsuming$3(Ldeltablue/AbstractConstraint;Lsom/ForEachInterface;Ldeltablue/AbstractConstraint;)V": "2.142857142857143"
        },
        "JavaFlightRecorder_Storage.jfr": {
            " ": "0",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "12.400245549416821",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "87.47697974217311",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.061387354205033766",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.061387354205033766"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.nio.ByteBuffer.flip()Ljava/nio/ByteBuffer;": "0.1091703056768559",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.1091703056768559",
            "Sieve.benchmark()Ljava/lang/Object;": "0.2183406113537118",
            "java.util.Arrays.fill([ZZ)V": "0.1091703056768559",
            "Sieve.sieve([ZI)I": "99.45414847161572"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$MH+0x0000000800c0f000.112466394.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.1362397820163488",
            "Towers.moveDisks(III)V": "61.9891008174387",
            "Towers.benchmark()Ljava/lang/Object;": "0.2724795640326976",
            "java.lang.invoke.StringConcatFactory.makeConcatWithConstants(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;": "0.1362397820163488",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.32970027247957",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "0.1362397820163488"
        },
        "JavaFlightRecorder_NBody.jfr": {
            " ": "0",
            "nbody.NBodySystem.advance(D)V": "99.84051036682617",
            "NBody.innerBenchmarkLoop(I)Z": "0.1594896331738437"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.Scheduler.createIdler(IILrichards/Packet;Lrichards/TaskState;)V": "4.730713245997088",
            "richards.Scheduler.holdSelf()Lrichards/TaskControlBlock;": "0.21834061135371177",
            "richards.Scheduler$$Lambda$76+0x0000000800c0dbd0.715521683.apply(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.07278020378457059",
            "richards.Scheduler.lambda$createWorker$3(Lrichards/Packet;Lrichards/RBObject;)Lrichards/TaskControlBlock;": "0.07278020378457059",
            "richards.Scheduler.findTask(I)Lrichards/TaskControlBlock;": "3.8573508005822412",
            "richards.Scheduler.schedule()V": "57.86026200873362",
            "Richards.benchmark()Ljava/lang/Object;": "1.0189228529839882",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "0.07278020378457059",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "27.14701601164483",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.9490538573508"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonPureStringParser.isWhiteSpace()Z": "5.863636363636364",
            "json.JsonPureStringParser.readExponent()Z": "6.363636363636364",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "16.90909090909091",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "30.31818181818182",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "4.909090909090909",
            "json.JsonObject.<init>()V": "0.6363636363636364",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "22.636363636363637",
            "json.JsonPureStringParser.readObject()Ljson/JsonObject;": "0.5909090909090909",
            "java.lang.StringLatin1.hashCode([B)I": "0.9545454545454546",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "8.90909090909091"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.StringConcatHelper.newString([BJ)Ljava/lang/String;": "0.1221001221001221",
            "Permute.swap(II)V": "28.57142857142857",
            "Permute.permute(I)V": "71.18437118437119",
            "Permute.benchmark()Ljava/lang/Object;": "0.1221001221001221"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.TaskControlBlock::runTask": "1.9",
            "richards.Packet::<init>": "6.9",
            "Richards::benchmark": "4.9",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.HandlerTaskDataRecord::workInAdd": "3.8",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "sun.nio.fs.UnixFileSystem::<init>": "0.0",
            "java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator::generate": "0.0",
            "java.lang.invoke.LambdaForm$Name::<init>": "0.0",
            "java.lang.invoke.MethodType::checkPtypes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.1",
            "Mandelbrot::mandelbrot": "98.6",
            "java.util.IdentityHashMap$IdentityHashMapIterator::<init>": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.6",
            "List::makeList": "0.8",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "80.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.4",
            "List$Element::setNext": "0.1",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "4.6",
            "json.JsonPureStringParser::read": "16.4",
            "java.lang.String::<init>": "5.6",
            "java.lang.String::length": "2.9",
            "java.util.Arrays::copyOfRange": "6.9",
            "java.lang.String::equals": "20.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "9.8",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.3"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.5",
            "havlak.HavlakLoopFinder::findLoops": "6.0",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.7",
            "AGCT::Unknown not Java[ERR=-3]": "7.5",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.1",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::hasSome": "2.2",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.5",
            "Permute::permute": "50.5",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.1",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.Integer::valueOf": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "6.2"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "1.1",
            "Queens::placeQueen": "13.5",
            "Queens::setRowColumn": "23.1",
            "java.util.Arrays::fill": "0.2",
            "Queens::queens": "0.5"
        },
        "Storage.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.8",
            "java.util.Arrays::setAll": "34.9",
            "som.Random::next": "11.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x0000000800c030f0::apply": "0.5",
            "Storage$$Lambda$2.0x0000000800c030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.6",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800::newInvokeSpecial": "1.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "5.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "85.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "java.util.Arrays::fill": "6.2",
            "java.lang.String::getChars": "0.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::addPropagate": "3.9",
            "deltablue.Variable::<init>": "5.0",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0::apply": "3.0",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938::apply": "4.8",
            "som.Vector::append": "4.8",
            "AGCT::Unknown not Java[ERR=-3]": "12.1",
            "AGCT::Unknown Java[ERR=-5]": "16.6",
            "deltablue.AbstractConstraint::satisfy": "3.2",
            "som.Dictionary::hash": "13.0",
            "som.Vector::forEach": "7.4"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.0",
            "Bounce$Ball::bounce": "76.1",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "jdk.internal.org.objectweb.asm.ByteVector::putUTF8": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.8"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.5",
            "nbody.Body::setX": "1.8",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "7.5",
            "nbody.Body::setVX": "29.0",
            "nbody.Body::setVY": "6.1",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "nbody.NBodySystem::advance": "39.8"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "1.6",
            "Towers::popDiskFrom": "22.8",
            "Towers::moveDisks": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "Towers::pushDisk": "37.9",
            "Towers$TowersDisk::setNext": "17.0",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.7",
            "Towers$TowersDisk::getNext": "3.1"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "13.9",
            "cd.RedBlackTree::forEach": "3.7",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "3.0",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "10.1",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.8",
            "cd.CollisionDetector::isInVoxel": "21.0",
            "cd.RedBlackTree::treeInsert": "13.9"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.79%",
            "deltablue.AbstractConstraint.satisfy": "2.56%",
            "som.Vector.append": "3.97%",
            "vtable": "3.26%",
            "som.Vector.forEach": "26.37%",
            "itable": "3.81%",
            "deltablue.Planner.addPropagate": "2.15%",
            "deltablue.Plan.lambda$execute$0": "3.68%",
            "deltablue.Planner$$Lambda$5.0x0000000800c0cbb0.apply": "1.92%",
            "deltablue.Plan$$Lambda$8.0x0000000800c0d938.apply": "6.17%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "75.11%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.04%",
            "som.Random.next": "0.88%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.64%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.26%",
            "Bounce$Ball.<init>": "1.84%",
            "Bounce.lambda$benchmark$0": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*,": "0.01%",
            "Mandelbrot.mandelbrot": "98.63%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "Storage$$Lambda$2.0x0000000800c030f0.<init>": "0.54%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.69%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000800c06800.newInvokeSpecial": "1.14%",
            "Storage$$Lambda$2.0x0000000800c030f0.apply": "0.56%",
            "java.util.Arrays.setAll": "35.15%",
            "Storage.lambda$buildTreeDepth$0": "4.17%",
            "SpinPause": "0.19%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.28%",
            "Storage.buildTreeDepth": "44.01%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "17.87%",
            "Towers.popDiskFrom": "18.74%",
            "Towers.moveDisks": "8.80%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "42.43%",
            "Towers.moveTopDisk": "4.91%",
            "Towers$TowersDisk.getSize": "0.38%",
            "Towers$TowersDisk.getNext": "3.85%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "12.90%",
            "cd.CollisionDetector.isInVoxel": "18.90%",
            "cd.RedBlackTree.forEach": "5.85%",
            "Node::set_req_X(unsigned": "3.79%",
            "cd.RedBlackTree.put": "6.16%",
            "cd.RedBlackTree.treeInsert": "11.48%",
            "cd.RedBlackTree.treeMinimum": "5.13%",
            "cd.RedBlackTree.findNode": "2.80%",
            "cd.Vector2D.compareNumbers": "4.03%",
            "cd.RedBlackTree.leftRotate": "2.09%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.08%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.12%",
            "som.Vector.hasSome": "2.12%",
            "som.Vector.append": "2.65%",
            "som.Vector.forEach": "2.18%",
            "som.IdentitySet.lambda$contains$0": "31.39%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.95%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.89%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.89%",
            "havlak.HavlakLoopFinder.doDFS": "5.21%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "4.92%",
            "Sieve.benchmark": "6.53%",
            "Interpreter": "0.05%",
            "void": "0.03%",
            "Sieve.sieve": "85.80%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.42%",
            "Permute.swap": "40.37%",
            "Permute.benchmark": "0.06%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.96%",
            "nbody.Body.getZ": "7.85%",
            "nbody.Body.getY": "0.72%",
            "nbody.Body.setX": "1.19%",
            "nbody.Body.setY": "1.73%",
            "nbody.Body.setVX": "27.44%",
            "nbody.Body.setVY": "5.65%",
            "nbody.Body.getMass": "0.45%",
            "nbody.Body.getVZ": "0.43%",
            "nbody.NBodySystem.advance": "41.75%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.13%",
            "Interpreter": "0.05%",
            "List.makeList": "1.33%",
            "List$Element.setNext": "0.06%",
            "List.tail": "4.78%",
            "List$Element.length": "0.15%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.19%",
            "List$Element.<init>": "0.35%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.54%",
            "java.lang.String.length": "3.32%",
            "java.lang.String.<init>": "6.78%",
            "json.JsonPureStringParser.readArray": "2.58%",
            "java.lang.String.isLatin1": "3.07%",
            "json.JsonPureStringParser.readStringInternal": "6.67%",
            "java.util.Arrays.copyOfRange": "8.51%",
            "java.lang.String.equals": "22.12%",
            "json.JsonPureStringParser.read": "13.77%",
            "json.JsonPureStringParser.readValue": "2.49%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.99%",
            "Queens.getRowColumn": "68.18%",
            "Queens.setRowColumn": "18.21%",
            "Interpreter": "0.05%",
            "Queens.queens": "0.60%",
            "Queens.placeQueen": "9.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "Queens.benchmark": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.64%",
            "Richards.benchmark": "4.89%",
            "richards.Packet.<init>": "7.59%",
            "richards.Scheduler$$Lambda$4.0x0000000800c06a28.apply": "3.10%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.91%",
            "itable": "34.92%",
            "richards.TaskControlBlock.<init>": "3.04%",
            "richards.RBObject.<init>": "6.47%",
            "richards.RBObject.append": "3.09%",
            "richards.Scheduler$$Lambda$5.0x0000000800c06c50.apply": "3.52%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "4.9",
            "Towers.moveDisks": "93.5",
            "java.io.PrintStream.println": "0.1",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "7.8",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "91.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.1",
            "deltablue.Planner.removePropagateFrom": "9.7",
            "som.Vector.<init>": "33.0",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "7.8",
            "deltablue.Planner.addPropagate": "1.2",
            "deltablue.Planner.constraintsConsuming": "5.0",
            "deltablue.AbstractConstraint.<init>": "4.0",
            "deltablue.Planner.addConstraintsConsumingTo": "16.3"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.4",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.0",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.schedule": "14.4",
            "richards.Scheduler.createWorker": "0.1",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.4",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.5",
            "Bounce.benchmark": "51.1",
            "Bounce$Ball.<init>": "46.7",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "5.8",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.4",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.2",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.6",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "73.4",
            "List$Element.<init>": "22.6"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "java.util.Arrays.fill": "0.4",
            "Queens.verifyResult": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "22.2",
            "Queens.placeQueen": "76.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.3",
            "Run.printResult": "0.2"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.36092972800242",
            "java.lang.String.<init>(byte[], byte) String.java": "6.273309422998491",
            "json.JsonPureStringParser.isWhiteSpace()": "2.4555044926482026",
            "json.JsonPureStringParser.read()": "21.632826394991444",
            "java.lang.String.length() String.java": "3.2585890099355432",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.0651759848296916",
            "json.JsonArray.<init>()": "2.1191340142032433",
            "java.lang.String.substring(int, int) String.java": "10.398052414929804",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.5970660085017645",
            "json.JsonPureStringParser.readStringInternal()": "3.1618824973826176"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.429333881846034",
            "som.Vector.hasSome(TestInterface)": "2.1738424397267546",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.508222277554645",
            "havlak.HavlakLoopFinder.findLoops()": "11.44515053425859",
            "som.Vector.<init>(int)": "3.7067910924424337",
            "som.Vector.append(Object)": "3.472951467451906",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.666908445291272",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "3.4036656526398987",
            "som.Vector.removeAll()": "2.6523475982721854",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.64168407833628"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "9.82260232492873",
            "Queens.getRowColumn(int, int)": "68.1082997296938",
            "Queens.queens()": "0.38404159465886767",
            "Benchmark.innerBenchmarkLoop(int)": "0.28064578071224944",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.1329374750742234",
            "Queens.setRowColumn(int, int, boolean)": "20.32466285579238",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.19202079732943383",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.147708305638026",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.31018744183985464",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.1329374750742234"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.226937916520519",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.5918883494249476",
            "richards.TaskControlBlock.runTask()": "38.5349554173051",
            "richards.Scheduler.<init>()": "1.502704498883125",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.573999889235541",
            "richards.Scheduler.schedule()": "2.4737395927560044",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "3.8066052539275232",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.4694751610699848",
            "richards.RBObject.append(Packet, Packet)": "3.891524672783326",
            "Richards.benchmark()": "25.35398475142609"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$7.0x00000008000c2a90.apply(int)": "0.6642844053509256",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.5554792010262051",
            "java.lang.String.equals(Object) String.java": "0.09735202492211842",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.3342954004031524",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.10880520432472059",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.91075682609493",
            "som.Random.next()": "13.652189847901782",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.06871907641561299",
            "Storage.buildTreeDepth(int, Random)": "40.06322155030237",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.1474711379879063"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.792593748874296",
            "Towers.popDiskFrom(int)": "32.33630720092218",
            "Towers.moveDisks(int, int, int)": "8.861565062859475",
            "java.util.zip.ZipFile$CleanableResource.getInflater() ZipFile.java": "0.1560980295625653",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.1080678666202375",
            "Towers$TowersDisk.getSize()": "0.38424130353862224",
            "java.util.TreeMap.get(Object) TreeMap.java": "0.060037703677909726",
            "Towers.moveTopDisk(int, int)": "7.144486737671257",
            "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey() Collections.java": "0.09606032588465556",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.059341266315247"
        },
        "YourKit_Permute.txt": {
            "java.nio.CharBuffer.arrayOffset() CharBuffer.java": "0.10194603656464511",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.10194603656464511",
            "Permute.permute(int)": "55.68519063908837",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.10194603656464511",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.18123739833714686",
            "jdk.internal.org.objectweb.asm.MethodVisitor.<init>(int) MethodVisitor.java": "0.1585827235450035",
            "com.yourkit.probes.Table.createRow() a": "0.10194603656464511",
            "Permute.benchmark()": "0.44176615844679545",
            "Permute.swap(int, int)": "42.86264470673523",
            "java.lang.ClassLoader.checkCerts(String, CodeSource) ClassLoader.java": "0.22654674792143356"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.986049395473805",
            "som.Vector.forEach(ForEachInterface)": "40.04340188074818",
            "deltablue.EqualityConstraint.execute()": "3.6426578485067695",
            "deltablue.BinaryConstraint.isSatisfied()": "2.686783093934071",
            "som.Vector.<init>(int)": "4.80520822568978",
            "deltablue.ScaleConstraint.execute()": "2.893458716544384",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.867624263718095",
            "deltablue.Planner.makePlan(Vector)": "3.487651131549034",
            "som.Vector.append(Object)": "4.3918569804691545",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "4.340188074816576"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.118699058320804",
            "List.tail(List$Element, List$Element, List$Element)": "4.075334335680937",
            "List.makeList(int)": "0.9100261137928306",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.118699058320804",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.18464297961013953",
            "List$Element.getNext()": "21.484529556065525",
            "java.lang.StringConcatHelper.mix(long, long) StringConcatHelper.java": "0.118699058320804",
            "List.isShorterThan(List$Element, List$Element)": "72.65701247658991",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.2769644694152093",
            "java.nio.file.spi.FileSystemProvider.<clinit>() FileSystemProvider.java": "0.02637756851573422"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0370008650277645",
            "nbody.Body.getZ()": "5.1622624661662515",
            "nbody.Body.getMass()": "0.7813154002846219",
            "nbody.Body.getX()": "1.3812540112174565",
            "nbody.Body.setZ(double)": "0.5441303680553616",
            "nbody.NBodySystem.advance(double)": "45.21862879147249",
            "nbody.Body.setVY(double)": "6.264475262996343",
            "nbody.Body.setVZ(double)": "8.60842146385021",
            "nbody.Body.setVX(double)": "27.904121438736496",
            "nbody.Body.setY(double)": "0.40460976086167916"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.54993758900159",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.13185422197218755",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.03516112585925001",
            "java.util.zip.ZipFile$CleanableResource.<init>(ZipFile, ZipCoder, File, int) ZipFile.java": "0.017580562929625006",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.05274168878887502",
            "Harness.main(String[])": "8.790281464812503E-4",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "8.790281464812503E-4",
            "jdk.internal.org.objectweb.asm.MethodWriter.endCurrentBasicBlockWithNoSuccessor() MethodWriter.java": "0.07911253318331253",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.061531970253687514",
            "java.security.BasicPermission.newPermissionCollection() BasicPermission.java": "0.07032225171850003"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.1012825132045965",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.41604636365727",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.427315308132805",
            "cd.RedBlackTree.findNode(Comparable)": "8.401879690602312",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.026248208084509",
            "cd.RedBlackTree$Node.successor()": "1.609849210790589",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.000812590554018",
            "cd.RedBlackTree.put(Comparable, Object)": "7.098668424724217",
            "cd.Vector2D.compareNumbers(double, double)": "8.739181430006056",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.2852652801520925"
        },
        "YourKit_Sieve.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07991191930671969",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.07103281716152862",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "8.959014064497797",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, Object, Object) DirectMethodHandle$Holder": "0.07991191930671969",
            "Sieve.benchmark()": "85.99410427617559",
            "java.util.zip.ZipFile.getInputStream(ZipEntry) ZipFile.java": "0.07991191930671969",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.07991191930671969",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.invoke(Object, Object, long) LambdaForm$MH": "0.07991191930671969",
            "Sieve.sieve(boolean[], int)": "4.164298906094615",
            "jdk.internal.misc.Unsafe.getAndAddLong(Object, long, long) Unsafe.java": "0.16870294075863046"
        },
        "YourKit_Bounce.txt": {
            "java.lang.PublicMethods$Key.matches(Method, String, Class[]) PublicMethods.java": "0.03829143612031169",
            "Bounce.benchmark()": "58.22212862093392",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17231146254140262",
            "java.lang.invoke.MethodType.methodType(Class, Class, Class[]) MethodType.java": "0.26804005284218185",
            "java.io.PrintStream.writeln(String) PrintStream.java": "0.26804005284218185",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5552258237445195",
            "som.Random.next()": "0.17231146254140262",
            "com.yourkit.probes.Table.createRow() a": "0.17231146254140262",
            "Bounce$Ball.bounce()": "38.82751622599606",
            "Bounce$Ball.<init>(Random)": "1.3019088280905973"
        }
    },
    "Runtimes": {
        "NBody.data": 21.95,
        "YourKit_Storage.txt": 61.1325,
        "rebench_test_Async_Bounce.txt": 62.515,
        "Permute_not_profiled_": 29.6445,
        "JavaFlightRecorder_Sieve.jfr": 30.416,
        "CD_not_profiled_": 40.79,
        "JProfiler_NBody.txt": 21.327,
        "JProfiler_List.txt": 28.834,
        "YourKit_Mandelbrot.txt": 37.364,
        "CD.data": 43.364999999999995,
        "Json_not_profiled_": 81.41550000000001,
        "List.data": 23.24,
        "Queens_not_profiled_": 21.899,
        "Towers.hpl": 26.2725,
        "Bounce.hpl": 25.977,
        "JavaFlightRecorder_Json.jfr": 83.45,
        "Sieve.data": 33.135000000000005,
        "Richards.hpl": 90.28450000000001,
        "YourKit_Richards.txt": 93.19200000000001,
        "JavaFlightRecorder_Havlak.jfr": 151.19400000000002,
        "JavaFlightRecorder_CD.jfr": 41.786500000000004,
        "JavaFlightRecorder_Towers.jfr": 25.557,
        "rebench_test_Async_CD.txt": 135.685,
        "List_not_profiled_": 22.499499999999998,
        "Havlak_not_profiled_": 152.2095,
        "JProfiler_Json.txt": 1026.2485000000001,
        "rebench_test_Async_NBody.txt": 56.687,
        "JavaFlightRecorder_Bounce.jfr": 15.0535,
        "Havlak.data": 157.8225,
        "Towers_not_profiled_": 26.0895,
        "YourKit_DeltaBlue.txt": 14.9575,
        "rebench_test_Async_Towers.txt": 70.5235,
        "YourKit_NBody.txt": 22.999499999999998,
        "JavaFlightRecorder_NBody.jfr": 21.0965,
        "rebench_test_Async_Sieve.txt": 81.91,
        "Storage.hpl": 59.646,
        "JProfiler_Queens.txt": 26.1695,
        "rebench_test_Async_List.txt": 64.672,
        "rebench_test_Async_Richards.txt": 260.885,
        "YourKit_Towers.txt": 27.576999999999998,
        "JProfiler_Havlak.txt": 1920.642,
        "JavaFlightRecorder_List.jfr": 21.947000000000003,
        "YourKit_Permute.txt": 29.302999999999997,
        "Queens.data": 21.625,
        "Storage_not_profiled_": 61.0705,
        "Json.hpl": 85.273,
        "Towers.data": 26.8,
        "YourKit_List.txt": 24.503,
        "JProfiler_CD.txt": 478.63,
        "JProfiler_Permute.txt": 29.838,
        "Sieve.hpl": 31.1665,
        "DeltaBlue_not_profiled_": 11.8965,
        "CD.hpl": 42.0315,
        "JavaFlightRecorder_Queens.jfr": 21.052,
        "JProfiler_Bounce.txt": 44.1515,
        "Permute.hpl": 29.3415,
        "Richards_not_profiled_": 89.5195,
        "DeltaBlue.hpl": 12.1935,
        "NBody.hpl": 21.554499999999997,
        "JProfiler_Towers.txt": 27.4115,
        "JProfiler_Mandelbrot.txt": 37.82,
        "JavaFlightRecorder_DeltaBlue.jfr": 11.993500000000001,
        "rebench_test_Async_Mandelbrot.txt": 107.2825,
        "YourKit_CD.txt": 41.994,
        "rebench_test_Async_Permute.txt": 78.4555,
        "Mandelbrot.data": 39.055,
        "JProfiler_Storage.txt": 1035.913,
        "YourKit_Sieve.txt": 32.0625,
        "JavaFlightRecorder_Permute.jfr": 29.49,
        "YourKit_Bounce.txt": 13.808,
        "JProfiler_Sieve.txt": 27.275,
        "JProfiler_DeltaBlue.txt": 96.23949999999999,
        "YourKit_Queens.txt": 20.7905,
        "Mandelbrot.hpl": 37.961,
        "JavaFlightRecorder_Storage.jfr": 57.6835,
        "List.hpl": 22.353,
        "Mandelbrot_not_profiled_": 37.569500000000005,
        "Queens.hpl": 20.6615,
        "Storage.data": 65.8135,
        "JavaFlightRecorder_Richards.jfr": 89.363,
        "Bounce.data": 27.4255,
        "Permute.data": 30.863,
        "YourKit_Json.txt": 80.69999999999999,
        "rebench_test_Async_DeltaBlue.txt": 39.5905,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.285,
        "YourKit_Havlak.txt": 151.9725,
        "DeltaBlue.data": 12.608,
        "JProfiler_Richards.txt": 91.04650000000001,
        "rebench_test_Async_Storage.txt": 154.17000000000002,
        "Sieve_not_profiled_": 30.863,
        "Havlak.hpl": 152.356,
        "Richards.data": 93.537,
        "rebench_test_Async_Havlak.txt": 452.6195,
        "Bounce_not_profiled_": 25.764,
        "NBody_not_profiled_": 21.0875,
        "Json.data": 83.774,
        "rebench_test_Async_Json.txt": 242.713,
        "rebench_test_Async_Queens.txt": 58.2055
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "NullCheckEliminator::iterate_one": "0.02%",
            "[.] Interpreter": "0.53%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.29%",
            "[.] void nbody.NBodySystem.advance(double)": "0.06%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.33%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "0.06%",
            "0xffffffffb5800d70": "0.05%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.95%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.95%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.73%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.76%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.78%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "6.72%",
            "[.] vtable chunks": "6.05%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "13.66%",
            "[.] void deltablue.Planner.chainTest(int)": "23.55%",
            "[.] deltablue.Plan deltablue.Planner.makePlan(som.Vector)": "3.21%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.45%",
            "[.] Interpreter": "0.44%",
            "0xffffffffb51c12b7": "0.20%",
            "[.] boolean Queens.placeQueen(int)": "92.94%",
            "0xffffffffb4c063aa": "0.23%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.13%",
            "[.] Interpreter": "0.40%",
            "[.] void Towers.moveDisks(int, int, int)": "0.13%",
            "[.] java.lang.Object Towers.benchmark()": "0.09%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.52%",
            "[.] boolean richards.Scheduler.start()": "22.10%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.73%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.97%",
            "[.] void richards.Scheduler.schedule()": "8.54%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "17.08%",
            "[.] Interpreter": "0.19%",
            "0xffffffffb51c12b7": "0.15%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "78.94%",
            "0xffffffffb4c063aa": "0.12%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "18.58%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "9.65%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "21.38%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "10.99%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "12.66%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.27%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "0xffffffffb5800d70": "0.17%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "95.78%",
            "[.] Interpreter": "0.44%",
            "[.] java.lang.Object List.benchmark()": "0.34%",
            "0xffffffffb51c12b7": "0.14%",
            "[.] List$Element List.makeList(int)": "0.60%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.37%",
            "0xffffffffb51c12b7": "0.20%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "84.83%",
            "[.] java.lang.Object Sieve.benchmark()": "5.85%",
            "[.] int Sieve.sieve(boolean[], int)": "5.84%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.46%",
            "0xffffffffb51c12b7": "0.20%",
            "0xffffffffb4c0634b": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "72.67%",
            "[.] java.lang.Object Bounce.benchmark()": "23.97%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.82%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.62%",
            "[.] StubRoutines (2)": "8.55%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "20.06%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.53%"
        }
    }
}