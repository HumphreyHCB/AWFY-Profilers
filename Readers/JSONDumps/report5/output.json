{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.012523481527864748",
            "jdk.jfr.internal.Utils.isSettingVisible(Ljdk/jfr/internal/Control;Z)Z": "0.004174493842621582",
            "jdk.jfr.internal.handlers.EventHandler1364_1687189702800-2733181.write(JJLjava/lang/String;Ljava/lang/Class;)V": "0.004174493842621582",
            "java.lang.StringConcatHelper.mix(JJ)J": "0.004174493842621582",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.004174493842621582",
            "jdk.jfr.internal.EventWriter.putUncheckedChar(C)V": "0.004174493842621582",
            "java.nio.Buffer.clear()Ljava/nio/Buffer;": "0.004174493842621582",
            "Mandelbrot.mandelbrot(I)I": "99.9415570862033",
            "java.lang.String.<init>([BB)V": "0.004174493842621582",
            "jdk.internal.org.objectweb.asm.Frame.pop()I": "0.004174493842621582"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4247693635096569",
            "Queens.benchmark()Ljava/lang/Object;": "0.03650361717661114",
            "java.nio.Buffer.remaining()I": "0.0033185106524191944",
            "Queens.placeQueen(I)Z": "8.246498971261698",
            "Queens.getRowColumn(II)Z": "71.2982013672264",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.0033185106524191944",
            "java.util.Arrays.fill([ZZ)V": "0.36503617176611136",
            "Queens.setRowColumn(IIZ)V": "18.885644122917636",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.02986659587177275",
            "Queens.queens()Z": "0.6769761730935157"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.Math.abs(I)I": "0.006972285166463308",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation(Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;": "0.003486142583231654",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.3416419731567021",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.2654697577130904",
            "Bounce$Ball.bounce()Z": "85.32333972459473",
            "Bounce.benchmark()Ljava/lang/Object;": "8.300505490674569",
            "som.Random.next()I": "1.3247341816280287",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.05577828133170647",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.0453198535820115",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.304863168903608"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.746300016162176",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "37.489321419500826",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.302994620304311",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "14.772228764055322",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.059522984922999",
            "som.Vector.<init>(I)V": "5.405093394287825",
            "havlak.HavlakLoopFinder.findLoops()V": "3.8696866846759486",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.190621320218883",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.3642954445752813",
            "som.Vector.append(Ljava/lang/Object;)V": "3.068504536953661"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.59090373049255",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "9.26137033688431",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.735956602067691",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.350721333385746",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.267502653406187",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.892920319194936",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.686583592122331",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.692912457250678",
            "cd.Vector2D.compareNumbers(DD)I": "3.5142890836903966",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.44585085891741"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "85.15338630716623",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.009840340475780461",
            "java.lang.invoke.InvokerBytecodeGenerator.addMethod()V": "0.0024600851189451154",
            "List$Element.getNext()LList$Element;": "9.94120396565721",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.22878791606189572",
            "sun.net.www.ParseUtil.firstEncodeIndex(Ljava/lang/String;)I": "0.0024600851189451154",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.410883416566213",
            "List$Element.length()I": "0.06150212797362788",
            "List$Element.setNext(LList$Element;)V": "0.06150212797362788",
            "List.makeList(I)LList$Element;": "2.108292946935964"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.2133122937885528",
            "deltablue.BinaryConstraint.isSatisfied()Z": "2.9407545545832736",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "14.321235595084397",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "13.866972696408933",
            "deltablue.ScaleConstraint.execute()V": "8.855735666810117",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "2.7494859656672883",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "12.647635442069527",
            "som.Vector.<init>(I)V": "6.895232630421269",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.236599244489074",
            "som.Vector.append(Ljava/lang/Object;)V": "2.6825419595466937"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.47707491168651445",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "34.713572963327145",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7101496777013001",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "2.8333151243672385",
            "Storage.benchmark()Ljava/lang/Object;": "0.014567172875924106",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "46.181579809898395",
            "som.Random.next()I": "13.241560144215011",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.0160603080957065",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.02913434575184821",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.7283586437962053"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.System$2.defineClass(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/String;[BLjava/security/ProtectionDomain;ZILjava/lang/Object;)Ljava/lang/Class;": "0.003347168295621904",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.003347168295621904",
            "Sieve.benchmark()Ljava/lang/Object;": "3.2333645735707592",
            "Run.printResult(J)V": "0.003347168295621904",
            "java.util.Arrays.fill([ZZ)V": "5.077654304458428",
            "Sieve.sieve([ZI)I": "91.60864908287589",
            "java.lang.StringConcatHelper.stringOf(Ljava/lang/Object;)Ljava/lang/String;": "0.003347168295621904",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.023430178069353328",
            "jdk.jfr.internal.EventWriter.putUncheckedByte(B)V": "0.003347168295621904",
            "sun.nio.cs.StreamEncoder.isOpen()Z": "0.003347168295621904"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.05950297514875744",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.651382569128454",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.105705285264263",
            "Towers.moveDisks(III)V": "3.4441722086104303",
            "Towers$TowersDisk.getSize()I": "11.60658032901645",
            "Towers.benchmark()Ljava/lang/Object;": "0.07350367518375918",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.02450122506125306",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "36.76583829191459",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "22.156107805390267",
            "Towers.moveTopDisk(II)V": "4.053202660133007"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.656121425854856",
            "nbody.Body.getMass()D": "0.5082460325692355",
            "nbody.Body.setVX(D)V": "29.06337516855098",
            "nbody.NBodySystem.advance(D)V": "42.46447463956021",
            "nbody.Body.getY()D": "0.8436192649448535",
            "nbody.Body.getZ()D": "7.979808456937385",
            "nbody.Body.setVZ(D)V": "9.03087508211458",
            "nbody.Body.getVZ()D": "0.45292673650727794",
            "nbody.Body.setVY(D)V": "5.777408982470698",
            "nbody.Body.setX(D)V": "1.2204819693669398"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.3757709586537725",
            "richards.Scheduler.schedule()V": "9.472321632528743",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.50285540242138",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.441787862636107",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.890961699535521",
            "Richards.benchmark()Ljava/lang/Object;": "8.79463945785426",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.621944719409122",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.845275260793421",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.8732201324906725",
            "richards.RBObject.<init>()V": "11.72618594380568"
        },
        "JavaFlightRecorder_Json.jfr": {
            "json.JsonArray.<init>()V": "2.4860629802621665",
            "java.lang.String.length()I": "3.9124102255034905",
            "json.JsonPureStringParser.isDigit()Z": "3.2695494952538797",
            "java.lang.String.isLatin1()Z": "2.7823815981115967",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "4.811410777961931",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "29.782532268595247",
            "java.lang.String.<init>([BB)V": "6.187534528652503",
            "json.JsonPureStringParser.read()V": "13.98724323238411",
            "java.util.Arrays.copyOfRange([BII)[B": "9.55250866355281",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.0887449148711767"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.00360971735913078",
            "java.lang.Integer.getChars(II[B)I": "0.00360971735913078",
            "Permute.swap(II)V": "43.331047179005886",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.00360971735913078",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstant(Ljava/lang/Object;)Ljdk/internal/org/objectweb/asm/Symbol;": "0.00360971735913078",
            "java.nio.CharBuffer.<init>(IIII[CILjdk/internal/access/foreign/MemorySegmentProxy;)V": "0.00360971735913078",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType(Ljava/lang/String;Ljava/lang/String;)I": "0.00360971735913078",
            "Permute.permute(I)V": "56.20329928166625",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.02887773887304624",
            "Permute.benchmark()Ljava/lang/Object;": "0.3970689095043858"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.2",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "46.0",
            "richards.HandlerTaskDataRecord::workInAdd": "2.2",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.5",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.6",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "sun.invoke.util.Wrapper$Format::unsigned": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.FieldWriter::computeFieldInfoSize": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "jdk.internal.loader.NativeLibraries::loadLibrary": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.lang.invoke.MethodHandleNatives::refKindHasReceiver": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "98.4"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.2",
            "List::isShorterThan": "81.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.5",
            "json.JsonPureStringParser::read": "16.2",
            "java.lang.String::<init>": "4.4",
            "java.lang.String::length": "3.1",
            "java.util.Arrays::copyOfRange": "7.7",
            "java.lang.String::equals": "20.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "10.4",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.0",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.7",
            "havlak.HavlakLoopFinder::findLoops": "5.7",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.1",
            "som.Vector::append": "4.6",
            "AGCT::Unknown not Java[ERR=-3]": "7.5",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.6",
            "havlak.HavlakLoopFinder::doDFS": "5.6",
            "som.Vector::hasSome": "2.1",
            "som.Vector::forEach": "2.4"
        },
        "Permute.hpl": {
            "Permute::swap": "40.4",
            "Permute::permute": "51.0",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Run::printResult": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "5.8"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.6",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "13.9",
            "Queens::setRowColumn": "25.1",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.9",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "41.8",
            "java.util.Arrays::setAll": "33.8",
            "som.Random::next": "13.2",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "1.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.0"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "89.3",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "sun.invoke.util.Wrapper::hashPrim": "0.0",
            "Run::measure": "0.0",
            "java.util.Arrays::fill": "5.4"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "9.0",
            "deltablue.ScaleConstraint::execute": "5.7",
            "deltablue.Planner::addPropagate": "2.2",
            "deltablue.Strength::of": "6.6",
            "som.Vector::append": "2.2",
            "AGCT::Unknown not Java[ERR=-3]": "5.9",
            "AGCT::Unknown Java[ERR=-5]": "15.3",
            "som.Vector::<init>": "2.9",
            "som.Vector::forEach": "25.2",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.5"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.1",
            "Bounce$Ball::bounce": "82.7",
            "java.util.Arrays::setAll": "1.3",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.2",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Bounce$Ball::<init>": "3.2",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.1",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.2",
            "nbody.Body::getZ": "8.0",
            "nbody.Body::setVX": "27.9",
            "nbody.Body::setVY": "5.5",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "nbody.NBodySystem::advance": "41.5"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.8",
            "Towers::popDiskFrom": "20.2",
            "Towers::moveDisks": "3.7",
            "Towers::buildTowerAt": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "Towers::pushDisk": "35.7",
            "Towers$TowersDisk::setNext": "15.6",
            "AGCT::Unknown Java[ERR=-5]": "4.1",
            "Towers::moveTopDisk": "3.7",
            "Towers$TowersDisk::getNext": "3.3"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "10.9",
            "cd.RedBlackTree::forEach": "4.8",
            "cd.RedBlackTree::put": "7.1",
            "cd.RedBlackTree::findNode": "8.1",
            "cd.RedBlackTree::leftRotate": "2.6",
            "cd.RedBlackTree::treeMinimum": "6.4",
            "AGCT::Unknown not Java[ERR=-3]": "5.9",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.RedBlackTree::treeInsert": "19.8",
            "cd.CollisionDetector::isInVoxel": "14.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "6.09%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.37%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "9.90%",
            "vtable": "3.50%",
            "deltablue.UnaryConstraint.chooseMethod": "6.63%",
            "deltablue.Variable.<init>": "3.37%",
            "som.Vector.forEach": "22.10%",
            "itable": "3.27%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "3.13%",
            "deltablue.ScaleConstraint.execute": "5.07%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.78%",
            "som.Random.next": "1.37%",
            "clear_page_rep_[k]": "0.10%",
            "java.util.Arrays.setAll": "1.16%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.03%",
            "Bounce.benchmark": "9.13%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.06%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%",
            "Bounce$Ball.<init>": "3.39%",
            "Bounce.lambda$benchmark$0": "0.24%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot": "99.56%",
            "__lll_lock_wake": "0.00%",
            "PeriodicTask::real_time_tick(int)": "0.00%",
            "exit_to_user_mode_loop_[k]": "0.01%",
            "__futex_abstimed_wait_common": "0.00%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "MethodLiveness::BasicBlock::compute_gen_kill_range(ciBytecodeStream*)": "0.01%",
            "__GI___pthread_mutex_trylock": "0.01%",
            "os::elapsed_counter()": "0.01%",
            "futex_wait_setup_[k]": "0.00%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.51%",
            "som.Random.next": "13.15%",
            "java.util.Arrays.setAll": "35.69%",
            "Storage.lambda$buildTreeDepth$0": "3.29%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.56%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.47%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.23%",
            "Storage.buildTreeDepth": "42.62%",
            "_raw_spin_unlock_irqrestore_[k]": "0.18%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.09%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "16.05%",
            "Towers.popDiskFrom": "21.43%",
            "Towers.moveDisks": "8.12%",
            "clear_page_rep_[k]": "0.04%",
            "Towers.pushDisk": "35.02%",
            "Towers.moveTopDisk": "4.45%",
            "Towers$TowersDisk.getSize": "10.52%",
            "Towers$TowersDisk.getNext": "3.81%",
            "Towers.benchmark": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.27%",
            "cd.CollisionDetector.isInVoxel": "14.13%",
            "cd.RedBlackTree.forEach": "5.48%",
            "cd.RedBlackTree.put": "7.39%",
            "cd.RedBlackTree.treeInsert": "20.01%",
            "cd.RedBlackTree.findNode": "6.73%",
            "cd.RedBlackTree.treeMinimum": "6.11%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.15%",
            "cd.Vector2D.compareNumbers": "3.83%",
            "cd.RedBlackTree.leftRotate": "2.72%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.56%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.40%",
            "som.Vector.hasSome": "2.74%",
            "som.Vector.append": "3.23%",
            "som.Vector.forEach": "2.39%",
            "som.IdentitySet.lambda$contains$0": "32.94%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "6.49%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.19%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.72%",
            "havlak.HavlakLoopFinder.doDFS": "5.23%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "7.41%",
            "Sieve.benchmark": "3.04%",
            "clear_page_rep_[k]": "0.10%",
            "Sieve.sieve": "88.51%",
            "SpinPause": "0.02%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "__memset_avx2_unaligned_erms": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.09%",
            "Benchmark.innerBenchmarkLoop": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.14%",
            "Permute.swap": "41.33%",
            "Interpreter": "0.01%",
            "clear_page_rep_[k]": "0.01%",
            "syscall_enter_from_user_mode_[k]": "0.01%",
            "__futex_abstimed_wait_common": "0.01%",
            "[no_Java_frame]": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.38%",
            "nbody.Body.getZ": "7.89%",
            "nbody.Body.getY": "0.63%",
            "nbody.Body.setX": "1.18%",
            "nbody.Body.setY": "1.85%",
            "nbody.Body.setVX": "28.06%",
            "nbody.Body.setVY": "5.76%",
            "nbody.Body.getVZ": "0.49%",
            "nbody.Body.getMass": "0.43%",
            "nbody.NBodySystem.advance": "42.83%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.51%",
            "List.makeList": "0.73%",
            "clear_page_rep_[k]": "0.06%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "4.69%",
            "List$Element.length": "0.07%",
            "List.isShorterThan": "84.34%",
            "List$Element.<init>": "0.17%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.34%",
            "java.lang.String.length": "3.35%",
            "java.lang.String.<init>": "5.70%",
            "json.JsonPureStringParser.readArray": "2.45%",
            "json.JsonPureStringParser.isWhiteSpace": "2.23%",
            "java.lang.String.isLatin1": "2.56%",
            "json.JsonPureStringParser.readStringInternal": "9.54%",
            "java.util.Arrays.copyOfRange": "7.63%",
            "java.lang.String.equals": "22.21%",
            "json.JsonPureStringParser.read": "14.45%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.69%",
            "Queens.getRowColumn": "57.77%",
            "Queens.setRowColumn": "24.74%",
            "clear_page_rep_[k]": "0.10%",
            "Queens.queens": "0.65%",
            "Queens.placeQueen": "15.46%",
            "rcu_core_[k]": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Queens.benchmark": "0.05%",
            "Benchmark.innerBenchmarkLoop": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.93%",
            "Richards.benchmark": "4.92%",
            "richards.Packet.<init>": "6.99%",
            "richards.TaskState.isTaskHoldingOrWaiting": "3.03%",
            "itable": "36.74%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.23%",
            "richards.TaskControlBlock.<init>": "3.22%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.09%",
            "richards.RBObject.<init>": "6.78%",
            "richards.RBObject.append": "2.52%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.7",
            "Towers.moveDisks": "92.9",
            "java.io.PrintStream.println": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "1.0",
            "Run.printResult": "0.2"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.2",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.9",
            "Sieve.sieve": "94.0",
            "java.lang.Integer.valueOf": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.7",
            "deltablue.Planner.removePropagateFrom": "9.7",
            "som.Vector.<init>": "33.7",
            "deltablue.Variable.<init>": "4.6",
            "som.Vector.forEach": "6.9",
            "deltablue.Planner.addPropagate": "1.5",
            "deltablue.Planner.constraintsConsuming": "4.9",
            "deltablue.AbstractConstraint.<init>": "3.5",
            "deltablue.Planner.addConstraintsConsumingTo": "15.9"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.7",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.3",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.2"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.5",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.schedule": "13.9",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "richards.TaskControlBlock.runTask": "84.9",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "1.5",
            "Bounce.benchmark": "51.8",
            "Bounce$Ball.<init>": "46.1",
            "Bounce.lambda$benchmark$0": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.9",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.6",
            "cd.RedBlackTree.<init>": "1.4",
            "cd.Vector2D.<init>": "44.4",
            "cd.RedBlackTree$InsertResult.<init>": "15.2",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.6",
            "nbody.NBodySystem.advance": "98.7",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "97.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.6",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "List.makeList": "0.4",
            "Run.runBenchmark": "0.1",
            "List.tail": "1.7",
            "List$Element.length": "0.1",
            "List.isShorterThan": "71.9",
            "List$Element.<init>": "25.6",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.6",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "21.1",
            "Queens.placeQueen": "77.6",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.4",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "21.800129505719845",
            "java.lang.String.<init>(byte[], byte) String.java": "5.5994620531637604",
            "json.JsonPureStringParser.isWhiteSpace()": "2.0131498115525748",
            "json.JsonPureStringParser.read()": "18.645502996895193",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "4.964385927045114",
            "java.lang.String.length() String.java": "2.49049461222999",
            "java.lang.String.substring(int, int) String.java": "8.953328130966813",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "8.069202543625167",
            "json.JsonPureStringParser.readValue()": "4.619867505686631",
            "json.JsonPureStringParser.readStringInternal()": "3.8436633515416174"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.181052504536659",
            "som.Vector.hasSome(TestInterface)": "2.2241475178772325",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.8599390514614305",
            "havlak.HavlakLoopFinder.findLoops()": "9.762973116263435",
            "som.Vector.<init>(int)": "2.8232880314139295",
            "som.Vector.append(Object)": "4.732779020599228",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.586239595860329",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.829762197250852",
            "som.Vector.removeAll()": "2.153026521666042",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.40964400708624"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.05152224824356",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.144364954605242",
            "Queens.getRowColumn(int, int)": "58.259279458471",
            "Queens.queens()": "0.4812165153508068",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.288729909210484",
            "Queens.setRowColumn(int, int, boolean)": "25.1515832023355",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.144364954605242",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.6255814699560488",
            "jdk.internal.org.objectweb.asm.SymbolTable.put(SymbolTable$Entry) SymbolTable.java": "0.38497321228064546",
            "java.lang.AbstractStringBuilder.newCapacity(int) AbstractStringBuilder.java": "0.17644605562862917"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.279777018941716",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9408691591512712",
            "richards.TaskControlBlock.runTask()": "37.34713831246535",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.571637042874238",
            "richards.Scheduler.schedule()": "2.685112220179202",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "4.027668330268804",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.6380643843212794",
            "richards.RBObject.append(Packet, Packet)": "2.7142982225724546",
            "Richards.benchmark()": "27.13933397542539",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.9408691591512712"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.52400967745532",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.2152564860134016",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.69563957053506",
            "java.lang.invoke.LambdaFormEditor.putInCache(LambdaFormEditor$TransformKey, LambdaForm) LambdaFormEditor.java": "0.12821513384545064",
            "som.Random.next()": "14.231879856845019",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.763716232035945",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.16166256006600296",
            "Storage.buildTreeDepth(int, Random)": "36.89251112126923",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.8653295128939837",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.13936427591896808"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "33.14381926585402",
            "Towers.popDiskFrom(int)": "31.24099039359727",
            "Towers.moveDisks(int, int, int)": "8.983658736290982",
            "Towers$TowersDisk.getSize()": "1.1301650271585573",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.14991985054144127",
            "Towers.moveTopDisk(int, int)": "7.911155190109902",
            "java.util.zip.Inflater.init(boolean) Inflater.java (native)": "0.19604903532342322",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.16145214673693675",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "16.491183559558543",
            "Towers.benchmark()": "0.23064592390990968"
        },
        "YourKit_Permute.txt": {
            "java.util.concurrent.ConcurrentHashMap.transfer(ConcurrentHashMap$Node[], ConcurrentHashMap$Node[]) ConcurrentHashMap.java": "0.07734550235903782",
            "jdk.internal.org.objectweb.asm.Type.getDescriptor() Type.java": "0.04419742991945018",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.14364164723821307",
            "Benchmark.innerBenchmarkLoop(int)": "0.08839485983890036",
            "Permute.permute(int)": "54.318641371004276",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.0994442173187629",
            "com.yourkit.probes.Table.createRow() a": "0.08839485983890036",
            "Permute.benchmark()": "0.20993779211738836",
            "Run.printResult(long)": "0.0994442173187629",
            "Permute.swap(int, int)": "44.68360164856413"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.298916261229954",
            "som.Vector.forEach(ForEachInterface)": "44.40497335701599",
            "deltablue.EqualityConstraint.execute()": "2.1365871238448277",
            "deltablue.BinaryConstraint.getOutput()": "2.5227173269493144",
            "deltablue.BinaryConstraint.isSatisfied()": "3.346461760238886",
            "som.Vector.<init>(int)": "7.310731845444953",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.419749272788118",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "1.6474888665791438",
            "som.Vector.append(Object)": "3.706849949803074",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.7029114217314083"
        },
        "YourKit_List.txt": {
            "jdk.internal.loader.URLClassPath$JarLoader.getResource(String, boolean) URLClassPath.java": "0.17120130639766112",
            "List.tail(List$Element, List$Element, List$Element)": "2.9894381963283903",
            "List$Element.<init>(Object)": "0.2502172939658124",
            "List.makeList(int)": "0.39507993784075646",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.09218531882950982",
            "List$Element.getNext()": "27.062975742091815",
            "List$Element.length()": "0.11852398135222693",
            "List.isShorterThan(List$Element, List$Element)": "68.29615192140542",
            "com.yourkit.probes.ResourceRegistry.<init>(Class, ResourceRegistry, String, String) a": "0.13169331261358547",
            "javax.management.openmbean.CompositeType.getType(String) CompositeType.java": "0.11852398135222693"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0148813378812083",
            "nbody.Body.getZ()": "4.188074780881654",
            "nbody.Body.getX()": "0.8347365542650719",
            "nbody.Body.setZ(double)": "0.40297626757624155",
            "nbody.NBodySystem.advance(double)": "46.8172070866255",
            "nbody.Body.setVY(double)": "5.987075975418446",
            "nbody.Body.setVZ(double)": "8.692773772001782",
            "NBody.innerBenchmarkLoop(int)": "0.5325043535828907",
            "nbody.Body.setVX(double)": "28.050026625217672",
            "nbody.Body.setY(double)": "1.0218326784968983"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.0101575456053",
            "Mandelbrot.innerBenchmarkLoop(int)": "0.06909894969596461",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.1468352681039248",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, long, Object) DirectMethodHandle$Holder": "0.07773631840796018",
            "java.lang.String.getChars(int, int, char[], int) String.java": "0.06909894969596461",
            "jdk.internal.org.objectweb.asm.ByteVector.put12(int, int) ByteVector.java": "0.23320895522388052",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.07773631840796018",
            "java.io.BufferedWriter.ensureOpen() BufferedWriter.java": "0.08637368711995576",
            "com.yourkit.probes.Table.createRow() a": "0.07773631840796018",
            "java.lang.invoke.LambdaForm$Name.cloneWithIndex(int) LambdaForm.java": "0.06046158098396903"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.894177277784646",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.511867968846584",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "12.733341574978366",
            "cd.RedBlackTree.findNode(Comparable)": "9.835888243293361",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.672456422301892",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.7274694028928175",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "1.630300407961429",
            "cd.RedBlackTree.put(Comparable, Object)": "6.938434911608357",
            "cd.Vector2D.compareNumbers(double, double)": "8.924156261589813",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.7319198912102856"
        },
        "YourKit_Sieve.txt": {
            "java.nio.Buffer.position(int) Buffer.java": "0.09956192751891675",
            "java.lang.invoke.MethodType.form() MethodType.java": "0.08849949112792602",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.11062436390990751",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.07743705473693525",
            "java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(Object, long, Object) DelegatingMethodHandle$Holder": "0.09956192751891675",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.8695517500774368",
            "java.lang.invoke.LambdaFormBuffer.replaceFunctions(List, List, Object[]) LambdaFormBuffer.java": "0.17699898225585203",
            "Sieve.benchmark()": "88.6322403646179",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.22124872781981503",
            "Sieve.sieve(boolean[], int)": "8.484888711889907"
        },
        "YourKit_Bounce.txt": {
            "java.util.jar.Manifest.read(InputStream, String) Manifest.java": "0.2080024203918009",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.17018379850238255",
            "Bounce.benchmark()": "64.5185689433477",
            "Bounce.lambda$benchmark$0(Random, int)": "0.47273277361772936",
            "som.Random.next()": "0.17018379850238255",
            "com.yourkit.probes.Table.createRow() a": "0.9265562362907496",
            "com.yourkit.probes.builtin.Files$RandomAccessFile_open_Probe.onEnter() a": "0.3781862188941834",
            "Run.measure(Benchmark)": "0.17018379850238255",
            "Bounce$Ball.bounce()": "31.257090991604265",
            "Bounce$Ball.<init>(Random)": "0.9265562362907496"
        }
    },
    "Runtimes": {
        "NBody.data": 103.31549999999999,
        "JavaFlightRecorder_Queens.jfr": 110.045,
        "rebench_test_Async_Bounce.txt": 99.56,
        "JavaFlightRecorder_Sieve.jfr": 107.2405,
        "Permute.hpl": 105.76050000000001,
        "CD.data": 95.798,
        "DeltaBlue.hpl": 100.94149999999999,
        "List.data": 150.969,
        "Towers.hpl": 108.04400000000001,
        "NBody.hpl": 102.6565,
        "Bounce.hpl": 102.048,
        "JavaFlightRecorder_Json.jfr": 82.527,
        "Sieve.data": 107.13,
        "Richards.hpl": 93.10249999999999,
        "JavaFlightRecorder_Havlak.jfr": 164.945,
        "JavaFlightRecorder_CD.jfr": 96.637,
        "JavaFlightRecorder_DeltaBlue.jfr": 86.6095,
        "rebench_test_Async_Mandelbrot.txt": 85.0335,
        "JavaFlightRecorder_Towers.jfr": 108.51050000000001,
        "rebench_test_Async_CD.txt": 96.269,
        "rebench_test_Async_Permute.txt": 104.71799999999999,
        "Mandelbrot.data": 87.178,
        "JavaFlightRecorder_Permute.jfr": 106.86449999999999,
        "rebench_test_Async_NBody.txt": 103.035,
        "JavaFlightRecorder_Bounce.jfr": 103.7685,
        "Havlak.data": 158.932,
        "Mandelbrot.hpl": 85.3765,
        "rebench_test_Async_Towers.txt": 109.03450000000001,
        "JavaFlightRecorder_Storage.jfr": 103.217,
        "List.hpl": 147.2025,
        "Queens.hpl": 103.91,
        "JavaFlightRecorder_NBody.jfr": 105.7085,
        "Storage.data": 112.082,
        "rebench_test_Async_Sieve.txt": 105.2165,
        "JavaFlightRecorder_Richards.jfr": 93.38499999999999,
        "Storage.hpl": 109.21950000000001,
        "rebench_test_Async_List.txt": 151.17700000000002,
        "Bounce.data": 101.643,
        "rebench_test_Async_Richards.txt": 91.741,
        "Permute.data": 105.619,
        "rebench_test_Async_DeltaBlue.txt": 96.1965,
        "JavaFlightRecorder_Mandelbrot.jfr": 85.961,
        "JavaFlightRecorder_List.jfr": 152.1815,
        "DeltaBlue.data": 85.32900000000001,
        "rebench_test_Async_Storage.txt": 107.777,
        "Queens.data": 104.8415,
        "Json.hpl": 80.701,
        "Towers.data": 111.562,
        "Havlak.hpl": 158.2375,
        "Richards.data": 91.44999999999999,
        "rebench_test_Async_Havlak.txt": 158.69,
        "Sieve.hpl": 103.046,
        "CD.hpl": 94.066,
        "Json.data": 84.5945,
        "rebench_test_Async_Json.txt": 79.62700000000001,
        "rebench_test_Async_Queens.txt": 105.22
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.17%",
            "[.] Interpreter": "0.10%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.27%",
            "asm_sysvec_apic_timer_interrupt": "0.06%",
            "[.] void nbody.NBodySystem.advance(double)": "98.53%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.14%",
            "[k] x86_pmu_disable_all": "0.01%",
            "[.] void Permute.permute(int)": "0.02%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "33.82%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.54%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.20%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.96%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "19.07%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "6.36%",
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "5.78%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.33%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.26%",
            "[.] void deltablue.Planner.chainTest(int)": "28.73%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.71%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.24%",
            "[.] boolean Queens.placeQueen(int)": "96.06%",
            "clear_page_rep": "0.07%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.02%",
            "[.] Interpreter": "0.11%",
            "[.] void Towers.moveDisks(int, int, int)": "99.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.11%",
            "clear_page_rep": "0.03%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.33%",
            "[.] boolean richards.Scheduler.start()": "22.20%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "7.01%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.47%",
            "[.] void richards.Scheduler.schedule()": "7.79%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.94%",
            "x86_pmu_disable_all": "0.06%",
            "[.] Interpreter": "0.09%",
            "clear_page_rep": "0.08%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.25%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.49%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.31%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.22%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.66%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.29%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.01%",
            "[.] Interpreter": "0.09%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.31%",
            "[.] Interpreter": "0.08%",
            "[.] java.lang.Object List.benchmark()": "0.47%",
            "[.] List$Element List.makeList(int)": "0.58%",
            "[.] int List$Element.length()": "0.07%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.24%",
            "[.] java.lang.Object Sieve.benchmark()": "1.88%",
            "clear_page_rep": "0.08%",
            "[.] int Sieve.sieve(boolean[], int)": "2.36%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.09%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.54%",
            "clear_page_rep": "0.06%",
            "[.] java.lang.Object Bounce.benchmark()": "6.14%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "31.50%",
            " ": "0",
            "[.] void json.JsonPureStringParser.skipWhiteSpace()": "5.76%",
            "[.] StubRoutines (2)": "7.59%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "21.03%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.17%"
        }
    }
}