{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.004097520999795124",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.004097520999795124",
            "java.lang.StringConcatHelper.checkOverflow(J)J": "0.004097520999795124",
            "java.lang.StringConcatHelper.mix(JJ)J": "0.004097520999795124",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.004097520999795124",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.004097520999795124",
            "Mandelbrot.mandelbrot(I)I": "99.94263470600286",
            "java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(Ljava/lang/Class;Ljava/lang/Object;)V": "0.004097520999795124",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.004097520999795124",
            "java.lang.StringConcatHelper.prepend(J[BJLjava/lang/String;)J": "0.004097520999795124"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.41466071616825384",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.00351407386583266",
            "Queens.benchmark()Ljava/lang/Object;": "0.04568296025582458",
            "java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()Ljava/lang/Object;": "0.00351407386583266",
            "Queens.placeQueen(I)Z": "13.613522156235724",
            "Queens.getRowColumn(II)Z": "59.113750571037",
            "java.util.Arrays.fill([ZZ)V": "0.3760059036440946",
            "Queens.setRowColumn(IIZ)V": "25.758161436553397",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.021084443194995958",
            "Queens.queens()Z": "0.6149629265207155"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)J": "0.0034936938825420117",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.307445061663697",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.3485658386612165",
            "Bounce$Ball.bounce()Z": "84.35873248785941",
            "Bounce$$Lambda$76+0x000000080100c408.1702660825.apply(I)Ljava/lang/Object;": "0.02096216329525207",
            "Bounce.benchmark()Ljava/lang/Object;": "9.020717604723474",
            "som.Random.next()I": "1.4149460224295147",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.0593927960032142",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.017468469412710057",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.385389372183209"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.351431368335601",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.57889835971635",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.813814674211494",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "12.97185015400043",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.294487023374639",
            "havlak.HavlakLoopFinder.findLoops()V": "6.721104027887209",
            "som.Vector.<init>(I)V": "2.077215099204928",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.247546737339732",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.370890337368383",
            "som.Vector.append(Ljava/lang/Object;)V": "3.567079722082945"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "11.645295006392129",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "8.147057684112657",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.630457521403944",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.3592763336303415",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.721923062023012",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.387595397667843",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.209545577809631",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.6744276139929495",
            "cd.Vector2D.compareNumbers(DD)I": "3.901135086971681",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.961298570487738"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.90805770071398",
            "java.lang.String.length()I": "0.004856962455680218",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.004856962455680218",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.004856962455680218",
            "List$Element.getNext()LList$Element;": "9.699354023993395",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.1578512798096071",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.3022002039924234",
            "List$Element.length()I": "0.04614114332896207",
            "List$Element.setNext(LList$Element;)V": "0.03885569964544174",
            "List.makeList(I)LList$Element;": "0.8111127300985964"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "3.682678311499272",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "11.67879670063076",
            "deltablue.ScaleConstraint.execute()V": "8.345463367297429",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "3.328481319747695",
            "deltablue.AbstractConstraint.<init>(Ldeltablue/Strength$Sym;)V": "15.730228044638524",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.313440077632217",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "12.590975254730713",
            "som.Vector.<init>(I)V": "9.8981077147016",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "3.8767588549247933",
            "som.Vector.append(Ljava/lang/Object;)V": "3.41581756428918"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.4023909051842013",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "36.99652303004258",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7618080243778568",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.7504395046294485",
            "Storage.benchmark()Ljava/lang/Object;": "0.011720123451967027",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.29815994061804",
            "som.Random.next()I": "11.700589912880416",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.336094073524241",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.011720123451967027",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6875805758487322"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.006768647624204684",
            "jdk.internal.loader.URLClassPath.getResource(Ljava/lang/String;Z)Ljdk/internal/loader/Resource;": "0.003384323812102342",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.006768647624204684",
            "Sieve.benchmark()Ljava/lang/Object;": "3.2015703262488153",
            "java.io.FileOutputStream.write([BII)V": "0.006768647624204684",
            "Run.printResult(J)V": "0.003384323812102342",
            "java.util.Arrays.fill([ZZ)V": "6.345607147691891",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.006768647624204684",
            "Sieve.sieve([ZI)I": "90.36483010694462",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.006768647624204684"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.04281949934123847",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "15.062582345191041",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "2.8820816864295122",
            "Towers.moveDisks(III)V": "3.2048748353096177",
            "Towers$TowersDisk.getSize()I": "12.19038208168643",
            "Towers.benchmark()Ljava/lang/Object;": "0.0461133069828722",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.013175230566534914",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "42.22990777338603",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.027667984189723",
            "Towers.moveTopDisk(II)V": "3.241106719367589"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.7176299477092496",
            "nbody.Body.getMass()D": "0.4605741593655851",
            "nbody.Body.setVX(D)V": "28.555597880666276",
            "nbody.NBodySystem.advance(D)V": "42.90265609308447",
            "nbody.Body.getY()D": "0.7791668109568168",
            "nbody.Body.getZ()D": "8.162205215223189",
            "nbody.Body.setVZ(D)V": "9.138760951622398",
            "nbody.Body.getVZ()D": "0.4259445233230599",
            "nbody.Body.setVY(D)V": "5.78661218270596",
            "nbody.Body.setX(D)V": "1.1220002077778164"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.940654940654941",
            "richards.Scheduler.schedule()V": "10.217360217360216",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.241813241813242",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.492206492206492",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.011154011154011",
            "Richards.benchmark()Ljava/lang/Object;": "8.351208351208351",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.268554268554269",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.18990418990419",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.148005148005148",
            "richards.RBObject.<init>()V": "12.56971256971257"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.569491692550412",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "4.501306512843268",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.23788394221762",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.679633190356456",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.999359069171227",
            "java.lang.String.<init>([BB)V": "4.304097027067002",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.9343292412365036",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.6327466351131488",
            "json.JsonPureStringParser.read()V": "15.372479416259923",
            "java.util.Arrays.copyOfRange([BII)[B": "6.872750579302864"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0036118033734243507",
            "java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()Ljava/lang/Object;": "0.0036118033734243507",
            "Run.measure(LBenchmark;)V": "0.007223606746848701",
            "Permute.swap(II)V": "44.12901361649872",
            "jdk.jfr.internal.PlatformEventType.getStackTraceEnabled()Z": "0.0036118033734243507",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.0036118033734243507",
            "Permute.permute(I)V": "55.7698558890454",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.025282623613970455",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;": "0.0036118033734243507",
            "Permute.benchmark()Ljava/lang/Object;": "0.021670820240546104"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.5",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.2",
            "Richards::benchmark": "4.8",
            "richards.RBObject::append": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "45.7",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.4",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "jdk.internal.loader.NativeLibraries::load": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Mandelbrot::mandelbrot": "98.2",
            "java.lang.invoke.LambdaForm::normalize": "0.0",
            "java.lang.invoke.MethodTypeForm::canonicalize": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.6",
            "List::makeList": "0.6",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "81.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.5",
            "json.JsonPureStringParser::read": "13.1",
            "java.lang.String::<init>": "4.8",
            "java.lang.String::length": "3.5",
            "java.util.Arrays::copyOfRange": "8.8",
            "java.lang.String::equals": "20.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.7"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.6",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.7",
            "havlak.HavlakLoopFinder::findLoops": "5.7",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "4.3",
            "AGCT::Unknown not Java[ERR=-3]": "7.6",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "5.7",
            "som.Vector::hasSome": "2.6",
            "som.Vector::forEach": "2.4"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "51.4",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "6.1"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "67.8",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "8.3",
            "Queens::setRowColumn": "19.9",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.9",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "41.4",
            "java.util.Arrays::setAll": "34.3",
            "som.Random::next": "12.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "1.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.1"
        },
        "Sieve.hpl": {
            "java.lang.Long::getChars": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "88.8",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "5.8"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "8.7",
            "deltablue.ScaleConstraint::execute": "5.2",
            "deltablue.Planner::addPropagate": "3.0",
            "deltablue.Strength::of": "6.7",
            "AGCT::Unknown not Java[ERR=-3]": "5.7",
            "AGCT::Unknown Java[ERR=-5]": "16.2",
            "deltablue.AbstractConstraint::satisfy": "2.3",
            "som.Vector::<init>": "2.7",
            "som.Vector::forEach": "24.5",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.4",
            "Bounce$Ball::bounce": "82.6",
            "java.util.Arrays::setAll": "1.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "Bounce$Ball::<init>": "3.1",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.5",
            "nbody.Body::setX": "1.5",
            "nbody.Body::getY": "0.6",
            "nbody.Body::setVZ": "8.3",
            "nbody.Body::getZ": "7.6",
            "nbody.Body::setVX": "28.8",
            "nbody.Body::setVY": "6.3",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "nbody.NBodySystem::advance": "39.9"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.6",
            "Towers::popDiskFrom": "21.8",
            "Towers::moveDisks": "3.4",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "Towers::pushDisk": "33.8",
            "Towers$TowersDisk::setNext": "15.7",
            "AGCT::Unknown Java[ERR=-5]": "4.1",
            "Towers::moveTopDisk": "4.2",
            "Towers$TowersDisk::getNext": "3.3"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.1",
            "cd.RedBlackTree::forEach": "5.7",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::findNode": "7.0",
            "cd.RedBlackTree::treeMinimum": "6.3",
            "AGCT::Unknown not Java[ERR=-3]": "5.2",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "cd.Vector2D::compareNumbers": "3.6",
            "cd.RedBlackTree::treeInsert": "20.8",
            "cd.CollisionDetector::isInVoxel": "14.3"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner.newMark": "6.23%",
            "deltablue.EqualityConstraint.execute": "5.79%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.15%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "9.81%",
            "vtable": "3.17%",
            "som.Vector.<init>": "2.58%",
            "som.Vector.forEach": "25.03%",
            "itable": "2.98%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "4.08%",
            "deltablue.ScaleConstraint.execute": "5.50%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.54%",
            "som.Random.next": "1.26%",
            "clear_page_rep_[k]": "0.11%",
            "java.util.Arrays.setAll": "1.37%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "Bounce.benchmark": "9.36%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "Bounce$Ball.<init>": "3.24%",
            "Bounce.lambda$benchmark$0": "0.30%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "PhaseIFG::re_insert(unsigned": "0.01%",
            "get_futex_key_[k]": "0.00%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "99.55%",
            "java.lang.invoke.MemberName$Factory.resolve": "0.01%",
            "copy_page_[k]": "0.01%",
            "__futex_abstimed_wait_common": "0.00%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "LinearScan::compute_local_live_sets()": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.46%",
            "som.Random.next": "13.52%",
            "clear_page_rep_[k]": "0.16%",
            "java.util.Arrays.setAll": "36.17%",
            "Storage.lambda$buildTreeDepth$0": "3.36%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.48%",
            "SpinPause": "0.22%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.44%",
            "Storage.buildTreeDepth": "42.12%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.00%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.96%",
            "Towers.popDiskFrom": "22.58%",
            "Towers.moveDisks": "8.03%",
            "Interpreter": "0.01%",
            "clear_page_rep_[k]": "0.05%",
            "Towers.pushDisk": "35.68%",
            "Towers.moveTopDisk": "4.48%",
            "Towers$TowersDisk.getSize": "10.29%",
            "Towers$TowersDisk.getNext": "3.43%",
            "Towers.benchmark": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.34%",
            "cd.CollisionDetector.isInVoxel": "14.15%",
            "cd.RedBlackTree.forEach": "4.91%",
            "cd.RedBlackTree.put": "7.63%",
            "cd.RedBlackTree.treeInsert": "21.03%",
            "cd.RedBlackTree.findNode": "7.73%",
            "cd.RedBlackTree.treeMinimum": "6.53%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.02%",
            "cd.Vector2D.compareNumbers": "2.95%",
            "cd.RedBlackTree.leftRotate": "2.54%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.53%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.46%",
            "som.Vector.hasSome": "2.38%",
            "som.Vector.append": "4.13%",
            "som.Vector.<init>": "2.05%",
            "som.IdentitySet.lambda$contains$0": "32.83%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.14%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.17%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.91%",
            "havlak.HavlakLoopFinder.doDFS": "5.61%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.21%",
            "Sieve.benchmark": "3.22%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.10%",
            "Sieve.sieve": "90.53%",
            "SpinPause": "0.03%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "_raw_spin_unlock_irqrestore_[k]": "0.06%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.26%",
            "Permute.swap": "41.21%",
            "Permute.benchmark": "0.02%",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke": "0.01%",
            "I2C/C2I": "0.01%",
            "[no_Java_frame]": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "__tls_get_addr": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.94%",
            "nbody.Body.getZ": "7.87%",
            "nbody.Body.getY": "0.64%",
            "nbody.Body.setX": "1.24%",
            "nbody.Body.setY": "1.82%",
            "nbody.Body.setVX": "28.98%",
            "nbody.Body.setVY": "5.71%",
            "nbody.Body.getMass": "0.48%",
            "nbody.Body.getVZ": "0.46%",
            "nbody.NBodySystem.advance": "42.57%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.33%",
            "List.makeList": "0.79%",
            "clear_page_rep_[k]": "0.07%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "5.09%",
            "List$Element.length": "0.09%",
            "List.isShorterThan": "84.07%",
            "List$Element.<init>": "0.15%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.22%",
            "java.lang.String.length": "3.39%",
            "java.lang.String.<init>": "4.34%",
            "json.JsonPureStringParser.readArray": "2.34%",
            "java.lang.String.isLatin1": "2.46%",
            "json.JsonPureStringParser.readStringInternal": "9.29%",
            "java.util.Arrays.copyOfRange": "7.67%",
            "java.lang.String.equals": "22.10%",
            "json.JsonPureStringParser.read": "15.11%",
            "json.JsonPureStringParser.readValue": "2.11%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.83%",
            "Queens.getRowColumn": "70.64%",
            "Queens.setRowColumn": "18.13%",
            "clear_page_rep_[k]": "0.08%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Queens.queens": "0.58%",
            "Queens.placeQueen": "9.14%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Queens.benchmark": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.95%",
            "Richards.benchmark": "4.99%",
            "richards.Packet.<init>": "6.83%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.65%",
            "itable": "37.50%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.40%",
            "richards.TaskControlBlock.<init>": "3.26%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.08%",
            "richards.RBObject.<init>": "5.63%",
            "richards.RBObject.append": "2.56%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "4.7",
            "Towers.moveDisks": "93.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.7"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.7",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.2",
            "deltablue.AbstractConstraint.satisfy": "11.1",
            "deltablue.Planner.removePropagateFrom": "9.9",
            "som.Vector.<init>": "26.4",
            "deltablue.Variable.<init>": "4.4",
            "som.Vector.forEach": "7.5",
            "deltablue.AbstractConstraint.<init>": "9.0",
            "deltablue.Planner.constraintsConsuming": "4.5",
            "deltablue.Plan.lambda$execute$0": "2.3",
            "deltablue.Planner.addConstraintsConsumingTo": "15.4"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "havlak.UnionFindNode.<init>": "3.4",
            "som.Vector.<init>": "42.8",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.6",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.6",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "13.9",
            "richards.Scheduler.createWorker": "0.0",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "84.8",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.5",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.4",
            "Bounce.benchmark": "55.4",
            "Bounce$Ball.<init>": "42.5",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.7",
            "som.Vector.<init>": "6.5",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "43.3",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "nbody.Body.getMass": "0.1",
            "nbody.NBodySystem.advance": "99.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.0",
            "List.isShorterThan": "76.9",
            "List$Element.<init>": "19.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "19.7",
            "Queens.placeQueen": "79.5",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.54649672938162",
            "java.lang.String.<init>(byte[], byte) String.java": "5.517061163935532",
            "json.JsonPureStringParser.isWhiteSpace()": "1.8460449119967632",
            "json.JsonPureStringParser.read()": "21.06935734034662",
            "java.lang.String.length() String.java": "3.0851709488165087",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.629981792433745",
            "java.lang.String.substring(int, int) String.java": "9.29765999055904",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.579169195495314",
            "json.JsonPureStringParser.readStringInternal()": "3.4139186728707265",
            "json.JsonPureStringParser.readValue()": "3.1526063793917327"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.608576602426714",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.607509338558845",
            "havlak.HavlakLoopFinder.findLoops()": "9.758465939410907",
            "som.Vector.<init>(int)": "2.8496820078557628",
            "som.Vector.append(Object)": "4.750199018467165",
            "havlak.HavlakLoopFinder$$Lambda$18.0x00000008000cc428.apply(Object)": "2.047047090831154",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.860135944922188",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.459325874150346",
            "som.Vector.removeAll()": "2.1629589453333455",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.80913472894124"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.308731959260511",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.14480861128541778",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.14480861128541778",
            "Queens.getRowColumn(int, int)": "65.74310952357966",
            "Queens.queens()": "0.6275039822368103",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.28961722257083555",
            "java.lang.invoke.DirectMethodHandle.make(byte, Class, MemberName, Class) DirectMethodHandle.java": "0.3057070682692153",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.22525783977731653",
            "Queens.setRowColumn(int, int, boolean)": "19.838779746102233",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3057070682692153"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.755288346273722",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.8442358408793318",
            "richards.TaskControlBlock.runTask()": "39.01296497796139",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.16797300038729",
            "richards.Scheduler.schedule()": "3.0134813639968283",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.3462921638419123",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.5003596259889718",
            "richards.RBObject.append(Packet, Packet)": "2.674141969275031",
            "Richards.benchmark()": "26.538553750253584",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.2425907825092675"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$7.0x00000008000c2aa0.apply(int)": "0.514133310482964",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2838444318291364",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.8354666295348164",
            "java.util.zip.ZipFile$Source.findEND() ZipFile.java": "0.08568888508049399",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.75339809984897",
            "java.lang.invoke.LambdaForm.normalize() LambdaForm.java": "0.13388888293827186",
            "som.Random.next()": "15.349021540043486",
            "Storage.buildTreeDepth(int, Random)": "36.101798395475626",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.422199847902229",
            "Storage$$Lambda$7.0x00000008000c2aa0.<init>(Storage, int, Random)": "0.36953331690963037"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "30.429702087675125",
            "Towers.pushDisk(Towers$TowersDisk, int)": "29.670766524918385",
            "Towers.moveDisks(int, int, int)": "8.023033091999855",
            "Towers$TowersDisk.getSize()": "1.9756417824143786",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.1445591548108082",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.16865234727927622",
            "Towers.moveTopDisk(int, int)": "8.263965016684535",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.1445591548108082",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "20.539446579369",
            "Towers.benchmark()": "0.22888532845044635"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.reflect.ClassFileAssembler.emitConstantPoolUTF8(String) ClassFileAssembler.java": "0.08981397280881973",
            "sun.nio.fs.LinuxFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.1347209592132296",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.12349421261212712",
            "com.yourkit.probes.ForeignKeyColumn.setValue(int, int) a": "0.10104071940992218",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.08981397280881973",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.23576167862315178",
            "Permute.permute(int)": "55.96533180649579",
            "sun.invoke.util.VerifyAccess.isTypeVisible(Class, Class) VerifyAccess.java": "0.11226746601102466",
            "Permute.benchmark()": "0.44906986404409865",
            "Permute.swap(int, int)": "42.43710215216731"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.89481366157439",
            "som.Vector.forEach(ForEachInterface)": "38.09477473971004",
            "deltablue.EqualityConstraint.execute()": "4.208426583633357",
            "deltablue.BinaryConstraint.getOutput()": "2.2380072005449065",
            "deltablue.BinaryConstraint.isSatisfied()": "2.043397878758393",
            "som.Vector.<init>(int)": "6.932957088644548",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.232752748856671",
            "som.Vector.append(Object)": "3.9165126009535864",
            "deltablue.Plan$$Lambda$24.0x00000008000ccd88.apply(Object)": "3.575946287827188",
            "deltablue.Planner$$Lambda$31.0x00000008000cd620.apply(Object)": "2.383964191884792"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "4.734772490169328",
            "java.util.zip.ZipUtils.LG(byte[], int) ZipUtils.java": "0.08025038118931063",
            "List.makeList(int)": "1.0566300189925901",
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.16050076237862126",
            "jdk.internal.loader.BuiltinClassLoader.getPermissions(CodeSource) BuiltinClassLoader.java": "0.0936254447208624",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.08025038118931063",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(int, int) MethodWriter.java": "0.10700050825241418",
            "List$Element.getNext()": "24.52986651686595",
            "java.lang.System.lineSeparator() System.java": "0.10700050825241418",
            "List.isShorterThan(List$Element, List$Element)": "68.74782655217611"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.9681973294818966",
            "nbody.Body.getZ()": "5.805474137320703",
            "nbody.Body.setX(double)": "0.5522280276963596",
            "nbody.Body.getMass()": "0.5522280276963596",
            "nbody.Body.getX()": "0.6938249578749133",
            "nbody.Body.setZ(double)": "1.2885320646248388",
            "nbody.NBodySystem.advance(double)": "43.20122339747674",
            "nbody.Body.setVY(double)": "6.895770499695566",
            "nbody.Body.setVZ(double)": "7.80199085283831",
            "nbody.Body.setVX(double)": "28.602579896067855"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.17521625427479",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07871743066306315",
            "java.nio.HeapCharBuffer.<init>(char[], int, int, MemorySegmentProxy) HeapCharBuffer.java": "0.07871743066306315",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.043731905923923974",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "8.746381184784796E-4",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.3586016285761766",
            "java.lang.invoke.ClassSpecializer$Factory.findGetters(Class, List) ClassSpecializer.java": "0.026239143554354385",
            "java.io.PrintStream.writeln(String) PrintStream.java": "8.746381184784796E-4",
            "com.yourkit.probes.Table.createRow() a": "0.1661812425109111",
            "java.lang.invoke.MemberName$Factory.resolve(byte, MemberName, Class, int, boolean) MemberName.java": "0.06997104947827835"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.08151193398598",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.113779539203215",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.390612522551832",
            "cd.RedBlackTree.findNode(Comparable)": "2.299547484546449",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "19.298453166129363",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.075922037206826",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "1.8485108396675636",
            "cd.RedBlackTree.put(Comparable, Object)": "6.144450031054982",
            "cd.Vector2D.compareNumbers(double, double)": "5.360681435035934",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.813522226494336"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.05059141362527952",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.53128067104451",
            "Sieve.benchmark()": "87.09817769728122",
            "jdk.internal.misc.Unsafe.weakCompareAndSetLong(Object, long, long, long) Unsafe.java": "0.09106454452550312",
            "java.lang.StringConcatHelper.prepend(long, byte[], String, String) StringConcatHelper.java": "0.09106454452550312",
            "java.util.concurrent.atomic.AtomicLong.addAndGet(long) AtomicLong.java": "0.09106454452550312",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.09106454452550312",
            "Run.measure(Benchmark)": "0.10118282725055903",
            "Sieve.sieve(boolean[], int)": "8.7421962744483",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.040473130900223614"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.05823998757546931",
            "Bounce.benchmark()": "61.65673351323018",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.368853254644639",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.15530663353458485",
            "Bounce.lambda$benchmark$0(Random, int)": "0.7765331676729241",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.3300265962609928",
            "java.util.jar.JarFile.<clinit>() JarFile.java": "0.03882665838364621",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.25237327949370036",
            "Bounce$Ball.bounce()": "35.00223253285706",
            "Bounce$Ball.<init>(Random)": "1.2424530682766788"
        }
    },
    "Runtimes": {
        "NBody.data": 102.771,
        "JavaFlightRecorder_Queens.jfr": 104.7075,
        "rebench_test_Async_Bounce.txt": 102.957,
        "JavaFlightRecorder_Sieve.jfr": 106.31899999999999,
        "Permute.hpl": 105.089,
        "CD.data": 96.82249999999999,
        "DeltaBlue.hpl": 101.201,
        "List.data": 151.7615,
        "JavaFlightRecorder_Json.jfr": 84.0275,
        "Towers.hpl": 108.731,
        "NBody.hpl": 103.423,
        "Bounce.hpl": 101.25,
        "Sieve.data": 105.1805,
        "Richards.hpl": 91.667,
        "JavaFlightRecorder_Havlak.jfr": 159.96499999999997,
        "JavaFlightRecorder_CD.jfr": 98.2855,
        "JavaFlightRecorder_DeltaBlue.jfr": 83.935,
        "rebench_test_Async_Mandelbrot.txt": 85.0605,
        "JavaFlightRecorder_Towers.jfr": 117.4255,
        "rebench_test_Async_CD.txt": 94.8375,
        "rebench_test_Async_Permute.txt": 104.386,
        "Mandelbrot.data": 87.2555,
        "rebench_test_Async_NBody.txt": 102.8135,
        "JavaFlightRecorder_Permute.jfr": 106.436,
        "JavaFlightRecorder_Bounce.jfr": 102.1235,
        "Havlak.data": 159.24900000000002,
        "Mandelbrot.hpl": 85.3075,
        "List.hpl": 149.019,
        "rebench_test_Async_Towers.txt": 112.27250000000001,
        "JavaFlightRecorder_Storage.jfr": 96.02850000000001,
        "Queens.hpl": 109.3985,
        "JavaFlightRecorder_NBody.jfr": 105.434,
        "Storage.data": 116.9625,
        "rebench_test_Async_Sieve.txt": 105.68199999999999,
        "JavaFlightRecorder_Richards.jfr": 95.393,
        "Storage.hpl": 109.24549999999999,
        "rebench_test_Async_List.txt": 148.541,
        "Bounce.data": 103.08349999999999,
        "rebench_test_Async_Richards.txt": 90.881,
        "Permute.data": 105.7985,
        "rebench_test_Async_DeltaBlue.txt": 103.94149999999999,
        "JavaFlightRecorder_Mandelbrot.jfr": 87.27850000000001,
        "JavaFlightRecorder_List.jfr": 154.265,
        "DeltaBlue.data": 104.104,
        "rebench_test_Async_Storage.txt": 109.327,
        "Queens.data": 106.549,
        "Json.hpl": 80.667,
        "Towers.data": 110.1195,
        "Havlak.hpl": 158.24349999999998,
        "Richards.data": 92.70400000000001,
        "rebench_test_Async_Havlak.txt": 160.95850000000002,
        "Sieve.hpl": 103.011,
        "CD.hpl": 94.88550000000001,
        "rebench_test_Async_Json.txt": 81.305,
        "Json.data": 89.32,
        "rebench_test_Async_Queens.txt": 108.4125
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.10%",
            "[.] Interpreter": "0.12%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.31%",
            "[.] void nbody.NBodySystem.advance(double)": "98.79%",
            "native_apic_msr_write": "0.04%"
        },
        "Permute.data": {" ": "0"},
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.29%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.52%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.59%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.00%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.11%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "9.65%",
            "[.] void deltablue.EqualityConstraint.execute()": "6.21%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "9.79%",
            "[.] vtable chunks": "6.17%",
            "[.] void deltablue.Planner.chainTest(int)": "27.32%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.83%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.21%",
            "[.] boolean Queens.placeQueen(int)": "96.15%",
            "clear_page_rep": "0.06%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.03%",
            "[.] Interpreter": "0.09%",
            "[.] void Towers.moveDisks(int, int, int)": "99.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "clear_page_rep": "0.02%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.34%",
            "[.] boolean richards.Scheduler.start()": "22.33%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.94%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.83%",
            "[.] void richards.Scheduler.schedule()": "7.76%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.48%",
            "x86_pmu_disable_all": "0.13%",
            "[.] Interpreter": "0.11%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.70%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.38%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.41%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.74%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.39%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.35%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.11%",
            "[.] Interpreter": "0.14%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.30%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "97.94%",
            "[.] Interpreter": "0.09%",
            "[.] java.lang.Object List.benchmark()": "0.48%",
            "[.] List$Element List.makeList(int)": "0.67%",
            "[.] int List$Element.length()": "0.07%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.17%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.44%",
            "[.] java.lang.Object Sieve.benchmark()": "1.96%",
            "clear_page_rep": "0.08%",
            "[.] int Sieve.sieve(boolean[], int)": "2.16%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.10%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.51%",
            "clear_page_rep": "0.08%",
            "[.] java.lang.Object Bounce.benchmark()": "6.02%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "29.39%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.13%",
            "[.] StubRoutines (2)": "7.74%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "22.23%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "22.04%"
        }
    }
}