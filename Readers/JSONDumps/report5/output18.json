{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.004111673039759878",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.004111673039759878",
            "java.nio.Buffer.flip()Ljava/nio/Buffer;": "0.004111673039759878",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.004111673039759878",
            "jdk.internal.loader.Resource.getBytes()[B": "0.004111673039759878",
            "Mandelbrot.mandelbrot(I)I": "99.95065992352288",
            "Mandelbrot.verifyResult(II)Z": "0.004111673039759878",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.004111673039759878",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(Ljava/lang/invoke/MemberName;Ljava/lang/invoke/LambdaForm$Name;)V": "0.004111673039759878",
            "java.lang.invoke.LambdaForm$MH+0x000000080100c800.1866161430.invoke(Ljava/lang/Object;JLjava/lang/Object;J)J": "0.004111673039759878"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.8029689608636977",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.0033738191632928477",
            "Queens.benchmark()Ljava/lang/Object;": "0.04048582995951417",
            "Queens.placeQueen(I)Z": "7.587719298245615",
            "Queens.getRowColumn(II)Z": "71.6565452091768",
            "Run.printResult(J)V": "0.0033738191632928477",
            "java.util.Arrays.fill([ZZ)V": "0.40823211875843457",
            "Queens.setRowColumn(IIZ)V": "18.248987854251013",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.033738191632928474",
            "Queens.queens()Z": "1.1909581646423752"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.3272573720881132",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.411077486100359",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.010556689422197198",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;)J": "0.007037792948131466",
            "Bounce$Ball.bounce()Z": "84.77725385319164",
            "Bounce.benchmark()Ljava/lang/Object;": "8.670560912097965",
            "som.Random.next()I": "1.3477373495671756",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.07037792948131466",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.028151171792525864",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.307762685621789"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.012357085113754",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.06906109250491",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.508950225199214",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "15.163413789121146",
            "som.Vector.<init>(I)V": "4.834276475343573",
            "havlak.HavlakLoopFinder.findLoops()V": "3.9588867074719944",
            "havlak.HavlakLoopFinder$$Lambda$79+0x000000080100f598.667447085.apply(Ljava/lang/Object;)V": "1.8177618662663124",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.29379836008777",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.76706317126689",
            "som.Vector.append(Ljava/lang/Object;)V": "2.25199214689918"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "11.83105164903547",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.832918481642813",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "3.1074984443061604",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.232420659614188",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.234443061605476",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.623055382700684",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.876166770379589",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.82125077784692",
            "cd.Vector2D.compareNumbers(DD)I": "3.5003111387678905",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.592563783447417"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.52081054083622",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.009513390096560909",
            "List$Element.getNext()LList$Element;": "9.194691528326118",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.14270085144841363",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.9954335727536505",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.004756695048280454",
            "List$Element.length()I": "0.11178233363459067",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.009513390096560909",
            "List$Element.setNext(LList$Element;)V": "0.06421538315178613",
            "List.makeList(I)LList$Element;": "0.9204204918422679"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "som.Dictionary.at(Lsom/Dictionary$CustomHash;)Ljava/lang/Object;": "17.61658031088083",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.581131688298364",
            "deltablue.ScaleConstraint.execute()V": "7.551428718001334",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "6.940953162673781",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "5.2172574770430415",
            "deltablue.Variable.<init>()V": "4.637562201816037",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "13.64592417791002",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.647822295182887",
            "som.Vector.<init>(I)V": "3.103678243472016",
            "som.Vector.append(Ljava/lang/Object;)V": "6.67419073513569"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.45123997762446394",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "36.35278761887004",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7495804586984897",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.815028901734104",
            "Storage.benchmark()Ljava/lang/Object;": "0.01864628006712661",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.09845235875443",
            "som.Random.next()I": "12.597426813350737",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.204549692336379",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.011187768040275966",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6563490583628566"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.010376314333148865",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.010376314333148865",
            "Sieve.benchmark()Ljava/lang/Object;": "3.0368013281682344",
            "java.util.Arrays.fill([ZZ)V": "5.482152739346984",
            "Sieve.sieve([ZI)I": "91.34961261759823",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.00691754288876591",
            "java.lang.StringConcatHelper.prepend(J[BJ)J": "0.00691754288876591",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.02075262866629773",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e400.1702660825.linkToTargetMethod(Ljava/lang/Object;JLjava/lang/Object;)Ljava/lang/Object;": "0.00691754288876591",
            "sun.nio.cs.StreamEncoder.implWrite([CII)V": "0.00691754288876591"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.05170809059257472",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.59484987417698",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.9918645937467683",
            "Towers.moveDisks(III)V": "3.891895618601124",
            "Towers$TowersDisk.getSize()I": "11.0034816780999",
            "Towers.benchmark()Ljava/lang/Object;": "0.04826088455306974",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010341618118514945",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.326346995759934",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "22.368919990347823",
            "Towers.moveTopDisk(II)V": "4.698541831845289"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.7660653306198475",
            "nbody.Body.getMass()D": "0.4656617570970301",
            "nbody.Body.setVX(D)V": "28.995205408575075",
            "nbody.NBodySystem.advance(D)V": "42.21310061743299",
            "nbody.Body.getY()D": "0.717464040564313",
            "nbody.Body.getZ()D": "7.967990065882515",
            "nbody.Body.setVZ(D)V": "9.17181194163706",
            "nbody.Body.getVZ()D": "0.41392156186402673",
            "nbody.Body.setVY(D)V": "6.067400227656859",
            "nbody.Body.setX(D)V": "1.2141699148011451"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.240824834363136",
            "richards.Scheduler.schedule()V": "10.652869798258022",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.759621826844338",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.096925482021886",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.804064616988015",
            "Richards.benchmark()Ljava/lang/Object;": "9.387329710414651",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.101838755304102",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "6.953026129680637",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.737065435866895",
            "richards.RBObject.<init>()V": "10.898533462368794"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.704608767899907",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.631298568007429",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.24803284296955",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.72797028493231",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.918332437319778",
            "java.lang.String.<init>([BB)V": "3.973412834172328",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.8561165143443623",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.7124773960216997",
            "json.JsonPureStringParser.read()V": "16.421484775915154",
            "java.util.Arrays.copyOfRange([BII)[B": "5.483602951957383"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.010795638562020943",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0035985461873403145",
            "java.lang.StringLatin1.toLowerCase(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;": "0.0035985461873403145",
            "Permute.swap(II)V": "43.88786930080248",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.0035985461873403145",
            "java.lang.System$2.encodeASCII([CI[BII)I": "0.0035985461873403145",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;)J": "0.0035985461873403145",
            "Permute.permute(I)V": "55.903415020331785",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.021591277124041887",
            "Permute.benchmark()Ljava/lang/Object;": "0.11875202418223038"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.TaskControlBlock::runTask": "1.9",
            "richards.Packet::<init>": "6.7",
            "Richards::benchmark": "4.9",
            "richards.RBObject::append": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "45.1",
            "richards.HandlerTaskDataRecord::workInAdd": "2.1",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "6.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "3.1",
            "richards.RBObject::<init>": "6.3"
        },
        "Mandelbrot.hpl": {
            "java.lang.Long::getChars": "0.0",
            "java.util.zip.ZipUtils::LG": "0.0",
            "jdk.internal.misc.Unsafe::ensureClassInitialized0": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "sun.nio.cs.StreamEncoder::writeBytes": "0.0",
            "Mandelbrot::mandelbrot": "98.4",
            "sun.nio.fs.NativeBuffer::release": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.6",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.0",
            "List::isShorterThan": "82.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "14.6",
            "java.lang.String::<init>": "5.6",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "3.1",
            "java.util.Arrays::copyOfRange": "7.7",
            "java.lang.String::equals": "22.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.9",
            "AGCT::Unknown Java[ERR=-5]": "9.8",
            "java.lang.String::isLatin1": "2.4",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.5",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.3",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.2",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "5.7",
            "som.Vector::hasSome": "2.6",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "39.7",
            "Permute::permute": "51.4",
            "java.lang.invoke.MemberName::testFlags": "0.0",
            "Permute::benchmark": "0.0",
            "sun.invoke.util.Wrapper::forBasicType": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "AGCT::Unknown Java[ERR=-5]": "5.8",
            "java.lang.Long::stringSize": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "66.6",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "8.8",
            "Queens::setRowColumn": "20.5",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.8",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "41.4",
            "java.util.Arrays::setAll": "34.4",
            "som.Random::next": "11.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.7",
            "AGCT::Unknown Java[ERR=-5]": "2.0",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.6",
            "Storage::lambda$buildTreeDepth$0": "3.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "2.7",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "81.5",
            "java.lang.invoke.LambdaForm$MH.0x0000000801008800::linkToTargetMethod": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "13.8",
            "java.lang.String::getChars": "0.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "10.2",
            "deltablue.ScaleConstraint::execute": "6.1",
            "deltablue.Planner::addPropagate": "2.8",
            "deltablue.Variable::<init>": "5.3",
            "deltablue.Planner::incrementalAdd": "13.7",
            "AGCT::Unknown not Java[ERR=-3]": "6.2",
            "AGCT::Unknown Java[ERR=-5]": "10.4",
            "som.Vector::forEach": "11.6",
            "som.Dictionary::at": "3.8",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.8"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.3",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "81.9",
            "java.util.Arrays::setAll": "1.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "Bounce$Ball::<init>": "3.2",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.0",
            "nbody.Body::getZ": "8.1",
            "nbody.Body::setVX": "28.4",
            "nbody.Body::setVY": "5.9",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.3",
            "nbody.NBodySystem::advance": "41.3"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.3",
            "Towers::popDiskFrom": "23.1",
            "Towers::moveDisks": "3.6",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "Towers::pushDisk": "32.9",
            "Towers$TowersDisk::setNext": "14.9",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "Towers::moveTopDisk": "4.9",
            "Towers$TowersDisk::getNext": "3.4"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.0",
            "cd.RedBlackTree::forEach": "4.9",
            "cd.RedBlackTree::put": "7.1",
            "cd.RedBlackTree::findNode": "8.0",
            "cd.RedBlackTree::treeMinimum": "6.5",
            "AGCT::Unknown not Java[ERR=-3]": "5.3",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "cd.Vector2D::compareNumbers": "2.7",
            "cd.RedBlackTree::treeInsert": "20.3",
            "cd.CollisionDetector::isInVoxel": "14.2"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "5.23%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "9.76%",
            "som.Vector.append": "4.02%",
            "vtable": "3.57%",
            "som.Vector.forEach": "25.20%",
            "deltablue.Planner.chainTest": "5.62%",
            "deltablue.Planner.addPropagate": "3.27%",
            "itable": "3.05%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "2.56%",
            "deltablue.ScaleConstraint.execute": "5.77%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.82%",
            "som.Random.next": "1.22%",
            "clear_page_rep_[k]": "0.11%",
            "java.util.Arrays.setAll": "1.32%",
            "SpinPause": "0.04%",
            "Bounce.benchmark": "9.23%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.06%",
            "Bounce$Ball.<init>": "3.10%",
            "Bounce.lambda$benchmark$0": "0.31%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Mutex::lock_without_safepoint_check()": "0.00%",
            "jdk.internal.org.objectweb.asm.SymbolTable.put": "0.01%",
            "Mandelbrot.mandelbrot": "99.55%",
            "Run.measure": "0.01%",
            "WatcherThread::sleep()": "0.00%",
            "ciObjectFactory::get_metadata(Metadata*)": "0.01%",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop": "0.01%",
            "ConstantPool::klass_at_impl(constantPoolHandle": "0.01%",
            "IndexSetIterator::advance_and_next()": "0.01%",
            "os::elapsed_counter()": "0.00%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.46%",
            "som.Random.next": "14.50%",
            "java.util.Arrays.setAll": "35.25%",
            "Storage.lambda$buildTreeDepth$0": "3.07%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.59%",
            "SpinPause": "0.22%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.52%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.21%",
            "Storage.buildTreeDepth": "42.36%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "0.90%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.03%",
            "Towers.popDiskFrom": "22.96%",
            "Towers.moveDisks": "7.66%",
            "clear_page_rep_[k]": "0.05%",
            "Towers.pushDisk": "34.38%",
            "Towers.moveTopDisk": "5.13%",
            "Towers$TowersDisk.getSize": "10.54%",
            "Towers.buildTowerAt": "0.03%",
            "Towers$TowersDisk.getNext": "3.72%",
            "Towers.benchmark": "0.03%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.14%",
            "cd.CollisionDetector.isInVoxel": "14.40%",
            "cd.RedBlackTree.forEach": "5.25%",
            "cd.RedBlackTree.put": "6.96%",
            "cd.RedBlackTree.treeInsert": "19.94%",
            "cd.RedBlackTree.findNode": "6.98%",
            "cd.RedBlackTree.treeMinimum": "6.07%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.03%",
            "cd.Vector2D.compareNumbers": "3.30%",
            "cd.RedBlackTree.leftRotate": "2.39%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.79%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.49%",
            "som.Vector.hasSome": "2.24%",
            "som.Vector.append": "3.23%",
            "som.Vector.forEach": "2.01%",
            "som.IdentitySet.lambda$contains$0": "32.91%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "6.82%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.02%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.82%",
            "havlak.HavlakLoopFinder.doDFS": "5.62%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "4.66%",
            "Sieve.benchmark": "3.27%",
            "clear_page_rep_[k]": "0.09%",
            "Sieve.sieve": "91.08%",
            "SpinPause": "0.09%",
            "exit_to_user_mode_loop_[k]": "0.01%",
            "__memset_avx2_unaligned_erms": "0.03%",
            "__futex_abstimed_wait_common": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.57%",
            "Permute.swap": "40.98%",
            "Interpreter": "0.01%",
            "Permute.benchmark": "0.01%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "clear_page_rep_[k]": "0.01%",
            "exit_to_user_mode_loop_[k]": "0.01%",
            "PhaseIdealLoop::build_loop_early(VectorSet&,": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.80%",
            "nbody.Body.getZ": "8.50%",
            "nbody.Body.getY": "0.79%",
            "nbody.Body.setX": "1.46%",
            "nbody.Body.setY": "1.60%",
            "nbody.Body.setZ": "0.30%",
            "nbody.Body.setVX": "29.25%",
            "nbody.Body.setVY": "6.06%",
            "nbody.Body.getMass": "0.65%",
            "nbody.NBodySystem.advance": "41.15%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.15%",
            "List.makeList": "0.80%",
            "clear_page_rep_[k]": "0.07%",
            "List$Element.setNext": "0.03%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "4.62%",
            "List$Element.length": "0.06%",
            "List.isShorterThan": "84.75%",
            "List$Element.<init>": "0.15%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.17%",
            "java.lang.String.length": "3.25%",
            "java.lang.String.<init>": "5.26%",
            "json.JsonPureStringParser.readArray": "2.54%",
            "json.JsonPureStringParser.isWhiteSpace": "2.30%",
            "java.lang.String.isLatin1": "2.70%",
            "json.JsonPureStringParser.readStringInternal": "9.20%",
            "java.util.Arrays.copyOfRange": "7.96%",
            "java.lang.String.equals": "22.76%",
            "json.JsonPureStringParser.read": "14.80%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.66%",
            "Queens.getRowColumn": "58.83%",
            "Queens.setRowColumn": "24.56%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.07%",
            "Queens.queens": "0.60%",
            "Queens.placeQueen": "14.67%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.01%",
            "Queens.benchmark": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.58%",
            "Richards.benchmark": "5.23%",
            "richards.Packet.<init>": "7.15%",
            "richards.TaskState.isTaskHoldingOrWaiting": "3.07%",
            "itable": "35.58%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.17%",
            "richards.TaskControlBlock.<init>": "3.10%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.87%",
            "richards.RBObject.<init>": "6.42%",
            "richards.RBObject.append": "3.18%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "4.9",
            "Towers.moveDisks": "93.5",
            "java.io.PrintStream.println": "0.1",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "7.8",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "91.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.1",
            "deltablue.Planner.removePropagateFrom": "9.7",
            "som.Vector.<init>": "33.0",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "7.8",
            "deltablue.Planner.addPropagate": "1.2",
            "deltablue.Planner.constraintsConsuming": "5.0",
            "deltablue.AbstractConstraint.<init>": "4.0",
            "deltablue.Planner.addConstraintsConsumingTo": "16.3"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.4",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.0",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.schedule": "14.4",
            "richards.Scheduler.createWorker": "0.1",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.4",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.5",
            "Bounce.benchmark": "51.1",
            "Bounce$Ball.<init>": "46.7",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "5.8",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.4",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.2",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.6",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "73.4",
            "List$Element.<init>": "22.6"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "java.util.Arrays.fill": "0.4",
            "Queens.verifyResult": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "22.2",
            "Queens.placeQueen": "76.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.3",
            "Run.printResult": "0.2"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.36092972800242",
            "java.lang.String.<init>(byte[], byte) String.java": "6.273309422998491",
            "json.JsonPureStringParser.isWhiteSpace()": "2.4555044926482026",
            "json.JsonPureStringParser.read()": "21.632826394991444",
            "java.lang.String.length() String.java": "3.2585890099355432",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.0651759848296916",
            "json.JsonArray.<init>()": "2.1191340142032433",
            "java.lang.String.substring(int, int) String.java": "10.398052414929804",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.5970660085017645",
            "json.JsonPureStringParser.readStringInternal()": "3.1618824973826176"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.429333881846034",
            "som.Vector.hasSome(TestInterface)": "2.1738424397267546",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.508222277554645",
            "havlak.HavlakLoopFinder.findLoops()": "11.44515053425859",
            "som.Vector.<init>(int)": "3.7067910924424337",
            "som.Vector.append(Object)": "3.472951467451906",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.666908445291272",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "3.4036656526398987",
            "som.Vector.removeAll()": "2.6523475982721854",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.64168407833628"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "9.82260232492873",
            "Queens.getRowColumn(int, int)": "68.1082997296938",
            "Queens.queens()": "0.38404159465886767",
            "Benchmark.innerBenchmarkLoop(int)": "0.28064578071224944",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.1329374750742234",
            "Queens.setRowColumn(int, int, boolean)": "20.32466285579238",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.19202079732943383",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.147708305638026",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.31018744183985464",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.1329374750742234"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.226937916520519",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.5918883494249476",
            "richards.TaskControlBlock.runTask()": "38.5349554173051",
            "richards.Scheduler.<init>()": "1.502704498883125",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.573999889235541",
            "richards.Scheduler.schedule()": "2.4737395927560044",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "3.8066052539275232",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.4694751610699848",
            "richards.RBObject.append(Packet, Packet)": "3.891524672783326",
            "Richards.benchmark()": "25.35398475142609"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$7.0x00000008000c2a90.apply(int)": "0.6642844053509256",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.5554792010262051",
            "java.lang.String.equals(Object) String.java": "0.09735202492211842",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.3342954004031524",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.10880520432472059",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.91075682609493",
            "som.Random.next()": "13.652189847901782",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.06871907641561299",
            "Storage.buildTreeDepth(int, Random)": "40.06322155030237",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.1474711379879063"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.792593748874296",
            "Towers.popDiskFrom(int)": "32.33630720092218",
            "Towers.moveDisks(int, int, int)": "8.861565062859475",
            "java.util.zip.ZipFile$CleanableResource.getInflater() ZipFile.java": "0.1560980295625653",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.1080678666202375",
            "Towers$TowersDisk.getSize()": "0.38424130353862224",
            "java.util.TreeMap.get(Object) TreeMap.java": "0.060037703677909726",
            "Towers.moveTopDisk(int, int)": "7.144486737671257",
            "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey() Collections.java": "0.09606032588465556",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.059341266315247"
        },
        "YourKit_Permute.txt": {
            "java.nio.CharBuffer.arrayOffset() CharBuffer.java": "0.10194603656464511",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.10194603656464511",
            "Permute.permute(int)": "55.68519063908837",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.10194603656464511",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.18123739833714686",
            "jdk.internal.org.objectweb.asm.MethodVisitor.<init>(int) MethodVisitor.java": "0.1585827235450035",
            "com.yourkit.probes.Table.createRow() a": "0.10194603656464511",
            "Permute.benchmark()": "0.44176615844679545",
            "Permute.swap(int, int)": "42.86264470673523",
            "java.lang.ClassLoader.checkCerts(String, CodeSource) ClassLoader.java": "0.22654674792143356"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.986049395473805",
            "som.Vector.forEach(ForEachInterface)": "40.04340188074818",
            "deltablue.EqualityConstraint.execute()": "3.6426578485067695",
            "deltablue.BinaryConstraint.isSatisfied()": "2.686783093934071",
            "som.Vector.<init>(int)": "4.80520822568978",
            "deltablue.ScaleConstraint.execute()": "2.893458716544384",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.867624263718095",
            "deltablue.Planner.makePlan(Vector)": "3.487651131549034",
            "som.Vector.append(Object)": "4.3918569804691545",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "4.340188074816576"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.118699058320804",
            "List.tail(List$Element, List$Element, List$Element)": "4.075334335680937",
            "List.makeList(int)": "0.9100261137928306",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.118699058320804",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.18464297961013953",
            "List$Element.getNext()": "21.484529556065525",
            "java.lang.StringConcatHelper.mix(long, long) StringConcatHelper.java": "0.118699058320804",
            "List.isShorterThan(List$Element, List$Element)": "72.65701247658991",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.2769644694152093",
            "java.nio.file.spi.FileSystemProvider.<clinit>() FileSystemProvider.java": "0.02637756851573422"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0370008650277645",
            "nbody.Body.getZ()": "5.1622624661662515",
            "nbody.Body.getMass()": "0.7813154002846219",
            "nbody.Body.getX()": "1.3812540112174565",
            "nbody.Body.setZ(double)": "0.5441303680553616",
            "nbody.NBodySystem.advance(double)": "45.21862879147249",
            "nbody.Body.setVY(double)": "6.264475262996343",
            "nbody.Body.setVZ(double)": "8.60842146385021",
            "nbody.Body.setVX(double)": "27.904121438736496",
            "nbody.Body.setY(double)": "0.40460976086167916"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.54993758900159",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.13185422197218755",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.03516112585925001",
            "java.util.zip.ZipFile$CleanableResource.<init>(ZipFile, ZipCoder, File, int) ZipFile.java": "0.017580562929625006",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.05274168878887502",
            "Harness.main(String[])": "8.790281464812503E-4",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "8.790281464812503E-4",
            "jdk.internal.org.objectweb.asm.MethodWriter.endCurrentBasicBlockWithNoSuccessor() MethodWriter.java": "0.07911253318331253",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.061531970253687514",
            "java.security.BasicPermission.newPermissionCollection() BasicPermission.java": "0.07032225171850003"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.1012825132045965",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.41604636365727",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.427315308132805",
            "cd.RedBlackTree.findNode(Comparable)": "8.401879690602312",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.026248208084509",
            "cd.RedBlackTree$Node.successor()": "1.609849210790589",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.000812590554018",
            "cd.RedBlackTree.put(Comparable, Object)": "7.098668424724217",
            "cd.Vector2D.compareNumbers(double, double)": "8.739181430006056",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.2852652801520925"
        },
        "YourKit_Sieve.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07991191930671969",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.07103281716152862",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "8.959014064497797",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, Object, Object) DirectMethodHandle$Holder": "0.07991191930671969",
            "Sieve.benchmark()": "85.99410427617559",
            "java.util.zip.ZipFile.getInputStream(ZipEntry) ZipFile.java": "0.07991191930671969",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.07991191930671969",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.invoke(Object, Object, long) LambdaForm$MH": "0.07991191930671969",
            "Sieve.sieve(boolean[], int)": "4.164298906094615",
            "jdk.internal.misc.Unsafe.getAndAddLong(Object, long, long) Unsafe.java": "0.16870294075863046"
        },
        "YourKit_Bounce.txt": {
            "java.lang.PublicMethods$Key.matches(Method, String, Class[]) PublicMethods.java": "0.03829143612031169",
            "Bounce.benchmark()": "58.22212862093392",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17231146254140262",
            "java.lang.invoke.MethodType.methodType(Class, Class, Class[]) MethodType.java": "0.26804005284218185",
            "java.io.PrintStream.writeln(String) PrintStream.java": "0.26804005284218185",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5552258237445195",
            "som.Random.next()": "0.17231146254140262",
            "com.yourkit.probes.Table.createRow() a": "0.17231146254140262",
            "Bounce$Ball.bounce()": "38.82751622599606",
            "Bounce$Ball.<init>(Random)": "1.3019088280905973"
        }
    },
    "Runtimes": {
        "NBody.data": 103.81649999999999,
        "JavaFlightRecorder_Queens.jfr": 107.9805,
        "rebench_test_Async_Bounce.txt": 103.449,
        "JavaFlightRecorder_Sieve.jfr": 105.22999999999999,
        "Permute.hpl": 105.9615,
        "CD.data": 95.417,
        "List.data": 150.149,
        "DeltaBlue.hpl": 89.6155,
        "Bounce.hpl": 102.8575,
        "NBody.hpl": 102.94,
        "JavaFlightRecorder_Json.jfr": 84.6795,
        "Towers.hpl": 110.0445,
        "Sieve.data": 105.485,
        "Richards.hpl": 91.492,
        "JavaFlightRecorder_Havlak.jfr": 165.615,
        "JavaFlightRecorder_CD.jfr": 98.3425,
        "rebench_test_Async_Mandelbrot.txt": 85.50999999999999,
        "JavaFlightRecorder_DeltaBlue.jfr": 79.40700000000001,
        "JavaFlightRecorder_Towers.jfr": 109.92750000000001,
        "rebench_test_Async_CD.txt": 94.85749999999999,
        "Mandelbrot.data": 86.1255,
        "rebench_test_Async_Permute.txt": 105.012,
        "JavaFlightRecorder_Permute.jfr": 107.1825,
        "rebench_test_Async_NBody.txt": 103.938,
        "JavaFlightRecorder_Bounce.jfr": 103.426,
        "Havlak.data": 159.745,
        "Mandelbrot.hpl": 85.59049999999999,
        "List.hpl": 150.92950000000002,
        "JavaFlightRecorder_Storage.jfr": 102.06649999999999,
        "rebench_test_Async_Towers.txt": 107.90950000000001,
        "JavaFlightRecorder_NBody.jfr": 105.24,
        "Queens.hpl": 110.1065,
        "Storage.data": 115.13550000000001,
        "rebench_test_Async_Sieve.txt": 103.19749999999999,
        "JavaFlightRecorder_Richards.jfr": 92.2895,
        "Storage.hpl": 108.64750000000001,
        "rebench_test_Async_List.txt": 154.8665,
        "Bounce.data": 103.617,
        "rebench_test_Async_Richards.txt": 94.8835,
        "Permute.data": 105.37299999999999,
        "JavaFlightRecorder_Mandelbrot.jfr": 87.403,
        "rebench_test_Async_DeltaBlue.txt": 99.7375,
        "JavaFlightRecorder_List.jfr": 156.2025,
        "DeltaBlue.data": 82.805,
        "Queens.data": 106.181,
        "rebench_test_Async_Storage.txt": 111.7815,
        "Json.hpl": 79.51599999999999,
        "Towers.data": 109.99,
        "Havlak.hpl": 158.95850000000002,
        "Richards.data": 93.862,
        "rebench_test_Async_Havlak.txt": 159.8845,
        "Sieve.hpl": 120.19,
        "CD.hpl": 94.1845,
        "Json.data": 83.2475,
        "rebench_test_Async_Queens.txt": 104.0215,
        "rebench_test_Async_Json.txt": 81.0925
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.01%",
            "[.] Interpreter": "0.14%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.27%",
            "[.] void nbody.NBodySystem.advance(double)": "0.01%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.11%",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.15%",
            "native_apic_msr_write": "0.05%",
            "[.] void Permute.permute(int)": "98.72%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "33.68%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.32%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.18%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.92%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.98%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "5.48%",
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "7.37%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.93%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.49%",
            "[.] void deltablue.Planner.chainTest(int)": "28.68%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.72%",
            "[.] Interpreter": "0.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.20%",
            "[.] boolean Queens.placeQueen(int)": "96.24%",
            "clear_page_rep": "0.08%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Interpreter": "0.10%",
            "[.] void Towers.moveDisks(int, int, int)": "0.02%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "clear_page_rep": "0.04%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.75%",
            "[.] boolean richards.Scheduler.start()": "22.89%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.59%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.61%",
            "[.] void richards.Scheduler.schedule()": "7.86%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.57%",
            "x86_pmu_disable_all": "0.13%",
            "[.] Interpreter": "0.11%",
            "clear_page_rep": "0.10%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.22%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.17%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.17%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.06%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.56%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.02%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.02%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "97.94%",
            "[.] Interpreter": "0.07%",
            "[.] java.lang.Object List.benchmark()": "0.49%",
            "[.] List$Element List.makeList(int)": "0.68%",
            "[.] int List$Element.length()": "0.07%"
        },
        "Sieve.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.14%",
            "[.] Interpreter": "0.17%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "93.63%",
            "[.] java.lang.Object Sieve.benchmark()": "1.86%",
            "[.] int Sieve.sieve(boolean[], int)": "2.44%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.04%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.84%",
            "clear_page_rep": "0.05%",
            "[.] java.lang.Object Bounce.benchmark()": "5.96%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.11%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.38%",
            "[.] StubRoutines (2)": "7.86%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.97%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.65%"
        }
    }
}