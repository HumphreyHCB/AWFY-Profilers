{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.Integer.getChars(II[B)I": "0.004165972337943676",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/invoke/MemberName;)Ljava/lang/invoke/MemberName;": "0.004165972337943676",
            "jdk.jfr.internal.Utils.isSettingVisible(Ljdk/jfr/internal/Control;Z)Z": "0.004165972337943676",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.008331944675887352",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.004165972337943676",
            "jdk.jfr.internal.EventWriter.putUncheckedChar(C)V": "0.004165972337943676",
            "java.lang.invoke.LambdaForm$MH+0x0000000801011400.1043351526.invoke(Ljava/lang/Object;Ljava/lang/Object;IJJ)Ljava/lang/Object;": "0.004165972337943676",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.004165972337943676",
            "Mandelbrot.mandelbrot(I)I": "99.93751041493084",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.004165972337943676"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.43757098002538575",
            "Queens.benchmark()Ljava/lang/Object;": "0.026721891909947223",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003340236488743403",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.003340236488743403",
            "Queens.placeQueen(I)Z": "8.216981762308771",
            "Queens.getRowColumn(II)Z": "71.65141292003473",
            "java.util.Arrays.fill([ZZ)V": "0.3373638853630837",
            "Queens.setRowColumn(IIZ)V": "18.53497227603714",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.026721891909947223",
            "Queens.queens()Z": "0.7315117910348052"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.util.zip.ZipEntry.<init>(Ljava/lang/String;)V": "0.0035272124440055026",
            "Bounce.verifyResult(Ljava/lang/Object;)Z": "0.007054424888011005",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.46206483016472083",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.6472082113505697",
            "Bounce$Ball.bounce()Z": "84.88942188988042",
            "Bounce.benchmark()Ljava/lang/Object;": "8.331275792740996",
            "som.Random.next()I": "1.3191774540580579",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.08112588621212656",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.04232654932806603",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.167436774716941"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.472410275433553",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.09468607994065",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.9120838356672545",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "12.016600204024854",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.9676342390800334",
            "havlak.HavlakLoopFinder.findLoops()V": "7.6602058796253365",
            "som.Vector.<init>(I)V": "2.6198646016878424",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.4329036446258",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.8656218121116575",
            "som.Vector.append(Ljava/lang/Object;)V": "2.183993322822962"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.362170493617358",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "8.809232106864798",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.7901829822550686",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.442398134608544",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.619886969924515",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.50013832351895",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.445757420068766",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.552464134687586",
            "cd.Vector2D.compareNumbers(DD)I": "3.082638422321464",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "23.424099909101688"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.11422992433488",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.00488162069807176",
            "List$Element.getNext()LList$Element;": "10.266048328044912",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.19282401757383452",
            "List.benchmark()Ljava/lang/Object;": "0.00976324139614352",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.294361728093727",
            "List$Element.length()I": "0.08298755186721991",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.0122040517451794",
            "List$Element.setNext(LList$Element;)V": "0.0366121552355382",
            "List.makeList(I)LList$Element;": "0.9543568464730291"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "16.850377628087365",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.607879159012043",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "9.195754235558278",
            "deltablue.ScaleConstraint.execute()V": "7.384160032659726",
            "deltablue.Variable.<init>()V": "7.71586037966932",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "11.691161461522759",
            "som.Vector.<init>(I)V": "6.276791181873851",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.72545417432129",
            "som.Dictionary.hash(Lsom/Dictionary$CustomHash;)I": "2.9904062053480303",
            "som.Vector.append(Ljava/lang/Object;)V": "2.959787711777914"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.5279334659193636",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.20159103236305",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.6581088410775628",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.771469896944495",
            "Storage.benchmark()Ljava/lang/Object;": "0.014463930573133249",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.6987886458145",
            "som.Random.next()I": "12.142469716145362",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.2655939251491592",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010847947929849937",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6653408063641295"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClass(ZLjava/lang/Object;)Ljava/lang/Class;": "0.0034268873582125356",
            "jdk.internal.org.objectweb.asm.Handler.putExceptionTable(Ljdk/internal/org/objectweb/asm/Handler;Ljdk/internal/org/objectweb/asm/ByteVector;)V": "0.0034268873582125356",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0034268873582125356",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.0034268873582125356",
            "Sieve.benchmark()Ljava/lang/Object;": "3.2932387512422467",
            "java.lang.System$2.encodeASCII([CI[BII)I": "0.010280662074637606",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.0034268873582125356",
            "java.util.Arrays.fill([ZZ)V": "5.414482025975806",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.006853774716425071",
            "Sieve.sieve([ZI)I": "91.21003392618485"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.03147293327738145",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.003496992586375717",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.12127570289551",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.406210658833404",
            "Towers.moveDisks(III)V": "3.9271226744999304",
            "Towers$TowersDisk.getSize()I": "11.48062666107148",
            "Towers.benchmark()Ljava/lang/Object;": "0.03496992586375717",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.22912295425934",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.41194572667506",
            "Towers.moveTopDisk(II)V": "4.325779829346762"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.8134088632517011",
            "nbody.Body.getMass()D": "0.5768367241200649",
            "nbody.Body.setVX(D)V": "29.691547787641188",
            "nbody.NBodySystem.advance(D)V": "40.851784048910226",
            "nbody.Body.setZ(D)V": "0.473213360505682",
            "nbody.Body.getY()D": "0.7737211149873925",
            "nbody.Body.getZ()D": "8.172429277054333",
            "nbody.Body.setVZ(D)V": "8.956512728403164",
            "nbody.Body.setVY(D)V": "5.992884529031812",
            "nbody.Body.setX(D)V": "1.3332872785050602"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.667959111737751",
            "richards.Scheduler.schedule()V": "11.462812830454705",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.908001409940077",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.12618963694043",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.166372929150511",
            "Richards.benchmark()Ljava/lang/Object;": "8.88967218893197",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.490659146986253",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.842086711314769",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.730348960169193",
            "richards.RBObject.<init>()V": "11.674303842086712"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "4.056542730575879",
            "java.lang.Object.<init>()V": "2.866955353143198",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.4791697775123187",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.877258473943556",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.1366283410482305",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "11.034791697775121",
            "java.lang.String.<init>([BB)V": "6.85879249415161",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.2701209496789603",
            "json.JsonPureStringParser.read()V": "12.801752028271364",
            "java.util.Arrays.copyOfRange([BII)[B": "5.335722462794285"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.014539110206455364",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003634777551613841",
            "java.lang.ref.SoftReference.<init>(Ljava/lang/Object;)V": "0.003634777551613841",
            "Run.measure(LBenchmark;)V": "0.003634777551613841",
            "Permute.swap(II)V": "43.7772608316371",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.007269555103227682",
            "java.nio.CharBuffer.limit(I)Ljava/nio/Buffer;": "0.003634777551613841",
            "Permute.permute(I)V": "56.05190462343704",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.021808665309683048",
            "Permute.benchmark()Ljava/lang/Object;": "0.1054085489968014"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.3",
            "richards.Packet::setLink": "2.4",
            "Richards::benchmark": "4.4",
            "richards.RBObject::append": "2.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "46.0",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.9",
            "richards.RBObject::<init>": "5.5"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.invoke.MethodHandleImpl::makeVarargsCollector": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.0",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>": "0.0",
            "java.nio.Buffer::clear": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.2",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "82.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.0"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.5",
            "json.JsonPureStringParser::read": "13.9",
            "java.lang.String::<init>": "4.4",
            "java.lang.String::length": "3.1",
            "java.util.Arrays::copyOfRange": "7.4",
            "java.lang.String::equals": "20.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "10.4",
            "json.JsonPureStringParser::readValue": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "33.9",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.1",
            "havlak.HavlakLoopFinder::findLoops": "5.8",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "7.5",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "7.2",
            "havlak.HavlakLoopFinder::doDFS": "6.7",
            "som.Vector::hasSome": "2.7",
            "som.Vector::forEach": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "40.8",
            "jdk.internal.org.objectweb.asm.Frame::setInputFrameFromDescriptor": "0.0",
            "Permute::permute": "51.4",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "AGCT::Unknown Java[ERR=-5]": "5.9"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "67.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "8.4",
            "Queens::setRowColumn": "20.1",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.9",
            "java.util.Arrays::setAll": "34.2",
            "som.Random::next": "13.2",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "1.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.1"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "3.3",
            "java.util.ImmutableCollections$List12::get": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "89.4",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "java.util.Arrays::fill": "5.3",
            "java.lang.Long::stringSize": "0.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "25.0",
            "deltablue.ScaleConstraint::execute": "5.1",
            "deltablue.Planner::addPropagate": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "6.6",
            "AGCT::Unknown Java[ERR=-5]": "10.6",
            "deltablue.EqualityConstraint::execute": "2.9",
            "deltablue.AbstractConstraint::<init>": "3.8",
            "som.Vector::<init>": "2.7",
            "som.Vector::forEach": "15.0",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.9"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "8.4",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "83.2",
            "java.util.Arrays::setAll": "1.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.2",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "Bounce$Ball::<init>": "3.4",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.7",
            "nbody.Body::getVZ": "0.5",
            "nbody.Body::setVZ": "9.1",
            "nbody.Body::getZ": "7.7",
            "nbody.Body::setVX": "27.8",
            "nbody.Body::setVY": "5.8",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "nbody.NBodySystem::advance": "41.7"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.6",
            "Towers::popDiskFrom": "23.1",
            "Towers::moveDisks": "3.8",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "Towers::pushDisk": "32.7",
            "Towers$TowersDisk::setNext": "14.8",
            "AGCT::Unknown Java[ERR=-5]": "3.8",
            "Towers::moveTopDisk": "4.9",
            "Towers$TowersDisk::getNext": "3.3"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "10.6",
            "cd.RedBlackTree::forEach": "5.2",
            "cd.RedBlackTree::put": "7.3",
            "cd.RedBlackTree::findNode": "8.1",
            "cd.RedBlackTree::treeMinimum": "5.9",
            "AGCT::Unknown not Java[ERR=-3]": "5.5",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "cd.Vector2D::compareNumbers": "2.7",
            "cd.RedBlackTree::treeInsert": "21.5",
            "cd.CollisionDetector::isInVoxel": "14.2"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "5.95%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.43%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "10.10%",
            "vtable": "3.36%",
            "som.Vector.<init>": "2.80%",
            "som.Vector.forEach": "24.48%",
            "itable": "2.49%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "2.74%",
            "deltablue.ScaleConstraint.execute": "6.36%",
            "deltablue.Strength.of": "6.24%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.86%",
            "som.Random.next": "1.40%",
            "clear_page_rep_[k]": "0.10%",
            "java.util.Arrays.setAll": "1.27%",
            "SpinPause": "0.03%",
            "Bounce.benchmark": "9.14%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Bounce$Ball.<init>": "3.23%",
            "Bounce.lambda$benchmark$0": "0.25%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.01%",
            "Mandelbrot.mandelbrot": "99.53%",
            "LinearScanWalker::alloc_free_reg(Interval*)": "0.01%",
            "java.lang.invoke.MethodType.equals": "0.01%",
            "CodeCache::find_blob(void*)": "0.01%",
            "XHandlers::XHandlers(ciMethod*)": "0.01%",
            "LinkResolver::resolve_field(fieldDescriptor&,": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "__tls_get_addr": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.47%",
            "som.Random.next": "12.81%",
            "java.util.Arrays.setAll": "36.37%",
            "Storage.lambda$buildTreeDepth$0": "3.19%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.58%",
            "SpinPause": "0.16%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.50%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.20%",
            "Storage.buildTreeDepth": "42.96%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "0.85%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.92%",
            "Towers.popDiskFrom": "24.19%",
            "Towers.moveDisks": "7.55%",
            "clear_page_rep_[k]": "0.04%",
            "Towers.pushDisk": "33.36%",
            "Towers.moveTopDisk": "4.91%",
            "Towers$TowersDisk.getSize": "10.91%",
            "Towers.buildTowerAt": "0.02%",
            "Towers$TowersDisk.getNext": "3.46%",
            "Towers.benchmark": "0.03%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "10.82%",
            "cd.CollisionDetector.isInVoxel": "14.18%",
            "cd.RedBlackTree.forEach": "5.49%",
            "cd.RedBlackTree.put": "7.09%",
            "cd.RedBlackTree.treeInsert": "21.15%",
            "cd.RedBlackTree.findNode": "7.11%",
            "cd.RedBlackTree.treeMinimum": "6.30%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.11%",
            "cd.Vector2D.compareNumbers": "3.37%",
            "cd.RedBlackTree.leftRotate": "2.48%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.52%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.89%",
            "som.Vector.hasSome": "2.52%",
            "som.Vector.append": "4.14%",
            "som.Vector.forEach": "2.23%",
            "som.IdentitySet.lambda$contains$0": "32.48%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.38%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.42%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.81%",
            "havlak.HavlakLoopFinder.doDFS": "5.56%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.14%",
            "Sieve.benchmark": "3.16%",
            "Interpreter": "0.03%",
            "clear_page_rep_[k]": "0.12%",
            "Sieve.sieve": "90.68%",
            "SpinPause": "0.05%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.23%",
            "Permute.swap": "41.25%",
            "Permute.benchmark": "0.02%",
            "Interpreter": "0.01%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "__vfprintf_internal": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "PhaseIdealLoop::build_loop_early(VectorSet&,": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.24%",
            "nbody.Body.getZ": "7.84%",
            "nbody.Body.getY": "0.79%",
            "nbody.Body.setX": "1.26%",
            "nbody.Body.setY": "1.83%",
            "nbody.Body.setVX": "28.49%",
            "nbody.Body.setVY": "5.59%",
            "nbody.Body.getMass": "0.51%",
            "nbody.Body.getVZ": "0.39%",
            "nbody.NBodySystem.advance": "42.70%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.67%",
            "List.makeList": "0.73%",
            "clear_page_rep_[k]": "0.05%",
            "List$Element.setNext": "0.04%",
            "java.lang.Integer.valueOf": "0.01%",
            "List.tail": "4.99%",
            "List$Element.length": "0.06%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.01%",
            "List.isShorterThan": "83.90%",
            "List$Element.<init>": "0.17%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.33%",
            "java.lang.String.length": "3.02%",
            "java.lang.String.<init>": "7.05%",
            "json.JsonPureStringParser.readArray": "2.72%",
            "json.JsonPureStringParser.isWhiteSpace": "2.14%",
            "java.lang.String.isLatin1": "2.49%",
            "json.JsonPureStringParser.readStringInternal": "9.29%",
            "java.util.Arrays.copyOfRange": "7.90%",
            "java.lang.String.equals": "22.54%",
            "json.JsonPureStringParser.read": "13.05%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.60%",
            "Queens.getRowColumn": "70.77%",
            "Queens.setRowColumn": "18.32%",
            "clear_page_rep_[k]": "0.07%",
            "Queens.queens": "0.53%",
            "Queens.placeQueen": "9.17%",
            "__tls_get_addr": "0.02%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.02%",
            "Queens.benchmark": "0.02%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.62%",
            "Richards.benchmark": "4.75%",
            "richards.Packet.<init>": "6.86%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.90%",
            "itable": "37.03%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.30%",
            "richards.TaskControlBlock.<init>": "3.21%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.00%",
            "richards.RBObject.<init>": "5.72%",
            "richards.RBObject.append": "3.22%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "5.1",
            "Towers.moveDisks": "93.0",
            "java.io.PrintStream.println": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.7",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.5",
            "java.io.PrintStream.println": "0.1",
            "Sieve.sieve": "92.6",
            "java.lang.Integer.valueOf": "0.3",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.4",
            "deltablue.AbstractConstraint.satisfy": "9.7",
            "deltablue.Planner.removePropagateFrom": "10.0",
            "som.Vector.<init>": "28.2",
            "deltablue.Variable.<init>": "5.1",
            "som.Vector.forEach": "7.5",
            "deltablue.Planner.addPropagate": "2.2",
            "deltablue.AbstractConstraint.<init>": "8.5",
            "deltablue.Planner.constraintsConsuming": "3.9",
            "deltablue.Planner.addConstraintsConsumingTo": "16.8"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0",
            "java.lang.System.nanoTime": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.5",
            "richards.Scheduler.createWorker": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.1",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.5",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.9",
            "Bounce.benchmark": "55.5",
            "Bounce$Ball.<init>": "43.0",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "3.0",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.4",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "43.3",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "97.8",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.3",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.1",
            "Run.printTotal": "0.1",
            "List.isShorterThan": "74.9",
            "List$Element.<init>": "21.1",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.6",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.5",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "Queens.setRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "18.4",
            "Queens.placeQueen": "80.8",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.935231146462534",
            "java.lang.String.<init>(byte[], byte) String.java": "6.450400266559588",
            "json.JsonPureStringParser.read()": "22.260288602014576",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.874913496287816",
            "java.lang.String.length() String.java": "2.6057908361598336",
            "json.JsonArray.<init>()": "1.973566174271874",
            "java.lang.String.substring(int, int) String.java": "10.068604919391356",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.2624415832956",
            "json.JsonPureStringParser.readStringInternal()": "3.404615240031782",
            "json.JsonPureStringParser.readValue()": "3.2593744393277917"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.488156802094914",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.067689225348093",
            "havlak.HavlakLoopFinder.findLoops()": "10.957868883430951",
            "som.Vector.<init>(int)": "2.4472866752490137",
            "som.Vector.append(Object)": "2.1968462075843926",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.102381820658264",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.300119947802937",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.318999644110916",
            "som.Vector.removeAll()": "2.9240023022948267",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.555085918655195"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.312093628088427",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "Queens.getRowColumn(int, int)": "60.7444733420026",
            "Queens.queens()": "1.3166449934980495",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.47139141742522755",
            "Queens.setRowColumn(int, int, boolean)": "21.81404421326398",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.14629388816644995",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14629388816644995",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.04876462938881665"
        },
        "YourKit_Richards.txt": {
            "richards.Scheduler$$Lambda$17.0x00000008000c7b98.apply(Packet, RBObject)": "3.4059331716265953",
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.124808528889162",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.823706015706939",
            "richards.Scheduler$$Lambda$16.0x00000008000c7970.apply(Packet, RBObject)": "3.496037223786029",
            "richards.TaskControlBlock.runTask()": "38.08878492883583",
            "richards.Scheduler.schedule()": "3.312224957380784",
            "richards.RBObject.append(Packet, Packet)": "2.7896214548560687",
            "Richards.benchmark()": "28.667505235045436",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.5966438042651658",
            "richards.Packet.setLink(Packet)": "1.5317688867103736"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.33533778176899215",
            "Storage$$Lambda$7.0x00000008000c2a98.<init>(Storage, int, Random)": "0.1136738243284719",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.250412067613191",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.449011606097464",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.38262609268964",
            "som.Random.next()": "14.788964545134196",
            "java.util.AbstractCollection.containsAll(Collection) AbstractCollection.java": "0.12504120676131908",
            "Storage.buildTreeDepth(int, Random)": "38.88213161155382",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.194234463630061",
            "jdk.internal.perf.Perf.createLong(String, int, int, long) Perf.java (native)": "0.07388798581350674"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "34.18607180404336",
            "Towers.popDiskFrom(int)": "29.146979565695506",
            "Towers.moveDisks(int, int, int)": "9.510229236402306",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.10875738643916233",
            "Towers.buildTowerAt(int, int)": "0.22959892692712047",
            "Towers$TowersDisk.getSize()": "1.631360796587435",
            "Towers.moveTopDisk(int, int)": "7.347165661667855",
            "java.io.RandomAccessFile.open(String, int) RandomAccessFile.java": "0.10875738643916233",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.17158290333885",
            "java.lang.Class.descriptorString() Class.java": "0.3746087755126703"
        },
        "YourKit_Permute.txt": {
            "javax.management.openmbean.OpenType.isAssignableFrom(OpenType) OpenType.java": "0.04541222951340795",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "0.001135305737835199",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.15894280329692784",
            "Permute.permute(int)": "56.84475829340842",
            "java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(Class, Object) InvokerBytecodeGenerator.java": "0.03405917213505597",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.022706114756703977",
            "java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls() LambdaFormBuffer.java": "0.0908244590268159",
            "Run.measure(Benchmark)": "0.001135305737835199",
            "Permute.benchmark()": "0.2157080901886878",
            "Permute.swap(int, int)": "42.58531822619831"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "7.363438274851605",
            "som.Vector.forEach(ForEachInterface)": "39.0462594234478",
            "deltablue.EqualityConstraint.execute()": "3.982267638440154",
            "deltablue.Plan$$Lambda$27.0x00000008000ccd88.apply(Object)": "2.9303478848899247",
            "deltablue.BinaryConstraint.isSatisfied()": "1.9786109650111456",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "7.689032484283819",
            "som.Vector.<init>(int)": "5.810604352944123",
            "deltablue.ScaleConstraint.execute()": "3.531444886918627",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.0287023818468706",
            "som.Vector.append(Object)": "2.078793798682596"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "3.7586360747941536",
            "List$Element.<init>(Object)": "0.24336492570609627",
            "List.makeList(int)": "0.39208793585982177",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.10816218920270944",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.04056082095101604",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.10816218920270944",
            "List$Element.getNext()": "24.05256682395251",
            "sun.nio.fs.UnixNativeDispatcher.stat(UnixPath, UnixFileAttributes) UnixNativeDispatcher.java": "0.0013520273650338682",
            "java.util.concurrent.ConcurrentHashMap$ValueIterator.<init>(ConcurrentHashMap$Node[], int, int, int, ConcurrentHashMap) ConcurrentHashMap.java": "0.02704054730067736",
            "List.isShorterThan(List$Element, List$Element)": "71.26536241093518"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.3343364515167428",
            "nbody.Body.getZ()": "5.848368276860618",
            "nbody.Body.setX(double)": "1.4053117946825269",
            "nbody.Body.getX()": "0.6955583630246851",
            "nbody.Body.setZ(double)": "0.6813632943915282",
            "nbody.NBodySystem.advance(double)": "44.203443723650395",
            "nbody.Body.setVY(double)": "7.196899797010517",
            "nbody.Body.setVZ(double)": "7.807287748236261",
            "nbody.Body.setVX(double)": "27.52423807969111",
            "nbody.Body.setY(double)": "0.6955583630246851"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.53809406723101",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.11415926095050756",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.05268888966946503",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.05268888966946503",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.026344444834732514",
            "java.nio.DirectByteBuffer.<init>(long, int) DirectByteBuffer.java": "0.01756296322315501",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.07903333450419754",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.026344444834732514",
            "java.lang.String.substring(int, int) String.java": "0.03512592644631002",
            "java.security.BasicPermission.newPermissionCollection() BasicPermission.java": "0.04390740805788752"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.0952864751700995",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.69135802469136",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.562944490625288",
            "cd.RedBlackTree.findNode(Comparable)": "7.4812967581047385",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "5.92654167051507",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.1326005972722517",
            "cd.RedBlackTree$Node.successor()": "2.1089252178196483",
            "cd.RedBlackTree.put(Comparable, Object)": "5.880360826329238",
            "cd.Vector2D.compareNumbers(double, double)": "11.345094054985992",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.271143129829747"
        },
        "YourKit_Sieve.txt": {
            "java.lang.AbstractStringBuilder.append(int) AbstractStringBuilder.java": "0.18673942588000952",
            "com.yourkit.probes.Table.ensureCreated() a": "0.09336971294000476",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.03112323764666826",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.2593603137222355",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.888143083897874",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, Object, Object) DirectMethodHandle$Holder": "0.09336971294000476",
            "Sieve.benchmark()": "91.27408160512911",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.05187206274444709",
            "com.yourkit.probes.Table.createRow() a": "0.09336971294000476",
            "Sieve.sieve(boolean[], int)": "6.006784865806973"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.fs.NativeBuffers.allocNativeBuffer(int) NativeBuffers.java": "0.3124145741398836",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.17573319795368453",
            "Bounce.benchmark()": "62.67817393681414",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.7419846135822236",
            "som.Random.next()": "0.17573319795368453",
            "Bounce.lambda$benchmark$0(Random, int)": "0.17573319795368453",
            "java.lang.Object.hashCode() Object.java (native)": "0.21478501972116998",
            "Bounce$Ball.bounce()": "34.20939586831725",
            "java.lang.StringConcatHelper.newArray(long) StringConcatHelper.java": "0.19525910883742723",
            "Bounce$Ball.<init>(Random)": "0.5662514156285391"
        }
    },
    "Runtimes": {
        "NBody.data": 103.492,
        "JavaFlightRecorder_Queens.jfr": 109.785,
        "rebench_test_Async_Bounce.txt": 102.1675,
        "JavaFlightRecorder_Sieve.jfr": 106.174,
        "Permute.hpl": 105.78049999999999,
        "CD.data": 95.17850000000001,
        "List.data": 151.0695,
        "DeltaBlue.hpl": 83.2675,
        "Bounce.hpl": 100.74000000000001,
        "Towers.hpl": 110.727,
        "JavaFlightRecorder_Json.jfr": 83.811,
        "NBody.hpl": 102.2205,
        "Sieve.data": 105.9305,
        "Richards.hpl": 90.8205,
        "JavaFlightRecorder_Havlak.jfr": 164.10700000000003,
        "JavaFlightRecorder_CD.jfr": 96.969,
        "JavaFlightRecorder_DeltaBlue.jfr": 79.3875,
        "rebench_test_Async_Mandelbrot.txt": 85.4565,
        "JavaFlightRecorder_Towers.jfr": 109.369,
        "rebench_test_Async_CD.txt": 94.5505,
        "Mandelbrot.data": 85.9635,
        "rebench_test_Async_Permute.txt": 104.0715,
        "JavaFlightRecorder_Permute.jfr": 105.992,
        "rebench_test_Async_NBody.txt": 102.59649999999999,
        "JavaFlightRecorder_Bounce.jfr": 102.6485,
        "Havlak.data": 159.3855,
        "Mandelbrot.hpl": 86.213,
        "List.hpl": 151.39600000000002,
        "JavaFlightRecorder_Storage.jfr": 105.0455,
        "rebench_test_Async_Towers.txt": 108.54249999999999,
        "Queens.hpl": 108.6675,
        "JavaFlightRecorder_NBody.jfr": 104.792,
        "Storage.data": 114.63,
        "rebench_test_Async_Sieve.txt": 105.8155,
        "JavaFlightRecorder_Richards.jfr": 94.9355,
        "Storage.hpl": 109.96950000000001,
        "rebench_test_Async_List.txt": 148.47050000000002,
        "rebench_test_Async_Richards.txt": 91.161,
        "Bounce.data": 102.813,
        "Permute.data": 105.047,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.765,
        "rebench_test_Async_DeltaBlue.txt": 101.9225,
        "JavaFlightRecorder_List.jfr": 153.33100000000002,
        "DeltaBlue.data": 97.8055,
        "Queens.data": 106.8995,
        "rebench_test_Async_Storage.txt": 107.82849999999999,
        "Json.hpl": 80.01400000000001,
        "Towers.data": 112.352,
        "Havlak.hpl": 162.14749999999998,
        "Richards.data": 97.424,
        "rebench_test_Async_Havlak.txt": 158.684,
        "Sieve.hpl": 102.785,
        "CD.hpl": 94.334,
        "Json.data": 87.4745,
        "rebench_test_Async_Json.txt": 81.5205,
        "rebench_test_Async_Queens.txt": 109.4185
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.02%",
            "[.] Interpreter": "0.15%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.25%",
            "[.] void nbody.NBodySystem.advance(double)": "0.03%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.13%",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.19%",
            "x86_pmu_enable_event": "0.03%",
            "[.] void Permute.permute(int)": "98.77%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.05%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.38%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.89%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.07%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.00%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "4.99%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "18.91%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.42%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "11.41%",
            "[.] void deltablue.Planner.chainTest(int)": "25.57%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.86%",
            "x86_pmu_disable_all": "0.08%",
            "[.] Interpreter": "0.10%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.25%",
            "[.] boolean Queens.placeQueen(int)": "95.68%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.03%",
            "[.] Interpreter": "0.10%",
            "[.] void Towers.moveDisks(int, int, int)": "99.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "clear_page_rep": "0.03%"
        },
        "Richards.data": {
            "[.] java.lang.Object Richards.benchmark()": "6.55%",
            " ": "0",
            "[.] vtable chunks": "35.68%",
            "[.] boolean richards.Scheduler.start()": "24.38%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.64%",
            "[.] void richards.Scheduler.schedule()": "8.10%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.65%",
            "x86_pmu_disable_all": "0.30%",
            "[.] Interpreter": "0.13%",
            "clear_page_rep": "0.07%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "86.75%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.04%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.87%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.42%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.07%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.29%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.01%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.14%",
            "[.] Interpreter": "0.07%",
            "[.] java.lang.Object List.benchmark()": "0.45%",
            "[.] List$Element List.makeList(int)": "0.62%",
            "clear_page_rep": "0.07%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.09%",
            "[.] java.lang.Object Sieve.benchmark()": "1.90%",
            "clear_page_rep": "0.07%",
            "[.] int Sieve.sieve(boolean[], int)": "2.54%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.13%",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.50%",
            "clear_page_rep": "0.06%",
            "[.] java.lang.Object Bounce.benchmark()": "6.03%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "31.71%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.36%",
            "[.] StubRoutines (2)": "7.57%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "18.23%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "24.32%"
        }
    }
}