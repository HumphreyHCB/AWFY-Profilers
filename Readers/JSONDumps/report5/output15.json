{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.util.zip.ZipFile$CleanableResource.getInflater()Ljava/util/zip/Inflater;": "0.004098696614476596",
            "java.lang.CharacterDataLatin1.toUpperCase(I)I": "0.004098696614476596",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.008197393228953192",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.004098696614476596",
            "Mandelbrot.mandelbrot(I)I": "99.95491433724075",
            "java.lang.Long.getChars(JI[B)I": "0.004098696614476596",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.004098696614476596",
            "Mandelbrot.verifyResult(II)Z": "0.004098696614476596",
            "jdk.internal.org.objectweb.asm.MethodWriter.<init>(Ljdk/internal/org/objectweb/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V": "0.004098696614476596",
            "java.lang.invoke.LambdaForm$Name.internArguments()V": "0.004098696614476596"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.7285491936285061",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.003311587243765937",
            "Queens.benchmark()Ljava/lang/Object;": "0.03973904692519124",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003311587243765937",
            "Queens.placeQueen(I)Z": "8.55714143789118",
            "Queens.getRowColumn(II)Z": "72.40454349769846",
            "java.util.Arrays.fill([ZZ)V": "0.36427459681425306",
            "Queens.setRowColumn(IIZ)V": "16.935457164619002",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.03311587243765937",
            "Queens.queens()Z": "0.890816968573037"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.Math.abs(I)I": "0.010518196479910246",
            "java.lang.invoke.LambdaForm$MH+0x0000000801010400.63001505.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.003506065493303415",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.3996914662365893",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.4199565247878831",
            "Bounce$Ball.bounce()Z": "85.02208821260781",
            "Bounce.benchmark()Ljava/lang/Object;": "8.649463571979526",
            "som.Random.next()I": "1.2937381670289603",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.0455788514129444",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.0455788514129444",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.074819437627095"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.670513922110495",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "37.60014862636725",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.815006618517917",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "17.326583219154223",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.1852720559206706",
            "som.Vector.<init>(I)V": "5.132254243979472",
            "havlak.HavlakLoopFinder.findLoops()V": "3.8108729476788743",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.333387520029726",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "3.0630965374701007",
            "som.Vector.append(Ljava/lang/Object;)V": "2.4616242075195656"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "11.421339563862928",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "8.652647975077882",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.9010903426791277",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.3481308411214954",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.623052959501558",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.38551401869159",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.5",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.15031152647975",
            "cd.Vector2D.compareNumbers(DD)I": "3.0646417445482865",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "23.31386292834891"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.06055715388393",
            "java.lang.invoke.LambdaForm$MH+0x0000000801010000.254749889.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.004678034289991345",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.0070170514349870185",
            "List$Element.getNext()LList$Element;": "9.753701494631954",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.13800201155474467",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.9507402989263911",
            "List$Element.length()I": "0.08654363436483989",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.004678034289991345",
            "List$Element.setNext(LList$Element;)V": "0.04678034289991345",
            "List.makeList(I)LList$Element;": "0.907538652258321"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "2.654127481713689",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "15.538140020898641",
            "deltablue.ScaleConstraint.execute()V": "7.884012539184953",
            "deltablue.EqualityConstraint.execute()V": "2.993730407523511",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "3.3960292580982236",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "28.495297805642632",
            "som.Vector.<init>(I)V": "8.301985370950888",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "2.3249738766980146",
            "deltablue.Planner$$Lambda$84+0x0000000801014668.2039810346.apply(Ljava/lang/Object;)V": "2.1577847439916407",
            "som.Vector.append(Ljava/lang/Object;)V": "5.961337513061651"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.436388049681101",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.81365857297378",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.6601767931073067",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.763380701950692",
            "Storage.benchmark()Ljava/lang/Object;": "0.018649061952183806",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.43325500727313",
            "som.Random.next()I": "12.767147812465033",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.309164149043303",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.014919249561747044",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6900152922308008"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.006599571027883187",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0032997855139415937",
            "Sieve.benchmark()Ljava/lang/Object;": "3.151295165814222",
            "sun.invoke.util.Wrapper.findPrimitiveType(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;": "0.0032997855139415937",
            "java.nio.CharBuffer.position(I)Ljava/nio/CharBuffer;": "0.0032997855139415937",
            "java.io.FileOutputStream.write([BII)V": "0.0032997855139415937",
            "jdk.jfr.events.ExceptionStatisticsEvent.commit()V": "0.0032997855139415937",
            "java.util.Arrays.fill([ZZ)V": "6.903151295165814",
            "Sieve.sieve([ZI)I": "89.87955782874113",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.009899356541824781"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.04549590536851683",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.281444669979702",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.0491355777979985",
            "Towers.moveDisks(III)V": "3.797158255756982",
            "Towers$TowersDisk.getSize()I": "11.244487996080354",
            "Towers.benchmark()Ljava/lang/Object;": "0.013998740113389795",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.171064604185624",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.00160985511304",
            "Towers.moveTopDisk(II)V": "4.350108490235879",
            "java.io.PrintStream.writeln(Ljava/lang/String;)V": "0.0069993700566948975"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.7022305089427527",
            "nbody.Body.getMass()D": "0.5524480353566743",
            "nbody.Body.setVX(D)V": "29.8011187072716",
            "nbody.NBodySystem.advance(D)V": "40.82590981285823",
            "nbody.Body.setZ(D)V": "0.47648643049513156",
            "nbody.Body.getY()D": "0.8010496512671778",
            "nbody.Body.getZ()D": "8.22457012637249",
            "nbody.Body.setVZ(D)V": "8.718320557972516",
            "nbody.Body.setVY(D)V": "6.304813203508045",
            "nbody.Body.setX(D)V": "1.45017609281127"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.754056870626767",
            "richards.Scheduler.schedule()V": "10.62230162274825",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.751228226887003",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.2453476254280185",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.69956825963972",
            "Richards.benchmark()Ljava/lang/Object;": "9.706714306982283",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.518386184308471",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.937769837725175",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.868244752121482",
            "richards.RBObject.<init>()V": "11.25502456453774"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.539911252929152",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.993618188163733",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.417559954130727",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.349753203370394",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "11.148227551478286",
            "java.lang.String.<init>([BB)V": "4.781373086702897",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.450167023981652",
            "json.JsonPureStringParser.read()V": "13.466620132622026",
            "java.util.Arrays.copyOfRange([BII)[B": "6.27711023582789",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.6146981103854015"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.01436420440262865",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)J": "0.0035910511006571623",
            "java.nio.Buffer.remaining()I": "0.0035910511006571623",
            "jdk.internal.misc.Unsafe.allocateUninitializedArray0(Ljava/lang/Class;I)Ljava/lang/Object;": "0.0035910511006571623",
            "Permute.swap(II)V": "43.71027399719898",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.007182102201314325",
            "Permute.permute(I)V": "56.14967500987539",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010773153301971487",
            "Permute.benchmark()Ljava/lang/Object;": "0.039501562107228785",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.007182102201314325"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "richards.Packet::setLink": "2.1",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "6.0",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.9",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.lang.String::substring": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "jdk.internal.org.objectweb.asm.Type::getArgumentTypes": "0.0",
            "java.lang.invoke.LambdaFormBuffer::changeName": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.2",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.String::startsWith": "0.0",
            "Mandelbrot::mandelbrot": "98.7",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.2",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "1.8",
            "List::isShorterThan": "82.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.8",
            "json.JsonPureStringParser::read": "14.0",
            "java.lang.String::<init>": "4.4",
            "java.lang.String::length": "3.4",
            "java.util.Arrays::copyOfRange": "8.2",
            "java.lang.String::equals": "19.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "json.JsonPureStringParser::readValue": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.7"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "33.7",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.7",
            "havlak.HavlakLoopFinder::findLoops": "5.9",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "6.1",
            "som.Vector::hasSome": "2.2",
            "som.Vector::forEach": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "40.0",
            "Permute::permute": "50.8",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::emitStaticInvoke": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "6.3"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "55.7",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "14.3",
            "Queens::setRowColumn": "24.8",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.7",
            "java.util.Arrays::setAll": "33.5",
            "som.Random::next": "12.1",
            "AGCT::Unknown not Java[ERR=-3]": "6.0",
            "AGCT::Unknown Java[ERR=-5]": "1.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "2.9"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "3.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.io.FileOutputStream::write": "0.0",
            "Sieve::sieve": "89.4",
            "java.lang.invoke.LambdaForm$MH.0x0000000801008800::linkToTargetMethod": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0",
            "java.util.Arrays::fill": "5.5"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "9.2",
            "deltablue.ScaleConstraint::execute": "5.8",
            "deltablue.Planner::addPropagate": "2.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.8",
            "AGCT::Unknown Java[ERR=-5]": "16.6",
            "deltablue.AbstractConstraint::satisfy": "2.0",
            "deltablue.EqualityConstraint::execute": "2.3",
            "deltablue.AbstractConstraint::<init>": "8.2",
            "som.Vector::forEach": "23.9",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.4"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "8.9",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "83.0",
            "java.util.Arrays::setAll": "1.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "Bounce$Ball::<init>": "3.1",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.1",
            "nbody.Body::getY": "0.8",
            "nbody.Body::getVZ": "0.4",
            "nbody.Body::setVZ": "9.0",
            "nbody.Body::getZ": "7.4",
            "nbody.Body::setVX": "27.7",
            "nbody.Body::setVY": "5.8",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "nbody.NBodySystem::advance": "41.0"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.7",
            "Towers::popDiskFrom": "23.5",
            "Towers::moveDisks": "3.5",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "Towers::pushDisk": "33.2",
            "Towers$TowersDisk::setNext": "14.9",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "Towers::moveTopDisk": "4.9",
            "Towers$TowersDisk::getNext": "3.3"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "10.8",
            "cd.RedBlackTree::forEach": "5.4",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::findNode": "6.9",
            "cd.RedBlackTree::treeMinimum": "6.3",
            "AGCT::Unknown not Java[ERR=-3]": "5.0",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "3.7",
            "cd.RedBlackTree::treeInsert": "20.4",
            "cd.CollisionDetector::isInVoxel": "14.2"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "6.33%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.07%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "11.26%",
            "vtable": "3.52%",
            "som.Vector.<init>": "2.55%",
            "som.Vector.forEach": "21.66%",
            "deltablue.ScaleConstraint.recalculate": "2.64%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "2.61%",
            "deltablue.ScaleConstraint.execute": "8.49%",
            "deltablue.Strength.of": "7.36%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.68%",
            "som.Random.next": "1.39%",
            "clear_page_rep_[k]": "0.13%",
            "java.util.Arrays.setAll": "1.43%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "Bounce.benchmark": "8.96%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Bounce$Ball.<init>": "3.37%",
            "Bounce.lambda$benchmark$0": "0.30%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "Mandelbrot.mandelbrot": "99.56%",
            "methodHandle::~methodHandle()": "0.01%",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn": "0.01%",
            "exit_to_user_mode_loop_[k]": "0.01%",
            "I2C/C2I": "0.01%",
            "PhaseLive::add_liveout(Block*,": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.47%",
            "som.Random.next": "13.22%",
            "clear_page_rep_[k]": "0.18%",
            "java.util.Arrays.setAll": "36.41%",
            "Storage.lambda$buildTreeDepth$0": "3.30%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.49%",
            "SpinPause": "0.17%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.58%",
            "Storage.buildTreeDepth": "42.16%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.04%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.51%",
            "Towers.popDiskFrom": "20.97%",
            "Towers.moveDisks": "8.54%",
            "clear_page_rep_[k]": "0.05%",
            "Towers.pushDisk": "36.28%",
            "Towers.moveTopDisk": "4.14%",
            "Towers$TowersDisk.getSize": "10.28%",
            "Towers$TowersDisk.getNext": "3.72%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Towers.benchmark": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.45%",
            "cd.CollisionDetector.isInVoxel": "14.81%",
            "cd.RedBlackTree.forEach": "5.27%",
            "cd.RedBlackTree.put": "7.00%",
            "cd.RedBlackTree.treeInsert": "20.94%",
            "cd.RedBlackTree.findNode": "7.67%",
            "cd.RedBlackTree.treeMinimum": "6.48%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.99%",
            "cd.Vector2D.compareNumbers": "3.06%",
            "cd.RedBlackTree.leftRotate": "2.35%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "6.12%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.51%",
            "som.Vector.hasSome": "2.07%",
            "som.Vector.append": "3.78%",
            "som.Vector.forEach": "1.98%",
            "som.IdentitySet.lambda$contains$0": "33.51%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.35%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.30%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "2.96%",
            "havlak.HavlakLoopFinder.doDFS": "5.20%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.10%",
            "Sieve.benchmark": "3.21%",
            "clear_page_rep_[k]": "0.09%",
            "Sieve.sieve": "90.68%",
            "SpinPause": "0.01%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.01%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__futex_abstimed_wait_common": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.06%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.72%",
            "MethodData::compute_allocation_size_in_bytes(methodHandle": "0.01%",
            "Permute.swap": "40.79%",
            "Permute.benchmark": "0.02%",
            "ciMethodData::load_data()": "0.01%",
            "Permute.verifyResult": "0.01%",
            "RelocIterator::reloc()": "0.01%",
            ".annobin__ZN15StatSamplerTask4taskEv.start": "0.01%",
            "__tls_get_addr": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.62%",
            "nbody.Body.getZ": "8.46%",
            "nbody.Body.getY": "0.75%",
            "nbody.Body.setX": "1.42%",
            "nbody.Body.setY": "1.71%",
            "NBody.innerBenchmarkLoop": "0.34%",
            "nbody.Body.setVX": "29.19%",
            "nbody.Body.setVY": "6.27%",
            "nbody.Body.getMass": "0.58%",
            "nbody.NBodySystem.advance": "41.07%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.52%",
            "List.makeList": "0.73%",
            "clear_page_rep_[k]": "0.06%",
            "List$Element.setNext": "0.04%",
            "java.lang.Integer.valueOf": "0.01%",
            "List.tail": "4.98%",
            "List$Element.length": "0.08%",
            "List.isShorterThan": "83.99%",
            "List$Element.<init>": "0.18%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "8.12%",
            "java.lang.String.length": "2.75%",
            "java.lang.String.<init>": "5.03%",
            "json.JsonPureStringParser.isWhiteSpace": "3.58%",
            "java.lang.String.isLatin1": "2.52%",
            "json.JsonPureStringParser.readStringInternal": "9.17%",
            "java.util.Arrays.copyOfRange": "7.21%",
            "java.lang.String.equals": "21.23%",
            "json.JsonPureStringParser.read": "15.74%",
            "json.JsonPureStringParser.readValue": "2.23%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.91%",
            "Queens.getRowColumn": "58.13%",
            "Queens.setRowColumn": "23.88%",
            "Interpreter": "0.01%",
            "clear_page_rep_[k]": "0.09%",
            "Queens.queens": "0.60%",
            "Queens.placeQueen": "15.80%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.03%",
            "Queens.benchmark": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.74%",
            "Richards.benchmark": "5.61%",
            "richards.Packet.<init>": "7.05%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.77%",
            "itable": "34.78%",
            "richards.TaskControlBlock.<init>": "3.40%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.05%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.35%",
            "richards.RBObject.<init>": "5.84%",
            "richards.RBObject.append": "3.01%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.5",
            "Towers.moveDisks": "94.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "Sieve.benchmark": "4.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.0",
            "java.lang.Integer.valueOf": "0.8",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.3",
            "deltablue.AbstractConstraint.satisfy": "10.4",
            "deltablue.Planner.removePropagateFrom": "10.0",
            "som.Vector.<init>": "30.5",
            "deltablue.Variable.<init>": "4.4",
            "som.Vector.forEach": "7.1",
            "deltablue.AbstractConstraint.<init>": "4.7",
            "deltablue.Planner.constraintsConsuming": "4.1",
            "deltablue.Plan.lambda$execute$0": "3.2",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "9.0",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "3.9"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.3",
            "Mandelbrot.mandelbrot": "99.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "12.7",
            "richards.Scheduler.<init>": "0.0",
            "richards.Packet.<init>": "0.3",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "85.6",
            "richards.RBObject.<init>": "0.6",
            "richards.RBObject.append": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.util.Arrays.setAll": "0.0",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "53.2",
            "Bounce$Ball.<init>": "45.7",
            "Bounce.lambda$benchmark$0": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.5",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "45.2",
            "cd.RedBlackTree$InsertResult.<init>": "14.8",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.5",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.1",
            "List$Element.length": "0.2",
            "List.isShorterThan": "77.1",
            "List$Element.<init>": "19.8",
            "Run.printResult": "0.1",
            "java.lang.System.nanoTime": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "18.3",
            "Queens.placeQueen": "81.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.218590299874652",
            "json.JsonPureStringParser.readChar(String)": "2.0634461479124484",
            "java.lang.String.<init>(byte[], byte) String.java": "6.3099026130556375",
            "json.JsonPureStringParser.isWhiteSpace()": "1.897599074341915",
            "json.JsonPureStringParser.read()": "22.605341818532448",
            "java.lang.String.length() String.java": "3.012245685083406",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.661266994503906",
            "java.lang.String.substring(int, int) String.java": "10.00482113585961",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.363899334683253",
            "json.JsonPureStringParser.readStringInternal()": "3.062385498023335"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.hasSome(TestInterface)": "2.4503908598917623",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.8671935400738775",
            "havlak.HavlakLoopFinder.findLoops()": "11.775191134782236",
            "som.Vector.<init>(int)": "5.4698909028433995",
            "som.Set.<init>(int)": "1.5612919852246374",
            "som.Vector.append(Object)": "5.886521776479685",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.282449961343529",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.224293445580277",
            "som.Vector.removeAll()": "2.7081006786358564",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.37007129971652"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.333675706335944",
            "jdk.internal.org.objectweb.asm.Frame.pop(String) Frame.java": "0.12264107556223267",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.13797121000751175",
            "Queens.getRowColumn(int, int)": "57.610645245358796",
            "Queens.queens()": "0.8891477978261869",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.3832533611319771",
            "Queens.setRowColumn(int, int, boolean)": "25.831276540295256",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.21462188223390719",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.44457389891309346",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.030660268890558166"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.2698850574712646",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.092873563218391",
            "richards.TaskControlBlock.runTask()": "39.816091954022994",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "2.975632183908046",
            "richards.Scheduler.schedule()": "2.589425287356322",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.3213793103448284",
            "richards.RBObject.append(Packet, Packet)": "2.902068965517242",
            "richards.Packet.<init>(Packet, int, int)": "1.548505747126437",
            "Richards.benchmark()": "25.8832183908046",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.9420689655172418"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2653194934022082",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.4078177200933495",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.09204962015994977",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.37902784771744025",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.62980350113439",
            "som.Random.next()": "14.662963023126116",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, Object) DirectMethodHandle$Holder": "0.048732151849385175",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.07039088600466747",
            "Storage.buildTreeDepth(int, Random)": "36.45706426687893",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.6332526545486057"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "34.57465879484666",
            "Towers.popDiskFrom(int)": "32.67442694265841",
            "Towers.moveDisks(int, int, int)": "7.290197671917201",
            "java.nio.Buffer.<init>(int, int, int, int, MemorySegmentProxy) Buffer.java": "0.10756029352008985",
            "Towers$TowersDisk.getSize()": "0.9560914979563543",
            "Towers.moveTopDisk(int, int)": "7.50531825895738",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "15.787460860004298",
            "com.yourkit.probes.Table.createRow() a": "0.22707173076463413",
            "Towers.benchmark()": "0.22707173076463413",
            "java.util.Arrays$ArrayList.iterator() Arrays.java": "0.1314625809689987"
        },
        "YourKit_Permute.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.19970931200142014",
            "sun.management.MappedMXBeanType.newMappedType(Type) MappedMXBeanType.java": "0.0443798471114267",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0887596942228534",
            "Permute.permute(int)": "57.638326435965425",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.09985465600071007",
            "sun.invoke.util.BytecodeDescriptor.unparseSig(Class, StringBuilder) BytecodeDescriptor.java": "0.16642442666785012",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.05547480888928337",
            "sun.nio.fs.UnixFileAttributes.asBasicFileAttributes() UnixFileAttributes.java": "0.15532946488999344",
            "Permute.benchmark()": "0.09985465600071007",
            "Permute.swap(int, int)": "41.31763766073826"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.961822248502455",
            "deltablue.Variable.<init>()": "2.8022726688433557",
            "som.Vector.forEach(ForEachInterface)": "22.443890274314214",
            "deltablue.BinaryConstraint.getOutput()": "3.1107797516517985",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "9.332339254955395",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "3.6249582229992034",
            "som.Vector.<init>(int)": "2.827981592410726",
            "deltablue.BinaryConstraint.chooseMethod(int)": "2.5451834331696532",
            "som.Vector.append(Object)": "18.84464097488238",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "3.4449957580276114"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.21054570815733026",
            "sun.management.MappedMXBeanType$CompositeDataMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.052636427039332565",
            "List.tail(List$Element, List$Element, List$Element)": "4.618846472701433",
            "List$Element.<init>(Object)": "0.6579553379916572",
            "List.makeList(int)": "1.8554340531364728",
            "Benchmark.innerBenchmarkLoop(int)": "0.11843196083849829",
            "List$Element.getNext()": "23.094232363507164",
            "List.isShorterThan(List$Element, List$Element)": "68.87476478096667",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.4474096298343268",
            "sun.management.LazyCompositeData.isTypeMatched(CompositeType, CompositeType) LazyCompositeData.java": "0.03947732027949943"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "3.276965833828796",
            "nbody.Body.getZ()": "5.710493204098281",
            "nbody.Body.setX(double)": "0.3871520816337818",
            "nbody.Body.getMass()": "0.40097894169213116",
            "nbody.Body.setZ(double)": "0.8987459037927076",
            "nbody.NBodySystem.advance(double)": "45.31062041121082",
            "nbody.Body.setVY(double)": "5.268033682231102",
            "nbody.Body.setVZ(double)": "8.392904055418054",
            "nbody.Body.setVX(double)": "27.888776737690634",
            "nbody.Body.setY(double)": "0.6775161428591181"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.33895009721321",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07777057679844457",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(MethodType, int) DirectMethodHandle.java": "0.0691294015986174",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0691294015986174",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.07777057679844457",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(int, int) MethodWriter.java": "0.06048822639879022",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.05184705119896305",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.08641175199827175",
            "java.lang.invoke.MethodHandle.invokeBasic(Object[]) MethodHandle.java (native)": "0.08641175199827175",
            "java.security.BasicPermission.newPermissionCollection() BasicPermission.java": "0.05184705119896305"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.8943143011203643",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.200919990147717",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "16.622397965636836",
            "cd.RedBlackTree.findNode(Comparable)": "8.101505135835014",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.14144682097471",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.369873318288632",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "1.9371717292752582",
            "cd.RedBlackTree.put(Comparable, Object)": "7.296014485517811",
            "cd.Vector2D.compareNumbers(double, double)": "8.227987138777385",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.6080655576192098"
        },
        "YourKit_Sieve.txt": {
            "java.io.PrintStream.println(String) PrintStream.java": "0.08019808928052288",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11027237276071897",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.2054474552143795",
            "Benchmark.innerBenchmarkLoop(int)": "0.04009904464026144",
            "Sieve.benchmark()": "91.00478181107334",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.08019808928052288",
            "java.lang.invoke.MethodHandles$Lookup.getDirectFieldCommon(byte, Class, MemberName, boolean) MethodHandles.java": "0.08019808928052288",
            "Sieve.sieve(boolean[], int)": "6.125129068799935",
            "jdk.internal.org.objectweb.asm.Frame.pop() Frame.java": "0.0501238058003268",
            "java.util.zip.Inflater.<init>(boolean) Inflater.java": "0.19047046204124185"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.15536695733234931",
            "Bounce.benchmark()": "61.098055970946376",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.19420869666543666",
            "java.util.ImmutableCollections$MapN.probe(Object) ImmutableCollections.java": "0.15536695733234931",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.233050435998524",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5632052203297664",
            "som.Random.next()": "0.36899652366432967",
            "Bounce$Ball.bounce()": "35.92860888310578",
            "jdk.internal.loader.URLClassPath$JarLoader$1.run() URLClassPath.java": "0.233050435998524",
            "Bounce$Ball.<init>(Random)": "0.5632052203297664"
        }
    },
    "Runtimes": {
        "NBody.data": 104.4675,
        "JavaFlightRecorder_Queens.jfr": 110.408,
        "rebench_test_Async_Bounce.txt": 102.1985,
        "JavaFlightRecorder_Sieve.jfr": 108.7935,
        "Permute.hpl": 105.6075,
        "CD.data": 97.0815,
        "DeltaBlue.hpl": 102.487,
        "List.data": 151.975,
        "Bounce.hpl": 102.34,
        "Towers.hpl": 107.7745,
        "NBody.hpl": 102.803,
        "JavaFlightRecorder_Json.jfr": 83.06649999999999,
        "Sieve.data": 107.33449999999999,
        "Richards.hpl": 91.0655,
        "JavaFlightRecorder_Havlak.jfr": 164.3945,
        "JavaFlightRecorder_CD.jfr": 97.41149999999999,
        "JavaFlightRecorder_DeltaBlue.jfr": 79.089,
        "rebench_test_Async_Mandelbrot.txt": 86.812,
        "JavaFlightRecorder_Towers.jfr": 108.09049999999999,
        "rebench_test_Async_CD.txt": 93.689,
        "rebench_test_Async_Permute.txt": 104.849,
        "Mandelbrot.data": 86.7475,
        "JavaFlightRecorder_Permute.jfr": 107.858,
        "rebench_test_Async_NBody.txt": 103.452,
        "JavaFlightRecorder_Bounce.jfr": 103.7005,
        "Havlak.data": 159.55599999999998,
        "Mandelbrot.hpl": 86.32300000000001,
        "JavaFlightRecorder_Storage.jfr": 101.3245,
        "List.hpl": 155.36599999999999,
        "rebench_test_Async_Towers.txt": 108.666,
        "JavaFlightRecorder_NBody.jfr": 105.26050000000001,
        "Queens.hpl": 104.584,
        "Storage.data": 116.0435,
        "rebench_test_Async_Sieve.txt": 105.012,
        "JavaFlightRecorder_Richards.jfr": 91.92,
        "Storage.hpl": 106.58949999999999,
        "rebench_test_Async_List.txt": 150.4715,
        "Bounce.data": 103.61449999999999,
        "rebench_test_Async_Richards.txt": 98.947,
        "Permute.data": 107.383,
        "rebench_test_Async_DeltaBlue.txt": 108.805,
        "JavaFlightRecorder_Mandelbrot.jfr": 87.7955,
        "JavaFlightRecorder_List.jfr": 159.7725,
        "DeltaBlue.data": 89.423,
        "Queens.data": 111.7105,
        "rebench_test_Async_Storage.txt": 111.391,
        "Json.hpl": 80.2835,
        "Towers.data": 110.3365,
        "Havlak.hpl": 162.2755,
        "Richards.data": 95.1755,
        "rebench_test_Async_Havlak.txt": 155.2605,
        "Sieve.hpl": 102.9085,
        "CD.hpl": 94.4165,
        "rebench_test_Async_Json.txt": 82.123,
        "Json.data": 81.15,
        "rebench_test_Async_Queens.txt": 104.2525
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.02%",
            "[.] Interpreter": "0.10%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.32%",
            "[.] void nbody.NBodySystem.advance(double)": "0.03%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.04%",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.13%",
            "[.] void Permute.permute(int)": "0.02%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.27%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.42%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.53%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.11%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.80%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "5.94%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "11.00%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.99%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "12.69%",
            "[.] void deltablue.Planner.chainTest(int)": "27.84%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.72%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.24%",
            "[.] boolean Queens.placeQueen(int)": "96.22%",
            "clear_page_rep": "0.06%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Interpreter": "0.10%",
            "[.] void Towers.moveDisks(int, int, int)": "0.03%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "clear_page_rep": "0.02%"
        },
        "Richards.data": {
            "[.] java.lang.Object Richards.benchmark()": "6.55%",
            " ": "0",
            "[.] vtable chunks": "35.84%",
            "[.] boolean richards.Scheduler.start()": "23.55%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.90%",
            "[.] void richards.Scheduler.schedule()": "8.60%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.86%",
            "x86_pmu_disable_all": "0.25%",
            "[.] Interpreter": "0.11%",
            "clear_page_rep": "0.12%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.03%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.47%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.46%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.11%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.58%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "9.74%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.16%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.44%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.21%",
            "[.] Interpreter": "0.08%",
            "[.] java.lang.Object List.benchmark()": "0.46%",
            "[.] List$Element List.makeList(int)": "0.67%",
            "[.] int List$Element.length()": "0.07%"
        },
        "Sieve.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.12%",
            "[.] Interpreter": "0.15%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.06%",
            "[.] java.lang.Object Sieve.benchmark()": "1.96%",
            "[.] int Sieve.sieve(boolean[], int)": "2.23%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "clear_page_rep": "0.07%",
            "[.] java.lang.Object Bounce.benchmark()": "6.52%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.94%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.57%",
            "[.] StubRoutines (2)": "7.61%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.26%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.51%"
        }
    }
}