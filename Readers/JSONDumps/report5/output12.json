{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.004139758238118894",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.004139758238118894",
            "jdk.internal.org.objectweb.asm.ClassVisitor.<init>(I)V": "0.004139758238118894",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;)J": "0.004139758238118894",
            "Mandelbrot.mandelbrot(I)I": "99.94204338466633",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.004139758238118894",
            "jdk.internal.org.objectweb.asm.MethodWriter.<init>(Ljdk/internal/org/objectweb/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V": "0.004139758238118894",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(Ljava/lang/invoke/MemberName;Ljava/lang/invoke/LambdaForm$Name;)V": "0.004139758238118894",
            "java.lang.StringConcatHelper.prepend(J[BJ)J": "0.004139758238118894",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.004139758238118894"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.7092664346227097",
            "Queens.benchmark()Ljava/lang/Object;": "0.03283640901031063",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003283640901031063",
            "Queens.placeQueen(I)Z": "8.241938661587968",
            "Queens.getRowColumn(II)Z": "70.72305772640703",
            "java.util.Arrays.fill([ZZ)V": "0.38418598542063437",
            "sun.nio.cs.StreamEncoder.implFlushBuffer()V": "0.003283640901031063",
            "Queens.setRowColumn(IIZ)V": "18.81197872200696",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.00985092270309319",
            "Queens.queens()Z": "1.0638996519340644"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.Math.abs(I)I": "0.01042752867570386",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.3753910323253389",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.397288842544317",
            "Bounce$Ball.bounce()Z": "84.92526937782412",
            "Bounce$$Lambda$76+0x000000080100c408.1702660825.apply(I)Ljava/lang/Object;": "0.006951685783802572",
            "Bounce.benchmark()Ljava/lang/Object;": "8.209940910670838",
            "som.Random.next()I": "1.359054570733403",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.04866180048661801",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.03823427181091415",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.559263121306917"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.462965123060772",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.38329639566079",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.0422255919748045",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.008281815000583",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.4518838212994285",
            "havlak.HavlakLoopFinder.findLoops()V": "6.443485361017147",
            "som.Vector.<init>(I)V": "2.0646214860608887",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.210894669310626",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.2792488043858623",
            "som.Vector.append(Ljava/lang/Object;)V": "3.7489793537851392"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.118818138726498",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.82904092273661",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.7650497708958763",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.144888607994944",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.415547479854638",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.808184547321853",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.849423289619214",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.856691420445569",
            "cd.Vector2D.compareNumbers(DD)I": "3.511613209037763",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.661557908042347"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.7200735756813",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.002420252674379205",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.00484050534875841",
            "List$Element.getNext()LList$Element;": "9.952078997047291",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.17183793988092358",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.1491843748487343",
            "List$Element.length()I": "0.07260758023137616",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.007260758023137616",
            "List$Element.setNext(LList$Element;)V": "0.02420252674379205",
            "List.makeList(I)LList$Element;": "0.8640302047533762"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "16.3114969744804",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.088397790055248",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "11.018153117600631",
            "deltablue.ScaleConstraint.execute()V": "7.0192054722441455",
            "deltablue.Variable.<init>()V": "2.4888187319126542",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "13.028150486714022",
            "som.Vector.<init>(I)V": "9.171270718232044",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "5.167061299657984",
            "som.Dictionary.hash(Lsom/Dictionary$CustomHash;)I": "3.1097079715864244",
            "som.Vector.append(Ljava/lang/Object;)V": "3.0413049197579585"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.4933714974389876",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "34.21211208195239",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7457065381138896",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.1297077432961733",
            "Storage.benchmark()Ljava/lang/Object;": "0.01129858391081651",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.764989454655016",
            "som.Random.next()I": "14.60153660741187",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.2428442301898162",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01129858391081651",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.7457065381138896"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.01015400236926722",
            "Run.measure(LBenchmark;)V": "0.006769334912844813",
            "java.lang.String.getChars(II[CI)V": "0.01015400236926722",
            "Sieve.benchmark()Ljava/lang/Object;": "3.198510746319174",
            "java.util.Arrays.fill([ZZ)V": "5.385005923168048",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.006769334912844813",
            "Sieve.sieve([ZI)I": "91.27432729734304",
            "java.nio.Buffer.limit(I)Ljava/nio/Buffer;": "0.006769334912844813",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.023692672194956844",
            "sun.nio.cs.StreamEncoder.implWrite([CII)V": "0.01015400236926722"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.045481579960116154",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.00311373893573",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.9988804534163664",
            "Towers.verifyResult(Ljava/lang/Object;)Z": "0.006997166147710177",
            "Towers.moveDisks(III)V": "3.774971136689641",
            "Towers$TowersDisk.getSize()I": "11.317916243921212",
            "Towers.benchmark()Ljava/lang/Object;": "0.05947591225553651",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.47741664625826",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.08596018612462",
            "Towers.moveTopDisk(II)V": "4.215792603995382"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.739999310891362",
            "nbody.Body.getMass()D": "0.8682768838507391",
            "nbody.Body.setVX(D)V": "30.617096785308203",
            "nbody.NBodySystem.advance(D)V": "39.05867760052372",
            "nbody.Body.setZ(D)V": "0.46859387382420836",
            "nbody.Body.getY()D": "0.7442373290149192",
            "nbody.Body.getZ()D": "8.520828308582848",
            "nbody.Body.setVZ(D)V": "8.879164800330772",
            "nbody.Body.setVY(D)V": "6.388037074044723",
            "nbody.Body.setX(D)V": "1.409227164662509"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.2744966941534805",
            "richards.Scheduler.schedule()V": "10.682713022806626",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.275388158383478",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.626550776316767",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.677289948740807",
            "Richards.benchmark()Ljava/lang/Object;": "9.18951043756036",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.405319069905653",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.130450932323007",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.111061585320556",
            "richards.RBObject.<init>()V": "10.474704702473813"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.7846930193439863",
            "java.lang.Object.<init>()V": "2.730915747291347",
            "json.JsonPureStringParser.isDigit()Z": "2.3598674120615444",
            "java.lang.String.isLatin1()Z": "2.1916588334240337",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "5.456884183446297",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "32.06847078612774",
            "java.lang.String.<init>([BB)V": "5.9565626082224306",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.3054469895611733",
            "json.JsonPureStringParser.read()V": "16.345915994656902",
            "java.util.Arrays.copyOfRange([BII)[B": "9.97872656211349"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "java.util.zip.ZipEntry.<init>(Ljava/lang/String;)V": "0.0035879588102328587",
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.0035879588102328587",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JJ)J": "0.0035879588102328587",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.0035879588102328587",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.007175917620465717",
            "Permute.swap(II)V": "43.80538911413297",
            "sun.nio.cs.StreamEncoder.implFlushBuffer()V": "0.0035879588102328587",
            "Permute.permute(I)V": "56.09414803918051",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010763876430698576",
            "Permute.benchmark()Ljava/lang/Object;": "0.04664346453302716"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.4",
            "richards.Packet::setLink": "2.2",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.1",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.MethodType::equals": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandles::insertArguments": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.StringConcatHelper::prepend": "0.0",
            "Mandelbrot::mandelbrot": "98.5",
            "java.lang.invoke.Invokers::checkCustomized": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.2",
            "List::makeList": "0.6",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "1.9",
            "List::isShorterThan": "82.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "15.5",
            "java.lang.String::<init>": "5.5",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "3.2",
            "java.util.Arrays::copyOfRange": "7.7",
            "java.lang.String::equals": "22.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "10.5",
            "java.lang.String::isLatin1": "2.4",
            "json.JsonPureStringParser::readStringInternal": "9.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.7",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.9",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.2",
            "som.Vector::append": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "7.9",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.6",
            "havlak.HavlakLoopFinder::doDFS": "5.1",
            "som.Vector::hasSome": "2.1",
            "som.Vector::forEach": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "40.0",
            "Permute::permute": "50.4",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MemberName$Factory::resolveOrFail": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "AGCT::Unknown Java[ERR=-5]": "6.1",
            "java.lang.String::getChars": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "68.8",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "7.9",
            "Queens::setRowColumn": "17.8",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.5",
            "java.util.Arrays::setAll": "34.5",
            "som.Random::next": "12.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "2.1",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.7",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.2"
        },
        "Sieve.hpl": {
            "java.lang.StringConcatHelper::stringOf": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Sieve::sieve": "88.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "sun.nio.cs.StreamEncoder::implWrite": "0.0",
            "java.util.Arrays::fill": "6.5"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "9.2",
            "deltablue.ScaleConstraint::execute": "5.3",
            "deltablue.Planner::addPropagate": "2.4",
            "som.Vector::append": "2.3",
            "AGCT::Unknown not Java[ERR=-3]": "6.0",
            "AGCT::Unknown Java[ERR=-5]": "15.7",
            "som.Vector::<init>": "3.5",
            "som.Vector::forEach": "25.0",
            "som.Dictionary::at": "6.4",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.3"
        },
        "Bounce.hpl": {
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.0",
            "Bounce::benchmark": "9.0",
            "Bounce$Ball::bounce": "82.9",
            "java.util.Arrays::setAll": "1.3",
            "Bounce::lambda$benchmark$0": "0.3",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "3.2",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.7",
            "nbody.Body::getZ": "8.0",
            "nbody.Body::setVX": "28.9",
            "nbody.Body::setVY": "5.8",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "nbody.NBodySystem::advance": "40.3",
            "nbody.Body::setZ": "0.5"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.6",
            "Towers::popDiskFrom": "23.4",
            "Towers::moveDisks": "3.7",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "Towers::pushDisk": "32.7",
            "Towers$TowersDisk::setNext": "14.3",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "Towers::moveTopDisk": "5.0",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "10.5",
            "cd.RedBlackTree::forEach": "4.9",
            "cd.RedBlackTree::put": "7.4",
            "cd.RedBlackTree::findNode": "7.5",
            "cd.RedBlackTree::leftRotate": "3.1",
            "cd.RedBlackTree::treeMinimum": "6.2",
            "AGCT::Unknown not Java[ERR=-3]": "5.1",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.RedBlackTree::treeInsert": "22.4",
            "cd.CollisionDetector::isInVoxel": "13.6"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.BinaryConstraint.chooseMethod": "4.39%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "18.66%",
            "deltablue.Planner.incrementalAdd": "11.61%",
            "som.Dictionary.at": "3.08%",
            "deltablue.Variable.<init>": "6.96%",
            "som.Vector.forEach": "7.94%",
            "deltablue.Planner.addPropagate": "4.68%",
            "itable": "2.85%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "3.49%",
            "deltablue.ScaleConstraint.execute": "5.51%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.78%",
            "som.Random.next": "1.43%",
            "clear_page_rep_[k]": "0.11%",
            "java.util.Arrays.setAll": "1.32%",
            "SpinPause": "0.03%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "Bounce.benchmark": "9.13%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.07%",
            "Bounce$Ball.<init>": "3.07%",
            "Bounce.lambda$benchmark$0": "0.29%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<594020ul,": "0.00%",
            "__x86_return_thunk_[k]": "0.00%",
            "Interpreter": "0.02%",
            "VMError::is_error_reported()": "0.00%",
            "clear_page_rep_[k]": "0.01%",
            "Mandelbrot.mandelbrot": "99.58%",
            "__lll_lock_wake": "0.00%",
            "__condvar_dec_grefs": "0.00%",
            "__pagevec_lru_add_[k]": "0.00%",
            "PhaseIdealLoop::get_ctrl(Node*)": "0.00%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.52%",
            "som.Random.next": "13.15%",
            "java.util.Arrays.setAll": "35.54%",
            "Storage.lambda$buildTreeDepth$0": "3.50%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.59%",
            "SpinPause": "0.26%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.47%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.19%",
            "Storage.buildTreeDepth": "42.98%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "0.85%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.88%",
            "Towers.popDiskFrom": "23.44%",
            "Towers.moveDisks": "7.45%",
            "clear_page_rep_[k]": "0.04%",
            "Towers.pushDisk": "34.06%",
            "Towers.moveTopDisk": "5.26%",
            "Towers$TowersDisk.getSize": "10.68%",
            "Towers.buildTowerAt": "0.02%",
            "Towers$TowersDisk.getNext": "3.69%",
            "Towers.benchmark": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.59%",
            "cd.CollisionDetector.isInVoxel": "14.30%",
            "cd.RedBlackTree.forEach": "4.85%",
            "cd.RedBlackTree.put": "7.11%",
            "cd.RedBlackTree.treeInsert": "20.49%",
            "cd.RedBlackTree.findNode": "7.96%",
            "cd.RedBlackTree.treeMinimum": "6.30%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.07%",
            "cd.Vector2D.compareNumbers": "2.49%",
            "cd.RedBlackTree.leftRotate": "2.47%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "6.13%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.62%",
            "som.Vector.hasSome": "2.29%",
            "som.Vector.append": "3.36%",
            "som.Vector.forEach": "2.23%",
            "som.IdentitySet.lambda$contains$0": "32.73%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.84%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.14%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.88%",
            "havlak.HavlakLoopFinder.doDFS": "5.33%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.14%",
            "Sieve.benchmark": "3.23%",
            "Interpreter": "0.04%",
            "clear_page_rep_[k]": "0.05%",
            "Sieve.sieve": "90.65%",
            "SpinPause": "0.04%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "__memset_avx2_unaligned_erms": "0.06%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.17%",
            "Permute.swap": "41.39%",
            "Interpreter": "0.01%",
            "Permute.benchmark": "0.01%",
            "java.lang.StringLatin1.getChars": "0.01%",
            "java.lang.invoke.LambdaForm$MH.0x0000000801008400.invoke": "0.01%",
            "PhaseIdealLoop::build_loop_early(VectorSet&,": "0.01%",
            "PhiNode::Opcode()": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.55%",
            "nbody.Body.getZ": "8.33%",
            "nbody.Body.getY": "0.80%",
            "nbody.Body.setX": "1.55%",
            "nbody.Body.setY": "1.64%",
            "nbody.Body.setZ": "0.40%",
            "nbody.Body.setVX": "29.43%",
            "nbody.Body.setVY": "6.38%",
            "nbody.Body.getMass": "0.63%",
            "nbody.NBodySystem.advance": "40.69%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.70%",
            "List.makeList": "0.78%",
            "clear_page_rep_[k]": "0.06%",
            "List$Element.setNext": "0.04%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "4.91%",
            "List$Element.length": "0.09%",
            "List.isShorterThan": "83.82%",
            "List$Element.<init>": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.77%",
            "java.lang.String.length": "2.87%",
            "java.lang.String.<init>": "5.29%",
            "json.JsonPureStringParser.readArray": "2.33%",
            "json.JsonPureStringParser.isWhiteSpace": "2.21%",
            "java.lang.String.isLatin1": "2.44%",
            "json.JsonPureStringParser.readStringInternal": "9.04%",
            "java.util.Arrays.copyOfRange": "7.12%",
            "java.lang.String.equals": "21.84%",
            "json.JsonPureStringParser.read": "15.88%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.64%",
            "Queens.getRowColumn": "70.12%",
            "Queens.setRowColumn": "19.09%",
            "clear_page_rep_[k]": "0.11%",
            "Queens.queens": "0.57%",
            "Queens.placeQueen": "8.92%",
            "WatcherThread::sleep()": "0.01%",
            "__tls_get_addr": "0.01%",
            "Queens.benchmark": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.18%",
            "Richards.benchmark": "4.65%",
            "richards.Packet.<init>": "6.56%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.54%",
            "itable": "37.40%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.22%",
            "richards.TaskControlBlock.<init>": "2.94%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.18%",
            "richards.RBObject.<init>": "6.91%",
            "richards.RBObject.append": "3.19%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "4.3",
            "Towers.moveDisks": "94.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.0",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "6.1",
            "deltablue.AbstractConstraint.satisfy": "8.8",
            "deltablue.Planner.removePropagateFrom": "9.9",
            "som.Vector.<init>": "26.9",
            "deltablue.Variable.<init>": "4.9",
            "som.Vector.forEach": "7.2",
            "deltablue.Planner.addPropagate": "1.7",
            "deltablue.AbstractConstraint.<init>": "4.4",
            "deltablue.Planner.constraintsConsuming": "4.3",
            "deltablue.Planner.addConstraintsConsumingTo": "21.9"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.2",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.5",
            "havlak.HavlakLoopFinder.stepD": "3.6",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.1",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.1",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.schedule": "13.7",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.HandlerTaskDataRecord.workInAdd": "2.8",
            "richards.TaskControlBlock.runTask": "82.3",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.4",
            "Bounce.benchmark": "54.0",
            "Bounce$Ball.<init>": "45.0",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.7",
            "som.Vector.<init>": "5.8",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.6",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.7",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.2",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.1",
            "Run.reportBenchmark": "0.1",
            "Permute.swap": "0.1",
            "Permute.benchmark": "1.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.7",
            "List$Element.length": "0.1",
            "List.isShorterThan": "75.9",
            "List$Element.<init>": "20.3",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.3",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.6",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.0",
            "json.JsonValue.<init>": "4.2",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "24.7",
            "Queens.placeQueen": "74.2",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.544185927308607",
            "java.lang.String.<init>(byte[], byte) String.java": "6.424248119497849",
            "json.JsonPureStringParser.read()": "20.87880638836801",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.874197502915259",
            "java.lang.String.length() String.java": "3.3189100989693014",
            "json.JsonArray.<init>()": "1.725662393801284",
            "java.lang.String.substring(int, int) String.java": "9.392900009824316",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.83857795167291",
            "json.JsonPureStringParser.readStringInternal()": "3.775954346832513",
            "json.JsonPureStringParser.readValue()": "3.3231815405381164"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "2.5391068785309803",
            "som.Vector.forEach(ForEachInterface)": "3.3156191472042256",
            "som.Vector.hasSome(TestInterface)": "2.296446794570591",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.048854092903517",
            "havlak.HavlakLoopFinder.findLoops()": "11.563856001094178",
            "som.Vector.<init>(int)": "2.4199828373140617",
            "som.Vector.append(Object)": "4.213461457857665",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.42319256842463",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.312731492205097",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.025516810828826"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.043064326743039",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.11107232395036652",
            "Queens.getRowColumn(int, int)": "64.83450223731396",
            "Queens.queens()": "0.6346989940020945",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.38081939640125667",
            "Queens.setRowColumn(int, int, boolean)": "20.072355685316236",
            "java.lang.ThreadLocal$ThreadLocalMap.<init>(ThreadLocal, Object) ThreadLocal.java": "0.19040969820062834",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.19040969820062834",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.19040969820062834",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.11107232395036652"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.4566513736030138",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.5675082164788",
            "richards.Scheduler$$Lambda$18.0x00000008000c7b98.apply(Packet, RBObject)": "4.000103514693541",
            "richards.Scheduler$$Lambda$16.0x00000008000c7970.apply(Packet, RBObject)": "3.6378020872998564",
            "richards.Scheduler.findTask(int)": "1.5157508697082736",
            "richards.TaskControlBlock.runTask()": "39.39103784571135",
            "richards.Scheduler.schedule()": "2.4732617849630123",
            "richards.RBObject.append(Packet, Packet)": "3.3753184001064724",
            "Richards.benchmark()": "26.074611912323054",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.5416295430935367"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.42903628421146467",
            "Storage$$Lambda$12.0x00000008000c2a98.<init>(Storage, int, Random)": "0.10586609610412766",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.6381385397165018",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.2173040920032094",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.32415084247125",
            "som.Random.next()": "13.640010698047606",
            "javax.management.openmbean.CompositeType.keySet() CompositeType.java": "0.14486939466880627",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.07243469733440314",
            "Storage.buildTreeDepth(int, Random)": "38.418249086208434",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.68565570116787"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "31.489217840670353",
            "Towers.popDiskFrom(int)": "29.110622781386585",
            "Towers.moveDisks(int, int, int)": "10.963270628576947",
            "Towers$TowersDisk.getSize()": "1.400594045060491",
            "java.lang.String.indexOf(int, int) String.java": "0.4708893772186134",
            "jdk.internal.org.objectweb.asm.ByteVector.<init>(int) ByteVector.java": "0.09659269276279249",
            "Towers.moveTopDisk(int, int)": "8.174156625051314",
            "Benchmark.innerBenchmarkLoop(int)": "0.10866677935814156",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.062833546642196",
            "java.lang.invoke.MemberName.<init>(Class, String, MethodType, byte) MemberName.java": "0.07244451957209437"
        },
        "YourKit_Permute.txt": {
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.10263193905943528",
            "Permute.permute(int)": "57.34844683665556",
            "jdk.internal.org.objectweb.asm.Frame.push(int) Frame.java": "0.10263193905943528",
            "com.yourkit.probes.ResourceRegistry.<init>(Class, ResourceRegistry, String, String) a": "0.27368517082516075",
            "com.yourkit.probes.Table.createRow() a": "0.10263193905943528",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.17105323176572548",
            "Permute.benchmark()": "0.10263193905943528",
            "Run.printResult(long)": "0.00114035487843817",
            "Permute.swap(int, int)": "41.69137435569949",
            "java.lang.String.getBytes(byte[], int, byte) String.java": "0.10263193905943528"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.717724467693817",
            "som.Vector.forEach(ForEachInterface)": "42.72753279659979",
            "deltablue.EqualityConstraint.execute()": "5.33327884261719",
            "deltablue.BinaryConstraint.isSatisfied()": "2.7381584862479063",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "5.292410805509013",
            "som.Vector.<init>(int)": "4.250275859250481",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "3.4329151170869263",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "3.0446687645592387",
            "som.Vector.append(Object)": "2.7790265233560834",
            "deltablue.Plan$$Lambda$23.0x00000008000ccd88.apply(Object)": "2.4520822264906617"
        },
        "YourKit_List.txt": {
            "List.benchmark()": "0.11993443584173984",
            "List.tail(List$Element, List$Element, List$Element)": "4.330965738729494",
            "List.makeList(int)": "1.0660838741487986",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11993443584173984",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.11993443584173984",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.21321677482975973",
            "List$Element.setNext(List$Element)": "0.23986887168347967",
            "List$Element.getNext()": "22.92080329419917",
            "List.isShorterThan(List$Element, List$Element)": "70.32155754854013",
            "java.lang.Integer.valueOf(int) Integer.java": "0.2265428232566197"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0705108205462746",
            "nbody.Body.getZ()": "5.743540289871515",
            "nbody.Body.getMass()": "0.4112658479167257",
            "nbody.Body.getVZ()": "0.4112658479167257",
            "nbody.NBodySystem.advance(double)": "43.25382193606943",
            "nbody.Body.setVY(double)": "6.268258785489405",
            "nbody.Body.setVZ(double)": "9.246390787645007",
            "nbody.Body.getVX()": "0.7090790481322857",
            "nbody.Body.setVX(double)": "28.604248801656407",
            "nbody.Body.setY(double)": "1.2621607056754687"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.57729098658358",
            "Run.runBenchmark()": "8.751739408207381E-4",
            "java.util.WeakHashMap.hash(Object) WeakHashMap.java": "0.0875173940820738",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.01750347881641476",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.1400278305313181",
            "java.util.ArrayList.clear() ArrayList.java": "0.07001391526565905",
            "java.io.RandomAccessFile.open(String, int) RandomAccessFile.java": "0.03500695763282952",
            "java.lang.ThreadLocal.createMap(Thread, Object) ThreadLocal.java": "0.06126217585745166",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "8.751739408207381E-4",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.00875173940820738"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.7411409317996984",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.446845590798187",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.553231865535805",
            "cd.RedBlackTree.findNode(Comparable)": "6.699972890283103",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "9.9299020177375",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.130049184772085",
            "cd.RedBlackTree.put(Comparable, Object)": "6.74644669067813",
            "cd.Vector2D.compareNumbers(double, double)": "8.868750242051043",
            "cd.Vector2D.plus(Vector2D)": "1.5413810464350723",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.329809070136711"
        },
        "YourKit_Sieve.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.09252215391574314",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.17476406850751483",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.09252215391574314",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.6345580525114625",
            "Benchmark.innerBenchmarkLoop(int)": "0.09252215391574314",
            "Sieve.benchmark()": "91.68945453050145",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.20560478647942923",
            "java.util.AbstractCollection.containsAll(Collection) AbstractCollection.java": "0.24672574377531506",
            "Sieve.sieve(boolean[], int)": "5.4896477990007595",
            "java.nio.ByteBuffer.flip() ByteBuffer.java": "0.09252215391574314"
        },
        "YourKit_Bounce.txt": {
            "java.lang.invoke.InvokerBytecodeGenerator.loadMethod(byte[]) InvokerBytecodeGenerator.java": "0.17869907076483196",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.23826542768644265",
            "java.io.OutputStreamWriter.write(char[], int, int) OutputStreamWriter.java": "0.17869907076483196",
            "java.lang.AbstractStringBuilder.<init>(int) AbstractStringBuilder.java": "0.575808116908903",
            "Bounce.benchmark()": "60.42014137082041",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.3573981415296639",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5956635692161065",
            "com.yourkit.probes.Table.createRow() a": "0.17869907076483196",
            "Bounce$Ball.bounce()": "36.45461043602572",
            "Bounce$Ball.<init>(Random)": "0.3573981415296639"
        }
    },
    "Runtimes": {
        "NBody.data": 104.52250000000001,
        "JavaFlightRecorder_Queens.jfr": 111.19749999999999,
        "rebench_test_Async_Bounce.txt": 102.5395,
        "JavaFlightRecorder_Sieve.jfr": 106.58,
        "Permute.hpl": 105.2885,
        "CD.data": 95.759,
        "DeltaBlue.hpl": 97.76050000000001,
        "List.data": 150.9655,
        "NBody.hpl": 101.64,
        "Towers.hpl": 107.8995,
        "Bounce.hpl": 101.436,
        "JavaFlightRecorder_Json.jfr": 83.61349999999999,
        "Sieve.data": 104.862,
        "Richards.hpl": 91.3235,
        "JavaFlightRecorder_Havlak.jfr": 163.238,
        "JavaFlightRecorder_CD.jfr": 96.88,
        "JavaFlightRecorder_DeltaBlue.jfr": 79.2305,
        "rebench_test_Async_Mandelbrot.txt": 85.2705,
        "JavaFlightRecorder_Towers.jfr": 109.608,
        "rebench_test_Async_CD.txt": 96.064,
        "rebench_test_Async_Permute.txt": 104.955,
        "Mandelbrot.data": 86.22749999999999,
        "rebench_test_Async_NBody.txt": 103.4925,
        "JavaFlightRecorder_Permute.jfr": 107.161,
        "JavaFlightRecorder_Bounce.jfr": 103.5805,
        "Havlak.data": 162.236,
        "Mandelbrot.hpl": 86.2915,
        "rebench_test_Async_Towers.txt": 107.9855,
        "JavaFlightRecorder_Storage.jfr": 98.99600000000001,
        "List.hpl": 152.4975,
        "Queens.hpl": 107.441,
        "JavaFlightRecorder_NBody.jfr": 105.399,
        "Storage.data": 116.646,
        "rebench_test_Async_Sieve.txt": 104.51,
        "JavaFlightRecorder_Richards.jfr": 91.957,
        "Storage.hpl": 110.2735,
        "rebench_test_Async_List.txt": 150.262,
        "rebench_test_Async_Richards.txt": 92.04050000000001,
        "Bounce.data": 102.5675,
        "Permute.data": 105.495,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.422,
        "rebench_test_Async_DeltaBlue.txt": 94.7945,
        "JavaFlightRecorder_List.jfr": 154.4765,
        "DeltaBlue.data": 84.9915,
        "rebench_test_Async_Storage.txt": 109.50049999999999,
        "Queens.data": 112.5675,
        "Json.hpl": 79.08850000000001,
        "Towers.data": 110.367,
        "Havlak.hpl": 157.732,
        "Richards.data": 92.01599999999999,
        "rebench_test_Async_Havlak.txt": 157.21699999999998,
        "Sieve.hpl": 105.8435,
        "CD.hpl": 100.9445,
        "rebench_test_Async_Json.txt": 80.728,
        "Json.data": 82.474,
        "rebench_test_Async_Queens.txt": 110.526
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.02%",
            "[.] Interpreter": "0.14%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.25%",
            "[.] void nbody.NBodySystem.advance(double)": "99.07%",
            "native_apic_msr_eoi_write": "0.02%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.11%",
            "[.] java.lang.Object Permute.benchmark()": "0.02%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.15%",
            "[.] void Permute.permute(int)": "0.02%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "33.44%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.32%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "9.01%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.87%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.46%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "6.89%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "11.07%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.49%",
            "[.] boolean deltablue.Planner.addPropagate(deltablue.AbstractConstraint, int)": "7.90%",
            "[.] void deltablue.Planner.chainTest(int)": "29.63%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.36%",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.17%",
            "[.] boolean Queens.placeQueen(int)": "96.74%",
            "clear_page_rep": "0.08%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.03%",
            "[.] Interpreter": "0.10%",
            "[.] void Towers.moveDisks(int, int, int)": "99.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.11%",
            "clear_page_rep": "0.04%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.35%",
            "[.] boolean richards.Scheduler.start()": "22.68%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.84%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.14%",
            "[.] void richards.Scheduler.schedule()": "7.82%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.52%",
            "x86_pmu_disable_all": "0.11%",
            "[.] Interpreter": "0.09%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.55%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.80%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.20%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.85%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.45%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.30%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.05%",
            "[.] Interpreter": "0.14%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.27%",
            "[.] Interpreter": "0.08%",
            "[.] java.lang.Object List.benchmark()": "0.51%",
            "[.] List$Element List.makeList(int)": "0.61%",
            "[.] int List$Element.length()": "0.05%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.17%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.19%",
            "[.] java.lang.Object Sieve.benchmark()": "1.86%",
            "clear_page_rep": "0.09%",
            "[.] int Sieve.sieve(boolean[], int)": "2.40%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.04%",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.77%",
            "clear_page_rep": "0.06%",
            "[.] java.lang.Object Bounce.benchmark()": "6.04%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "33.65%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.38%",
            "[.] StubRoutines (2)": "7.83%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.39%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.66%"
        }
    }
}