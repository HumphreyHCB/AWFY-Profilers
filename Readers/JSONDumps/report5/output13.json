{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.004115734452813104",
            "jdk.internal.org.objectweb.asm.Frame.getLocal(I)I": "0.004115734452813104",
            "Mandelbrot.mandelbrot(I)I": "99.95884265547186",
            "Mandelbrot.innerBenchmarkLoop(I)Z": "0.012347203358439312",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.004115734452813104",
            "jdk.jfr.internal.handlers.EventHandler1361_1687228127586-2978639.write(JJJ)V": "0.004115734452813104",
            "jdk.jfr.internal.EventWriter.putEventThread()V": "0.004115734452813104",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.004115734452813104",
            "java.lang.ClassLoader.defineClassSourceLocation(Ljava/security/ProtectionDomain;)Ljava/lang/String;": "0.004115734452813104"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.3614248479582971",
            "Queens.benchmark()Ljava/lang/Object;": "0.05560382276281494",
            "Queens.placeQueen(I)Z": "14.060816681146829",
            "java.io.BufferedOutputStream.write([BII)V": "0.0034752389226759338",
            "Queens.getRowColumn(II)Z": "59.79148566463944",
            "java.util.Arrays.fill([ZZ)V": "0.4517810599478714",
            "Queens.verifyResult(Ljava/lang/Object;)Z": "0.0069504778453518675",
            "Queens.setRowColumn(IIZ)V": "24.556038227628147",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.0312771503040834",
            "Queens.queens()Z": "0.63249348392702"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.2922247347364759",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.2697860497477822",
            "Bounce$Ball.bounce()Z": "85.2496086275874",
            "Bounce.benchmark()Ljava/lang/Object;": "8.255348756305445",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType(Ljava/lang/String;Ljava/lang/String;)I": "0.003478865889719951",
            "som.Random.next()I": "1.3880674899982606",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.05914072012523917",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010436597669159853",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.4475560967124714",
            "sun.nio.cs.StreamEncoder.flushBuffer()V": "0.003478865889719951"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.228944416601037",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.73893224505382",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.443760292117133",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "3.083458628672347",
            "havlak.HavlakLoopFinder.findLoops()V": "11.761055822056754",
            "som.Vector.<init>(I)V": "2.5560249158731296",
            "havlak.HavlakLoopFinder$$Lambda$79+0x000000080100f598.667447085.apply(Ljava/lang/Object;)V": "1.7756139471611656",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.653826877640152",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.5488651822152217",
            "som.Vector.append(Ljava/lang/Object;)V": "4.465287224648577"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.596654568407763",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "9.05791383935616",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.7102729998421964",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.2999842196623006",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.629635474199147",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.310872652674766",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.0301404450055225",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.182105097049076",
            "cd.Vector2D.compareNumbers(DD)I": "3.211298721792646",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "23.047183209720686"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.837105269487",
            "java.lang.CharacterDataLatin1.digit(II)I": "0.0024050602467591813",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.012025301233795907",
            "List$Element.getNext()LList$Element;": "9.829481228504774",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.18518963900045696",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.0635416917193776",
            "List$Element.length()I": "0.0889872291300897",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.012025301233795907",
            "List$Element.setNext(LList$Element;)V": "0.040886024194906084",
            "List.makeList(I)LList$Element;": "0.9091127732749705"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "15.275284260921604",
            "deltablue.BinaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "2.8226610811889086",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "2.7328944743666463",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "9.984041492120486",
            "deltablue.ScaleConstraint.execute()V": "7.126471174945142",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "15.549571115100736",
            "som.Vector.<init>(I)V": "8.14881308597646",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.682824655894674",
            "som.Dictionary.hash(Lsom/Dictionary$CustomHash;)I": "2.852583283462996",
            "som.Vector.append(Ljava/lang/Object;)V": "3.456014362657091"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.525366580412452",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "37.304947855406574",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7135575942915393",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.677566062887164",
            "Storage.benchmark()Ljava/lang/Object;": "0.03136516897984788",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "43.99749078648162",
            "som.Random.next()I": "11.648239629891007",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.3879087273582689",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.019603230612404925",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6351446718419196"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.003349186147766093",
            "java.lang.String.length()I": "0.003349186147766093",
            "Sieve.benchmark()Ljava/lang/Object;": "3.4128206845736484",
            "java.io.FileOutputStream.write([BII)V": "0.003349186147766093",
            "java.util.Arrays.fill([ZZ)V": "5.857726572442896",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.003349186147766093",
            "Sieve.sieve([ZI)I": "90.6457230892893",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.020095116886596556",
            "sun.nio.cs.StreamEncoder.flushBuffer()V": "0.003349186147766093",
            "java.io.PrintStream.writeln(Ljava/lang/String;)V": "0.003349186147766093"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.04818281938325991",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.521338105726873",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.0267070484581495",
            "Towers.moveDisks(III)V": "3.8683920704845813",
            "Towers$TowersDisk.getSize()I": "11.69465859030837",
            "Towers.benchmark()Ljava/lang/Object;": "0.04818281938325991",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.013766519823788546",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.08163546255506",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.5534140969163",
            "Towers.moveTopDisk(II)V": "4.105864537444933"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.6015040211677054",
            "nbody.Body.getMass()D": "0.5257111026007033",
            "nbody.Body.setVX(D)V": "28.851443094384294",
            "nbody.NBodySystem.advance(D)V": "42.71141593844654",
            "nbody.Body.getY()D": "0.7206768095254674",
            "nbody.Body.getZ()D": "7.843888173240957",
            "nbody.Body.setVZ(D)V": "9.212129652195106",
            "nbody.Body.getVZ()D": "0.4908957977927097",
            "nbody.Body.setVY(D)V": "5.734080701876545",
            "nbody.Body.setX(D)V": "1.1489050586637886"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.92230173798744",
            "richards.Scheduler.schedule()V": "11.08514677961151",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.224769972250622",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.754344968599387",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.045567401781803",
            "Richards.benchmark()Ljava/lang/Object;": "8.879801372864028",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.9214254417993284",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.8410982912224334",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.250474660435227",
            "richards.RBObject.<init>()V": "10.522856725573245"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.7596558130439033",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.109416251100029",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.256673511293634",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.637039209934487",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.8145106091718",
            "java.lang.String.<init>([BB)V": "3.7156546396792804",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.979661679867019",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.7769629412339887",
            "json.JsonPureStringParser.read()V": "17.29246113229686",
            "java.util.Arrays.copyOfRange([BII)[B": "5.563703920993449"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.010877447425670777",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.0036258158085569255",
            "Permute.swap(II)V": "43.73821609862219",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.007251631617113851",
            "java.lang.StringConcatHelper.prepend(J[BJLjava/lang/String;)J": "0.0036258158085569255",
            "Permute.permute(I)V": "56.08411892675852",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01812907904278463",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.0036258158085569255",
            "sun.nio.cs.StreamEncoder.flushBuffer()V": "0.0036258158085569255",
            "Permute.benchmark()Ljava/lang/Object;": "0.10152284263959391"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.3",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "46.5",
            "richards.TaskControlBlock::<init>": "3.4",
            "richards.Scheduler::schedule": "5.2",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.9",
            "richards.RBObject::<init>": "5.9"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.util.zip.Inflater::inflateBytesBytes": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.LambdaForm$BasicType::basicType": "0.0",
            "sun.nio.cs.StreamEncoder::writeBytes": "0.0",
            "Mandelbrot::mandelbrot": "97.5",
            "sun.nio.fs.NativeBuffers::<clinit>": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.7",
            "List::makeList": "0.8",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "82.9",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "3.3",
            "json.JsonPureStringParser::read": "14.8",
            "java.lang.String::<init>": "5.3",
            "java.lang.String::length": "3.6",
            "java.util.Arrays::copyOfRange": "8.0",
            "java.lang.String::equals": "24.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "9.6",
            "java.lang.String::isLatin1": "2.3",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.7",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.8",
            "havlak.HavlakLoopFinder::findLoops": "6.3",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.7",
            "havlak.HavlakLoopFinder::doDFS": "5.6",
            "som.Vector::hasSome": "2.2",
            "som.Vector::forEach": "2.4"
        },
        "Permute.hpl": {
            "Permute::swap": "39.9",
            "Permute::permute": "51.6",
            "Permute::benchmark": "0.0",
            "java.lang.StringConcatHelper::mix": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "6.3",
            "java.lang.AbstractStringBuilder::ensureCapacityInternal": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "14.0",
            "Queens::setRowColumn": "25.4",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.1",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.9",
            "java.util.Arrays::setAll": "34.5",
            "som.Random::next": "12.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "1.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.6",
            "Storage::lambda$buildTreeDepth$0": "3.3"
        },
        "Sieve.hpl": {
            "java.lang.StringConcatHelper::newArray": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Sieve::sieve": "88.3",
            "java.lang.invoke.LambdaForm$MH.0x0000000801008800::linkToTargetMethod": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "5.6"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "9.5",
            "deltablue.ScaleConstraint::execute": "5.0",
            "deltablue.Planner::addPropagate": "2.8",
            "som.Vector::append": "2.5",
            "AGCT::Unknown not Java[ERR=-3]": "6.0",
            "AGCT::Unknown Java[ERR=-5]": "15.6",
            "deltablue.EqualityConstraint::execute": "1.9",
            "som.Vector::forEach": "24.2",
            "som.Dictionary::at": "7.0",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.4"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.3",
            "Bounce$Ball::bounce": "82.2",
            "java.util.Arrays::setAll": "1.3",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "1.4",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "3.3",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.9",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.8",
            "nbody.Body::getVZ": "0.5",
            "nbody.Body::setVZ": "9.1",
            "nbody.Body::getZ": "7.9",
            "nbody.Body::setVX": "28.3",
            "nbody.Body::setVY": "5.8",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "nbody.NBodySystem::advance": "41.1"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.2",
            "Towers::popDiskFrom": "21.2",
            "Towers::moveDisks": "3.7",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "Towers::pushDisk": "36.8",
            "Towers$TowersDisk::setNext": "14.3",
            "AGCT::Unknown Java[ERR=-5]": "4.2",
            "Towers::moveTopDisk": "3.8",
            "Towers$TowersDisk::getNext": "2.8"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.1",
            "cd.RedBlackTree::forEach": "5.4",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::findNode": "7.1",
            "cd.RedBlackTree::treeMinimum": "6.3",
            "AGCT::Unknown not Java[ERR=-3]": "5.3",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "3.3",
            "cd.RedBlackTree::treeInsert": "20.5",
            "cd.CollisionDetector::isInVoxel": "14.2"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.60%",
            "deltablue.AbstractConstraint.satisfy": "2.66%",
            "deltablue.Planner.incrementalAdd": "15.87%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "10.71%",
            "som.Dictionary.at": "3.91%",
            "G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask,": "2.62%",
            "deltablue.Variable.<init>": "6.27%",
            "som.Vector.forEach": "9.32%",
            "itable": "2.51%",
            "deltablue.ScaleConstraint.execute": "7.22%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.77%",
            "som.Random.next": "1.16%",
            "clear_page_rep_[k]": "0.09%",
            "java.util.Arrays.setAll": "1.27%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "Bounce.benchmark": "9.38%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%",
            "Bounce$Ball.<init>": "3.25%",
            "Bounce.lambda$benchmark$0": "0.30%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "Mandelbrot.mandelbrot": "99.56%",
            "_raw_spin_lock_irqsave_[k]": "0.00%",
            "PhaseCFG::schedule_local(Block*,": "0.01%",
            "DebugInformationRecorder::DebugInformationRecorder(OopRecorder*)": "0.01%",
            "__futex_abstimed_wait_common": "0.01%",
            "java.io.BufferedWriter.write": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "__tls_get_addr": "0.01%",
            "ciObjectFactory::get_metadata(Metadata*)": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.53%",
            "som.Random.next": "12.70%",
            "java.util.Arrays.setAll": "36.36%",
            "Storage.lambda$buildTreeDepth$0": "3.44%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.42%",
            "SpinPause": "0.22%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.53%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.21%",
            "Storage.buildTreeDepth": "42.55%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "0.99%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.78%",
            "Towers.popDiskFrom": "23.49%",
            "Towers.moveDisks": "7.46%",
            "clear_page_rep_[k]": "0.05%",
            "Towers.pushDisk": "34.26%",
            "Towers.moveTopDisk": "5.26%",
            "Towers$TowersDisk.getSize": "10.65%",
            "Towers.buildTowerAt": "0.03%",
            "Towers$TowersDisk.getNext": "3.52%",
            "Towers.benchmark": "0.03%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.08%",
            "cd.CollisionDetector.isInVoxel": "14.34%",
            "cd.RedBlackTree.forEach": "4.86%",
            "cd.RedBlackTree.put": "7.09%",
            "cd.RedBlackTree.treeInsert": "20.85%",
            "cd.RedBlackTree.findNode": "7.54%",
            "cd.RedBlackTree.treeMinimum": "6.56%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.94%",
            "cd.Vector2D.compareNumbers": "2.64%",
            "cd.RedBlackTree.leftRotate": "2.28%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.81%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.55%",
            "som.Vector.hasSome": "2.25%",
            "som.Vector.append": "3.30%",
            "som.Vector.forEach": "1.98%",
            "som.IdentitySet.lambda$contains$0": "32.97%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.43%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.53%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.79%",
            "havlak.HavlakLoopFinder.doDFS": "5.17%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "4.68%",
            "Sieve.benchmark": "3.20%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.10%",
            "Sieve.sieve": "91.10%",
            "SpinPause": "0.04%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.05%",
            "HeapRegionManager::allocate_free_region(HeapRegionType,": "0.01%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.99%",
            "Permute.swap": "41.48%",
            "Permute.benchmark": "0.02%",
            "NullCheckEliminator::iterate_one(BlockBegin*)": "0.01%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "__rcu_read_unlock_[k]": "0.01%",
            "java.lang.StringLatin1.inflate": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "__tls_get_addr": "0.01%",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.04%",
            "nbody.Body.getZ": "8.10%",
            "nbody.Body.getY": "0.78%",
            "nbody.Body.setX": "1.20%",
            "nbody.Body.setY": "1.83%",
            "nbody.Body.setVX": "28.68%",
            "nbody.Body.setVY": "5.64%",
            "nbody.Body.getMass": "0.46%",
            "nbody.Body.getVZ": "0.45%",
            "nbody.NBodySystem.advance": "42.52%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.77%",
            "List.makeList": "0.65%",
            "clear_page_rep_[k]": "0.06%",
            "List$Element.setNext": "0.04%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "5.05%",
            "List$Element.length": "0.08%",
            "List.isShorterThan": "83.76%",
            "List$Element.<init>": "0.17%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.56%",
            "java.lang.String.length": "3.55%",
            "java.lang.String.<init>": "5.91%",
            "json.JsonPureStringParser.isWhiteSpace": "2.15%",
            "java.lang.String.isLatin1": "2.55%",
            "json.JsonPureStringParser.readStringInternal": "9.26%",
            "java.util.Arrays.copyOfRange": "8.01%",
            "java.lang.String.equals": "22.26%",
            "json.JsonPureStringParser.read": "14.79%",
            "json.JsonPureStringParser.readValue": "2.22%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.65%",
            "Queens.getRowColumn": "71.20%",
            "Queens.setRowColumn": "17.49%",
            "void": "0.01%",
            "clear_page_rep_[k]": "0.07%",
            "Queens.queens": "0.53%",
            "Queens.placeQueen": "9.50%",
            "__tls_get_addr": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Queens.benchmark": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.93%",
            "Richards.benchmark": "5.26%",
            "richards.Packet.<init>": "7.43%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.71%",
            "itable": "36.67%",
            "richards.TaskControlBlock.<init>": "3.26%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.19%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.86%",
            "richards.RBObject.<init>": "5.99%",
            "richards.RBObject.append": "2.70%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.2",
            "Towers.moveDisks": "94.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.7",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "5.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.9",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.0",
            "deltablue.AbstractConstraint.satisfy": "9.5",
            "deltablue.Planner.removePropagateFrom": "10.0",
            "som.Vector.<init>": "33.5",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "6.8",
            "deltablue.Planner.constraintsConsuming": "4.6",
            "deltablue.AbstractConstraint.<init>": "3.9",
            "deltablue.Plan.lambda$execute$0": "1.1",
            "deltablue.Planner.addConstraintsConsumingTo": "16.7"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "havlak.HavlakLoopFinder.stepEProcessNonBackPreds": "3.4",
            "som.Vector.<init>": "42.1",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.1",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "13.7",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "85.0",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.5",
            "Run.printResult": "0.1",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "53.0",
            "Bounce$Ball.<init>": "45.8",
            "Bounce.lambda$benchmark$0": "0.0",
            "Run.printResult": "0.0",
            "java.lang.System.nanoTime": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "2.0",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.4",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "98.9",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.5",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.6",
            "java.io.PrintStream.println": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.2",
            "List$Element.length": "0.1",
            "List.isShorterThan": "74.9",
            "List$Element.<init>": "21.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.6",
            "Run.runBenchmark": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.0",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "28.3",
            "Queens.placeQueen": "70.9",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.82340311325819",
            "java.lang.String.<init>(byte[], byte) String.java": "5.367686527106819",
            "json.JsonPureStringParser.isWhiteSpace()": "2.181427804616211",
            "json.JsonPureStringParser.read()": "19.508319914117024",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "4.667740203972089",
            "java.lang.String.length() String.java": "2.0139559849704782",
            "java.lang.String.substring(int, int) String.java": "8.77724100912507",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.622114868491682",
            "json.JsonPureStringParser.readValue()": "4.680622651637146",
            "json.JsonPureStringParser.readStringInternal()": "3.246376811594204"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.hasSome(TestInterface)": "2.139439596488726",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.862928914418094",
            "havlak.HavlakLoopFinder.findLoops()": "12.026243792383596",
            "som.Vector.<init>(int)": "3.5398000596449832",
            "som.Vector.append(Object)": "3.8790849249467305",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.221559500192334",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.209263125137768",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "5.052535127869335",
            "som.Vector.removeAll()": "2.5003349627651072",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.150612225492615"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.365331027193234",
            "Queens.getRowColumn(int, int)": "60.343999231286624",
            "Queens.queens()": "0.784728227795394",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17616347970917007",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.304282374043112",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.16014861791742735",
            "Queens.setRowColumn(int, int, boolean)": "22.596969988149",
            "java.lang.Class.getPackageName() Class.java": "0.1921783415009128",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3202972358348547",
            "jdk.internal.org.objectweb.asm.SymbolTable.put(SymbolTable$Entry) SymbolTable.java": "0.3683418212100829"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.1007864523953033",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.6193802784172193",
            "richards.Scheduler.findTask(int)": "1.3434320695389488",
            "richards.TaskControlBlock.runTask()": "37.223961018684605",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.2641768392311215",
            "richards.Scheduler.schedule()": "2.8502545259137158",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "4.070236080954491",
            "richards.RBObject.append(Packet, Packet)": "3.115310042336265",
            "Richards.benchmark()": "28.00148140617398",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.4617484949929924"
        },
        "YourKit_Storage.txt": {
            "javax.management.openmbean.TabularType.isAssignableFrom(OpenType) TabularType.java": "0.10576190879092986",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.428335730603266",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.6028428801083002",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1105000423047637",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.11105000423047635",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.18952534055335",
            "jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init>(int, int, String, String, int) SymbolTable.java": "0.11633809967002286",
            "som.Random.next()": "15.615745832980796",
            "Storage.buildTreeDepth(int, Random)": "38.97326338945766",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.3108977070818177"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "32.00145516279633",
            "Towers.pushDisk(Towers$TowersDisk, int)": "31.8438125265264",
            "Towers.moveDisks(int, int, int)": "8.064027163038864",
            "Towers$TowersDisk.getSize()": "2.3040077608682465",
            "java.lang.StringLatin1.compareTo(byte[], byte[], int, int) StringLatin1.java": "0.109137209725338",
            "Towers.moveTopDisk(int, int)": "7.227308555144606",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.109137209725338",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.47407991269023",
            "Towers.benchmark()": "0.23040077608682466",
            "java.lang.invoke.InvokerBytecodeGenerator.addMethod() InvokerBytecodeGenerator.java": "0.218274419450676"
        },
        "YourKit_Permute.txt": {
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.044472610431050774",
            "Benchmark.innerBenchmarkLoop(int)": "0.044472610431050774",
            "java.lang.ClassLoader.findLoadedClass(String) ClassLoader.java": "0.14453598390091502",
            "Permute.permute(int)": "58.370301190754134",
            "java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(LambdaForm$BasicType) InvokerBytecodeGenerator.java": "0.05559076303881346",
            "com.yourkit.probes.ResourceCounter.open(Object, String) a": "0.20012674693972846",
            "Run.measure(Benchmark)": "0.0011118152607762694",
            "java.util.zip.ZipFile.<init>(File, int, Charset) ZipFile.java": "0.0011118152607762694",
            "Permute.swap(int, int)": "41.09269203829091",
            "jdk.internal.perf.PerfCounter.addElapsedTimeFrom(long) PerfCounter.java": "0.044472610431050774"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.586945522010457",
            "deltablue.Variable.<init>()": "1.4125484904705685",
            "som.Vector.forEach(ForEachInterface)": "47.668240850059036",
            "deltablue.EqualityConstraint.execute()": "4.680384550514421",
            "deltablue.BinaryConstraint.<init>(Variable, Variable, Strength$Sym, Planner)": "3.1202563670096137",
            "deltablue.BinaryConstraint.isSatisfied()": "2.8883454208129535",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.656434474616293",
            "som.Vector.append(Object)": "6.535672120087704",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.867262607522348",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, int) DirectMethodHandle$Holder": "1.3493000505987518"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "4.043467273186758",
            "List$Element.<init>(Object)": "0.11970791269302901",
            "List.makeList(int)": "0.38572549645531573",
            "List$Element.getNext()": "21.108495271537446",
            "List$Element.length()": "0.11970791269302901",
            "List.isShorterThan(List$Element, List$Element)": "73.30114520569809",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.2261149461979437",
            "com.yourkit.probes.Table.createRow() a": "0.11970791269302901",
            "Run.lambda$getSuiteFromName$5()": "0.29261934213851537",
            "java.lang.Integer.valueOf(int) Integer.java": "0.11970791269302901"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.1004229229939537",
            "nbody.Body.getZ()": "4.371150407311742",
            "nbody.Body.setX(double)": "0.6812182452953364",
            "nbody.Body.getX()": "0.6954102920723225",
            "nbody.NBodySystem.advance(double)": "43.981152961880156",
            "nbody.Body.setVY(double)": "7.890778008004312",
            "nbody.Body.setVZ(double)": "9.281598592148956",
            "NBody.innerBenchmarkLoop(int)": "0.5676818710794469",
            "nbody.Body.setVX(double)": "26.638471800403046",
            "nbody.Body.setY(double)": "0.6954102920723225"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.71110840396095",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "8.701554097561825E-4",
            "com.yourkit.probes.builtin.Processes.processWriteEnterImpl(FileOutputStream, int) a": "0.07831398687805642",
            "java.util.zip.ZipFile.getInputStream(ZipEntry) ZipFile.java": "0.01740310819512365",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.01740310819512365",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "java.lang.invoke.LambdaFormBuffer.insertName(int, LambdaForm$Name, boolean) LambdaFormBuffer.java": "0.09571709507318006",
            "com.yourkit.probes.Table.createRow() a": "0.07831398687805642",
            "Run.measure(Benchmark)": "8.701554097561825E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.8833127162832928",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.239387438736042",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.881277108811046",
            "cd.RedBlackTree.findNode(Comparable)": "7.10896763384119",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.392966193257442",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.131703803454269",
            "cd.RedBlackTree$Node.successor()": "1.785071167968933",
            "cd.RedBlackTree.put(Comparable, Object)": "6.584407246762599",
            "cd.Vector2D.compareNumbers(double, double)": "9.84137920235504",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.076898986893819"
        },
        "YourKit_Sieve.txt": {
            "java.lang.invoke.MethodTypeForm.parameterSlotCount() MethodTypeForm.java": "0.14146539284939594",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.17918949760923486",
            "com.yourkit.probes.ForeignKeyColumn.setValue(int, int) a": "0.08487923570963755",
            "sun.invoke.util.VerifyType.isNullReferenceConversion(Class, Class) VerifyType.java": "0.018862052379919458",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "5.3285297973272465",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(int, String, String, String) MethodWriter.java": "0.06601718332971811",
            "Sieve.benchmark()": "87.67081946186563",
            "com.yourkit.probes.Table.createRow() a": "0.08487923570963755",
            "Sieve.sieve(boolean[], int)": "6.290494468703139",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.11317231427951674"
        },
        "YourKit_Bounce.txt": {
            "jdk.internal.org.objectweb.asm.Type.getReturnTypeOffset(String) Type.java": "0.4014298549117809",
            "java.net.URI.<init>(String) URI.java": "0.2676199032745206",
            "sun.nio.fs.NativeBuffers.allocNativeBuffer(int) NativeBuffers.java": "0.1338099516372603",
            "java.util.zip.ZipUtils.SH(byte[], int) ZipUtils.java": "0.11469424426050884",
            "Bounce.benchmark()": "59.77481696710185",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.64993405080955",
            "som.Random.next()": "0.36319844015827796",
            "Bounce.lambda$benchmark$0(Random, int)": "0.19115707376751473",
            "Bounce$Ball.bounce()": "37.23739796991187",
            "Bounce$Ball.<init>(Random)": "0.7455125876933075"
        }
    },
    "Runtimes": {
        "NBody.data": 103.9075,
        "JavaFlightRecorder_Queens.jfr": 105.25450000000001,
        "rebench_test_Async_Bounce.txt": 101.2975,
        "JavaFlightRecorder_Sieve.jfr": 107.32499999999999,
        "Permute.hpl": 104.662,
        "CD.data": 96.20949999999999,
        "List.data": 151.49099999999999,
        "DeltaBlue.hpl": 96.81,
        "Towers.hpl": 113.7535,
        "JavaFlightRecorder_Json.jfr": 84.2955,
        "Bounce.hpl": 99.8355,
        "NBody.hpl": 102.642,
        "Sieve.data": 105.047,
        "Richards.hpl": 90.75,
        "JavaFlightRecorder_Havlak.jfr": 160.424,
        "JavaFlightRecorder_CD.jfr": 96.7305,
        "JavaFlightRecorder_DeltaBlue.jfr": 83.0555,
        "rebench_test_Async_Mandelbrot.txt": 85.617,
        "JavaFlightRecorder_Towers.jfr": 110.8605,
        "rebench_test_Async_CD.txt": 94.273,
        "Mandelbrot.data": 87.1925,
        "rebench_test_Async_Permute.txt": 105.3945,
        "JavaFlightRecorder_Permute.jfr": 106.00450000000001,
        "rebench_test_Async_NBody.txt": 102.5495,
        "JavaFlightRecorder_Bounce.jfr": 104.5385,
        "Havlak.data": 159.85000000000002,
        "Mandelbrot.hpl": 86.14,
        "List.hpl": 149.7215,
        "rebench_test_Async_Towers.txt": 108.48249999999999,
        "JavaFlightRecorder_Storage.jfr": 96.34049999999999,
        "Queens.hpl": 103.482,
        "JavaFlightRecorder_NBody.jfr": 103.9975,
        "Storage.data": 114.77250000000001,
        "rebench_test_Async_Sieve.txt": 105.12049999999999,
        "JavaFlightRecorder_Richards.jfr": 92.22,
        "Storage.hpl": 106.307,
        "rebench_test_Async_List.txt": 150.5815,
        "Bounce.data": 104.315,
        "rebench_test_Async_Richards.txt": 93.09299999999999,
        "Permute.data": 105.9165,
        "rebench_test_Async_DeltaBlue.txt": 95.144,
        "JavaFlightRecorder_Mandelbrot.jfr": 87.2245,
        "JavaFlightRecorder_List.jfr": 155.0005,
        "DeltaBlue.data": 87.3805,
        "Queens.data": 112.025,
        "rebench_test_Async_Storage.txt": 109.1945,
        "Json.hpl": 85.745,
        "Towers.data": 109.0145,
        "Havlak.hpl": 158.4905,
        "Richards.data": 94.525,
        "rebench_test_Async_Havlak.txt": 158.959,
        "Sieve.hpl": 103.861,
        "CD.hpl": 94.8395,
        "rebench_test_Async_Json.txt": 80.889,
        "rebench_test_Async_Queens.txt": 110.066,
        "Json.data": 81.211
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.01%",
            "[.] Interpreter": "0.12%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.31%",
            "[.] void nbody.NBodySystem.advance(double)": "0.03%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.02%",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.14%",
            "[.] void Permute.permute(int)": "0.01%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "33.85%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.44%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.93%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.83%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.97%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "5.88%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.80%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.63%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "12.23%",
            "[.] void deltablue.Planner.chainTest(int)": "25.72%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.46%",
            "[.] Interpreter": "0.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.17%",
            "[.] boolean Queens.placeQueen(int)": "96.64%",
            "clear_page_rep": "0.06%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.06%",
            "[.] Interpreter": "0.14%",
            "[.] void Towers.moveDisks(int, int, int)": "98.83%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.09%",
            "clear_page_rep": "0.03%"
        },
        "Richards.data": {
            "[.] java.lang.Object Richards.benchmark()": "6.93%",
            " ": "0",
            "[.] vtable chunks": "36.36%",
            "[.] boolean richards.Scheduler.start()": "23.58%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.58%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.38%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.69%",
            "x86_pmu_disable_all": "0.25%",
            "[.] Interpreter": "0.12%",
            "clear_page_rep": "0.09%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.16%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.63%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.18%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.44%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "12.15%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "9.89%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.01%",
            "[.] Interpreter": "0.13%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.01%",
            "[.] Interpreter": "0.07%",
            "[.] java.lang.Object List.benchmark()": "0.52%",
            "[.] List$Element List.makeList(int)": "0.67%",
            "[.] int List$Element.length()": "0.08%"
        },
        "Sieve.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.11%",
            "[.] Interpreter": "0.16%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "93.87%",
            "[.] java.lang.Object Sieve.benchmark()": "1.99%",
            "[.] int Sieve.sieve(boolean[], int)": "2.22%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.83%",
            "clear_page_rep": "0.05%",
            "[.] java.lang.Object Bounce.benchmark()": "0.03%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.38%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.26%",
            "[.] StubRoutines (2)": "8.10%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.32%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.10%"
        }
    }
}