{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.0041371891936618265",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.008274378387323653",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.01241156758098548",
            "jdk.jfr.internal.PlatformRecorder.periodicTask()V": "0.0041371891936618265",
            "Mandelbrot.mandelbrot(I)I": "99.94207935128874",
            "jdk.internal.org.objectweb.asm.ByteVector.putInt(I)Ljdk/internal/org/objectweb/asm/ByteVector;": "0.0041371891936618265",
            "java.util.jar.JavaUtilJarAccessImpl.entryFor(Ljava/util/jar/JarFile;Ljava/lang/String;)Ljava/util/jar/JarEntry;": "0.0041371891936618265",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStoreInsn(Ljava/lang/invoke/LambdaForm$BasicType;I)V": "0.0041371891936618265",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.0041371891936618265",
            "java.lang.invoke.MemberName.getFieldType()Ljava/lang/Class;": "0.0041371891936618265"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.5008808594424679",
            "java.lang.invoke.MethodTypeForm.canonicalizeAll([Ljava/lang/Class;I)[Ljava/lang/Class;": "0.00345435075477564",
            "Queens.benchmark()Ljava/lang/Object;": "0.0518152613216346",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.00345435075477564",
            "Queens.placeQueen(I)Z": "13.6274137275899",
            "Queens.getRowColumn(II)Z": "58.50288438288024",
            "java.util.Arrays.fill([ZZ)V": "0.6874158002003524",
            "Queens.setRowColumn(IIZ)V": "25.70036961553076",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.017271753773878202",
            "Queens.queens()Z": "0.8566789871843588"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JJ)J": "0.0034967480243373664",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.006993496048674733",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.28323658997132667",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.346247989369886",
            "Bounce$Ball.bounce()Z": "84.84509406252185",
            "Bounce.benchmark()Ljava/lang/Object;": "8.741870060843416",
            "som.Random.next()I": "1.363731729491573",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.034967480243373664",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.017483740121686832",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.3219106231204982"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.567145090237317",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.42783383070437",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.8358201885273076",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "16.912983752546065",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.261854009757946",
            "som.Vector.<init>(I)V": "5.260290843636019",
            "havlak.HavlakLoopFinder.findLoops()V": "3.8558097674198284",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.260811899009995",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.6076453033963336",
            "som.Vector.append(Ljava/lang/Object;)V": "2.422907488986784"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.22738090593422",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "8.872068978970779",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.6842495415707543",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.1692481760368305",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.668916546369631",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.481253169989467",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.053958097616168",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.600171667121845",
            "cd.Vector2D.compareNumbers(DD)I": "3.1485310756505793",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.726386016932622"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.80793054791572",
            "java.lang.invoke.LambdaForm$MH+0x0000000801010000.254749889.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.004783201396694808",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.023916006983474042",
            "List$Element.getNext()LList$Element;": "9.717073637385502",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.19611125726448714",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.087867409657284",
            "List$Element.length()I": "0.055006816061990295",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.007174802095042212",
            "List$Element.setNext(LList$Element;)V": "0.026307607681821443",
            "List.makeList(I)LList$Element;": "1.0379547030827734"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.652263374485597",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "10.195473251028806",
            "deltablue.ScaleConstraint.execute()V": "7.695473251028806",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "2.0730452674897117",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "20.699588477366255",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "13.60082304526749",
            "som.Vector.<init>(I)V": "9.290123456790123",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.593621399176954",
            "deltablue.Planner$$Lambda$84+0x0000000801014668.2039810346.apply(Ljava/lang/Object;)V": "2.4228395061728394",
            "som.Vector.append(Ljava/lang/Object;)V": "3.1121399176954734"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.5433804742883875",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "34.366116089100004",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.6729281370326388",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.0803555363633093",
            "Storage.benchmark()Ljava/lang/Object;": "0.010795638562020943",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.960631904710496",
            "som.Random.next()I": "13.39378890928065",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.2055129727590053",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.021591277124041887",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.7053150527187017"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.Integer.stringSize(I)I": "0.0030869914181638576",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JJ)J": "0.0030869914181638576",
            "Sieve.benchmark()Ljava/lang/Object;": "2.8739890103105514",
            "java.lang.invoke.InvokerBytecodeGenerator.lookupPregenerated(Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.0030869914181638576",
            "Run.printResult(J)V": "0.0030869914181638576",
            "java.util.Arrays.fill([ZZ)V": "11.208865839352967",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.0030869914181638576",
            "java.security.SecureClassLoader$CodeSourceKey.equals(Ljava/lang/Object;)Z": "0.0030869914181638576",
            "Sieve.sieve([ZI)I": "85.83688337346422",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.021608939927147002"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.05568122498694971",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.89229163041587",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.887245519401427",
            "Towers.moveDisks(III)V": "3.887245519401427",
            "Towers$TowersDisk.getSize()I": "11.63737602227249",
            "Towers.benchmark()Ljava/lang/Object;": "0.11136244997389942",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.024360535931790498",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.85853488776753",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.43848964677223",
            "Towers.moveTopDisk(II)V": "4.155211414651122"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.567322029196574",
            "nbody.Body.getMass()D": "0.7524532750788862",
            "nbody.Body.setVX(D)V": "31.013558029057872",
            "nbody.NBodySystem.advance(D)V": "39.082492458129614",
            "nbody.Body.setZ(D)V": "0.46118103956447865",
            "nbody.Body.getY()D": "0.7559208016921529",
            "nbody.Body.getZ()D": "8.502375255730087",
            "nbody.Body.setVZ(D)V": "9.077984673532368",
            "nbody.Body.setVY(D)V": "6.095911786122958",
            "nbody.Body.setX(D)V": "1.4459585977322376"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.722998368910006",
            "richards.Scheduler.schedule()V": "12.885610949578044",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.502659385859157",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.8151904120275155",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.9075242890575135",
            "Richards.benchmark()Ljava/lang/Object;": "10.0418410041841",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.8366073328132755",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.22657967520034",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.5600312034607473",
            "richards.RBObject.<init>()V": "10.226225090419119"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.975050740062373",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.950299490124251",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "24.548289688629275",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.371021236572447",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.935102222662245",
            "java.lang.String.<init>([BB)V": "4.519578238701055",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.88099599029751",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.3959209940101975",
            "json.JsonPureStringParser.read()V": "16.20216820949458",
            "java.util.Arrays.copyOfRange([BII)[B": "7.064006732339983"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.014564520827264784",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003641130206816196",
            "java.lang.String.length()I": "0.003641130206816196",
            "Run.getSuiteFromName(Ljava/lang/String;)Ljava/util/function/Supplier;": "0.003641130206816196",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JJ)J": "0.003641130206816196",
            "Permute.swap(II)V": "43.75182056510341",
            "java.lang.invoke.InvokerBytecodeGenerator.addMethod()V": "0.003641130206816196",
            "Permute.permute(I)V": "56.08068744538305",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.032770171861345766",
            "Permute.benchmark()Ljava/lang/Object;": "0.05461695310224294"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.3",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.2",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "6.3"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.MethodTypeForm::canonicalizeAll": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodType::checkPtypes": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "java.lang.System::arraycopy": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "98.1",
            "java.lang.invoke.InvokerBytecodeGenerator::emitPushArguments": "0.0",
            "java.util.zip.ZipCoder$UTF8ZipCoder::isUTF8": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.6",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "81.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "16.4",
            "java.lang.String::<init>": "5.3",
            "json.JsonPureStringParser::readArray": "2.4",
            "java.lang.String::length": "3.1",
            "java.util.Arrays::copyOfRange": "6.8",
            "java.lang.String::equals": "22.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "java.lang.String::isLatin1": "2.4",
            "json.JsonPureStringParser::readStringInternal": "8.8"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.6",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.8",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.1",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.6",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.6",
            "havlak.HavlakLoopFinder::doDFS": "5.5",
            "som.Vector::hasSome": "2.4",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "40.6",
            "Permute::permute": "51.4",
            "Permute::verifyResult": "0.0",
            "jdk.internal.ref.PhantomCleanable::remove": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "5.9",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Run::measure": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "57.5",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "14.0",
            "Queens::setRowColumn": "23.7",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.9",
            "java.util.Arrays::setAll": "34.1",
            "som.Random::next": "12.2",
            "AGCT::Unknown not Java[ERR=-3]": "5.2",
            "AGCT::Unknown Java[ERR=-5]": "1.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "89.4",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.io.PrintStream::println": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "5.2"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "15.2",
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "10.2",
            "deltablue.ScaleConstraint::execute": "6.3",
            "java.util.Arrays::setAll": "6.8",
            "deltablue.Planner::addPropagate": "2.2",
            "AGCT::Unknown not Java[ERR=-3]": "6.6",
            "AGCT::Unknown Java[ERR=-5]": "9.8",
            "som.Vector::<init>": "5.5",
            "som.Vector::forEach": "10.9",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.5"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.1",
            "Bounce$Ball::bounce": "82.6",
            "java.util.Arrays::setAll": "1.3",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "3.3",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.5",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.4",
            "nbody.Body::getZ": "8.0",
            "nbody.Body::setVX": "29.4",
            "nbody.Body::setVY": "6.1",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "nbody.NBodySystem::advance": "39.9"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.1",
            "Towers::popDiskFrom": "23.7",
            "Towers::moveDisks": "3.7",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "Towers::pushDisk": "33.0",
            "Towers$TowersDisk::setNext": "15.4",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "Towers::moveTopDisk": "5.2",
            "Towers$TowersDisk::getNext": "3.4"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.0",
            "cd.RedBlackTree::forEach": "5.3",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "8.1",
            "cd.RedBlackTree::treeMinimum": "6.7",
            "AGCT::Unknown not Java[ERR=-3]": "5.2",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.Vector2D::compareNumbers": "2.9",
            "cd.RedBlackTree::treeInsert": "21.3",
            "cd.CollisionDetector::isInVoxel": "13.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner.newMark": "7.27%",
            "deltablue.EqualityConstraint.execute": "6.27%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.07%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "9.37%",
            "G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask,": "2.65%",
            "vtable": "3.77%",
            "som.Vector.<init>": "2.66%",
            "som.Vector.forEach": "24.22%",
            "itable": "2.36%",
            "deltablue.ScaleConstraint.execute": "6.30%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.71%",
            "som.Random.next": "1.28%",
            "clear_page_rep_[k]": "0.11%",
            "java.util.Arrays.setAll": "1.42%",
            "SpinPause": "0.02%",
            "Bounce.benchmark": "9.22%",
            "__memset_avx2_unaligned_erms": "0.02%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "3.21%",
            "Bounce.lambda$benchmark$0": "0.26%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.01%",
            "LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*,": "0.01%",
            "Mandelbrot.mandelbrot": "99.54%",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic": "0.01%",
            "SharedRuntime::java_calling_convention(BasicType": "0.01%",
            "java.lang.invoke.MethodType.insertParameterTypes": "0.01%",
            "DebugInformationRecorder::add_non_safepoint(int)": "0.01%",
            "__tls_get_addr": "0.02%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.52%",
            "som.Random.next": "12.68%",
            "clear_page_rep_[k]": "0.18%",
            "java.util.Arrays.setAll": "36.55%",
            "Storage.lambda$buildTreeDepth$0": "3.07%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.44%",
            "SpinPause": "0.20%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.51%",
            "Storage.buildTreeDepth": "42.77%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.05%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.77%",
            "Towers.popDiskFrom": "20.31%",
            "Towers.moveDisks": "8.67%",
            "clear_page_rep_[k]": "0.05%",
            "Towers.pushDisk": "36.83%",
            "Towers.moveTopDisk": "3.85%",
            "Towers$TowersDisk.getSize": "10.44%",
            "Towers.buildTowerAt": "0.01%",
            "Towers$TowersDisk.getNext": "3.56%",
            "Towers.benchmark": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "10.85%",
            "cd.CollisionDetector.isInVoxel": "14.01%",
            "cd.RedBlackTree.forEach": "4.82%",
            "cd.RedBlackTree.put": "6.96%",
            "cd.RedBlackTree.treeInsert": "21.13%",
            "cd.RedBlackTree.findNode": "7.88%",
            "cd.RedBlackTree.treeMinimum": "6.26%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.06%",
            "cd.Vector2D.compareNumbers": "2.79%",
            "cd.RedBlackTree.leftRotate": "2.46%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "6.06%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.10%",
            "som.Vector.hasSome": "2.19%",
            "som.Vector.append": "3.36%",
            "som.Vector.forEach": "2.16%",
            "som.IdentitySet.lambda$contains$0": "32.98%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.00%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.42%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.97%",
            "havlak.HavlakLoopFinder.doDFS": "5.54%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "7.29%",
            "Sieve.benchmark": "3.14%",
            "clear_page_rep_[k]": "0.10%",
            "Run.measure": "0.02%",
            "Sieve.sieve": "88.47%",
            "SpinPause": "0.04%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.22%",
            "Permute.swap": "41.25%",
            "Interpreter": "0.02%",
            "Permute.benchmark": "0.01%",
            "clear_page_rep_[k]": "0.01%",
            "__audit_syscall_entry_[k]": "0.01%",
            "Permute.verifyResult": "0.02%",
            "[no_Java_frame]": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.74%",
            "nbody.Body.getZ": "7.84%",
            "nbody.Body.getY": "0.75%",
            "nbody.Body.setX": "1.14%",
            "nbody.Body.setY": "1.79%",
            "nbody.Body.setVX": "28.56%",
            "nbody.Body.setVY": "5.90%",
            "nbody.Body.getMass": "0.44%",
            "nbody.Body.getVZ": "0.42%",
            "nbody.NBodySystem.advance": "42.98%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.31%",
            "List.makeList": "0.76%",
            "clear_page_rep_[k]": "0.05%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "5.08%",
            "List$Element.length": "0.08%",
            "List.isShorterThan": "84.14%",
            "List$Element.<init>": "0.14%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.14%",
            "java.lang.String.length": "3.69%",
            "java.lang.String.substring": "2.27%",
            "java.lang.String.<init>": "4.85%",
            "java.lang.String.isLatin1": "2.70%",
            "json.JsonPureStringParser.readStringInternal": "9.62%",
            "java.util.Arrays.copyOfRange": "7.86%",
            "java.lang.String.equals": "20.31%",
            "json.JsonPureStringParser.read": "14.74%",
            "json.JsonPureStringParser.readValue": "3.30%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.67%",
            "Queens.getRowColumn": "70.86%",
            "Queens.setRowColumn": "17.95%",
            "clear_page_rep_[k]": "0.09%",
            "Queens.queens": "0.52%",
            "Queens.placeQueen": "9.34%",
            "syscall_enter_from_user_mode_[k]": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Queens.benchmark": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Richards.txt": {
            "Richards.benchmark": "5.31%",
            "richards.Scheduler.schedule": "5.14%",
            "richards.Packet.<init>": "6.28%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.65%",
            "itable": "37.74%",
            "richards.TaskControlBlock.<init>": "3.28%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.28%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.10%",
            "richards.RBObject.<init>": "5.85%",
            "richards.RBObject.append": "2.61%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.5",
            "Towers.moveDisks": "93.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.7",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "7.3",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "91.6",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.3"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.1",
            "deltablue.AbstractConstraint.satisfy": "10.2",
            "deltablue.Planner.removePropagateFrom": "9.3",
            "som.Vector.<init>": "28.5",
            "deltablue.Variable.<init>": "4.9",
            "som.Vector.forEach": "7.7",
            "deltablue.Planner.addPropagate": "2.3",
            "deltablue.AbstractConstraint.<init>": "8.4",
            "deltablue.Planner.constraintsConsuming": "4.8",
            "deltablue.Planner.addConstraintsConsumingTo": "15.5"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.2",
            "som.Vector.hasSome": "3.4",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.1",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "5.0",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.schedule": "14.1",
            "richards.Scheduler.<init>": "0.0",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.2",
            "richards.Scheduler.createIdler": "0.1",
            "richards.TaskControlBlock.runTask": "84.3",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "1.5",
            "Bounce.benchmark": "51.6",
            "Bounce$Ball.<init>": "46.3",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.2",
            "cd.RedBlackTree.treeInsert": "2.4",
            "cd.RedBlackTree.findNode": "1.5",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.6",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "7.7",
            "cd.RedBlackTree$Entry.<init>": "5.0"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Harness.processArguments": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.8",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.lang.Integer.valueOf": "0.2",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "List.makeList": "0.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.8",
            "List$Element.length": "0.2",
            "List.isShorterThan": "75.4",
            "List$Element.<init>": "19.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Harness.processArguments": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.0",
            "json.JsonValue.<init>": "4.5",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "1.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "28.1",
            "Queens.placeQueen": "70.0",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.41733607322997",
            "java.lang.String.<init>(byte[], byte) String.java": "6.247794590779834",
            "json.JsonPureStringParser.isDigit()": "1.8390518297112732",
            "json.JsonPureStringParser.read()": "19.474022873985515",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "4.691035141249975",
            "java.lang.String.length() String.java": "2.9391618407123734",
            "java.lang.String.substring(int, int) String.java": "9.822114286900389",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.742283662328499",
            "json.JsonPureStringParser.readStringInternal()": "3.6905577350187855",
            "json.JsonPureStringParser.readValue()": "3.686406376486706"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.5967730451311954",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.855814063878863",
            "havlak.HavlakLoopFinder.findLoops()": "10.03299019787646",
            "som.Vector.<init>(int)": "2.4014447505884946",
            "som.Vector.append(Object)": "5.931331194400514",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.356134472275504",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.286324279188991",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.112447164979039",
            "som.Vector.removeAll()": "2.0885880669987986",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.73267367321797"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.927707743761255",
            "Queens.getRowColumn(int, int)": "61.82467198353485",
            "Queens.queens()": "0.32158476974530487",
            "java.lang.invoke.ClassSpecializer$Factory.loadSpecies(ClassSpecializer$SpeciesData) ClassSpecializer.java": "0.09647543092359145",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6270903010033444",
            "Queens.setRowColumn(int, int, boolean)": "23.41137123745819",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.08039619243632622",
            "com.yourkit.probes.Table.createRow() a": "0.14471314638538718",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3537432467198353",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.14471314638538718"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.913325808768561",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.158426291024758",
            "richards.TaskControlBlock.runTask()": "38.56950205948315",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.137289104527932",
            "richards.Scheduler.schedule()": "2.484572199176207",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.5757611292710458",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.6865481303410976",
            "richards.RBObject.append(Packet, Packet)": "3.078231043227159",
            "Richards.benchmark()": "26.817255683733748",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.6637105876489644"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$10.0x00000008000c2a98.<init>(Storage, int, Random)": "0.2782304543105847",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.7211279121927399",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.4996791832516623",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.0845309545575852",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.11356345073901415",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(Label) MethodWriter.java": "0.08517258805426062",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.51751432319023",
            "som.Random.next()": "15.365134884988615",
            "Storage.buildTreeDepth(int, Random)": "36.11885550754345",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "1.7943025216764237"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "30.58596265292981",
            "Towers.pushDisk(Towers$TowersDisk, int)": "30.395173022346235",
            "Towers.moveDisks(int, int, int)": "9.956833846080466",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.2265626863179986",
            "java.lang.invoke.MethodHandles.insertArgumentPrimitive(BoundMethodHandle, int, Class, Object) MethodHandles.java": "0.26233574205241944",
            "Towers$TowersDisk.getSize()": "1.3713004698194653",
            "Towers.moveTopDisk(int, int)": "7.619660871431637",
            "java.util.zip.ZipFile$Source.findEND() ZipFile.java": "0.20271398249505135",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.245903985118407",
            "java.lang.invoke.MethodHandles$Lookup.maybeBindCaller(MemberName, MethodHandle, MethodHandles$Lookup) MethodHandles.java": "0.05962175955736806"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.org.objectweb.asm.ByteVector.enlarge(int) ByteVector.java": "0.1570545540211575",
            "java.lang.invoke.InvokerBytecodeGenerator.loadMethod(byte[]) InvokerBytecodeGenerator.java": "0.011218182430082678",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass(String) SymbolTable.java": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference(int, String) SymbolTable.java": "0.0",
            "Benchmark.innerBenchmarkLoop(int)": "0.04487272972033071",
            "Permute.permute(int)": "56.11334851527355",
            "Run.measure(Benchmark)": "0.0011218182430082677",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.0",
            "Permute.benchmark()": "0.10096364187074411",
            "Permute.swap(int, int)": "43.57142055844112"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "6.9815917024536045",
            "som.Vector.forEach(ForEachInterface)": "42.79364122655015",
            "deltablue.EqualityConstraint.execute()": "3.741932243401392",
            "deltablue.BinaryConstraint.getOutput()": "1.9839774981792617",
            "deltablue.BinaryConstraint.isSatisfied()": "2.2351138903538517",
            "som.Vector.<init>(int)": "5.776137020015572",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.938295788442704",
            "som.Vector.append(Object)": "3.4907958512268022",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.184886611918934",
            "deltablue.Planner$$Lambda$31.0x00000008000cd620.apply(Object)": "1.8584093020919665"
        },
        "YourKit_List.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.2564690954739954",
            "List.tail(List$Element, List$Element, List$Element)": "4.38697136994992",
            "List.makeList(int)": "1.2013552366939784",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.linkToTargetMethod(Object, long, Object) LambdaForm$MH": "0.12148536101399782",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0944886141219983",
            "List$Element.setNext(List$Element)": "0.2699674689199951",
            "List$Element.getNext()": "26.402818460375528",
            "List.isShorterThan(List$Element, List$Element)": "66.9924274124968",
            "com.yourkit.probes.Table.createRow() a": "0.04049512033799927",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(Object) MethodType.java": "0.20247560168999637"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.5174145008796645",
            "nbody.Body.getZ()": "5.163560425099766",
            "nbody.Body.setX(double)": "0.5721396592908329",
            "nbody.Body.getX()": "1.8594538926952064",
            "nbody.Body.setZ(double)": "0.7008710826312702",
            "nbody.NBodySystem.advance(double)": "45.17042610101125",
            "nbody.Body.setVY(double)": "6.550999098880035",
            "nbody.Body.setVZ(double)": "6.708337505185015",
            "nbody.Body.setVX(double)": "28.707107404917537",
            "nbody.Body.setY(double)": "0.9011199633830618"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.91272111371316",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "sun.nio.fs.LinuxFileSystem.<init>(UnixFileSystemProvider, String) LinuxFileSystem.java": "0.0",
            "Run.runBenchmark()": "8.641473889786642E-4",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.0",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.0",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.05184884333871985",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.03456589555914656",
            "sun.nio.fs.LinuxFileSystemProvider.<init>() LinuxFileSystemProvider.java": "0.0"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.357031082200606",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.066183915804974",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.896750636678835",
            "cd.RedBlackTree.findNode(Comparable)": "7.578779417630634",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.502071123929918",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.8919026725169523",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.124819735509803",
            "cd.RedBlackTree.put(Comparable, Object)": "7.417692000859131",
            "cd.Vector2D.compareNumbers(double, double)": "7.870270933693351",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.341689423460464"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.08275405494869248",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.0517212843429328",
            "sun.reflect.generics.factory.CoreReflectionFactory.makeWildcard(FieldTypeSignature[], FieldTypeSignature[]) CoreReflectionFactory.java": "0.031032770605759676",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.3584905660377355",
            "Sieve.benchmark()": "89.38472360145646",
            "java.lang.ThreadLocal.createMap(Thread, Object) ThreadLocal.java": "0.13447533929162528",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.23791790797749088",
            "java.util.jar.JarFile.<clinit>() JarFile.java": "0.031032770605759676",
            "Sieve.sieve(boolean[], int)": "7.458209202250909",
            "javax.management.openmbean.SimpleType.isValue(Object) SimpleType.java": "0.2068851373717312"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.17334026694401108",
            "Bounce.benchmark()": "62.71065657441112",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.4622407118506962",
            "som.Random.next()": "0.3659405635484678",
            "Bounce.lambda$benchmark$0(Random, int)": "0.17334026694401108",
            "com.yourkit.probes.Table.createRow() a": "0.17334026694401108",
            "Bounce$Ball.bounce()": "35.18807418963425",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.17334026694401108",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitCode() MethodWriter.java": "0.17334026694401108",
            "Bounce$Ball.<init>(Random)": "0.17334026694401108"
        }
    },
    "Runtimes": {
        "NBody.data": 105.34049999999999,
        "JavaFlightRecorder_Queens.jfr": 106.0035,
        "rebench_test_Async_Bounce.txt": 101.46000000000001,
        "JavaFlightRecorder_Sieve.jfr": 119.312,
        "Permute.hpl": 106.2105,
        "CD.data": 99.86449999999999,
        "DeltaBlue.hpl": 83.01249999999999,
        "List.data": 152.91,
        "Towers.hpl": 108.4385,
        "NBody.hpl": 103.0995,
        "JavaFlightRecorder_Json.jfr": 83.622,
        "Bounce.hpl": 101.34700000000001,
        "Sieve.data": 106.15299999999999,
        "Richards.hpl": 91.754,
        "JavaFlightRecorder_Havlak.jfr": 160.891,
        "JavaFlightRecorder_CD.jfr": 97.904,
        "JavaFlightRecorder_DeltaBlue.jfr": 79.166,
        "rebench_test_Async_Mandelbrot.txt": 85.582,
        "JavaFlightRecorder_Towers.jfr": 110.0935,
        "rebench_test_Async_CD.txt": 94.1095,
        "rebench_test_Async_Permute.txt": 106.43799999999999,
        "Mandelbrot.data": 85.98,
        "rebench_test_Async_NBody.txt": 102.87,
        "JavaFlightRecorder_Permute.jfr": 105.461,
        "JavaFlightRecorder_Bounce.jfr": 104.09649999999999,
        "Havlak.data": 158.5825,
        "Mandelbrot.hpl": 85.037,
        "JavaFlightRecorder_Storage.jfr": 104.4635,
        "List.hpl": 153.904,
        "rebench_test_Async_Towers.txt": 108.5695,
        "JavaFlightRecorder_NBody.jfr": 104.291,
        "Queens.hpl": 105.679,
        "Storage.data": 113.9225,
        "rebench_test_Async_Sieve.txt": 105.3845,
        "JavaFlightRecorder_Richards.jfr": 92.4825,
        "Storage.hpl": 109.53,
        "rebench_test_Async_List.txt": 151.2995,
        "Bounce.data": 102.7115,
        "rebench_test_Async_Richards.txt": 91.338,
        "Permute.data": 105.85300000000001,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.766,
        "rebench_test_Async_DeltaBlue.txt": 103.121,
        "JavaFlightRecorder_List.jfr": 155.4305,
        "DeltaBlue.data": 97.598,
        "rebench_test_Async_Storage.txt": 108.6385,
        "Queens.data": 107.6005,
        "Json.hpl": 80.6105,
        "Towers.data": 112.07050000000001,
        "Havlak.hpl": 158.0335,
        "Richards.data": 92.5135,
        "rebench_test_Async_Havlak.txt": 158.7105,
        "Sieve.hpl": 104.287,
        "CD.hpl": 93.9045,
        "Json.data": 80.994,
        "rebench_test_Async_Json.txt": 81.469,
        "rebench_test_Async_Queens.txt": 110.211
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.10%",
            "[.] Interpreter": "0.11%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.39%",
            "asm_sysvec_apic_timer_interrupt": "0.03%",
            "[.] void nbody.NBodySystem.advance(double)": "98.77%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.03%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.14%",
            "[.] void Permute.permute(int)": "0.02%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.09%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.37%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.21%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.00%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.04%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.EqualityConstraint.execute()": "7.18%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.13%",
            "[.] vtable chunks": "6.12%",
            "[.] boolean deltablue.Planner.addPropagate(deltablue.AbstractConstraint, int)": "7.13%",
            "[.] void deltablue.Planner.chainTest(int)": "28.91%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.80%",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.21%",
            "[.] boolean Queens.placeQueen(int)": "95.95%",
            "clear_page_rep": "0.07%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.15%",
            "[.] Interpreter": "0.13%",
            "[.] void Towers.moveDisks(int, int, int)": "98.68%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "native_apic_msr_write": "0.05%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.85%",
            "[.] boolean richards.Scheduler.start()": "22.97%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.99%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.81%",
            "[.] void richards.Scheduler.schedule()": "7.84%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.93%",
            "x86_pmu_disable_all": "0.10%",
            "[.] Interpreter": "0.14%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.19%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "25.60%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.04%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.04%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "12.37%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "9.67%"
        },
        "Mandelbrot.data": {" ": "0"},
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.15%",
            "[.] Interpreter": "0.08%",
            "[.] java.lang.Object List.benchmark()": "0.48%",
            "[.] List$Element List.makeList(int)": "0.59%",
            "[.] int List$Element.length()": "0.08%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.17%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.06%",
            "[.] java.lang.Object Sieve.benchmark()": "1.84%",
            "[.] int Sieve.sieve(boolean[], int)": "2.20%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.11%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.49%",
            "clear_page_rep": "0.06%",
            "[.] java.lang.Object Bounce.benchmark()": "5.94%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "31.61%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.68%",
            "[.] StubRoutines (2)": "8.65%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.77%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.38%"
        }
    }
}