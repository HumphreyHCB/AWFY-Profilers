{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.008299099547699074",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.004149549773849537",
            "java.lang.StringConcatHelper.mix(JJ)J": "0.004149549773849537",
            "java.lang.String.regionMatches(ZILjava/lang/String;II)Z": "0.004149549773849537",
            "Mandelbrot.mandelbrot(I)I": "99.9585045022615",
            "java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls()V": "0.004149549773849537",
            "java.lang.invoke.MethodType.checkPtypes([Ljava/lang/Class;)I": "0.004149549773849537",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.004149549773849537",
            "java.io.PrintStream.println(Ljava/lang/String;)V": "0.004149549773849537",
            "java.lang.invoke.LambdaForm$Name.useCount(Ljava/lang/invoke/LambdaForm$Name;)I": "0.004149549773849537"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4214572305202468",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.0033716578441619744",
            "Queens.benchmark()Ljava/lang/Object;": "0.03708823628578172",
            "jdk.internal.org.objectweb.asm.MethodWriter.endCurrentBasicBlockWithNoSuccessor()V": "0.0033716578441619744",
            "Queens.placeQueen(I)Z": "8.597727502613035",
            "Queens.getRowColumn(II)Z": "71.27684682558414",
            "java.util.Arrays.fill([ZZ)V": "0.49226204524764827",
            "Queens.setRowColumn(IIZ)V": "18.429481776189352",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.026973262753295795",
            "Queens.queens()Z": "0.6777032266765568"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0070212392487274",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.3335088643145515",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.3550991750043881",
            "Bounce$Ball.bounce()Z": "85.37826926452519",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.0070212392487274",
            "Bounce.benchmark()Ljava/lang/Object;": "8.186764964016149",
            "som.Random.next()I": "1.298929261014569",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.042127435492364404",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.0175530981218185",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.3175355450236967"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.09401908851189",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.368375609642264",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.080017735047721",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "12.512542879144984",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.471238886425688",
            "havlak.HavlakLoopFinder.findLoops()V": "6.610972393998087",
            "som.Vector.<init>(I)V": "2.041864046857863",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.247077217464355",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.4012321191048467",
            "som.Vector.append(Ljava/lang/Object;)V": "3.687023078897627"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.758877187487766",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "8.080491719844968",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.732646909133618",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.2432760443174256",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.641467329601065",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.205731511568729",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.281838468464942",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.532396351250832",
            "cd.Vector2D.compareNumbers(DD)I": "3.0340993618603926",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.045178718239832"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.95662644799268",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.007224911494834188",
            "List$Element.getNext()LList$Element;": "9.558557907665632",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.1854393950340775",
            "java.lang.invoke.LambdaForm.internArgument(Ljava/lang/invoke/LambdaForm$Name;)Ljava/lang/invoke/LambdaForm$Name;": "0.002408303831611396",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.1602485369554225",
            "List$Element.length()I": "0.07465741877995329",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.007224911494834188",
            "List$Element.setNext(LList$Element;)V": "0.0602075957902849",
            "List.makeList(I)LList$Element;": "0.9585049249813357"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "4.494963757883837",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.0688129530264523",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "32.622611315071076",
            "deltablue.ScaleConstraint.execute()V": "9.24879977407512",
            "deltablue.EqualityConstraint.execute()V": "2.2027675797797235",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "2.4428127647557187",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "11.715146380495153",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.518497599548151",
            "som.Vector.<init>(I)V": "3.1111738680222163",
            "som.Vector.append(Ljava/lang/Object;)V": "3.605384542972795"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.5248533497993207",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.66687249150972",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7564062982401976",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.0719357826489655",
            "Storage.benchmark()Ljava/lang/Object;": "0.03473294226613152",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.280642173510344",
            "som.Random.next()I": "13.530410620561902",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.2233714109292992",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.019296079036739733",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.8181537511577647"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "Run.measure(LBenchmark;)V": "0.007373815580872322",
            "Sieve.benchmark()Ljava/lang/Object;": "3.638977989160491",
            "java.io.FileOutputStream.write([BII)V": "0.003686907790436161",
            "java.util.Arrays.fill([ZZ)V": "5.401319912988976",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.011060723371308484",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.003686907790436161",
            "Sieve.sieve([ZI)I": "90.84909486413744",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.014747631161744644",
            "java.io.OutputStreamWriter.flushBuffer()V": "0.003686907790436161",
            "java.io.PrintStream.writeln(Ljava/lang/String;)V": "0.003686907790436161"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.06910372469076083",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.010365558703614126",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.46251122935526",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.0391127081749705",
            "Towers.moveDisks(III)V": "3.310068412687444",
            "Towers$TowersDisk.getSize()I": "12.196807407919287",
            "Towers.benchmark()Ljava/lang/Object;": "0.051827793518070625",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "39.32347453527745",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "19.42160182433833",
            "Towers.moveTopDisk(II)V": "4.063299011816737"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.5439594754007355",
            "nbody.Body.getMass()D": "0.6141142183054611",
            "nbody.Body.setVX(D)V": "29.737700367774615",
            "nbody.NBodySystem.advance(D)V": "40.861147734369574",
            "nbody.Body.setZ(D)V": "0.3781833321768094",
            "nbody.Body.getY()D": "0.7147318020956214",
            "nbody.Body.getZ()D": "8.601068628131289",
            "nbody.Body.setVZ(D)V": "8.78148636458261",
            "nbody.Body.setVY(D)V": "6.057872458538616",
            "nbody.Body.setX(D)V": "1.498855041287905"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.787208784686156",
            "richards.Scheduler.schedule()V": "10.706336251669388",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.518326161151506",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.1285057130138005",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.850719691348865",
            "Richards.benchmark()Ljava/lang/Object;": "8.777266656774003",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.006529158628877",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.9545926695355393",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.8820299747737055",
            "richards.RBObject.<init>()V": "10.899243211158925"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.528225806451613",
            "json.JsonPureStringParser.isDigit()Z": "2.8276209677419355",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.371975806451613",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "23.180443548387096",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.529233870967742",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.100806451612902",
            "java.lang.String.<init>([BB)V": "5.811491935483871",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.148185483870968",
            "json.JsonPureStringParser.read()V": "12.348790322580644",
            "java.util.Arrays.copyOfRange([BII)[B": "5.897177419354839"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0036141530232390038",
            "java.security.CodeSource.<init>(Ljava/net/URL;[Ljava/security/CodeSigner;)V": "0.0036141530232390038",
            "Permute.swap(II)V": "44.31313021793343",
            "java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(Ljava/lang/Object;JLjava/lang/Object;)J": "0.0036141530232390038",
            "java.nio.CharBuffer.<init>(IIII[CILjdk/internal/access/foreign/MemorySegmentProxy;)V": "0.0036141530232390038",
            "Permute.permute(I)V": "55.55676027322997",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010842459069717012",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.0036141530232390038",
            "Permute.benchmark()Ljava/lang/Object;": "0.06505475441830207",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.0036141530232390038"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.9",
            "richards.Packet::setLink": "2.1",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "2.9",
            "AGCT::Unknown Java[ERR=-5]": "45.9",
            "richards.HandlerTaskDataRecord::workInAdd": "2.4",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.8",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.nio.Buffer::position": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.Math::max": "0.0",
            "Mandelbrot::mandelbrot": "98.4",
            "java.lang.invoke.InvokerBytecodeGenerator::emitReferenceCast": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.3",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.2",
            "List::isShorterThan": "80.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.5",
            "json.JsonPureStringParser::read": "16.4",
            "java.lang.String::<init>": "5.6",
            "java.lang.String::length": "3.0",
            "java.util.Arrays::copyOfRange": "6.8",
            "java.lang.String::equals": "21.7",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.3",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.8",
            "havlak.HavlakLoopFinder::findLoops": "6.0",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "8.0",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "6.5",
            "som.Vector::hasSome": "2.2",
            "som.Vector::forEach": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "51.9",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "AGCT::Unknown Java[ERR=-5]": "6.2"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.9",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "14.0",
            "Queens::setRowColumn": "23.4",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.9",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.6",
            "Storage::buildTreeDepth": "41.3",
            "java.util.Arrays::setAll": "33.3",
            "som.Random::next": "12.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.7",
            "AGCT::Unknown Java[ERR=-5]": "1.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.0"
        },
        "Sieve.hpl": {
            "java.lang.invoke.MethodType::hashCode": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "90.1",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.LambdaForm$MH.0x0000000801008400::invoke": "0.0",
            "java.util.Arrays::fill": "4.9"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "8.9",
            "deltablue.ScaleConstraint::execute": "5.3",
            "deltablue.Planner::newMark": "5.4",
            "deltablue.Planner::addPropagate": "4.7",
            "som.Vector::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "6.5",
            "AGCT::Unknown Java[ERR=-5]": "15.0",
            "deltablue.BinaryConstraint::chooseMethod": "4.1",
            "som.Vector::<init>": "2.6",
            "som.Vector::forEach": "24.5"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.8",
            "Bounce$Ball::bounce": "81.6",
            "java.util.Arrays::setAll": "1.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "3.0",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.5",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.3",
            "nbody.Body::getZ": "8.3",
            "nbody.Body::setVX": "28.8",
            "nbody.Body::setVY": "6.0",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "nbody.NBodySystem::advance": "40.1"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.6",
            "Towers::popDiskFrom": "23.0",
            "Towers::moveDisks": "3.6",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "7.0",
            "Towers::pushDisk": "30.6",
            "Towers$TowersDisk::setNext": "14.8",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "Towers::moveTopDisk": "4.8",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "10.9",
            "cd.RedBlackTree::forEach": "5.5",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "7.6",
            "cd.RedBlackTree::treeMinimum": "6.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.8",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "3.4",
            "cd.RedBlackTree::treeInsert": "20.1",
            "cd.CollisionDetector::isInVoxel": "14.6"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Strength.stronger": "13.48%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.63%",
            "deltablue.AbstractConstraint.satisfy": "5.28%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "11.37%",
            "deltablue.Variable.<init>": "4.51%",
            "som.Vector.forEach": "7.02%",
            "deltablue.Planner.addPropagate": "3.25%",
            "itable": "2.82%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "3.72%",
            "deltablue.ScaleConstraint.execute": "6.31%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.79%",
            "som.Random.next": "1.36%",
            "clear_page_rep_[k]": "0.09%",
            "java.util.Arrays.setAll": "1.21%",
            "SpinPause": "0.03%",
            "Bounce.benchmark": "9.05%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Bounce$Ball.<init>": "3.39%",
            "Bounce.lambda$benchmark$0": "0.24%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.02%",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke": "0.01%",
            "LIR_OpVisitState::append(LIR_OprDesc*&,": "0.01%",
            "Mandelbrot.mandelbrot": "99.53%",
            "java.lang.AbstractStringBuilder.append": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "do_user_addr_fault_[k]": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "__tls_get_addr": "0.01%",
            "java.lang.invoke.LambdaFormEditor.makeArgumentCombinationForm": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.53%",
            "som.Random.next": "13.06%",
            "java.util.Arrays.setAll": "36.37%",
            "Storage.lambda$buildTreeDepth$0": "3.27%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.51%",
            "SpinPause": "0.19%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.60%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.20%",
            "Storage.buildTreeDepth": "42.17%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.06%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.11%",
            "Towers.popDiskFrom": "22.96%",
            "Towers.moveDisks": "7.69%",
            "clear_page_rep_[k]": "0.04%",
            "Towers.pushDisk": "35.66%",
            "Towers.moveTopDisk": "4.36%",
            "Towers$TowersDisk.getSize": "10.21%",
            "Towers.buildTowerAt": "0.02%",
            "Towers$TowersDisk.getNext": "3.49%",
            "Towers.benchmark": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.16%",
            "cd.CollisionDetector.isInVoxel": "14.53%",
            "cd.RedBlackTree.forEach": "4.66%",
            "cd.RedBlackTree.put": "6.86%",
            "cd.RedBlackTree.treeInsert": "21.50%",
            "cd.RedBlackTree.findNode": "8.19%",
            "cd.RedBlackTree.treeMinimum": "5.64%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.95%",
            "cd.Vector2D.compareNumbers": "2.44%",
            "cd.RedBlackTree.leftRotate": "2.65%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.87%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.32%",
            "som.Vector.hasSome": "2.61%",
            "som.Vector.append": "3.34%",
            "som.Vector.forEach": "2.27%",
            "som.IdentitySet.lambda$contains$0": "33.17%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "6.68%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.47%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.85%",
            "havlak.HavlakLoopFinder.doDFS": "5.06%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "11.66%",
            "Sieve.benchmark": "2.84%",
            "clear_page_rep_[k]": "0.09%",
            "Sieve.sieve": "84.50%",
            "syscall_enter_from_user_mode_[k]": "0.02%",
            "SpinPause": "0.03%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "__memset_avx2_unaligned_erms": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.57%",
            "Permute.swap": "40.91%",
            "Permute.benchmark": "0.02%",
            "Interpreter": "0.01%",
            "clear_page_rep_[k]": "0.01%",
            "__futex_abstimed_wait_common": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%",
            "Dict::Insert(void*,": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.73%",
            "nbody.Body.getZ": "7.86%",
            "nbody.Body.getY": "0.69%",
            "nbody.Body.setX": "1.34%",
            "nbody.Body.setY": "1.65%",
            "nbody.Body.setZ": "0.54%",
            "nbody.Body.setVX": "29.43%",
            "nbody.Body.setVY": "5.71%",
            "nbody.Body.getMass": "0.49%",
            "nbody.NBodySystem.advance": "41.60%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.76%",
            "List.makeList": "0.71%",
            "clear_page_rep_[k]": "0.06%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.03%",
            "SpinPause": "0.01%",
            "List.tail": "5.12%",
            "List$Element.length": "0.07%",
            "List.isShorterThan": "83.70%",
            "List$Element.<init>": "0.12%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.22%",
            "java.lang.String.length": "3.41%",
            "java.lang.String.<init>": "5.97%",
            "json.JsonPureStringParser.isWhiteSpace": "2.27%",
            "java.lang.String.isLatin1": "2.74%",
            "json.JsonPureStringParser.readStringInternal": "9.27%",
            "java.util.Arrays.copyOfRange": "7.61%",
            "java.lang.String.equals": "21.59%",
            "json.JsonPureStringParser.read": "15.38%",
            "json.JsonPureStringParser.readValue": "2.34%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.65%",
            "Queens.getRowColumn": "57.32%",
            "Queens.setRowColumn": "25.91%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.07%",
            "Queens.queens": "0.58%",
            "Queens.placeQueen": "14.85%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.05%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.24%",
            "Richards.benchmark": "4.31%",
            "richards.Packet.<init>": "7.16%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.80%",
            "itable": "37.14%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.57%",
            "richards.TaskControlBlock.<init>": "3.42%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.88%",
            "richards.RBObject.<init>": "6.38%",
            "richards.RBObject.append": "2.68%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.6",
            "Towers.moveDisks": "93.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "4.5",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.6",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.9",
            "deltablue.AbstractConstraint.satisfy": "15.0",
            "deltablue.Planner.removePropagateFrom": "9.2",
            "som.Vector.<init>": "26.4",
            "deltablue.Variable.<init>": "6.0",
            "som.Vector.forEach": "7.4",
            "deltablue.Planner.addPropagate": "1.6",
            "deltablue.Planner.constraintsConsuming": "4.2",
            "deltablue.AbstractConstraint.<init>": "4.2",
            "deltablue.Planner.addConstraintsConsumingTo": "17.5"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Vector.hasSome": "3.3",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.1",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "9.0",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.8",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.3"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "13.8",
            "richards.Scheduler.createWorker": "0.1",
            "richards.Packet.<init>": "0.2",
            "richards.Scheduler.lambda$createWorker$3": "0.0",
            "richards.Scheduler.queuePacket": "0.0",
            "richards.TaskControlBlock.runTask": "84.8",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "Run.runBenchmark": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "52.7",
            "Bounce$Ball.<init>": "46.4",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "8.0",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.5",
            "cd.RedBlackTree$InsertResult.<init>": "15.0",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "nbody.Body.getVZ": "0.1",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.5",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.9",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.6",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.4",
            "List$Element.length": "0.1",
            "List.isShorterThan": "72.1",
            "List$Element.<init>": "24.4",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "Queens.getRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "20.2",
            "Queens.placeQueen": "79.0",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "21.9968618665481",
            "java.lang.String.<init>(byte[], byte) String.java": "5.694814384109246",
            "json.JsonPureStringParser.isWhiteSpace()": "2.774725627092268",
            "json.JsonPureStringParser.read()": "19.65395024305571",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "5.609306660624123",
            "java.lang.String.length() String.java": "2.3813900990606984",
            "java.lang.String.substring(int, int) String.java": "9.179254116128043",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.417795012334491",
            "json.JsonPureStringParser.readValue()": "3.9034275770959024",
            "json.JsonPureStringParser.readStringInternal()": "2.9200887570169787"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.867462405612955",
            "som.Vector.hasSome(TestInterface)": "2.7166356499604274",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.113499754005434",
            "havlak.HavlakLoopFinder.findLoops()": "10.798091937795462",
            "som.Vector.append(Object)": "5.482470213266595",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.1283877730004925",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.206571263556441",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.184046717576847",
            "som.Vector.removeAll()": "2.526257246144303",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.23502106996941"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.800206872030252",
            "Queens.getRowColumn(int, int)": "59.200956783139915",
            "Queens.queens()": "0.9697126418204737",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.21010440572776928",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.14545689627307104",
            "Queens.setRowColumn(int, int, boolean)": "24.679186734331054",
            "jdk.internal.org.objectweb.asm.SymbolTable.addType(String) SymbolTable.java": "0.35556130200084035",
            "java.util.Arrays.equals(Object[], Object[]) Arrays.java": "0.40404693409186404",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.30707566990981666",
            "javax.management.openmbean.SimpleType.isValue(Object) SimpleType.java": "0.14545689627307104"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.9166453461597506",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9042258463022932",
            "richards.Scheduler$$Lambda$15.0x00000008000c7978.apply(Packet, RBObject)": "3.263865030226388",
            "richards.TaskControlBlock.runTask()": "37.94928399646202",
            "richards.Scheduler.<init>()": "1.8896060701310664",
            "richards.Scheduler.schedule()": "2.5621157740075002",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.7470632524616048",
            "richards.RBObject.append(Packet, Packet)": "2.8106519689183562",
            "Richards.benchmark()": "27.784884613416573",
            "richards.Scheduler$$Lambda$17.0x00000008000c7ba0.apply(Packet, RBObject)": "4.173946096885257"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$10.0x00000008000c2a98.<init>(Storage, int, Random)": "0.16103893116160833",
            "com.yourkit.probes.builtin.FilesLW.<clinit>() a": "0.132281979168464",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.569387649464258",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.2243042255465259",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.6269015534505467",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.9719849773682789",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.76733900420427",
            "som.Random.next()": "14.522260756537895",
            "Storage.buildTreeDepth(int, Random)": "37.04470555756855",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.6628937545651663"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.432953422809085",
            "Towers.popDiskFrom(int)": "32.24018698344618",
            "Towers.moveDisks(int, int, int)": "11.264788800269871",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2530059516638153",
            "Towers$TowersDisk.getSize()": "1.4216524903014383",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.10843112214163513",
            "Towers.moveTopDisk(int, int)": "5.132406448037397",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.1325269270619985",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "16.361051540926724",
            "com.yourkit.probes.Table.createRow() a": "0.10843112214163513"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType(String, String) SymbolTable.java": "0.11166821141025784",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.15633549597436097",
            "Benchmark.innerBenchmarkLoop(int)": "0.14516867483333518",
            "java.lang.invoke.LambdaForm.useCount(LambdaForm$Name) LambdaForm.java": "0.08933456912820627",
            "Harness.main(String[])": "0.0011166821141025784",
            "Permute.permute(int)": "57.68779801453919",
            "com.yourkit.probes.Table.createRow() a": "0.2121696016794899",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.1340018536923094",
            "Permute.benchmark()": "0.5471742359102634",
            "Permute.swap(int, int)": "40.91523266071847"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "9.757860498735091",
            "som.Vector.forEach(ForEachInterface)": "24.239764572254636",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "5.8856936341576755",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "5.137074707006041",
            "deltablue.Planner.incrementalAdd(AbstractConstraint)": "3.252620166245031",
            "som.Vector.<init>(int)": "3.020290154370386",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.1942278899272036",
            "som.Vector.append(Object)": "3.8721668645774177",
            "deltablue.Variable.addConstraint(AbstractConstraint)": "10.996953895399866",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.6791780680468795"
        },
        "YourKit_List.txt": {
            "com.yourkit.probes.builtin.FilesLW.<clinit>() a": "0.2153895859135211",
            "List.tail(List$Element, List$Element, List$Element)": "4.348177265629206",
            "List$Element.<init>(Object)": "0.1211566420763556",
            "List.makeList(int)": "1.1846427225243659",
            "List$Element.getNext()": "24.43325615206505",
            "List$Element.length()": "0.1211566420763556",
            "List.isShorterThan(List$Element, List$Element)": "69.0189004361639",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.17500403855473587",
            "jdk.internal.org.objectweb.asm.FieldWriter.computeFieldInfoSize() FieldWriter.java": "0.09423294383716546",
            "java.lang.StringConcatHelper.newString(byte[], long) StringConcatHelper.java": "0.1211566420763556"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.532251030485489",
            "nbody.Body.getZ()": "5.191114612495252",
            "nbody.Body.setX(double)": "0.9706962283527706",
            "nbody.Body.getX()": "0.8300156155480213",
            "nbody.Body.setZ(double)": "0.40797377713377314",
            "nbody.NBodySystem.advance(double)": "45.214748955446446",
            "nbody.Body.setVY(double)": "5.7819731862751995",
            "nbody.Body.setVZ(double)": "9.608485854564382",
            "nbody.Body.setVX(double)": "26.50422745241478",
            "nbody.Body.setY(double)": "1.0973087798770451"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.50138405848533",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2572929235573852",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "Run.runBenchmark()": "8.872169777840869E-4",
            "java.lang.StringConcatHelper.prepend(long, byte[], long) StringConcatHelper.java": "0.07984952800056781",
            "java.lang.System.nanoTime() System.java (native)": "0.07984952800056781",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.07984952800056781",
            "sun.nio.cs.StreamEncoder.write(char[], int, int) StreamEncoder.java": "0.0",
            "Run.measure(Benchmark)": "8.872169777840869E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.561401484558286",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.46836660128456",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.976385523633706",
            "cd.RedBlackTree.findNode(Comparable)": "8.822737587015883",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.668897350101917",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.0537671628014302",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "3.0844967501249947",
            "cd.RedBlackTree.put(Comparable, Object)": "5.007499711549555",
            "cd.Vector2D.compareNumbers(double, double)": "8.999653859466942",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.830583439098496"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.2437268044092394",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.359718606325818",
            "jdk.internal.org.objectweb.asm.MethodWriter.<init>(SymbolTable, int, String, String, String, String[], int) MethodWriter.java": "0.07754943776657618",
            "Sieve.benchmark()": "86.98831219187944",
            "java.nio.charset.CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean) CharsetEncoder.java": "0.09970641998559794",
            "java.nio.Buffer.limit(int) Buffer.java": "0.09970641998559794",
            "java.lang.String.substring(int, int) String.java": "0.2437268044092394",
            "com.yourkit.probes.Table.createRow() a": "0.21049133108070675",
            "Sieve.sieve(boolean[], int)": "9.228383094222565",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.15509887553315235"
        },
        "YourKit_Bounce.txt": {
            "Bounce.benchmark()": "69.8423047145593",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.16299254309115355",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.14261847520475934",
            "Bounce.lambda$benchmark$0(Random, int)": "0.7945886475693735",
            "som.Random.next()": "0.48897762927346067",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.24448881463673033",
            "com.yourkit.probes.ResourceCounter.open(Object, String) a": "0.22411474675033613",
            "Bounce$Ball.bounce()": "26.66965486329",
            "Bounce$Ball.<init>(Random)": "0.9779552585469213",
            "jdk.internal.org.objectweb.asm.SymbolTable.put(SymbolTable$Entry) SymbolTable.java": "0.12224440731836517"
        }
    },
    "Runtimes": {
        "NBody.data": 104.799,
        "JavaFlightRecorder_Queens.jfr": 108.1255,
        "rebench_test_Async_Bounce.txt": 103.4765,
        "JavaFlightRecorder_Sieve.jfr": 92.63550000000001,
        "Permute.hpl": 104.856,
        "CD.data": 95.55449999999999,
        "DeltaBlue.hpl": 98.975,
        "List.data": 152.0095,
        "Bounce.hpl": 102.0375,
        "Towers.hpl": 109.32900000000001,
        "NBody.hpl": 104.2685,
        "JavaFlightRecorder_Json.jfr": 82.38900000000001,
        "Sieve.data": 110.696,
        "Richards.hpl": 91.537,
        "JavaFlightRecorder_Havlak.jfr": 162.712,
        "JavaFlightRecorder_CD.jfr": 97.2955,
        "JavaFlightRecorder_DeltaBlue.jfr": 91.7895,
        "rebench_test_Async_Mandelbrot.txt": 84.61449999999999,
        "JavaFlightRecorder_Towers.jfr": 110.3055,
        "rebench_test_Async_CD.txt": 96.8415,
        "Mandelbrot.data": 86.322,
        "rebench_test_Async_Permute.txt": 104.778,
        "rebench_test_Async_NBody.txt": 102.822,
        "JavaFlightRecorder_Permute.jfr": 106.44999999999999,
        "JavaFlightRecorder_Bounce.jfr": 103.634,
        "Havlak.data": 162.5365,
        "Mandelbrot.hpl": 85.4245,
        "List.hpl": 148.581,
        "rebench_test_Async_Towers.txt": 109.90100000000001,
        "JavaFlightRecorder_Storage.jfr": 97.378,
        "Queens.hpl": 106.013,
        "JavaFlightRecorder_NBody.jfr": 104.571,
        "Storage.data": 117.5315,
        "rebench_test_Async_Sieve.txt": 114.179,
        "JavaFlightRecorder_Richards.jfr": 91.76750000000001,
        "Storage.hpl": 107.4885,
        "rebench_test_Async_List.txt": 148.82850000000002,
        "rebench_test_Async_Richards.txt": 93.3925,
        "Bounce.data": 102.267,
        "Permute.data": 105.404,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.17750000000001,
        "rebench_test_Async_DeltaBlue.txt": 82.9155,
        "JavaFlightRecorder_List.jfr": 155.0815,
        "DeltaBlue.data": 90.66499999999999,
        "rebench_test_Async_Storage.txt": 106.244,
        "Queens.data": 112.55449999999999,
        "Json.hpl": 79.881,
        "Towers.data": 109.424,
        "Havlak.hpl": 159.0915,
        "Richards.data": 98.4615,
        "rebench_test_Async_Havlak.txt": 157.75799999999998,
        "Sieve.hpl": 104.436,
        "CD.hpl": 95.0485,
        "rebench_test_Async_Queens.txt": 106.7405,
        "rebench_test_Async_Json.txt": 82.363,
        "Json.data": 81.9525
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.12%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.32%",
            "[.] void nbody.NBodySystem.advance(double)": "0.02%",
            "3070238     [.] flush_icache_stub": "0.02%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.06%",
            "[.] Interpreter": "0.10%",
            "asm_sysvec_apic_timer_interrupt": "0.02%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.16%",
            "[.] void Permute.permute(int)": "99.03%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.HavlakLoopFinder.stepD(int, som.Vector)": "5.87%",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "33.48%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.29%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.67%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "20.76%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "5.83%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.59%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.74%",
            "[.] boolean deltablue.Planner.addPropagate(deltablue.AbstractConstraint, int)": "9.28%",
            "[.] void deltablue.Planner.chainTest(int)": "28.94%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.84%",
            "[.] Interpreter": "0.10%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.17%",
            "[.] boolean Queens.placeQueen(int)": "96.19%",
            "clear_page_rep": "0.07%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.05%",
            "[.] Interpreter": "0.13%",
            "[.] void Towers.moveDisks(int, int, int)": "99.00%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "clear_page_rep": "0.03%"
        },
        "Richards.data": {
            "[.] java.lang.Object Richards.benchmark()": "6.42%",
            " ": "0",
            "[.] vtable chunks": "35.06%",
            "[.] boolean richards.Scheduler.start()": "24.15%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.40%",
            "[.] void richards.Scheduler.schedule()": "8.40%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.32%",
            "x86_pmu_disable_all": "0.14%",
            "[.] Interpreter": "0.11%",
            "clear_page_rep": "0.09%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.62%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "23.69%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.34%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.10%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.33%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.25%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.17%",
            "[.] Interpreter": "0.18%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.17%",
            "[.] Interpreter": "0.09%",
            "[.] java.lang.Object List.benchmark()": "0.50%",
            "[.] List$Element List.makeList(int)": "0.65%",
            "[.] int List$Element.length()": "0.07%"
        },
        "Sieve.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.10%",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "93.80%",
            "[.] java.lang.Object Sieve.benchmark()": "1.97%",
            "[.] int Sieve.sieve(boolean[], int)": "2.40%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.16%",
            "[.] Interpreter": "0.15%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.65%",
            "clear_page_rep": "0.05%",
            "[.] java.lang.Object Bounce.benchmark()": "5.69%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.28%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.77%",
            "[.] StubRoutines (2)": "8.06%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.66%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.25%"
        }
    }
}