{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.0041703156928979525",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.0041703156928979525",
            "Run.measure(LBenchmark;)V": "0.0041703156928979525",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.0041703156928979525",
            "jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;)J": "0.0041703156928979525",
            "Mandelbrot.mandelbrot(I)I": "99.94578589599233",
            "java.lang.System.nanoTime()J": "0.0041703156928979525",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.0041703156928979525",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.0041703156928979525",
            "jdk.internal.org.objectweb.asm.MethodWriter.putMethodInfo(Ljdk/internal/org/objectweb/asm/ByteVector;)V": "0.008340631385795905"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.3105897901866843",
            "Queens.benchmark()Ljava/lang/Object;": "0.046258053857591276",
            "Queens.placeQueen(I)Z": "7.933256236576904",
            "Queens.getRowColumn(II)Z": "70.7616058152982",
            "jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;)J": "0.0066082934082273255",
            "java.util.Arrays.fill([ZZ)V": "0.4890137122088221",
            "Queens.setRowColumn(IIZ)V": "19.65636874277218",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.013216586816454651",
            "Queens.queens()Z": "0.7236081282008922",
            "java.lang.StringConcatHelper.newArrayWithSuffix(Ljava/lang/String;J)[B": "0.0066082934082273255"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "jdk.jfr.internal.PlatformRecorder.periodicTask()V": "0.007019021548396153",
            "Bounce.verifyResult(Ljava/lang/Object;)Z": "0.0035095107741980767",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.32287499122622304",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.3301045834210712",
            "Bounce$Ball.bounce()Z": "85.19337404365831",
            "Bounce.benchmark()Ljava/lang/Object;": "8.454411455043166",
            "som.Random.next()I": "1.466975503614796",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.05264266161297115",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01052853232259423",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.11995507826209"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.2265991371224905",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.0908835115363",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.136278371787657",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.63083849184018",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "16.357156255861938",
            "som.Dictionary.atPut(Lsom/Dictionary$CustomHash;Ljava/lang/Object;)V": "2.4479459763646596",
            "havlak.HavlakLoopFinder.findLoops()V": "4.773963609078972",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.2581129244044265",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.7386981804539485",
            "som.Vector.append(Ljava/lang/Object;)V": "2.0422997561433127"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.35977484131103",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.597109665056489",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.7186714040480657",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.463172182522256",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.203840472673559",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "16.308036248952053",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.070142520659507",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.2178530081041155",
            "cd.Vector2D.compareNumbers(DD)I": "3.744660465487644",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.10663100323366"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.43070026355329",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.007389344565137072",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.007389344565137072",
            "List$Element.getNext()LList$Element;": "10.165275006773566",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.16502869528806127",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.1700041872952536",
            "List$Element.length()I": "0.06157787137614227",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.014778689130274143",
            "List$Element.setNext(LList$Element;)V": "0.03448360797063967",
            "List.makeList(I)LList$Element;": "0.9187418409320426"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "3.929589116646751",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.116095229340932",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "35.127309495358034",
            "deltablue.ScaleConstraint.execute()V": "10.929313356006986",
            "deltablue.EqualityConstraint.execute()V": "2.8127585255997793",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "10.0882434047247",
            "som.Vector.<init>(I)V": "6.632043386340657",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.47191837485063",
            "som.Vector.append(Ljava/lang/Object;)V": "2.435885651254711",
            "deltablue.ScaleConstraint.recalculate()V": "1.7097159665410424"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.5212211466865228",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.39463886820551",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.6664184661206255",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.272524199553239",
            "Storage.benchmark()Ljava/lang/Object;": "0.011169024571854059",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.31645569620253",
            "som.Random.next()I": "12.695457930007446",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.4110201042442294",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.029784065524944156",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6217423678332092"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.0064403941521221095",
            "java.lang.invoke.Invokers.basicInvoker()Ljava/lang/invoke/MethodHandle;": "0.0032201970760610548",
            "Sieve.benchmark()Ljava/lang/Object;": "3.1525729374637725",
            "java.lang.invoke.StringConcatFactory.parseRecipe(Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;": "0.0032201970760610548",
            "java.util.Arrays.fill([ZZ)V": "6.179558188961164",
            "Sieve.sieve([ZI)I": "90.58736394667353",
            "jdk.jfr.internal.EventWriter.putStringValue(Ljava/lang/String;)V": "0.0032201970760610548",
            "java.lang.invoke.LambdaFormBuffer.startEdit()V": "0.0032201970760610548",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.016100985380305275",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.0032201970760610548"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.04186874149541188",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.845190328320715",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.267122570740728",
            "Towers.moveDisks(III)V": "3.9845085656466974",
            "Towers$TowersDisk.getSize()I": "11.908167893653395",
            "Towers.benchmark()Ljava/lang/Object;": "0.03837967970412756",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01046718537385297",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.055196957538115",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.641289557238057",
            "Towers.moveTopDisk(II)V": "4.1798960259586195"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.7667722826835652",
            "nbody.Body.getMass()D": "0.6371401019424163",
            "nbody.Body.setVX(D)V": "30.276208844193416",
            "nbody.NBodySystem.advance(D)V": "40.7563025210084",
            "nbody.Body.setZ(D)V": "0.35817605730816915",
            "nbody.Body.getY()D": "0.8300041328006612",
            "nbody.Body.getZ()D": "8.300041328006612",
            "nbody.Body.setVZ(D)V": "8.472241355558618",
            "nbody.Body.setVY(D)V": "5.930568948891032",
            "nbody.Body.setX(D)V": "1.4361482297837167"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.976951887064247",
            "richards.Scheduler.schedule()V": "10.83261307980409",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.108614232209737",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.906078939786805",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.946989340247767",
            "Richards.benchmark()Ljava/lang/Object;": "8.995966580236242",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.213483146067415",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.5724575050417746",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.193027945836935",
            "richards.RBObject.<init>()V": "11.380005762028233"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.591728733829871",
            "json.JsonPureStringParser.isDigit()Z": "2.9449235593884753",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.042924343394747",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.02450019600157",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.443943551548412",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.67718541748334",
            "java.lang.String.<init>([BB)V": "4.2385339082712665",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.557036456291651",
            "json.JsonPureStringParser.read()V": "15.636025088200705",
            "java.util.Arrays.copyOfRange([BII)[B": "5.507644061152489"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "java.lang.StringConcatHelper.checkOverflow(J)J": "0.003651500766815161",
            "Permute.swap(II)V": "44.380340319871465",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.003651500766815161",
            "java.lang.invoke.InvokerBytecodeGenerator.lookupPregenerated(Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.003651500766815161",
            "java.lang.invoke.LambdaForm$MH+0x000000080100ac00.2032188048.invoke(Ljava/lang/Object;J)Ljava/lang/Object;": "0.007303001533630322",
            "jdk.internal.misc.VM.isSystemDomainLoader(Ljava/lang/ClassLoader;)Z": "0.003651500766815161",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.003651500766815161",
            "Permute.permute(I)V": "55.528372160958156",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010954502300445482",
            "Permute.benchmark()Ljava/lang/Object;": "0.03651500766815161"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.5",
            "richards.Packet::setLink": "2.2",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.4",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "3.2",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.lang.Long$LongCache::<clinit>": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.LambdaForm$Name::isParam": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "java.lang.ClassLoader::findBootstrapClass": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "96.3",
            "Run::measure": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.3",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.2",
            "List::isShorterThan": "82.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.3",
            "json.JsonPureStringParser::read": "15.1",
            "java.lang.String::<init>": "5.7",
            "java.lang.String::length": "3.4",
            "java.util.Arrays::copyOfRange": "7.8",
            "java.lang.String::equals": "22.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "10.0",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "9.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.1",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.4",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.6",
            "havlak.HavlakLoopFinder::doDFS": "5.6",
            "som.Vector::hasSome": "2.1",
            "som.Vector::forEach": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "39.8",
            "Permute::permute": "51.1",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "6.3"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "55.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "13.0",
            "Queens::setRowColumn": "25.7",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.1",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.4",
            "java.util.Arrays::setAll": "34.6",
            "som.Random::next": "13.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "1.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.3"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "87.9",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "7.1",
            "java.lang.Long::stringSize": "0.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "10.0",
            "deltablue.ScaleConstraint::execute": "6.7",
            "deltablue.Planner::addPropagate": "3.4",
            "som.Vector::append": "7.5",
            "AGCT::Unknown not Java[ERR=-3]": "6.5",
            "deltablue.UnaryConstraint::<init>": "13.9",
            "AGCT::Unknown Java[ERR=-5]": "10.6",
            "som.Vector::forEach": "10.2",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.9",
            "som.Dictionary::at": "3.5"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.4",
            "Bounce$Ball::bounce": "82.5",
            "java.util.Arrays::setAll": "1.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "3.3",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.3",
            "nbody.Body::getZ": "7.8",
            "nbody.Body::setVX": "27.9",
            "nbody.Body::setVY": "6.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.3",
            "AGCT::Unknown Java[ERR=-5]": "0.6",
            "nbody.NBodySystem::advance": "41.2"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.4",
            "Towers::popDiskFrom": "20.8",
            "Towers::moveDisks": "3.8",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "Towers::pushDisk": "33.7",
            "Towers$TowersDisk::setNext": "15.2",
            "AGCT::Unknown Java[ERR=-5]": "4.4",
            "Towers::moveTopDisk": "4.3",
            "Towers$TowersDisk::getNext": "3.6"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.4",
            "cd.RedBlackTree::forEach": "4.6",
            "cd.RedBlackTree::put": "7.3",
            "cd.RedBlackTree::findNode": "8.0",
            "cd.RedBlackTree::leftRotate": "2.6",
            "cd.RedBlackTree::treeMinimum": "6.6",
            "AGCT::Unknown not Java[ERR=-3]": "5.3",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.RedBlackTree::treeInsert": "20.2",
            "cd.CollisionDetector::isInVoxel": "14.2"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner.newMark": "6.09%",
            "deltablue.EqualityConstraint.execute": "5.80%",
            "deltablue.BinaryConstraint.chooseMethod": "3.50%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "9.48%",
            "G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask,": "4.03%",
            "vtable": "2.94%",
            "som.Vector.forEach": "22.23%",
            "deltablue.Planner.addPropagate": "4.49%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "2.71%",
            "deltablue.ScaleConstraint.execute": "5.81%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.76%",
            "som.Random.next": "1.37%",
            "clear_page_rep_[k]": "0.12%",
            "java.util.Arrays.setAll": "1.33%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "Bounce.benchmark": "9.19%",
            "_raw_spin_unlock_irqrestore_[k]": "0.06%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.05%",
            "Bounce$Ball.<init>": "3.07%",
            "Bounce.lambda$benchmark$0": "0.27%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.02%",
            "futex_get_value_locked_[k]": "0.00%",
            "Mandelbrot.mandelbrot": "99.52%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "Matcher::match_tree(Node": "0.01%",
            "DataLayout::cell_count()": "0.01%",
            ".annobin__ZN15PerfLongVariant6sampleEv.start": "0.00%",
            "java.io.BufferedOutputStream.flushBuffer": "0.01%",
            "__tls_get_addr": "0.01%",
            "os::elapsed_counter()": "0.00%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.49%",
            "som.Random.next": "13.84%",
            "java.util.Arrays.setAll": "35.54%",
            "Storage.lambda$buildTreeDepth$0": "3.06%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.52%",
            "SpinPause": "0.27%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.46%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.28%",
            "Storage.buildTreeDepth": "42.38%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "0.93%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.69%",
            "Towers.popDiskFrom": "24.20%",
            "Towers.moveDisks": "7.48%",
            "clear_page_rep_[k]": "0.04%",
            "Towers.pushDisk": "33.26%",
            "Towers.moveTopDisk": "5.09%",
            "Towers$TowersDisk.getSize": "11.05%",
            "Towers.buildTowerAt": "0.03%",
            "Towers$TowersDisk.getNext": "3.56%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.22%",
            "cd.CollisionDetector.isInVoxel": "14.36%",
            "cd.RedBlackTree.forEach": "4.66%",
            "cd.RedBlackTree.put": "6.99%",
            "cd.RedBlackTree.treeInsert": "21.04%",
            "cd.RedBlackTree.findNode": "8.28%",
            "cd.RedBlackTree.treeMinimum": "6.58%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.97%",
            "cd.Vector2D.compareNumbers": "2.69%",
            "cd.RedBlackTree.leftRotate": "2.19%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.66%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.75%",
            "som.Vector.hasSome": "2.52%",
            "som.Vector.append": "4.13%",
            "som.Vector.forEach": "2.08%",
            "som.IdentitySet.lambda$contains$0": "32.59%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.13%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.19%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.64%",
            "havlak.HavlakLoopFinder.doDFS": "6.18%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.05%",
            "Sieve.benchmark": "3.15%",
            "Interpreter": "0.03%",
            "clear_page_rep_[k]": "0.10%",
            "Sieve.sieve": "90.73%",
            "SpinPause": "0.04%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.03%",
            "__tls_get_addr": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.89%",
            "Permute.swap": "40.64%",
            "Permute.benchmark": "0.03%",
            "Interpreter": "0.01%",
            "IntervalWalker::append_to_unhandled(Interval**,": "0.01%",
            "vmSymbols::find_sid(Symbol": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "__tls_get_addr": "0.01%",
            "Node::is_block_proj()": "0.01%",
            "futex_wake_[k]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.07%",
            "nbody.Body.getZ": "8.15%",
            "nbody.Body.getY": "0.78%",
            "nbody.Body.setX": "1.16%",
            "nbody.Body.setY": "1.75%",
            "nbody.Body.setVX": "28.50%",
            "nbody.Body.setVY": "5.86%",
            "nbody.Body.getMass": "0.48%",
            "nbody.Body.getVZ": "0.42%",
            "nbody.NBodySystem.advance": "42.46%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.72%",
            "List.makeList": "0.70%",
            "clear_page_rep_[k]": "0.04%",
            "List$Element.setNext": "0.03%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "4.86%",
            "List$Element.length": "0.06%",
            "List.isShorterThan": "83.99%",
            "List$Element.<init>": "0.16%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.25%",
            "java.lang.String.length": "3.36%",
            "java.lang.String.<init>": "3.98%",
            "json.JsonPureStringParser.readArray": "2.63%",
            "java.lang.String.isLatin1": "2.85%",
            "json.JsonPureStringParser.readStringInternal": "8.64%",
            "java.util.Arrays.copyOfRange": "7.52%",
            "java.lang.String.equals": "20.33%",
            "json.JsonPureStringParser.read": "15.56%",
            "json.JsonPureStringParser.readValue": "3.15%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.74%",
            "Queens.getRowColumn": "57.09%",
            "Queens.setRowColumn": "26.09%",
            "clear_page_rep_[k]": "0.08%",
            "Queens.queens": "0.65%",
            "Queens.placeQueen": "14.84%",
            "[no_Java_frame]": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "__tls_get_addr": "0.01%",
            "Queens.benchmark": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.83%",
            "Richards.benchmark": "5.01%",
            "richards.Packet.<init>": "6.87%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.90%",
            "itable": "37.27%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.32%",
            "richards.TaskControlBlock.<init>": "3.16%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.35%",
            "richards.RBObject.<init>": "5.82%",
            "richards.RBObject.append": "2.74%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.3",
            "Towers.moveDisks": "94.2",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "7.7",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "90.8",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.6",
            "deltablue.AbstractConstraint.satisfy": "10.4",
            "deltablue.Planner.removePropagateFrom": "8.4",
            "som.Vector.<init>": "31.5",
            "deltablue.Variable.<init>": "5.2",
            "som.Vector.forEach": "7.8",
            "deltablue.Planner.constraintsConsuming": "5.4",
            "deltablue.AbstractConstraint.<init>": "3.4",
            "deltablue.Plan.lambda$execute$0": "2.7",
            "deltablue.Planner.addConstraintsConsumingTo": "16.3"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.1",
            "som.Vector.hasSome": "3.3",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.3",
            "java.lang.Integer.valueOf": "8.5",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "14.3",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.Scheduler.createIdler": "0.0",
            "richards.TaskControlBlock.runTask": "84.4",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "Bounce$Ball.bounce": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.0",
            "Bounce.benchmark": "54.0",
            "Bounce$Ball.<init>": "44.1",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "5.7",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "1.9",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "45.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.8",
            "cd.RedBlackTree$Entry.<init>": "4.8",
            "cd.Motion.<init>": "1.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.4",
            "nbody.NBodySystem.advance": "98.9",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "1.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "75.7",
            "List$Element.<init>": "21.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.6",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.1",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.3",
            "Queens.getRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "26.7",
            "Queens.placeQueen": "72.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2",
            "java.util.Arrays.fill0": "0.2"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.316735787331602",
            "java.lang.String.<init>(byte[], byte) String.java": "7.053742390287045",
            "json.JsonPureStringParser.isWhiteSpace()": "1.987755767926294",
            "json.JsonPureStringParser.read()": "20.47860693954303",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.4045147385865038",
            "java.lang.String.length() String.java": "3.2113203334964755",
            "java.lang.String.substring(int, int) String.java": "9.586735701467418",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.929239329229025",
            "json.JsonPureStringParser.readStringInternal()": "4.224517657968625",
            "json.JsonPureStringParser.readValue()": "1.8933051698822805"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "4.082890876441893",
            "som.Vector.forEach(ForEachInterface)": "2.1406075186413935",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.2278097898841756",
            "havlak.HavlakLoopFinder.findLoops()": "11.864958492046556",
            "som.Vector.<init>(int)": "2.867077542591192",
            "som.Set.<init>(int)": "1.987553003209834",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "6.57918846615663",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.714510214772133",
            "som.Vector.removeAll()": "2.7248015141618547",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "36.77619765158326"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.337079551094245",
            "Queens.getRowColumn(int, int)": "60.5798632790612",
            "Queens.queens()": "1.4408529849671003",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.linkToTargetMethod(Object, long, Object) LambdaForm$MH": "0.14408529849671003",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.3522085074364023",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.12807582088596448",
            "Queens.setRowColumn(int, int, boolean)": "21.084482013351902",
            "java.lang.System.lineSeparator() System.java": "0.14408529849671003",
            "java.lang.invoke.LambdaForm$Name.internArguments() LambdaForm.java": "0.12807582088596448",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14408529849671003"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.207087810503579",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.830529572205239",
            "richards.TaskControlBlock.runTask()": "37.837046257482285",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.90635010708598",
            "richards.Scheduler.schedule()": "2.5224697504988196",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.510955719489648",
            "richards.RBObject.append(Packet, Packet)": "3.177799337348295",
            "richards.Packet.<init>(Packet, int, int)": "1.5046953083527064",
            "Richards.benchmark()": "28.519650734957626",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.8927675776602169"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.3433036711695757",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1443455705652523",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.17437646789565747",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.84756772073609",
            "som.Random.next()": "14.473246835339573",
            "Storage$$Lambda$12.0x00000008000c2aa0.apply(int)": "0.5885205791478441",
            "java.util.Collections$UnmodifiableCollection.containsAll(Collection) Collections.java": "0.38144852352175074",
            "Storage.buildTreeDepth(int, Random)": "35.71448033087935",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "4.016108026221862",
            "java.lang.Integer.valueOf(int) Integer.java": "0.04904338159565367"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "32.87142263606814",
            "Towers.pushDisk(Towers$TowersDisk, int)": "31.88161399907129",
            "Towers.moveDisks(int, int, int)": "9.128235207859813",
            "Towers.buildTowerAt(int, int)": "0.1221985971601046",
            "Towers$TowersDisk.getSize()": "2.0040569934257153",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.10997873744409414",
            "com.yourkit.probes.builtin.FilesLW$FileStreamsTelemetry$FileOutputStream_write_arrayRange_Probe.onReturn(int) a": "0.10997873744409414",
            "Towers.moveTopDisk(int, int)": "8.78607913581152",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "14.712711098076593",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.15885817630813598"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.ref.PhantomCleanable.<init>(Object, Cleaner) PhantomCleanable.java": "0.06764755623203111",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.10147133434804667",
            "Permute.verifyResult(Object)": "0.10147133434804667",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.06764755623203111",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.1127459270533852",
            "Permute.permute(int)": "56.79012345679012",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.27059022492812446",
            "java.nio.Buffer.limit() Buffer.java": "0.10147133434804667",
            "Permute.benchmark()": "0.3269631884548171",
            "Permute.swap(int, int)": "41.9753086419753"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "3.7312445420625053",
            "som.Vector.forEach(ForEachInterface)": "40.17041996348144",
            "deltablue.EqualityConstraint.execute()": "10.002910899997355",
            "deltablue.Planner.projectionTest(int)": "1.8523909074069176",
            "deltablue.BinaryConstraint.isSatisfied()": "1.8523909074069176",
            "som.Vector.<init>(int)": "6.298129085183521",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.6462727248670253",
            "deltablue.ScaleConstraint.execute()": "1.9847045436502688",
            "som.Vector.append(Object)": "5.345470904231391",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.715949085712775"
        },
        "YourKit_List.txt": {
            "java.lang.Long.valueOf(long) Long.java": "0.13439956992137625",
            "List.tail(List$Element, List$Element, List$Element)": "3.8035078287749475",
            "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm$BasicType, int) InvokerBytecodeGenerator.java": "0.12095961292923861",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.12095961292923861",
            "List.makeList(int)": "0.9139170754653585",
            "sun.invoke.util.VerifyType.isNullConversion(Class, Class, boolean) VerifyType.java": "0.24191922585847722",
            "List$Element.getNext()": "24.393521940729787",
            "List.isShorterThan(List$Element, List$Element)": "69.60553726228075",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.12095961292923861",
            "com.yourkit.probes.Table.createRow() a": "0.12095961292923861"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.394083194391005",
            "nbody.Body.getZ()": "6.27021789007168",
            "nbody.Body.setX(double)": "0.7552762458495432",
            "nbody.Body.getMass()": "0.8407792170777935",
            "nbody.Body.getX()": "0.8122782266683768",
            "nbody.NBodySystem.advance(double)": "41.79670243540963",
            "nbody.Body.setVY(double)": "6.426973337323472",
            "nbody.Body.setVZ(double)": "10.075100109728814",
            "nbody.Body.setVX(double)": "27.118692374560016",
            "nbody.Body.setY(double)": "1.254043578014336"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.42262877812946",
            "sun.nio.fs.LinuxFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.07825814754269417",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.06086744808876213",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.034781398907864074",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.06086744808876213",
            "java.security.Permissions.add(Permission) Permissions.java": "0.06956279781572815",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.12173489617752425",
            "com.yourkit.probes.Table.createRow() a": "0.07825814754269417",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.034781398907864074",
            "java.lang.Class.isInterface() Class.java (native)": "0.034781398907864074"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.0571495927663745",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.563252393590727",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.749363103340759",
            "cd.RedBlackTree.findNode(Comparable)": "7.726412009399454",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.85569252530476",
            "cd.Vector2D.compareTo(Object)": "2.448725065971087",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.311839813836057",
            "cd.RedBlackTree.put(Comparable, Object)": "7.003962067575687",
            "cd.Vector2D.compareNumbers(double, double)": "9.460291869776496",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.441165958158741"
        },
        "YourKit_Sieve.txt": {
            "java.util.ImmutableCollections$ListN.toArray(Object[]) ImmutableCollections.java": "0.21753815504745766",
            "java.lang.String.indexOf(int, int) String.java": "0.02289875316289028",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.8508947687798396",
            "java.nio.file.attribute.FileTime.from(long, TimeUnit) FileTime.java": "0.10304438923300625",
            "Sieve.benchmark()": "87.64497773096255",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.10304438923300625",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.3205825442804639",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.02289875316289028",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.01144937658144514",
            "Sieve.sieve(boolean[], int)": "8.701526201898306"
        },
        "YourKit_Bounce.txt": {
            "jdk.internal.loader.BuiltinClassLoader.getPermissions(CodeSource) BuiltinClassLoader.java": "0.5022019624507456",
            "Bounce.benchmark()": "61.230008498802434",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.17383914084833496",
            "Bounce.lambda$benchmark$0(Random, int)": "1.1396121455613073",
            "som.Random.next()": "0.7339874835818588",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.3090473615081511",
            "com.sun.management.internal.GcInfoCompositeData.<clinit>() GcInfoCompositeData.java": "0.057946380282778334",
            "Bounce$Ball.bounce()": "34.38151896778181",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.07726184037703777",
            "Bounce$Ball.<init>(Random)": "1.3327667465039015"
        }
    },
    "Runtimes": {
        "NBody.data": 105.126,
        "JavaFlightRecorder_Queens.jfr": 110.524,
        "rebench_test_Async_Bounce.txt": 102.45349999999999,
        "JavaFlightRecorder_Sieve.jfr": 110.076,
        "Permute.hpl": 104.31,
        "CD.data": 95.95400000000001,
        "List.data": 152.643,
        "DeltaBlue.hpl": 88.365,
        "NBody.hpl": 102.408,
        "Towers.hpl": 107.481,
        "JavaFlightRecorder_Json.jfr": 84.61949999999999,
        "Bounce.hpl": 100.4925,
        "Sieve.data": 106.21799999999999,
        "Richards.hpl": 89.9015,
        "JavaFlightRecorder_Havlak.jfr": 162.574,
        "JavaFlightRecorder_CD.jfr": 95.644,
        "rebench_test_Async_Mandelbrot.txt": 85.087,
        "JavaFlightRecorder_DeltaBlue.jfr": 92.32,
        "JavaFlightRecorder_Towers.jfr": 109.37,
        "rebench_test_Async_CD.txt": 95.826,
        "Mandelbrot.data": 86.22800000000001,
        "rebench_test_Async_Permute.txt": 106.424,
        "rebench_test_Async_NBody.txt": 102.829,
        "JavaFlightRecorder_Permute.jfr": 105.354,
        "JavaFlightRecorder_Bounce.jfr": 103.724,
        "Havlak.data": 160.127,
        "Mandelbrot.hpl": 86.6305,
        "JavaFlightRecorder_Storage.jfr": 101.23249999999999,
        "List.hpl": 151.6535,
        "rebench_test_Async_Towers.txt": 109.7415,
        "Queens.hpl": 105.305,
        "JavaFlightRecorder_NBody.jfr": 104.7755,
        "Storage.data": 114.2145,
        "rebench_test_Async_Sieve.txt": 103.6225,
        "JavaFlightRecorder_Richards.jfr": 94.301,
        "Storage.hpl": 107.4745,
        "rebench_test_Async_List.txt": 149.7635,
        "rebench_test_Async_Richards.txt": 91.4605,
        "Bounce.data": 103.5695,
        "Permute.data": 105.733,
        "rebench_test_Async_DeltaBlue.txt": 102.0555,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.2135,
        "JavaFlightRecorder_List.jfr": 151.373,
        "DeltaBlue.data": 106.105,
        "Queens.data": 107.893,
        "rebench_test_Async_Storage.txt": 108.2645,
        "Json.hpl": 80.6565,
        "Towers.data": 112.6465,
        "Havlak.hpl": 158.87650000000002,
        "Richards.data": 91.64250000000001,
        "rebench_test_Async_Havlak.txt": 159.9995,
        "Sieve.hpl": 104.0735,
        "CD.hpl": 95.616,
        "Json.data": 80.2825,
        "rebench_test_Async_Json.txt": 81.8325,
        "rebench_test_Async_Queens.txt": 104.81
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.09%",
            "[.] Interpreter": "0.12%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.24%",
            "[.] void nbody.NBodySystem.advance(double)": "0.03%"
        },
        "Permute.data": {
            "ciObjectFactory::get_metadata": "0.01%",
            " ": "0",
            "[.] Interpreter": "0.10%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.16%",
            "[.] void Permute.permute(int)": "0.01%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.HavlakLoopFinder.stepD(int, som.Vector)": "5.31%",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "33.79%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "5.97%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.33%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.10%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "7.97%",
            " ": "0",
            "[.] void deltablue.EqualityConstraint.execute()": "7.26%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "8.59%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "11.32%",
            "[.] void deltablue.Planner.chainTest(int)": "26.13%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.81%",
            "x86_pmu_disable_all": "0.07%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.19%",
            "[.] boolean Queens.placeQueen(int)": "95.93%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.03%",
            "[.] Interpreter": "0.11%",
            "[.] void Towers.moveDisks(int, int, int)": "98.95%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "clear_page_rep": "0.04%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.57%",
            "[.] boolean richards.Scheduler.start()": "23.02%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.76%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.66%",
            "[.] void richards.Scheduler.schedule()": "7.88%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.63%",
            "x86_pmu_disable_all": "0.08%",
            "[.] Interpreter": "0.14%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.56%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "23.75%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.85%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.18%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.12%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.07%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.34%",
            "native_apic_msr_eoi_write": "0.01%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.00%",
            "x86_pmu_disable_all": "0.08%",
            "[.] java.lang.Object List.benchmark()": "0.45%",
            "[.] List$Element List.makeList(int)": "0.64%",
            "[.] int List$Element.length()": "0.08%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.18%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.52%",
            "[.] java.lang.Object Sieve.benchmark()": "1.82%",
            "clear_page_rep": "0.08%",
            "[.] int Sieve.sieve(boolean[], int)": "2.08%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.15%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.05%",
            "clear_page_rep": "0.06%",
            "[.] java.lang.Object Bounce.benchmark()": "6.32%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.89%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.53%",
            "[.] StubRoutines (2)": "8.32%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.76%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.42%"
        }
    }
}