{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.004101722723543888",
            "jdk.jfr.internal.RequestEngine$RequestHook.execute()V": "0.004101722723543888",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.008203445447087777",
            "Run.printResult(J)V": "0.004101722723543888",
            "jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;)J": "0.004101722723543888",
            "Mandelbrot.mandelbrot(I)I": "99.95488105004101",
            "java.lang.invoke.LambdaForm.internArgument(Ljava/lang/invoke/LambdaForm$Name;)Ljava/lang/invoke/LambdaForm$Name;": "0.004101722723543888",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(Ljava/lang/invoke/MemberName;Ljava/lang/invoke/LambdaForm$Name;)V": "0.004101722723543888",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.004101722723543888",
            "jdk.internal.org.objectweb.asm.Frame.push(Ljdk/internal/org/objectweb/asm/SymbolTable;Ljava/lang/String;)V": "0.004101722723543888"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.49111157224873764",
            "Queens.benchmark()Ljava/lang/Object;": "0.03112678979041295",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JJ)J": "0.003458532198934772",
            "Queens.placeQueen(I)Z": "13.723455765373176",
            "Queens.getRowColumn(II)Z": "60.07470429549699",
            "java.util.Arrays.fill([ZZ)V": "0.5429895552327593",
            "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Ljava/lang/Class;)Ljava/lang/String;": "0.006917064397869544",
            "Queens.setRowColumn(IIZ)V": "24.348066680500796",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.024209725392543405",
            "Queens.queens()Z": "0.7262917617763022"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0034680076296167853",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.273972602739726",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.2692907924397434",
            "jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;)J": "0.006936015259233571",
            "Bounce$Ball.bounce()Z": "84.99046297901856",
            "Bounce.benchmark()Ljava/lang/Object;": "8.67348708167158",
            "som.Random.next()I": "1.3767990289578638",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.031212068666551067",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.010404022888850357",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.3223513091728805"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.824270024109296",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "36.710867041700155",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.190374140548264",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.065005804089651",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "15.530404500401822",
            "havlak.SimpleLoop.<init>(Lhavlak/BasicBlock;Z)V": "2.4823644968300744",
            "havlak.HavlakLoopFinder.findLoops()V": "4.759353513706581",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.049468702562729",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.4042325207607824",
            "som.Vector.append(Ljava/lang/Object;)V": "2.3506563085989822"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.359949502919362",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.870443427489348",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.852296039135237",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.3078743885119137",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.028089001104623",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.677765504181787",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.9867445163326485",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.704749881647467",
            "cd.Vector2D.compareNumbers(DD)I": "3.9095786649834303",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.34101309768029"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.90928448713916",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.019357804824932854",
            "List$Element.getNext()LList$Element;": "9.70551939410071",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.1814794202337455",
            "List.benchmark()Ljava/lang/Object;": "0.0048394512062332135",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.01805115299925",
            "List$Element.length()I": "0.10162847533089749",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.012098628015583033",
            "List$Element.setNext(LList$Element;)V": "0.06533259128414838",
            "List.makeList(I)LList$Element;": "0.9509521620248265"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "5.570503238664673",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "6.711509715994021",
            "som.Dictionary.at(Lsom/Dictionary$CustomHash;)Ljava/lang/Object;": "2.760338814150473",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "11.38515196811161",
            "deltablue.ScaleConstraint.execute()V": "8.844045839561534",
            "deltablue.Variable.<init>()V": "9.172894867962132",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "12.99451918285999",
            "deltablue.Planner$$Lambda$84+0x0000000801014668.2039810346.apply(Ljava/lang/Object;)V": "2.0328849028400597",
            "deltablue.Planner.incrementalAdd(Ldeltablue/AbstractConstraint;)V": "13.17887394120578",
            "som.Vector.append(Ljava/lang/Object;)V": "3.851519681116094"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.540392371852606",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.2116536789756",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7401025962329169",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.2971766456514073",
            "Storage.benchmark()Ljava/lang/Object;": "0.011747660257665347",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.7037631671692",
            "som.Random.next()I": "13.290519638172062",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.2687473078278575",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.011747660257665347",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.8575791988095703"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.0034320623262518446",
            "Sieve.benchmark()Ljava/lang/Object;": "3.229570649002986",
            "java.lang.System$2.encodeASCII([CI[BII)I": "0.006864124652503689",
            "java.io.BufferedOutputStream.write([BII)V": "0.0034320623262518446",
            "java.io.FileOutputStream.write([BII)V": "0.006864124652503689",
            "java.util.Arrays.fill([ZZ)V": "5.374609602910389",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.006864124652503689",
            "Sieve.sieve([ZI)I": "91.30315406527782",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010296186978755534",
            "java.io.OutputStreamWriter.flushBuffer()V": "0.0034320623262518446"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.024415765608650157",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.534007673526332",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.018137425880711",
            "Towers.moveDisks(III)V": "3.9100104638995465",
            "Towers$TowersDisk.getSize()I": "11.46843390303453",
            "Towers.benchmark()Ljava/lang/Object;": "0.024415765608650157",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.013951866062085804",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.2595047087548",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.519707010812695",
            "Towers.moveTopDisk(II)V": "4.185559818625741"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.8144878800616506",
            "nbody.Body.getMass()D": "0.5919854280510018",
            "nbody.Body.setVX(D)V": "30.10718789407314",
            "nbody.NBodySystem.advance(D)V": "40.40212974639204",
            "nbody.Body.setZ(D)V": "0.5079164915230489",
            "nbody.Body.getY()D": "0.79164915230489",
            "nbody.Body.getZ()D": "8.053103544906824",
            "nbody.Body.setVZ(D)V": "8.981364719069637",
            "nbody.Body.setVY(D)V": "6.049460557657279",
            "nbody.Body.setX(D)V": "1.1734622390360094"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.955790074158585",
            "richards.Scheduler.schedule()V": "10.403593839132915",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.81374786081004",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.1394751853964635",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.135767256132344",
            "Richards.benchmark()Ljava/lang/Object;": "9.883057615516257",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.677695379349687",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.207073588134627",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.390758699372505",
            "richards.RBObject.<init>()V": "10.367940673131773"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.6185506104765657",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.5939346199291062",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.595706971248525",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.62229224103978",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.230405671524222",
            "java.lang.String.<init>([BB)V": "5.356439543127216",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.8056321386372587",
            "json.JsonPureStringParser.read()V": "13.592949980307209",
            "java.util.Arrays.copyOfRange([BII)[B": "5.907837731390312",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.5939346199291062"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.010863661053775122",
            "java.lang.invoke.LambdaFormEditor.makeArgumentCombinationForm(ILjava/lang/invoke/MethodType;[IZZ)Ljava/lang/invoke/LambdaForm;": "0.003621220351258374",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(Ljava/lang/invoke/MethodType;Ljava/util/List;)Ljava/lang/invoke/MethodHandle;": "0.003621220351258374",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003621220351258374",
            "Permute.swap(II)V": "43.86384211479268",
            "jdk.jfr.internal.EventWriter.putStackTrace()V": "0.003621220351258374",
            "jdk.jfr.internal.EventWriter.putStringValue(Ljava/lang/String;)V": "0.003621220351258374",
            "Permute.permute(I)V": "56.00217273221075",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010863661053775122",
            "Permute.benchmark()Ljava/lang/Object;": "0.050697084917617236"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.0",
            "richards.Packet::setLink": "2.1",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.HandlerTaskDataRecord::workInAdd": "2.1",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "6.0",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.6"
        },
        "Mandelbrot.hpl": {
            "java.lang.Long::getChars": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.LambdaForm::<init>": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.2",
            "java.lang.Class::initClassName": "0.0",
            "Mandelbrot::mandelbrot": "98.7",
            "java.lang.invoke.LambdaFormBuffer::replaceFunctions": "0.0",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.0",
            "List::isShorterThan": "81.2",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.8",
            "json.JsonPureStringParser::read": "12.1",
            "java.lang.String::<init>": "4.8",
            "java.lang.String::length": "2.8",
            "java.util.Arrays::copyOfRange": "7.9",
            "java.lang.String::equals": "23.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "9.8",
            "java.lang.String::isLatin1": "2.7",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.3",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.3",
            "havlak.HavlakLoopFinder::findLoops": "5.8",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "8.1",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "5.2",
            "som.Vector::hasSome": "2.7",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "40.0",
            "Permute::permute": "51.5",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "java.lang.invoke.ConstantCallSite::<init>": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "6.4",
            "java.io.BufferedOutputStream::flushBuffer": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "57.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "13.1",
            "Queens::setRowColumn": "25.2",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.9",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "41.1",
            "java.util.Arrays::setAll": "33.7",
            "som.Random::next": "13.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "1.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.0",
            "java.lang.Object::getClass": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "88.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "java.util.Arrays::fill": "6.4"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "10.1",
            "deltablue.ScaleConstraint::execute": "6.3",
            "deltablue.Planner::addPropagate": "5.7",
            "deltablue.Variable::<init>": "5.5",
            "deltablue.Planner::incrementalAdd": "13.3",
            "AGCT::Unknown not Java[ERR=-3]": "5.5",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "deltablue.BinaryConstraint::chooseMethod": "5.3",
            "som.Vector::forEach": "9.4",
            "som.Dictionary::at": "3.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.3",
            "Bounce$Ball::bounce": "82.1",
            "java.util.Arrays::setAll": "1.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.2",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "Bounce$Ball::<init>": "3.2",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.5",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "8.3",
            "nbody.Body::setVX": "29.3",
            "nbody.Body::setVY": "6.1",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "nbody.NBodySystem::advance": "39.7"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.1",
            "Towers::popDiskFrom": "20.2",
            "Towers::moveDisks": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "5.2",
            "Towers::pushDisk": "34.9",
            "Towers$TowersDisk::setNext": "14.5",
            "AGCT::Unknown Java[ERR=-5]": "4.4",
            "Towers::benchmark": "0.0",
            "Towers::moveTopDisk": "3.6",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "10.7",
            "cd.RedBlackTree::forEach": "4.7",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "8.2",
            "cd.RedBlackTree::treeMinimum": "6.7",
            "AGCT::Unknown not Java[ERR=-3]": "5.1",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.Vector2D::compareNumbers": "2.9",
            "cd.RedBlackTree::treeInsert": "21.6",
            "cd.CollisionDetector::isInVoxel": "13.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "6.71%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "9.70%",
            "som.Vector.append": "3.92%",
            "vtable": "3.52%",
            "som.Vector.forEach": "21.56%",
            "itable": "3.13%",
            "deltablue.Planner.addPropagate": "2.64%",
            "deltablue.Plan.lambda$execute$0": "9.58%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "3.52%",
            "deltablue.ScaleConstraint.execute": "5.15%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "84.27%",
            "som.Random.next": "1.26%",
            "clear_page_rep_[k]": "0.15%",
            "java.util.Arrays.setAll": "1.25%",
            "SpinPause": "0.04%",
            "Bounce.benchmark": "9.00%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "Bounce$Ball.<init>": "3.09%",
            "Bounce.lambda$benchmark$0": "0.20%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "stringStream::write(char": "0.01%",
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Mandelbrot.mandelbrot": "99.55%",
            "LinearScanWalker::alloc_free_reg(Interval*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            ".annobin__ZN14ResourceBitMapC2Emb.start": "0.01%",
            ".annobin__ZN15PerfLongVariant6sampleEv.start": "0.00%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "ciObjectFactory::get_metadata(Metadata*)": "0.01%",
            "LinearScan::compute_local_live_sets()": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.52%",
            "som.Random.next": "13.22%",
            "java.util.Arrays.setAll": "36.17%",
            "Storage.lambda$buildTreeDepth$0": "3.25%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.37%",
            "SpinPause": "0.21%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.59%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.22%",
            "Storage.buildTreeDepth": "42.36%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.11%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.56%",
            "Towers.popDiskFrom": "22.94%",
            "Towers.moveDisks": "7.67%",
            "clear_page_rep_[k]": "0.03%",
            "Towers.pushDisk": "37.64%",
            "Towers.moveTopDisk": "4.25%",
            "Towers$TowersDisk.getSize": "9.51%",
            "Towers.buildTowerAt": "0.01%",
            "Towers$TowersDisk.getNext": "2.88%",
            "Towers.benchmark": "0.03%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.36%",
            "cd.CollisionDetector.isInVoxel": "14.73%",
            "cd.RedBlackTree.forEach": "5.26%",
            "cd.RedBlackTree.put": "7.34%",
            "cd.RedBlackTree.treeInsert": "20.50%",
            "cd.RedBlackTree.findNode": "7.93%",
            "cd.RedBlackTree.treeMinimum": "6.04%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.10%",
            "cd.Vector2D.compareNumbers": "3.17%",
            "cd.RedBlackTree.leftRotate": "2.48%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "6.12%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.23%",
            "som.Vector.hasSome": "2.24%",
            "som.Vector.append": "3.22%",
            "som.Vector.forEach": "2.34%",
            "som.IdentitySet.lambda$contains$0": "32.80%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "6.81%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.51%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.97%",
            "havlak.HavlakLoopFinder.doDFS": "5.55%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "9.09%",
            "Sieve.benchmark": "2.94%",
            "G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask,": "0.02%",
            "clear_page_rep_[k]": "0.08%",
            "Sieve.sieve": "86.95%",
            "SpinPause": "0.05%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "__memset_avx2_unaligned_erms": "0.02%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%",
            "__tls_get_addr": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.38%",
            "Permute.swap": "41.05%",
            "Permute.benchmark": "0.02%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.01%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Permute.verifyResult": "0.01%",
            "__tls_get_addr": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.35%",
            "nbody.Body.getZ": "7.79%",
            "nbody.Body.getY": "0.74%",
            "nbody.Body.setX": "1.16%",
            "nbody.Body.setY": "1.77%",
            "nbody.Body.setVX": "28.00%",
            "nbody.Body.setVY": "5.84%",
            "nbody.Body.getVZ": "0.43%",
            "nbody.Body.getMass": "0.42%",
            "nbody.NBodySystem.advance": "43.09%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.63%",
            "List.makeList": "0.75%",
            "clear_page_rep_[k]": "0.05%",
            "List$Element.setNext": "0.01%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "4.90%",
            "List$Element.length": "0.09%",
            "List.isShorterThan": "83.97%",
            "List$Element.<init>": "0.16%",
            "__tls_get_addr": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.07%",
            "java.lang.String.length": "3.17%",
            "java.lang.String.<init>": "5.46%",
            "json.JsonPureStringParser.readArray": "2.58%",
            "json.JsonPureStringParser.isWhiteSpace": "2.53%",
            "java.lang.String.isLatin1": "2.71%",
            "json.JsonPureStringParser.readStringInternal": "9.64%",
            "java.util.Arrays.copyOfRange": "7.73%",
            "java.lang.String.equals": "21.73%",
            "json.JsonPureStringParser.read": "15.18%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.70%",
            "Queens.getRowColumn": "59.68%",
            "Queens.setRowColumn": "22.87%",
            "clear_page_rep_[k]": "0.07%",
            "Queens.queens": "0.62%",
            "Queens.placeQueen": "15.42%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.04%",
            "Queens.benchmark": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.84%",
            "Richards.benchmark": "5.06%",
            "richards.Packet.<init>": "7.54%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.97%",
            "itable": "35.27%",
            "richards.TaskControlBlock.<init>": "2.99%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "2.98%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.43%",
            "richards.RBObject.<init>": "6.60%",
            "richards.RBObject.append": "3.00%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "3.7",
            "Towers.moveDisks": "95.0",
            "java.io.PrintStream.println": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "11.5",
            "deltablue.Planner.removePropagateFrom": "9.8",
            "som.Vector.<init>": "25.9",
            "deltablue.Variable.<init>": "5.7",
            "som.Vector.forEach": "7.5",
            "deltablue.Planner.addPropagate": "1.9",
            "deltablue.AbstractConstraint.<init>": "8.5",
            "deltablue.Planner.constraintsConsuming": "4.4",
            "deltablue.Planner.addConstraintsConsumingTo": "15.8"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Dictionary$Entry.<init>": "3.4",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.6",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.6",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "13.8",
            "richards.Packet.<init>": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "richards.HandlerTaskDataRecord.workInAdd": "0.0",
            "richards.Scheduler.queuePacket": "0.0",
            "richards.TaskControlBlock.runTask": "85.0",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "55.2",
            "Bounce$Ball.<init>": "43.7",
            "Bounce.lambda$benchmark$0": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "3.2",
            "som.Vector.<init>": "5.8",
            "cd.Vector3D.<init>": "7.4",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "15.3",
            "cd.RedBlackTree$Node.<init>": "7.6",
            "cd.RedBlackTree$Entry.<init>": "5.1"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Run.runBenchmark": "0.2",
            "NBody.innerBenchmarkLoop": "0.2",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.6",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.8",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.9",
            "List$Element.length": "0.2",
            "Run.printTotal": "0.1",
            "List.isShorterThan": "74.4",
            "List$Element.<init>": "20.8",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.6",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "java.util.Arrays.fill": "0.2",
            "Queens.getRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "23.6",
            "Queens.placeQueen": "75.5",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.242434961301033",
            "java.lang.String.<init>(byte[], byte) String.java": "6.430177619444656",
            "json.JsonPureStringParser.isWhiteSpace()": "2.214979324052318",
            "json.JsonPureStringParser.read()": "20.157996243799325",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.9898009887398205",
            "java.lang.String.length() String.java": "2.3455199306029297",
            "java.lang.String.substring(int, int) String.java": "10.464303460589372",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.162889411051316",
            "json.JsonPureStringParser.readStringInternal()": "3.4530095926290887",
            "json.JsonPureStringParser.readValue()": "3.212983316068286"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.5843854226692513",
            "som.Vector.hasSome(TestInterface)": "2.071437302460405",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.3409118689646755",
            "havlak.HavlakLoopFinder.findLoops()": "11.483489618803153",
            "som.Vector.<init>(int)": "4.020640159254022",
            "som.Vector.append(Object)": "3.6124644210452797",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.4934080709658275",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.330591789337665",
            "som.Vector.removeAll()": "2.5822026647109158",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.004295667662014"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.367128011110578",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2394521335185096",
            "java.lang.ClassLoader.getNamedPackage(String, Module) ClassLoader.java": "0.17559823124690704",
            "Queens.getRowColumn(int, int)": "62.54489727503471",
            "Queens.queens()": "0.30330603579011217",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.17559823124690704",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.14367128011110578",
            "Queens.setRowColumn(int, int, boolean)": "21.199495554172053",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14367128011110578",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.14367128011110578"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.300679925929067",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.8022984606250796",
            "richards.TaskControlBlock.runTask()": "37.05666991787173",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.071074169882532",
            "richards.Scheduler.schedule()": "2.6150997271814878",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.5478563250074213",
            "richards.RBObject.append(Packet, Packet)": "3.1522553468187664",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "2.8448044329474294",
            "Richards.benchmark()": "28.75196132479538",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.865908994529494"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.8083040153519614",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.12793300962405144",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.9362370249760128",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.596080597796075",
            "som.Random.next()": "13.566714156950546",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.4419503968830868",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.29075684005466235",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.15119355682842442",
            "Storage.buildTreeDepth(int, Random)": "36.58302561567762",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.0587619573750477"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "36.44726675680896",
            "Towers.popDiskFrom(int)": "29.276125169016805",
            "Towers.moveDisks(int, int, int)": "6.7003090593007535",
            "Towers$TowersDisk.getSize()": "1.919548000772648",
            "sun.nio.fs.LinuxFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.2173073208421866",
            "Towers.moveTopDisk(int, int)": "6.953834266949971",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.20523469190650953",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.42080355418196",
            "sun.invoke.util.VerifyAccess.isTypeVisible(MethodType, Class) VerifyAccess.java": "0.3259609812632799",
            "java.lang.invoke.MemberName.isMethod() MemberName.java": "0.1086536604210933"
        },
        "YourKit_Permute.txt": {
            "java.lang.Long.valueOf(long) Long.java": "0.27148092846477534",
            "java.nio.LongBuffer.limit(int) LongBuffer.java": "0.02262341070539794",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11311705352698971",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.056558526763494855",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.13574046423238767",
            "Permute.permute(int)": "54.72603049635762",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.03393511605809692",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.15836387493778561",
            "com.yourkit.probes.Table.createRow() a": "0.01131170535269897",
            "Permute.swap(int, int)": "44.46631374145966"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.955947136563877",
            "som.Vector.forEach(ForEachInterface)": "43.711978183343824",
            "deltablue.EqualityConstraint.execute()": "4.6150618837843504",
            "deltablue.BinaryConstraint.isSatisfied()": "4.274176631004825",
            "som.Vector.<init>(int)": "5.296832389343402",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "1.9666456891126494",
            "deltablue.ScaleConstraint.execute()": "1.5470946087686175",
            "som.Vector.append(Object)": "2.648416194671701",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "4.274176631004825",
            "deltablue.BinaryConstraint.recalculate()": "1.9666456891126494"
        },
        "YourKit_List.txt": {
            "java.lang.StringLatin1.replace(byte[], char, char) StringLatin1.java": "0.2683663200268366",
            "List.tail(List$Element, List$Element, List$Element)": "4.213351224421335",
            "List$Element.<init>(Object)": "0.41596779604159667",
            "List.makeList(int)": "0.20127474002012746",
            "java.util.HashMap.getNode(Object) HashMap.java": "0.16101979201610195",
            "List$Element.setNext(List$Element)": "0.12076484401207646",
            "List$Element.getNext()": "20.8520630660852",
            "List$Element.length()": "0.12076484401207646",
            "List.isShorterThan(List$Element, List$Element)": "73.2371687353237",
            "com.yourkit.probes.Table.createRow() a": "0.12076484401207646"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0969145400339495",
            "nbody.Body.getZ()": "6.247949445815442",
            "nbody.Body.setX(double)": "0.41367701810193563",
            "nbody.Body.getMass()": "0.4422064676262071",
            "nbody.Body.getX()": "0.5563242657232929",
            "nbody.NBodySystem.advance(double)": "47.03079754076144",
            "nbody.Body.setVY(double)": "5.877066601999913",
            "nbody.Body.setVZ(double)": "7.959716417271727",
            "nbody.Body.setVX(double)": "26.803417828053007",
            "nbody.Body.setY(double)": "0.5563242657232929"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.82270126040093",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.0",
            "Run.runBenchmark()": "8.777165326686094E-4",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.0",
            "sun.nio.cs.StreamEncoder.implWrite(CharBuffer) StreamEncoder.java": "0.0",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "8.777165326686094E-4",
            "java.lang.invoke.LambdaFormBuffer.changeName(int, LambdaForm$Name) LambdaFormBuffer.java": "0.017554330653372186",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.07899448794017483",
            "sun.nio.cs.StreamEncoder.write(char[], int, int) StreamEncoder.java": "0.0",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitSource(String, String) ClassWriter.java": "0.07899448794017483"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.274567454483773",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.37818990538656",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "16.65347355723925",
            "cd.RedBlackTree.findNode(Comparable)": "7.91586565645143",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.900787817105809",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.118436428059859",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.133514267405481",
            "cd.RedBlackTree.put(Comparable, Object)": "6.694560669456067",
            "cd.Vector2D.compareNumbers(double, double)": "8.488823551585059",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.7468430773870103"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.11741599419324536",
            "java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(LambdaForm$Name, int) InvokerBytecodeGenerator.java": "0.11741599419324536",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.28820289483796585",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.4443875154775623",
            "Benchmark.innerBenchmarkLoop(int)": "0.09606763161265529",
            "Sieve.benchmark()": "88.51031125912641",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.10674181290295033",
            "com.yourkit.probes.Table.createRow() a": "0.09606763161265529",
            "com.yourkit.probes.builtin.Files$RandomAccessFile_open_Probe.onEnter() a": "0.0640450877417702",
            "Sieve.sieve(boolean[], int)": "8.069681055463045"
        },
        "YourKit_Bounce.txt": {
            "java.util.jar.Attributes$Name.<clinit>() Attributes.java": "0.6578648881629688",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.22684996143550654",
            "Bounce.benchmark()": "68.32720838437456",
            "java.net.URI.create(String) URI.java": "0.22684996143550654",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.22684996143550654",
            "Bounce.lambda$benchmark$0(Random, int)": "0.6578648881629688",
            "som.Random.next()": "0.43101492672746233",
            "Bounce$Ball.bounce()": "27.335420352978534",
            "java.util.zip.ZipFile.<init>(File, int, Charset) ZipFile.java": "0.29490494986615845",
            "Bounce$Ball.<init>(Random)": "1.111564811033982"
        }
    },
    "Runtimes": {
        "NBody.data": 103.156,
        "JavaFlightRecorder_Queens.jfr": 105.8075,
        "rebench_test_Async_Bounce.txt": 101.26849999999999,
        "JavaFlightRecorder_Sieve.jfr": 106.0705,
        "Permute.hpl": 104.46549999999999,
        "CD.data": 95.1645,
        "List.data": 148.81900000000002,
        "DeltaBlue.hpl": 87.851,
        "JavaFlightRecorder_Json.jfr": 84.24600000000001,
        "NBody.hpl": 103.4,
        "Bounce.hpl": 102.09899999999999,
        "Towers.hpl": 109.314,
        "Sieve.data": 104.86449999999999,
        "Richards.hpl": 91.6285,
        "JavaFlightRecorder_Havlak.jfr": 171.1565,
        "JavaFlightRecorder_CD.jfr": 96.7345,
        "JavaFlightRecorder_DeltaBlue.jfr": 82.376,
        "rebench_test_Async_Mandelbrot.txt": 85.184,
        "JavaFlightRecorder_Towers.jfr": 109.703,
        "rebench_test_Async_CD.txt": 94.0995,
        "rebench_test_Async_Permute.txt": 104.423,
        "Mandelbrot.data": 85.4945,
        "JavaFlightRecorder_Permute.jfr": 106.617,
        "rebench_test_Async_NBody.txt": 102.4125,
        "JavaFlightRecorder_Bounce.jfr": 103.6625,
        "Havlak.data": 157.6015,
        "Mandelbrot.hpl": 84.624,
        "rebench_test_Async_Towers.txt": 113.2825,
        "List.hpl": 149.6495,
        "JavaFlightRecorder_Storage.jfr": 96.34049999999999,
        "JavaFlightRecorder_NBody.jfr": 103.229,
        "Queens.hpl": 102.542,
        "Storage.data": 117.3065,
        "rebench_test_Async_Sieve.txt": 105.344,
        "JavaFlightRecorder_Richards.jfr": 94.11349999999999,
        "Storage.hpl": 109.6525,
        "rebench_test_Async_List.txt": 152.219,
        "Bounce.data": 102.312,
        "rebench_test_Async_Richards.txt": 97.7305,
        "Permute.data": 105.88550000000001,
        "JavaFlightRecorder_Mandelbrot.jfr": 87.667,
        "rebench_test_Async_DeltaBlue.txt": 97.48400000000001,
        "JavaFlightRecorder_List.jfr": 154.0155,
        "DeltaBlue.data": 89.5315,
        "Queens.data": 106.47649999999999,
        "rebench_test_Async_Storage.txt": 107.9245,
        "Json.hpl": 83.522,
        "Towers.data": 109.74000000000001,
        "Havlak.hpl": 160.623,
        "Richards.data": 92.21950000000001,
        "rebench_test_Async_Havlak.txt": 158.94299999999998,
        "Sieve.hpl": 103.3295,
        "CD.hpl": 96.0825,
        "rebench_test_Async_Json.txt": 80.7065,
        "rebench_test_Async_Queens.txt": 105.615,
        "Json.data": 82.322
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.09%",
            "vmSymbols::find_sid": "0.01%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.34%",
            "[.] void nbody.NBodySystem.advance(double)": "0.02%"
        },
        "Permute.data": {
            " ": "0",
            "PhaseChaitin::elide_copy": "0.01%",
            "[.] Interpreter": "0.11%",
            "x2apic_send_IPI": "0.01%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.15%",
            "[.] void Permute.permute(int)": "99.29%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.42%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.05%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.61%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.05%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.98%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "5.89%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.64%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.68%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "12.87%",
            "[.] void deltablue.Planner.chainTest(int)": "27.51%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.74%",
            "x86_pmu_disable_all": "0.10%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.23%",
            "[.] boolean Queens.placeQueen(int)": "95.89%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.11%",
            "[.] Interpreter": "0.13%",
            "[.] void Towers.moveDisks(int, int, int)": "98.57%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "native_apic_msr_write": "0.06%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.98%",
            "[.] boolean richards.Scheduler.start()": "23.34%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "7.09%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.59%",
            "[.] void richards.Scheduler.schedule()": "7.92%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "7.97%",
            "x86_pmu_disable_all": "0.10%",
            "[.] Interpreter": "0.13%",
            "clear_page_rep": "0.08%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "89.26%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "23.67%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "21.10%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.12%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.43%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.45%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.13%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "LIR_OpVisitState::visit": "0.01%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.14%",
            "[.] Interpreter": "0.07%",
            "[.] java.lang.Object List.benchmark()": "0.42%",
            "[.] List$Element List.makeList(int)": "0.70%",
            "[.] int List$Element.length()": "0.06%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "[.] java.lang.Object Sieve.benchmark()": "1.94%",
            "[.] int Sieve.sieve(boolean[], int)": "2.44%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.03%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "93.37%",
            "clear_page_rep": "0.05%",
            "[.] java.lang.Object Bounce.benchmark()": "5.54%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.68%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.34%",
            "[.] StubRoutines (2)": "8.13%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.82%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.72%"
        }
    }
}