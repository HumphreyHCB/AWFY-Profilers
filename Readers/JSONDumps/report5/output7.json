{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.util.zip.ZipFile$CleanableResource.getInflater()Ljava/util/zip/Inflater;": "0.004171707479871512",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.004171707479871512",
            "java.lang.invoke.InvokerBytecodeGenerator.classDataValues()Ljava/util/List;": "0.004171707479871512",
            "java.lang.System$2.encodeASCII([CI[BII)I": "0.004171707479871512",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.004171707479871512",
            "Mandelbrot.mandelbrot(I)I": "99.93742438780194",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.004171707479871512",
            "java.lang.StringConcatHelper.prepend(J[BJLjava/lang/String;)J": "0.004171707479871512",
            "java.lang.StringConcatHelper.stringOf(Ljava/lang/Object;)Ljava/lang/String;": "0.004171707479871512",
            "sun.nio.cs.StreamEncoder.flushBuffer()V": "0.004171707479871512"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4382268666779032",
            "Queens.benchmark()Ljava/lang/Object;": "0.033709758975223325",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.010112927692566998",
            "Queens.placeQueen(I)Z": "8.262261924827238",
            "Queens.getRowColumn(II)Z": "71.0197202090005",
            "java.util.Arrays.fill([ZZ)V": "0.39777515590763524",
            "Queens.setRowColumn(IIZ)V": "18.894319905612672",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.016854879487611663",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.006741951795044665",
            "Queens.queens()Z": "0.8865666610483734"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.00707088562842496",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.45253668021919746",
            "java.io.PrintStream.write([BII)V": "0.00707088562842496",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.7465087502209653",
            "Bounce$Ball.bounce()Z": "84.35566554710978",
            "Bounce.benchmark()Ljava/lang/Object;": "8.587590595722114",
            "som.Random.next()I": "1.4778150963408168",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.09192151316952449",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.02474809969948736",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.1925048612338696"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.206153990039514",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "37.870887792560026",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.965325352474923",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.754331408262994",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "16.025626037550563",
            "havlak.HavlakLoopFinder.findLoops()V": "4.552362692604456",
            "havlak.HavlakLoopFinder$$Lambda$79+0x000000080100f598.667447085.apply(Ljava/lang/Object;)V": "1.6554046154925295",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.421426734316912",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.6000140288526734",
            "som.Vector.append(Ljava/lang/Object;)V": "1.8073838527905723"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.521314524879864",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.665478220430941",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.759262129902341",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.569369090063556",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.223841264920168",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "14.552007440706868",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.8671523794760505",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.6538521159510156",
            "cd.Vector2D.compareNumbers(DD)I": "3.1041698961401334",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "24.461323825763447"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.40059583851368",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.011729104600154824",
            "List$Element.getNext()LList$Element;": "9.620211593046987",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.2064322409627249",
            "List.benchmark()Ljava/lang/Object;": "0.00469164184006193",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.864927631424617",
            "List$Element.length()I": "0.06333716484083605",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.016420746440216752",
            "List$Element.setNext(LList$Element;)V": "0.028149851040371578",
            "List.makeList(I)LList$Element;": "0.7436252316498159"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "3.4185895189949447",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.288452875519295",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "11.522098203113268",
            "deltablue.ScaleConstraint.execute()V": "8.739176134941689",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "16.98283197357225",
            "deltablue.Variable.<init>()V": "7.868261674758497",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "12.112718354271985",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "5.035287051403974",
            "som.Vector.<init>(I)V": "2.7729115571349916",
            "som.Vector.append(Ljava/lang/Object;)V": "2.5977276139946945"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.4494299912306343",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.05553931598948",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.6430868167202572",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.6356328558900906",
            "Storage.benchmark()Ljava/lang/Object;": "0.010961707103186204",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "46.061093247588424",
            "som.Random.next()I": "12.277111955568547",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.194826074247296",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.014615609470914937",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6138555977784274"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.003467767104761244",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.003467767104761244",
            "Sieve.benchmark()Ljava/lang/Object;": "3.1140548600755973",
            "jdk.jfr.internal.PlatformRecording.isToDisk()Z": "0.003467767104761244",
            "java.io.FileOutputStream.write([BII)V": "0.003467767104761244",
            "java.util.Arrays.fill([ZZ)V": "5.076811041370461",
            "Sieve.sieve([ZI)I": "91.7224399209349",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.006935534209522488",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.013871068419044976",
            "java.lang.StringConcatHelper.newArrayWithSuffix(Ljava/lang/String;J)[B": "0.006935534209522488"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.05208875924575476",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.494773761155674",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.344202521095947",
            "Towers.moveDisks(III)V": "3.778171337292079",
            "Towers$TowersDisk.getSize()I": "12.10195506476369",
            "Towers.benchmark()Ljava/lang/Object;": "0.09028718269264159",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01736291974858492",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "39.24367121575164",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.06111747751502",
            "Towers.moveTopDisk(II)V": "3.774698753342362"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.6423232531029281",
            "nbody.Body.getMass()D": "0.7474456559007063",
            "nbody.Body.setVX(D)V": "30.590413495165603",
            "nbody.NBodySystem.advance(D)V": "40.63292875265721",
            "nbody.Body.getY()D": "0.7988754028663513",
            "nbody.Body.getZ()D": "7.875608585339093",
            "nbody.Body.setVZ(D)V": "9.23335390523212",
            "nbody.Body.getVZ()D": "0.42858122471370774",
            "nbody.Body.setVY(D)V": "5.9041349516560375",
            "nbody.Body.setX(D)V": "1.0011657409312213"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.0175541252194265",
            "richards.Scheduler.schedule()V": "9.69133996489175",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.01930953774137",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.902574605032183",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.1398478642480985",
            "Richards.benchmark()Ljava/lang/Object;": "8.777062609713283",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.527501462843769",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.4616734932709186",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.683148039789351",
            "richards.RBObject.<init>()V": "10.839672322995904"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.6438436673523364",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.0953080615143502",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "24.497991967871485",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.676363992555588",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.46135762562445",
            "java.lang.String.<init>([BB)V": "4.814379469095896",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.084631207757861",
            "json.JsonPureStringParser.read()V": "17.2837692232344",
            "java.util.Arrays.copyOfRange([BII)[B": "3.8299539621902245",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "2.8749142913115877"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.014592681770092299",
            "java.lang.Long.parseLong(Ljava/lang/String;I)J": "0.0036481704425230747",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0036481704425230747",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.0036481704425230747",
            "Permute.swap(II)V": "44.08084345700631",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.0036481704425230747",
            "java.lang.invoke.LambdaForm.internArgument(Ljava/lang/invoke/LambdaForm$Name;)Ljava/lang/invoke/LambdaForm$Name;": "0.0036481704425230747",
            "Permute.permute(I)V": "55.806063259275476",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.007296340885046149",
            "Permute.benchmark()Ljava/lang/Object;": "0.03648170442523074"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.4",
            "Richards::benchmark": "4.8",
            "richards.RBObject::append": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "45.3",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.6",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.6",
            "richards.RBObject::<init>": "6.0"
        },
        "Mandelbrot.hpl": {
            "java.nio.CharBuffer::<init>": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::push": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::emitPushArgument": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.2",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.nio.Buffer::<init>": "0.0",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet::get": "0.0",
            "Mandelbrot::mandelbrot": "98.6"
        },
        "List.hpl": {
            "List$Element::getNext": "9.1",
            "List::makeList": "0.8",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.0",
            "List::isShorterThan": "82.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "14.3",
            "java.lang.String::<init>": "5.7",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "3.4",
            "java.util.Arrays::copyOfRange": "7.8",
            "java.lang.String::equals": "21.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "10.0",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "9.3"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.0",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.0",
            "havlak.HavlakLoopFinder::findLoops": "5.7",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.5",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "7.0",
            "havlak.HavlakLoopFinder::doDFS": "6.4",
            "som.Vector::hasSome": "2.6",
            "som.Vector::forEach": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "51.3",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "6.3"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "69.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "8.4",
            "Queens::setRowColumn": "18.6",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.6",
            "Storage::buildTreeDepth": "41.3",
            "java.util.Arrays::setAll": "32.9",
            "som.Random::next": "14.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.9",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.6",
            "Storage::lambda$buildTreeDepth$0": "2.7"
        },
        "Sieve.hpl": {
            "java.lang.Long::getChars": "0.0",
            "Sieve::benchmark": "3.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "89.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0",
            "java.util.Arrays::fill": "5.3"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "9.5",
            "deltablue.ScaleConstraint::execute": "4.9",
            "deltablue.Planner::addPropagate": "4.1",
            "som.Vector::append": "2.5",
            "AGCT::Unknown not Java[ERR=-3]": "5.5",
            "AGCT::Unknown Java[ERR=-5]": "15.6",
            "som.Vector::<init>": "3.3",
            "som.Vector::forEach": "23.5",
            "som.Dictionary::at": "7.3",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.3"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.2",
            "Bounce$Ball::bounce": "82.5",
            "java.util.Arrays::setAll": "1.2",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "3.1",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.0",
            "nbody.Body::getZ": "8.0",
            "nbody.Body::setVX": "28.7",
            "nbody.Body::setVY": "6.2",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "nbody.NBodySystem::advance": "40.1"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.1",
            "Towers::popDiskFrom": "23.6",
            "Towers::moveDisks": "3.7",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "Towers::pushDisk": "33.4",
            "Towers$TowersDisk::setNext": "15.2",
            "AGCT::Unknown Java[ERR=-5]": "3.6",
            "Towers::moveTopDisk": "4.8",
            "Towers$TowersDisk::getNext": "3.4"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.4",
            "cd.RedBlackTree::forEach": "5.4",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "7.1",
            "cd.RedBlackTree::treeMinimum": "6.1",
            "AGCT::Unknown not Java[ERR=-3]": "5.4",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "3.3",
            "cd.RedBlackTree::treeInsert": "20.4",
            "cd.CollisionDetector::isInVoxel": "14.1"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "5.44%",
            "deltablue.Planner.newMark": "5.20%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.16%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "8.71%",
            "vtable": "3.60%",
            "som.Vector.forEach": "23.84%",
            "itable": "2.55%",
            "deltablue.Planner.addPropagate": "2.11%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "2.59%",
            "deltablue.ScaleConstraint.execute": "8.50%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.71%",
            "som.Random.next": "1.33%",
            "clear_page_rep_[k]": "0.10%",
            "java.util.Arrays.setAll": "1.33%",
            "SpinPause": "0.05%",
            "Bounce.benchmark": "9.19%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "Bounce$Ball.<init>": "3.23%",
            "Bounce.lambda$benchmark$0": "0.29%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.01%",
            "Mandelbrot.mandelbrot": "99.59%",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic": "0.01%",
            "vmSymbols::find_sid(Symbol": "0.01%",
            "LinearScan::allocate_registers()": "0.02%",
            "LinearScan::add_use(LIR_OprDesc*,": "0.01%",
            "syscall_exit_work_[k]": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "__tls_get_addr": "0.01%",
            "Dict::Insert(void*,": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.54%",
            "som.Random.next": "13.04%",
            "java.util.Arrays.setAll": "36.49%",
            "Storage.lambda$buildTreeDepth$0": "3.44%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.45%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.53%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.15%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.22%",
            "Storage.buildTreeDepth": "42.08%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.10%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.63%",
            "Towers.popDiskFrom": "23.48%",
            "Towers.moveDisks": "7.39%",
            "clear_page_rep_[k]": "0.04%",
            "Towers.pushDisk": "34.64%",
            "Towers.moveTopDisk": "5.03%",
            "Towers$TowersDisk.getSize": "10.69%",
            "Towers.buildTowerAt": "0.03%",
            "Towers$TowersDisk.getNext": "3.59%",
            "Towers.benchmark": "0.03%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.14%",
            "cd.CollisionDetector.isInVoxel": "15.05%",
            "cd.RedBlackTree.forEach": "5.03%",
            "cd.RedBlackTree.put": "7.19%",
            "cd.RedBlackTree.rightRotate": "1.79%",
            "cd.RedBlackTree.treeInsert": "21.40%",
            "cd.RedBlackTree.findNode": "7.84%",
            "cd.RedBlackTree.treeMinimum": "6.20%",
            "cd.Vector2D.compareNumbers": "2.89%",
            "cd.RedBlackTree.leftRotate": "2.45%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.79%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.75%",
            "som.Vector.hasSome": "2.23%",
            "som.Vector.append": "3.24%",
            "som.Vector.forEach": "2.23%",
            "som.IdentitySet.lambda$contains$0": "32.71%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.57%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.31%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.79%",
            "havlak.HavlakLoopFinder.doDFS": "4.98%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.09%",
            "Sieve.benchmark": "3.17%",
            "clear_page_rep_[k]": "0.12%",
            "Sieve.sieve": "90.63%",
            "SpinPause": "0.06%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.06%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.05%",
            "Mutex::lock_without_safepoint_check()": "0.01%",
            "Permute.swap": "41.47%",
            "Interpreter": "0.02%",
            "Permute.benchmark": "0.01%",
            "clear_page_rep_[k]": "0.01%",
            "jdk.internal.org.objectweb.asm.Frame.execute": "0.01%",
            "[no_Java_frame]": "0.01%",
            "PhaseIdealLoop::build_loop_early(VectorSet&,": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.07%",
            "nbody.Body.getZ": "7.71%",
            "nbody.Body.getY": "0.81%",
            "nbody.Body.setX": "1.18%",
            "nbody.Body.setY": "1.93%",
            "nbody.Body.setVX": "28.29%",
            "nbody.Body.setVY": "6.14%",
            "nbody.Body.getVZ": "0.44%",
            "nbody.Body.getMass": "0.43%",
            "nbody.NBodySystem.advance": "42.64%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.63%",
            "List.makeList": "0.72%",
            "clear_page_rep_[k]": "0.05%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.04%",
            "List.tail": "4.77%",
            "List$Element.length": "0.08%",
            "List.isShorterThan": "84.10%",
            "List$Element.<init>": "0.17%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.33%",
            "java.lang.String.length": "3.16%",
            "java.lang.String.<init>": "5.41%",
            "json.JsonPureStringParser.readArray": "2.65%",
            "java.lang.String.isLatin1": "2.90%",
            "json.JsonPureStringParser.readStringInternal": "9.19%",
            "java.util.Arrays.copyOfRange": "6.99%",
            "java.lang.String.equals": "21.65%",
            "json.JsonPureStringParser.read": "15.82%",
            "json.JsonPureStringParser.readValue": "2.29%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.64%",
            "Queens.getRowColumn": "70.63%",
            "Queens.setRowColumn": "18.08%",
            "Interpreter": "0.01%",
            "clear_page_rep_[k]": "0.09%",
            "Queens.queens": "0.49%",
            "Queens.placeQueen": "9.53%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Queens.benchmark": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.35%",
            "Richards.benchmark": "4.80%",
            "richards.Packet.<init>": "6.91%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.80%",
            "itable": "37.40%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.59%",
            "richards.TaskControlBlock.<init>": "2.96%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.89%",
            "richards.RBObject.<init>": "5.88%",
            "richards.RBObject.append": "2.58%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "4.3",
            "Towers.moveDisks": "94.4",
            "java.io.PrintStream.println": "0.1",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.2"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.util.Arrays.fill": "0.2",
            "Sieve.benchmark": "6.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.8",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.1",
            "deltablue.AbstractConstraint.satisfy": "10.1",
            "deltablue.Planner.removePropagateFrom": "9.8",
            "som.Vector.<init>": "31.4",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "8.2",
            "deltablue.Planner.addPropagate": "2.1",
            "deltablue.AbstractConstraint.<init>": "4.5",
            "deltablue.Planner.constraintsConsuming": "4.3",
            "deltablue.Planner.addConstraintsConsumingTo": "17.7"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "som.Dictionary$Entry.<init>": "3.5",
            "som.Vector.<init>": "42.3",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.1",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "3.9"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "Run.reportBenchmark": "0.1",
            "richards.Scheduler.schedule": "14.1",
            "richards.Scheduler.createWorker": "0.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.Scheduler.queuePacket": "0.0",
            "richards.TaskControlBlock.runTask": "84.3",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.6"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "Bounce$Ball.bounce": "0.0",
            " ": "0",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "55.6",
            "Bounce$Ball.<init>": "43.0",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "2.0",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.0",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.8",
            "cd.RedBlackTree$Entry.<init>": "5.0"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.1",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.8",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.1",
            "List$Element.length": "0.2",
            "Run.printTotal": "0.1",
            "List.isShorterThan": "74.8",
            "List$Element.<init>": "20.9",
            "Run.printResult": "0.3",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "Run.runBenchmark": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.6",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "27.9",
            "Queens.placeQueen": "71.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.863687109412012",
            "java.lang.String.<init>(byte[], byte) String.java": "6.125820312017236",
            "json.JsonPureStringParser.isDigit()": "1.8785299679084464",
            "json.JsonPureStringParser.read()": "20.60615548131151",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.1885574455288106",
            "java.lang.String.length() String.java": "2.6324137050295993",
            "java.lang.String.substring(int, int) String.java": "10.356632323074198",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "8.00846986318864",
            "json.JsonPureStringParser.readValue()": "3.7776578521316786",
            "json.JsonPureStringParser.readStringInternal()": "3.2544707777361244"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.7610979475694335",
            "som.Vector.hasSome(TestInterface)": "2.5620219200017313",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.448624319733412",
            "havlak.HavlakLoopFinder.findLoops()": "11.22399298906164",
            "som.Vector.<init>(int)": "3.328031852164411",
            "som.Vector.append(Object)": "3.8516883594620626",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.166736992437276",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.522488017570624",
            "som.Vector.removeAll()": "2.996959762839863",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "36.989191470025"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.247904422391363",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.41750971512990964",
            "Queens.getRowColumn(int, int)": "60.972476474933345",
            "Queens.queens()": "1.1240646176574491",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.24087098949802482",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.40145164916337467",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.17663872563188487",
            "Queens.setRowColumn(int, int, boolean)": "22.609756880881264",
            "com.yourkit.probes.Table.createRow() a": "0.14452259369881487",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14452259369881487"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.092892934661265",
            "richards.Scheduler$$Lambda$11.0x00000008000c7ba0.apply(Packet, RBObject)": "3.5540817036166725",
            "richards.TaskControlBlock.runTask()": "40.74566171437775",
            "richards.Scheduler$$Lambda$10.0x00000008000c7978.apply(Packet, RBObject)": "3.912784079470878",
            "richards.Scheduler.<init>()": "1.7861914226209437",
            "richards.Scheduler.schedule()": "2.1814960817255784",
            "richards.RBObject.append(Packet, Packet)": "3.111194076286479",
            "richards.Packet.<init>(Packet, int, int)": "1.5629174947933255",
            "Richards.benchmark()": "25.742385810026835",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.8850175873971025"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.3390090001421652",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.8529903874544801",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.36581258270181",
            "som.Random.next()": "15.807661603403217",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.15310083877388103",
            "Storage.buildTreeDepth(int, Random)": "34.76482617586913",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.1604387432608303",
            "jdk.internal.misc.Unsafe.allocateInstance(Class) Unsafe.java (native)": "0.15310083877388103",
            "Storage$$Lambda$8.0x00000008000c2a98.apply(int)": "0.5959996937983226",
            "Storage$$Lambda$8.0x00000008000c2a98.<init>(Storage, int, Random)": "0.21324759686362002"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "36.04189947564255",
            "Towers.popDiskFrom(int)": "28.89491974997851",
            "Towers.moveDisks(int, int, int)": "7.208379895128511",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.11052030503604189",
            "Towers$TowersDisk.getSize()": "1.9279653211842864",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11052030503604189",
            "Towers.moveTopDisk(int, int)": "9.210025419670158",
            "java.lang.String.length() String.java": "0.17192047450050962",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "16.050004298011864",
            "java.lang.invoke.MethodHandle.invokeBasic(Object[]) MethodHandle.java (native)": "0.11052030503604189"
        },
        "YourKit_Permute.txt": {
            "java.lang.StringConcatHelper.newArrayWithSuffix(String, long) StringConcatHelper.java": "0.10007561268513987",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.04447805008228439",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.07783658764399769",
            "Permute.permute(int)": "56.72063336743317",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.22239025041142194",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.14455366276742426",
            "Permute.benchmark()": "0.5448561135079837",
            "sun.nio.fs.UnixFileAttributes.asBasicFileAttributes() UnixFileAttributes.java": "0.18903171284970866",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.10007561268513987",
            "Permute.swap(int, int)": "41.72041097718276"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.197666776207689",
            "deltablue.Variable.<init>()": "2.115511008872822",
            "som.Vector.forEach(ForEachInterface)": "38.71590535655602",
            "deltablue.EqualityConstraint.execute()": "10.33108774235951",
            "deltablue.BinaryConstraint.getOutput()": "2.1565888925402557",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.3414393690437065",
            "java.util.Arrays.copyOf(Object[], int) Arrays.java": "2.136049950706539",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "3.6764705882352935",
            "som.Vector.append(Object)": "10.002464673020043",
            "deltablue.Strength.of(Strength$Sym)": "2.752218205718041"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "4.826840397752749",
            "List.makeList(int)": "0.6594044259225067",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0791285311107008",
            "Benchmark.innerBenchmarkLoop(int)": "0.1186927966660512",
            "java.util.zip.ZipUtils.getBufferArray(ByteBuffer) ZipUtils.java": "0.1186927966660512",
            "List$Element.getNext()": "22.64394798617888",
            "com.yourkit.probes.TableIntBytes.<init>(ResourceRegistry, String, long) a": "0.10550470814760107",
            "List.isShorterThan(List$Element, List$Element)": "70.89916387518792",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.1582570622214016",
            "com.yourkit.probes.Table.createRow() a": "0.1186927966660512"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.3617343465636766",
            "nbody.Body.getZ()": "6.77956683013573",
            "nbody.Body.getX()": "0.541809644211667",
            "nbody.Body.getVZ()": "0.8196607438073936",
            "nbody.Body.setZ(double)": "0.6529500840499576",
            "nbody.NBodySystem.advance(double)": "44.984093024548145",
            "nbody.Body.setVY(double)": "4.681791028187994",
            "nbody.Body.setVZ(double)": "10.044317250385518",
            "nbody.Body.setVX(double)": "26.729275781108903",
            "nbody.Body.setY(double)": "0.458454314332949"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.49594564979178",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.05259697567389874",
            "java.util.zip.ZipFile.getInputStream(ZipEntry) ZipFile.java": "0.07012930089853166",
            "java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(Class, String, MethodType) InvokerBytecodeGenerator.java": "0.0613631382862152",
            "java.util.zip.ZipFile.<clinit>() ZipFile.java": "0.017532325224632914",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.07012930089853166",
            "java.util.concurrent.atomic.AtomicLong.addAndGet(long) AtomicLong.java": "0.07889546351084811",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.043830813061582284",
            "java.util.zip.ZipFile$InflaterCleanupAction.<init>(Inflater, ZipFile$CleanableResource) ZipFile.java": "0.017532325224632914",
            "sun.nio.fs.NativeBuffer.release() NativeBuffer.java": "0.07012930089853166"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.5889021256190667",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.889553222894047",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.2357286819963",
            "cd.RedBlackTree.findNode(Comparable)": "9.04343395745765",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.451527343837801",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.4690223051390983",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.180314234979433",
            "cd.RedBlackTree.put(Comparable, Object)": "6.391092929338338",
            "cd.Vector2D.compareNumbers(double, double)": "8.88609169307769",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.7986918114590122"
        },
        "YourKit_Sieve.txt": {
            "java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int) ConcurrentHashMap.java": "0.13962880219969065",
            "java.lang.invoke.InvokerBytecodeGenerator.storeInsnOpcode(LambdaForm$BasicType) InvokerBytecodeGenerator.java": "0.10740677092283896",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.09666609383055506",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.11814744801512285",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.8473964598728303",
            "Sieve.benchmark()": "89.3731740848943",
            "sun.invoke.util.Wrapper.hashPrim(Class) Wrapper.java": "0.10740677092283896",
            "java.util.stream.ReferencePipeline.<init>(Spliterator, int, boolean) ReferencePipeline.java": "0.11814744801512285",
            "Sieve.sieve(boolean[], int)": "7.6366214126138505",
            "jdk.internal.misc.Unsafe.getAndAddLong(Object, long, long) Unsafe.java": "0.09666609383055506"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.18020543419498225",
            "java.lang.invoke.MethodHandles.insertArgumentPrimitive(BoundMethodHandle, int, Class, Object) MethodHandles.java": "0.16018260817331756",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, long, Object) DirectMethodHandle$Holder": "0.18020543419498225",
            "Bounce.benchmark()": "65.33448130869189",
            "Benchmark.innerBenchmarkLoop(int)": "0.5806619546282761",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.2803195643033057",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.18020543419498225",
            "com.yourkit.probes.Table.createRow() a": "0.460524998498288",
            "Bounce$Ball.bounce()": "31.95643033057685",
            "Bounce$Ball.<init>(Random)": "0.38043369441162916"
        }
    },
    "Runtimes": {
        "NBody.data": 105.118,
        "JavaFlightRecorder_Queens.jfr": 108.11250000000001,
        "rebench_test_Async_Bounce.txt": 101.45400000000001,
        "JavaFlightRecorder_Sieve.jfr": 104.7685,
        "Permute.hpl": 103.76050000000001,
        "CD.data": 95.8875,
        "List.data": 152.835,
        "DeltaBlue.hpl": 96.838,
        "Bounce.hpl": 101.609,
        "Towers.hpl": 108.65950000000001,
        "JavaFlightRecorder_Json.jfr": 85.057,
        "NBody.hpl": 102.1445,
        "Sieve.data": 104.60849999999999,
        "Richards.hpl": 92.519,
        "JavaFlightRecorder_Havlak.jfr": 162.70299999999997,
        "JavaFlightRecorder_CD.jfr": 97.6175,
        "JavaFlightRecorder_DeltaBlue.jfr": 82.537,
        "rebench_test_Async_Mandelbrot.txt": 85.60900000000001,
        "JavaFlightRecorder_Towers.jfr": 110.39,
        "rebench_test_Async_CD.txt": 96.47800000000001,
        "Mandelbrot.data": 85.264,
        "rebench_test_Async_Permute.txt": 105.5515,
        "rebench_test_Async_NBody.txt": 103.3785,
        "JavaFlightRecorder_Permute.jfr": 105.6075,
        "JavaFlightRecorder_Bounce.jfr": 102.4765,
        "Havlak.data": 158.8705,
        "Mandelbrot.hpl": 85.0945,
        "List.hpl": 152.073,
        "JavaFlightRecorder_Storage.jfr": 103.4395,
        "rebench_test_Async_Towers.txt": 108.6615,
        "Queens.hpl": 108.386,
        "JavaFlightRecorder_NBody.jfr": 105.5695,
        "Storage.data": 115.543,
        "rebench_test_Async_Sieve.txt": 104.646,
        "JavaFlightRecorder_Richards.jfr": 94.78800000000001,
        "Storage.hpl": 108.13650000000001,
        "rebench_test_Async_List.txt": 150.7585,
        "Bounce.data": 102.1885,
        "rebench_test_Async_Richards.txt": 92.07749999999999,
        "Permute.data": 105.9205,
        "rebench_test_Async_DeltaBlue.txt": 102.31649999999999,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.5095,
        "JavaFlightRecorder_List.jfr": 158.3835,
        "DeltaBlue.data": 81.5915,
        "Queens.data": 111.75200000000001,
        "rebench_test_Async_Storage.txt": 110.5875,
        "Json.hpl": 80.70949999999999,
        "Towers.data": 112.765,
        "Havlak.hpl": 160.9975,
        "Richards.data": 91.3235,
        "rebench_test_Async_Havlak.txt": 157.6015,
        "Sieve.hpl": 102.4945,
        "CD.hpl": 94.32300000000001,
        "rebench_test_Async_Json.txt": 80.792,
        "Json.data": 82.10650000000001,
        "rebench_test_Async_Queens.txt": 110.2265
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.01%",
            "[.] Interpreter": "0.11%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.29%",
            "[.] void nbody.NBodySystem.advance(double)": "0.02%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.05%",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.18%",
            "native_apic_msr_eoi_write": "0.02%",
            "[.] void Permute.permute(int)": "99.01%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.16%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.30%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.28%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.12%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.31%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "5.76%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "11.43%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.14%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "7.61%",
            "[.] void deltablue.Planner.chainTest(int)": "27.54%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.48%",
            "x86_pmu_disable_all": "0.09%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.18%",
            "[.] boolean Queens.placeQueen(int)": "96.32%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.06%",
            "[.] Interpreter": "0.10%",
            "[.] void Towers.moveDisks(int, int, int)": "98.76%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.13%",
            "native_apic_msr_write": "0.03%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.96%",
            "[.] boolean richards.Scheduler.start()": "22.80%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.75%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.58%",
            "[.] void richards.Scheduler.schedule()": "8.26%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.48%",
            "x86_pmu_disable_all": "0.11%",
            "[.] Interpreter": "0.10%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.64%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.00%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.22%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.18%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.83%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.86%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "LinearScan::use_kind_of_input_operand": "0.01%",
            "[.] Interpreter": "0.13%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.25%",
            "[.] Interpreter": "0.06%",
            "[.] java.lang.Object List.benchmark()": "0.42%",
            "[.] List$Element List.makeList(int)": "0.68%",
            "[.] int List$Element.length()": "0.06%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.16%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.21%",
            "[.] java.lang.Object Sieve.benchmark()": "1.90%",
            "clear_page_rep": "0.07%",
            "[.] int Sieve.sieve(boolean[], int)": "2.43%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.07%",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.03%",
            "clear_page_rep": "0.07%",
            "[.] java.lang.Object Bounce.benchmark()": "6.59%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "31.69%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.79%",
            "[.] StubRoutines (2)": "8.42%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "18.95%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.94%"
        }
    }
}