{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.012384923419890188",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.0041283078066300626",
            "java.lang.invoke.MemberName.getMethodOrFieldType()Ljava/lang/invoke/MethodType;": "0.0041283078066300626",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.0041283078066300626",
            "java.nio.ByteBuffer.flip()Ljava/nio/ByteBuffer;": "0.0041283078066300626",
            "java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()Ljava/lang/Object;": "0.0041283078066300626",
            "java.lang.ref.SoftReference.<init>(Ljava/lang/Object;)V": "0.0041283078066300626",
            "Mandelbrot.mandelbrot(I)I": "99.9587169219337",
            "java.lang.ClassLoader.checkCerts(Ljava/lang/String;Ljava/security/CodeSource;)V": "0.0041283078066300626"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.7582052347320316",
            "Queens.benchmark()Ljava/lang/Object;": "0.062318238471125886",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)J": "0.0034621243595069936",
            "Queens.placeQueen(I)Z": "14.710566403545217",
            "Queens.getRowColumn(II)Z": "58.16368923971749",
            "java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(Ljava/lang/Class;Ljava/lang/Object;)V": "0.0034621243595069936",
            "java.util.Arrays.fill([ZZ)V": "0.4916216590499931",
            "Queens.setRowColumn(IIZ)V": "24.68148455892536",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.024234870516548955",
            "Queens.queens()Z": "1.052485805290126"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClass(ZLjava/lang/Object;)Ljava/lang/Class;": "0.003491863956980236",
            "java.lang.String.length()I": "0.003491863956980236",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.37362944339688525",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.494517773587541",
            "Bounce$Ball.bounce()Z": "84.7335707800824",
            "Bounce.benchmark()Ljava/lang/Object;": "8.478245687548013",
            "som.Random.next()I": "1.4875340456735806",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.06285355122564425",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.03142677561282212",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.299811439346323"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.8867506931016",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "37.80024695384759",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.12438552757263",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "3.1521561866598327",
            "havlak.HavlakLoopFinder.findLoops()V": "14.15558092398015",
            "som.Vector.<init>(I)V": "1.9523332479090465",
            "havlak.HavlakLoopFinder$$Lambda$79+0x000000080100f598.667447085.apply(Ljava/lang/Object;)V": "1.7729422454162105",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.3100435663863195",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.5277823078535984",
            "som.Vector.append(Ljava/lang/Object;)V": "3.1009016145190227"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.808539026017344",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.9778675980065135",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.8411097594474746",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.2367853078522937",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.179923870815838",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "14.95899226935604",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.977200486598909",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.714947219715103",
            "cd.Vector2D.compareNumbers(DD)I": "2.860730683200565",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "23.06635796413295"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.87777230162641",
            "java.lang.invoke.LambdaForm$MH+0x0000000801010000.254749889.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.0049285362247412515",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.014785608674223755",
            "List$Element.getNext()LList$Element;": "9.57121734844751",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.19467718087727942",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.1833415475603744",
            "List$Element.length()I": "0.06160670280926565",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.007392804337111878",
            "List$Element.setNext(LList$Element;)V": "0.024642681123706257",
            "List.makeList(I)LList$Element;": "1.027599802858551"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "som.Dictionary.at(Lsom/Dictionary$CustomHash;)Ljava/lang/Object;": "14.598871195323524",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.6786938117315056",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "10.617818988107237",
            "deltablue.ScaleConstraint.execute()V": "8.62225357790768",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "2.746422092320097",
            "deltablue.Variable.<init>()V": "8.62225357790768",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "14.296512799838741",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "5.130014110058456",
            "som.Vector.<init>(I)V": "2.9026405966539004",
            "som.Vector.append(Ljava/lang/Object;)V": "5.533158637371497"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.5497674060974204",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.350428664795665",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.6804813348198839",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.7637922417438774",
            "Storage.benchmark()Ljava/lang/Object;": "0.015378109261466303",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.980969589788934",
            "som.Random.next()I": "12.548537157356503",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.3263619238014686",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.030756218522932605",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6920149167659836"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.009873617693522907",
            "Run.measure(LBenchmark;)V": "0.006582411795681938",
            "java.io.Writer.write(Ljava/lang/String;)V": "0.006582411795681938",
            "Sieve.benchmark()Ljava/lang/Object;": "3.284623486045287",
            "Run.printResult(J)V": "0.006582411795681938",
            "java.nio.CharBuffer.position(I)Ljava/nio/CharBuffer;": "0.003291205897840969",
            "java.util.Arrays.fill([ZZ)V": "8.343206951026856",
            "Sieve.sieve([ZI)I": "88.24381253291206",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.019747235387045814",
            "java.io.PrintStream.println(Ljava/lang/String;)V": "0.006582411795681938"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.03460686600221484",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.86392580287929",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.194352159468439",
            "Towers.moveDisks(III)V": "3.934800664451827",
            "Towers$TowersDisk.getSize()I": "11.458333333333332",
            "Towers.benchmark()Ljava/lang/Object;": "0.05191029900332226",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.013842746400885935",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.281976744186046",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.518549280177186",
            "Towers.moveTopDisk(II)V": "4.588870431893687"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.697728294319007",
            "nbody.Body.getMass()D": "0.6120120327789496",
            "nbody.Body.setVX(D)V": "29.615158535320358",
            "nbody.NBodySystem.advance(D)V": "40.662494381245466",
            "nbody.Body.setZ(D)V": "0.5013657895646761",
            "nbody.Body.getY()D": "0.888627640814633",
            "nbody.Body.getZ()D": "8.22239894886069",
            "nbody.Body.setVZ(D)V": "8.862072542443208",
            "nbody.Body.setVY(D)V": "6.102831852287266",
            "nbody.Body.setX(D)V": "1.542132014798935"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.429897590805275",
            "richards.Scheduler.schedule()V": "10.822957341781478",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.298460178295146",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.901421940617403",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.7942975023944596",
            "Richards.benchmark()Ljava/lang/Object;": "9.688351875046047",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.324762395933103",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.8385029101893466",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.2899137994548004",
            "richards.RBObject.<init>()V": "10.587195166875414"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.7897730058341916",
            "json.JsonPureStringParser.isDigit()Z": "2.750404471245772",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.294602147374614",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "22.910231896847577",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.29489630828063",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "9.908319850958476",
            "java.lang.String.<init>([BB)V": "5.667500122567045",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.098641957150561",
            "json.JsonPureStringParser.read()V": "13.335294406040106",
            "java.util.Arrays.copyOfRange([BII)[B": "5.500808942491544"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.010960906101571063",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003653635367190354",
            "java.lang.String.length()I": "0.003653635367190354",
            "Permute.swap(II)V": "43.81074168797954",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.003653635367190354",
            "java.lang.System$2.encodeASCII([CI[BII)I": "0.003653635367190354",
            "jdk.internal.org.objectweb.asm.SymbolTable.hash(ILjava/lang/String;)I": "0.003653635367190354",
            "Permute.permute(I)V": "56.06868834490317",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01826817683595177",
            "Permute.benchmark()Ljava/lang/Object;": "0.05480453050785531"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "Richards::benchmark": "5.7",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.HandlerTaskDataRecord::workInAdd": "2.1",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "5.9",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "6.0"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.LambdaFormEditor::bindArgumentForm": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.misc.Unsafe::allocateUninitializedArray": "0.0",
            "java.lang.String::<init>": "0.0",
            "java.lang.StringConcatHelper::mix": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "java.io.OutputStream::flush": "0.0",
            "Mandelbrot::mandelbrot": "98.3"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.2",
            "List::isShorterThan": "82.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.6",
            "json.JsonPureStringParser::read": "13.1",
            "java.lang.String::<init>": "4.8",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "8.8",
            "java.lang.String::equals": "20.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "10.4",
            "json.JsonPureStringParser::readValue": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.8"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.1",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.3",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.3",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "6.5",
            "som.Vector::hasSome": "2.0",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.4",
            "Permute::permute": "51.0",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::push": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "5.8",
            "java.lang.invoke.InvokerBytecodeGenerator::addMethod": "0.0",
            "java.util.concurrent.ConcurrentHashMap::tabAt": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "57.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "13.2",
            "Queens::setRowColumn": "25.6",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.9",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.6",
            "java.util.Arrays::setAll": "34.2",
            "som.Random::next": "12.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "2.1",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.2"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.2",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "88.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0",
            "java.util.Arrays::fill": "5.6",
            "java.lang.invoke.MemberName$Factory::resolve": "0.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "10.9",
            "deltablue.ScaleConstraint::execute": "5.8",
            "deltablue.Planner::addPropagate": "3.0",
            "deltablue.Variable::<init>": "7.4",
            "AGCT::Unknown not Java[ERR=-3]": "5.9",
            "AGCT::Unknown Java[ERR=-5]": "11.6",
            "deltablue.AbstractConstraint::satisfy": "5.7",
            "deltablue.Strength::stronger": "13.9",
            "som.Vector::forEach": "9.3",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.7"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.1",
            "Bounce$Ball::bounce": "82.1",
            "java.util.Arrays::setAll": "1.5",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "1.4",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "Bounce$Ball::<init>": "3.3",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.5",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.4",
            "nbody.Body::getZ": "8.1",
            "nbody.Body::setVX": "29.6",
            "nbody.Body::setVY": "6.0",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.3",
            "nbody.NBodySystem::advance": "40.2"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.6",
            "Towers::popDiskFrom": "20.9",
            "Towers::moveDisks": "3.7",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "Towers::pushDisk": "34.6",
            "Towers$TowersDisk::setNext": "15.3",
            "AGCT::Unknown Java[ERR=-5]": "4.7",
            "Towers::moveTopDisk": "4.3",
            "Towers$TowersDisk::getNext": "3.6"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.0",
            "cd.RedBlackTree::forEach": "4.7",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "8.0",
            "cd.RedBlackTree::treeMinimum": "6.3",
            "AGCT::Unknown not Java[ERR=-3]": "5.7",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.Vector2D::compareNumbers": "3.1",
            "cd.RedBlackTree::treeInsert": "20.9",
            "cd.CollisionDetector::isInVoxel": "14.3"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "som.Dictionary.getBucket": "13.04%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.54%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "10.91%",
            "java.util.Arrays.copyOf": "3.95%",
            "deltablue.Variable.<init>": "4.26%",
            "som.Vector.<init>": "3.06%",
            "som.Vector.forEach": "10.73%",
            "deltablue.Planner.addPropagate": "2.70%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "3.11%",
            "deltablue.ScaleConstraint.execute": "6.70%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.85%",
            "som.Random.next": "1.25%",
            "clear_page_rep_[k]": "0.08%",
            "java.util.Arrays.setAll": "1.23%",
            "Bounce.benchmark": "9.28%",
            "__memset_avx2_unaligned_erms": "0.02%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Bounce$Ball.<init>": "3.21%",
            "Bounce.lambda$benchmark$0": "0.29%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.01%",
            "G1ServiceThread::sleep_before_next_cycle()": "0.00%",
            "LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*,": "0.01%",
            "clock_gettime@GLIBC_2.2.5": "0.00%",
            "Mandelbrot.mandelbrot": "99.56%",
            "sun.nio.cs.StreamEncoder.writeBytes": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "MethodLiveness::init_basic_blocks()": "0.01%",
            "free_unref_page_[k]": "0.00%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.51%",
            "som.Random.next": "12.41%",
            "java.util.Arrays.setAll": "35.35%",
            "Storage.lambda$buildTreeDepth$0": "3.33%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.66%",
            "SpinPause": "0.22%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.56%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.23%",
            "Storage.buildTreeDepth": "43.65%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.09%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.73%",
            "Towers.popDiskFrom": "21.42%",
            "Towers.moveDisks": "8.26%",
            "clear_page_rep_[k]": "0.05%",
            "Towers.pushDisk": "35.58%",
            "Towers.moveTopDisk": "4.11%",
            "Towers$TowersDisk.getSize": "10.49%",
            "Towers.buildTowerAt": "0.03%",
            "Towers$TowersDisk.getNext": "3.76%",
            "Towers.benchmark": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.18%",
            "cd.CollisionDetector.isInVoxel": "14.18%",
            "cd.RedBlackTree.forEach": "5.02%",
            "cd.RedBlackTree.put": "7.34%",
            "cd.RedBlackTree.treeInsert": "20.77%",
            "cd.RedBlackTree.findNode": "7.71%",
            "cd.RedBlackTree.treeMinimum": "6.28%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.86%",
            "cd.Vector2D.compareNumbers": "2.50%",
            "cd.RedBlackTree.leftRotate": "2.36%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.55%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.76%",
            "som.Vector.hasSome": "2.46%",
            "som.Vector.append": "4.20%",
            "som.Vector.<init>": "2.10%",
            "som.IdentitySet.lambda$contains$0": "32.98%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "6.93%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.31%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.86%",
            "havlak.HavlakLoopFinder.doDFS": "5.38%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.04%",
            "Sieve.benchmark": "3.05%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.09%",
            "Sieve.sieve": "89.77%",
            "SpinPause": "0.04%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "__memset_avx2_unaligned_erms": "0.03%",
            "__futex_abstimed_wait_common": "0.02%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.51%",
            "Permute.swap": "41.03%",
            "Permute.benchmark": "0.02%",
            "LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*,": "0.01%",
            "clear_page_rep_[k]": "0.01%",
            "jdk.internal.org.objectweb.asm.Frame.execute": "0.01%",
            "GraphBuilder::iterate_bytecodes_for_block(int)": "0.01%",
            "inode_security_[k]": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "__tls_get_addr": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.60%",
            "nbody.Body.getZ": "8.28%",
            "nbody.Body.getY": "0.70%",
            "nbody.Body.setX": "1.53%",
            "nbody.Body.setY": "1.62%",
            "nbody.Body.setZ": "0.39%",
            "nbody.Body.setVX": "29.41%",
            "nbody.Body.setVY": "6.19%",
            "nbody.Body.getMass": "0.65%",
            "nbody.NBodySystem.advance": "41.11%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.78%",
            "List.makeList": "0.83%",
            "clear_page_rep_[k]": "0.07%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.03%",
            "List.tail": "4.91%",
            "List$Element.length": "0.06%",
            "List.isShorterThan": "83.71%",
            "List$Element.<init>": "0.14%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.24%",
            "java.lang.String.length": "3.33%",
            "java.lang.String.<init>": "5.79%",
            "json.JsonPureStringParser.isWhiteSpace": "2.18%",
            "java.lang.String.isLatin1": "2.59%",
            "json.JsonPureStringParser.readStringInternal": "9.15%",
            "java.util.Arrays.copyOfRange": "7.88%",
            "java.lang.String.equals": "21.26%",
            "json.JsonPureStringParser.read": "15.58%",
            "json.JsonPureStringParser.readValue": "2.52%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.76%",
            "Queens.getRowColumn": "57.21%",
            "Queens.setRowColumn": "25.65%",
            "clear_page_rep_[k]": "0.07%",
            "Queens.queens": "0.53%",
            "Queens.placeQueen": "15.18%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Queens.benchmark": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.43%",
            "Richards.benchmark": "4.62%",
            "richards.Packet.<init>": "6.50%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.52%",
            "itable": "38.06%",
            "richards.TaskControlBlock.<init>": "3.20%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.19%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.05%",
            "richards.RBObject.<init>": "5.46%",
            "richards.RBObject.append": "2.46%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "2.6",
            "Towers.moveDisks": "95.7",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.9",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.6",
            "deltablue.AbstractConstraint.satisfy": "10.1",
            "deltablue.Planner.removePropagateFrom": "9.2",
            "som.Vector.<init>": "31.6",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "7.5",
            "deltablue.Planner.addPropagate": "2.2",
            "deltablue.Planner.constraintsConsuming": "5.1",
            "deltablue.AbstractConstraint.<init>": "3.8",
            "deltablue.Planner.addConstraintsConsumingTo": "16.1"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "havlak.HavlakLoopFinder.stepD": "3.4",
            "java.lang.Integer.valueOf": "8.6",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.7",
            "havlak.HavlakLoopFinder.processEdges": "3.6",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "13.3",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.TaskControlBlock.runTask": "85.3",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.6",
            "richards.Scheduler.lambda$createIdler$2": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.util.Arrays.setAll": "0.0",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "55.7",
            "Bounce$Ball.<init>": "43.2",
            "Bounce.lambda$benchmark$0": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "7.9",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.Vector2D.<init>": "43.7",
            "cd.RedBlackTree$InsertResult.<init>": "15.2",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "5.0",
            "cd.Motion.<init>": "1.4"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.2",
            "nbody.NBodySystem.createBodies": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.1",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.8",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "1.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "76.9",
            "List$Element.<init>": "20.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.1",
            "json.JsonValue.<init>": "4.2",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "30.3",
            "Queens.placeQueen": "69.0",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.364123159303887",
            "json.JsonPureStringParser.readChar(String)": "2.2160436618267947",
            "java.lang.String.<init>(byte[], byte) String.java": "7.2701060652867895",
            "json.JsonPureStringParser.read()": "21.674389867160954",
            "java.lang.String.length() String.java": "4.19730202862733",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.2860673463083105",
            "java.lang.String.substring(int, int) String.java": "9.547935331067862",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.528678817835446",
            "json.JsonPureStringParser.readStringInternal()": "3.2334466069405834",
            "json.JsonPureStringParser.readValue()": "1.9071156420554014"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.3959177416175734",
            "som.Vector.hasSome(TestInterface)": "2.0126585050699726",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "4.9714198112174515",
            "havlak.HavlakLoopFinder.findLoops()": "11.561288627055914",
            "som.Vector.<init>(int)": "3.764700729287576",
            "som.Vector.append(Object)": "4.353824927180746",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.082630691399664",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.121679332471913",
            "som.Vector.removeAll()": "2.733185869779462",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.5659753400057"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "10.035658938055757",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, long) DirectMethodHandle$Holder": "0.13541368881934307",
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.12036772339497162",
            "Queens.getRowColumn(int, int)": "67.21032755066729",
            "Queens.queens()": "0.8877119600379157",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.5867926515504867",
            "Queens.setRowColumn(int, int, boolean)": "19.99608804898966",
            "java.lang.invoke.MethodType.makeImpl(Class, Class[], boolean) MethodType.java": "0.21064351594120034",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.2858733430630576",
            "javax.management.openmbean.CompositeType.isAssignableFrom(OpenType) CompositeType.java": "0.12036772339497162"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.958611330595585",
            "richards.TaskControlBlock.runTask()": "35.294284388098944",
            "richards.Scheduler.<init>()": "1.7326478331272346",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.4156902068193338",
            "richards.Scheduler.schedule()": "2.696411045009868",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "4.099536897603703",
            "richards.RBObject.append(Packet, Packet)": "3.273960322718947",
            "Richards.benchmark()": "30.87231200416686",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.6617828910770411",
            "richards.Scheduler$$Lambda$12.0x00000008000c7528.apply(Packet, RBObject)": "1.5873747019243378"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2675227394328518",
            "sun.invoke.util.Wrapper.findPrimitiveType(Class) Wrapper.java": "0.08189471615291383",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.2393400377807626",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.15832978456230007",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.862624343477359",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.805407235125195",
            "som.Random.next()": "14.23876131511995",
            "Storage.buildTreeDepth(int, Random)": "38.82355510422468",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.002806258940174",
            "java.lang.String.isLatin1() String.java": "0.2839016826634346"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "30.494025065578544",
            "Towers.pushDisk(Towers$TowersDisk, int)": "29.607500242883507",
            "Towers.moveDisks(int, int, int)": "9.53317788788497",
            "Towers$TowersDisk.getSize()": "1.9916448071504902",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.206450986107063",
            "Towers.moveTopDisk(int, int)": "7.4565238511609815",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.272806761877",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.2793160400272029",
            "Towers.benchmark()": "0.23073933741377634",
            "java.lang.invoke.Invokers$Holder.linkToTargetMethod(Object, Object, Object) Invokers$Holder": "0.19430681045370637"
        },
        "YourKit_Permute.txt": {
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.1028077951154874",
            "java.lang.ClassLoader.findLoadedClass0(String) ClassLoader.java (native)": "0.06853853007699161",
            "jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry) URLClassPath.java": "0.022846176692330536",
            "java.nio.DirectLongBufferU.<init>(DirectBuffer, int, int, int, int, int, MemorySegmentProxy) DirectLongBufferU.java": "0.1028077951154874",
            "Permute.permute(int)": "58.00644262182723",
            "java.io.PrintStream.writeln(String) PrintStream.java": "0.0011423088346165268",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.12565397180781795",
            "com.yourkit.probes.Table.createRow() a": "0.1028077951154874",
            "Permute.benchmark()": "0.2170386785771401",
            "Permute.swap(int, int)": "41.24877201800278"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "6.169897920794563",
            "som.Vector.forEach(ForEachInterface)": "21.619723608637862",
            "deltablue.Plan$$Lambda$27.0x00000008000ccd88.apply(Object)": "2.0315517544079658",
            "som.Dictionary.at(Dictionary$CustomHash)": "7.775074615635426",
            "som.Vector.<init>(int)": "4.439316796669259",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.3640741390985935",
            "deltablue.ScaleConstraint.execute()": "3.4611622482506084",
            "deltablue.BinaryConstraint.chooseMethod(int)": "5.317147801660355",
            "som.Vector.append(Object)": "2.5833312432595124",
            "deltablue.Strength.weaker(Strength)": "11.838178124451357"
        },
        "YourKit_List.txt": {
            "java.lang.invoke.LambdaForm$MH.0x00000008000c3400.invoke(Object, long, Object, Object) LambdaForm$MH": "0.1205432482387292",
            "List.tail(List$Element, List$Element, List$Element)": "3.4153920334306607",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.09375585974123382",
            "List.makeList(int)": "0.8304090434223567",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.21429910797996304",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.20090541373121534",
            "List$Element.getNext()": "21.068281053280117",
            "List$Element.length()": "0.10714955398998152",
            "List.isShorterThan(List$Element, List$Element)": "73.70549945085854",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.18751171948246764"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.095360273679709",
            "nbody.Body.getZ()": "5.274036063003349",
            "nbody.Body.setX(double)": "0.698453424559903",
            "nbody.Body.getX()": "1.097569667165562",
            "nbody.Body.setZ(double)": "0.698453424559903",
            "nbody.NBodySystem.advance(double)": "46.867650203121656",
            "nbody.Body.setVY(double)": "6.0009977906065135",
            "nbody.Body.setVZ(double)": "8.980115458627324",
            "nbody.Body.setVX(double)": "25.728743496543366",
            "nbody.Body.setY(double)": "1.126077970208823"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.63005597490356",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "sun.nio.fs.UnixFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "java.lang.invoke.LambdaForm$NamedFunction.returnType() LambdaForm.java": "0.05272361402799624",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.0",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.1581708420839887",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.02636180701399812",
            "Harness.main(String[])": "8.78726900466604E-4",
            "sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "java.lang.Math.max(int, int) Math.java": "0.13180903506999062"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.045988659309872",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.72762970634915",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.096082916688399",
            "cd.RedBlackTree.findNode(Comparable)": "10.59557251112088",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.881801992444508",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.2875110836245502",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.257706378951917",
            "cd.RedBlackTree.put(Comparable, Object)": "5.7299544733136125",
            "cd.Vector2D.compareNumbers(double, double)": "8.71042494057687",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.187561006504876"
        },
        "YourKit_Sieve.txt": {
            "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next() Collections.java": "0.032505525939409696",
            "sun.management.MappedMXBeanType$CompositeDataMXBeanType.<init>(Class) MappedMXBeanType.java": "0.043340701252546264",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.397737615394617",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.10835175313136565",
            "Sieve.benchmark()": "87.91661249079009",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.032505525939409696",
            "com.yourkit.probes.ResourceCounter.open(Object, String) a": "0.1516924543839119",
            "java.lang.invoke.LambdaForm$BasicType.basicTypeSlots() LambdaForm.java": "0.043340701252546264",
            "Sieve.sieve(boolean[], int)": "10.25007584622719",
            "java.util.zip.ZipFile.<init>(File, int, Charset) ZipFile.java": "0.021670350626273132"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.14060382953702993",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.14060382953702993",
            "Bounce.benchmark()": "49.96548815093181",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.12782166321548175",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.37068282332489705",
            "Bounce.lambda$benchmark$0(Random, int)": "1.022573305723854",
            "som.Random.next()": "0.8691873098652759",
            "Bounce$Ball.bounce()": "45.26165094460209",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.23007899378786717",
            "Bounce$Ball.<init>(Random)": "1.2015236342255284"
        }
    },
    "Runtimes": {
        "NBody.data": 104.896,
        "JavaFlightRecorder_Queens.jfr": 105.58449999999999,
        "rebench_test_Async_Bounce.txt": 102.911,
        "JavaFlightRecorder_Sieve.jfr": 107.75200000000001,
        "Permute.hpl": 104.9805,
        "CD.data": 94.606,
        "List.data": 149.678,
        "DeltaBlue.hpl": 83.238,
        "Bounce.hpl": 102.1345,
        "Towers.hpl": 107.2975,
        "NBody.hpl": 102.548,
        "JavaFlightRecorder_Json.jfr": 85.634,
        "Sieve.data": 108.57050000000001,
        "Richards.hpl": 91.679,
        "JavaFlightRecorder_Havlak.jfr": 163.9905,
        "JavaFlightRecorder_CD.jfr": 97.4555,
        "JavaFlightRecorder_DeltaBlue.jfr": 82.84899999999999,
        "rebench_test_Async_Mandelbrot.txt": 86.687,
        "JavaFlightRecorder_Towers.jfr": 110.74000000000001,
        "rebench_test_Async_CD.txt": 95.1285,
        "Mandelbrot.data": 86.4065,
        "rebench_test_Async_Permute.txt": 105.85849999999999,
        "rebench_test_Async_NBody.txt": 103.074,
        "JavaFlightRecorder_Permute.jfr": 105.038,
        "JavaFlightRecorder_Bounce.jfr": 104.2635,
        "Havlak.data": 158.9275,
        "Mandelbrot.hpl": 85.10249999999999,
        "JavaFlightRecorder_Storage.jfr": 98.62049999999999,
        "List.hpl": 149.425,
        "rebench_test_Async_Towers.txt": 109.695,
        "Queens.hpl": 104.7065,
        "JavaFlightRecorder_NBody.jfr": 105.042,
        "Storage.data": 114.146,
        "rebench_test_Async_Sieve.txt": 104.5455,
        "JavaFlightRecorder_Richards.jfr": 92.0135,
        "Storage.hpl": 109.9,
        "rebench_test_Async_List.txt": 151.65300000000002,
        "rebench_test_Async_Richards.txt": 92.328,
        "Bounce.data": 102.0035,
        "Permute.data": 105.92150000000001,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.247,
        "rebench_test_Async_DeltaBlue.txt": 94.8325,
        "JavaFlightRecorder_List.jfr": 151.221,
        "DeltaBlue.data": 91.265,
        "rebench_test_Async_Storage.txt": 109.1555,
        "Queens.data": 111.56899999999999,
        "Json.hpl": 79.951,
        "Towers.data": 112.886,
        "Havlak.hpl": 159.36450000000002,
        "Richards.data": 92.7645,
        "rebench_test_Async_Havlak.txt": 158.2355,
        "Sieve.hpl": 103.143,
        "CD.hpl": 95.816,
        "Json.data": 81.6325,
        "rebench_test_Async_Queens.txt": 105.2045,
        "rebench_test_Async_Json.txt": 82.309
    },
    "Perf": {
        "NBody.data": {" ": "0"},
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.01%",
            "[.] void Permute.permute(int)": "0.02%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.34%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.19%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.17%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.13%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.30%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "6.06%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.78%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.81%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "12.96%",
            "[.] void deltablue.Planner.chainTest(int)": "28.21%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.62%",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.20%",
            "[.] boolean Queens.placeQueen(int)": "96.48%",
            "clear_page_rep": "0.08%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.07%",
            "[.] Interpreter": "0.10%",
            "[.] void Towers.moveDisks(int, int, int)": "98.88%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "clear_page_rep": "0.03%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.11%",
            "[.] boolean richards.Scheduler.start()": "22.37%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.87%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.25%",
            "[.] void richards.Scheduler.schedule()": "7.97%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.75%",
            "x86_pmu_disable_all": "0.10%",
            "[.] Interpreter": "0.14%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.07%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "23.67%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.38%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.38%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.78%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.35%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.17%",
            "copy_page": "0.01%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.08%",
            "[.] Interpreter": "0.07%",
            "[.] java.lang.Object List.benchmark()": "0.49%",
            "[.] List$Element List.makeList(int)": "0.75%",
            "clear_page_rep": "0.06%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.18%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.55%",
            "[.] java.lang.Object Sieve.benchmark()": "1.79%",
            "clear_page_rep": "0.06%",
            "[.] int Sieve.sieve(boolean[], int)": "2.11%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.16%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "clear_page_rep": "0.08%",
            "[.] java.lang.Object Bounce.benchmark()": "6.36%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.18%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.67%",
            "[.] StubRoutines (2)": "8.20%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.46%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.35%"
        }
    }
}