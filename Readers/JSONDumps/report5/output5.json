{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.004168403501458941",
            "java.lang.ref.SoftReference.get()Ljava/lang/Object;": "0.004168403501458941",
            "jdk.jfr.internal.PlatformRecorder.periodicTask()V": "0.004168403501458941",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.004168403501458941",
            "Run.measure(LBenchmark;)V": "0.004168403501458941",
            "java.nio.charset.CoderResult.isOverflow()Z": "0.004168403501458941",
            "Mandelbrot.mandelbrot(I)I": "99.95831596498542",
            "jdk.jfr.internal.EventWriter.putStackTrace()V": "0.004168403501458941",
            "java.io.PrintStream.ensureOpen()V": "0.004168403501458941",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.004168403501458941"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.5405405405405406",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.003465003465003465",
            "Queens.benchmark()Ljava/lang/Object;": "0.04851004851004851",
            "Queens.placeQueen(I)Z": "14.144144144144144",
            "Queens.getRowColumn(II)Z": "59.078309078309076",
            "java.util.Arrays.fill([ZZ)V": "0.33957033957033955",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.003465003465003465",
            "Queens.setRowColumn(IIZ)V": "25.006930006930006",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.024255024255024255",
            "Queens.queens()Z": "0.796950796950797"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x0000000801010400.63001505.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.0035197634718946887",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.2463834430326282",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.2917531941853508",
            "Bounce$Ball.bounce()Z": "85.37890253774947",
            "java.lang.StringConcatHelper.prepend(J[BJLjava/lang/String;)J": "0.0035197634718946887",
            "Bounce.benchmark()Ljava/lang/Object;": "8.373517299637465",
            "som.Random.next()I": "1.3269508289042977",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.03871739819084158",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.02815810777515751",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.2874590827496393"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.121300736928296",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.05825242718447",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.3024915194759625",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.2014270674932743",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "1.6773891683237807",
            "havlak.HavlakLoopFinder.findLoops()V": "11.723008539010412",
            "som.Vector.<init>(I)V": "3.0600070183647214",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.122119546145749",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.816703708036028",
            "som.Vector.append(Ljava/lang/Object;)V": "5.8907474558427895"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.792085306232437",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.656773299457212",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.69084189860261",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.386726719790584",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.282480655964892",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.348192631943643",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.13708280401894",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.679870654810024",
            "cd.Vector2D.compareNumbers(DD)I": "3.872656580821496",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.042576125033683"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.88056523422378",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.012098335269066977",
            "List$Element.getNext()LList$Element;": "9.635114208284941",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.20083236546651181",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.004839334107626791",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.1244676732481613",
            "List$Element.length()I": "0.07742934572202866",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.012098335269066977",
            "List$Element.setNext(LList$Element;)V": "0.041134339914827726",
            "List.makeList(I)LList$Element;": "0.9920634920634922"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "6.1545219386012",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.067206793889404",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "13.465762116257503",
            "deltablue.ScaleConstraint.execute()V": "9.146371223583387",
            "deltablue.EqualityConstraint.execute()V": "2.8405485870467078",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "28.049197130167407",
            "som.Vector.<init>(I)V": "7.726096930060032",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "1.7912050368490409",
            "deltablue.Planner$$Lambda$84+0x0000000801014668.2039810346.apply(Ljava/lang/Object;)V": "2.2402264629801354",
            "som.Vector.append(Ljava/lang/Object;)V": "3.7288301039582215"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.6682345914062792",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.18124463359092",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.6346362041288685",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.415836039870086",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.011199462425803561",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.970060103781684",
            "som.Random.next()I": "12.18128196513234",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.2394071751222608",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.02613207899354164",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6346362041288685"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.003268828451882845",
            "Sieve.benchmark()Ljava/lang/Object;": "3.1119246861924683",
            "Run.printResult(J)V": "0.00653765690376569",
            "java.io.FileOutputStream.write([BII)V": "0.003268828451882845",
            "java.util.Arrays.fill([ZZ)V": "6.197698744769874",
            "java.util.concurrent.ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;": "0.003268828451882845",
            "Sieve.sieve([ZI)I": "90.58904288702928",
            "java.nio.CharBuffer.<init>(IIII[CILjdk/internal/access/foreign/MemorySegmentProxy;)V": "0.003268828451882845",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01307531380753138",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.00653765690376569"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.041918468578614594",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.697523317148146",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.307122646452649",
            "Towers.moveDisks(III)V": "3.9263632235302337",
            "Towers$TowersDisk.getSize()I": "11.335452544800363",
            "Towers.benchmark()Ljava/lang/Object;": "0.055891291438152794",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.53355224089147",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.735669123554686",
            "Towers.moveTopDisk(II)V": "4.2966430293079965",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.006986411429769099"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.6834899235094827",
            "nbody.Body.getMass()D": "0.5867765708497782",
            "nbody.Body.setVX(D)V": "28.804442736893577",
            "nbody.NBodySystem.advance(D)V": "42.88009500192099",
            "nbody.Body.getY()D": "0.8941357270091859",
            "nbody.Body.getZ()D": "7.722398798505117",
            "nbody.Body.setVZ(D)V": "8.920400963990081",
            "nbody.Body.getVZ()D": "0.4296042750864448",
            "nbody.Body.setVY(D)V": "5.996996262792079",
            "nbody.Body.setX(D)V": "1.093220634976075"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.8410220014194465",
            "richards.Scheduler.schedule()V": "11.320085166784953",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.171753016323633",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.848119233498935",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.7828246983676364",
            "Richards.benchmark()Ljava/lang/Object;": "9.92902767920511",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.655784244144783",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.393186657203691",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.322924059616749",
            "richards.RBObject.<init>()V": "11.603974449964513"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.8951565843221165",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "4.133437074499125",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "24.513713285353045",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.446411204045906",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.484341567788368",
            "java.lang.String.<init>([BB)V": "6.224469947481035",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.007002528690916",
            "json.JsonPureStringParser.read()V": "13.299941645594243",
            "java.util.Arrays.copyOfRange([BII)[B": "4.2890488231861505",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.4866757440186733"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.010892455159392926",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.007261636772928618",
            "java.lang.String.length()I": "0.003630818386464309",
            "Permute.swap(II)V": "44.27056858615932",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.003630818386464309",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.003630818386464309",
            "java.lang.StringLatin1.inflate([BI[CII)V": "0.003630818386464309",
            "Permute.permute(I)V": "55.649553409338466",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.007261636772928618",
            "Permute.benchmark()Ljava/lang/Object;": "0.021784910318785853"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "richards.Packet::setLink": "2.0",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "AGCT::Unknown Java[ERR=-5]": "46.1",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.io.PrintStream::writeln": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "java.lang.System::arraycopy": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "98.2"
        },
        "List.hpl": {
            "List$Element::getNext": "9.3",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "82.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "15.7",
            "java.lang.String::<init>": "5.4",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "3.7",
            "java.util.Arrays::copyOfRange": "7.7",
            "java.lang.String::equals": "21.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.4"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.9",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.2",
            "havlak.HavlakLoopFinder::findLoops": "5.8",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "4.5",
            "AGCT::Unknown not Java[ERR=-3]": "7.6",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::hasSome": "2.5",
            "som.Vector::<init>": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "40.2",
            "Permute::permute": "51.6",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "5.8",
            "java.lang.AbstractStringBuilder::ensureCapacityInternal": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "67.8",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "8.2",
            "Queens::setRowColumn": "19.8",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.1",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.3",
            "java.util.Arrays::setAll": "34.6",
            "som.Random::next": "12.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "AGCT::Unknown Java[ERR=-5]": "2.0",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.6",
            "Storage::lambda$buildTreeDepth$0": "3.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "2.9",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.Integer::valueOf": "0.0",
            "Sieve::sieve": "89.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Run::measure": "0.0",
            "java.util.Arrays::fill": "5.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "9.6",
            "deltablue.ScaleConstraint::execute": "6.2",
            "java.util.Arrays::setAll": "3.6",
            "som.Vector::append": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "7.4",
            "AGCT::Unknown Java[ERR=-5]": "9.9",
            "deltablue.BinaryConstraint::chooseMethod": "2.6",
            "deltablue.AbstractConstraint::<init>": "15.2",
            "som.Vector::<init>": "6.4",
            "som.Vector::forEach": "10.8"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.6",
            "Bounce$Ball::bounce": "82.5",
            "java.util.Arrays::setAll": "1.3",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "3.1",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.8",
            "nbody.Body::getZ": "8.2",
            "nbody.Body::setVX": "29.1",
            "nbody.Body::setVY": "6.1",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "nbody.NBodySystem::advance": "39.8"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.8",
            "Towers::popDiskFrom": "19.3",
            "Towers::moveDisks": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "6.4",
            "Towers::pushDisk": "33.9",
            "Towers$TowersDisk::setNext": "15.0",
            "AGCT::Unknown Java[ERR=-5]": "4.6",
            "Towers::benchmark": "0.0",
            "Towers::moveTopDisk": "3.9",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.2",
            "cd.RedBlackTree::forEach": "4.8",
            "cd.RedBlackTree::put": "7.3",
            "cd.RedBlackTree::findNode": "8.0",
            "cd.RedBlackTree::leftRotate": "2.5",
            "cd.RedBlackTree::treeMinimum": "6.6",
            "AGCT::Unknown not Java[ERR=-3]": "5.5",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.RedBlackTree::treeInsert": "20.5",
            "cd.CollisionDetector::isInVoxel": "13.9"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.57%",
            "som.Dictionary.at": "15.06%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "14.90%",
            "som.Vector.append": "5.92%",
            "deltablue.Variable.<init>": "6.11%",
            "som.Vector.forEach": "7.88%",
            "deltablue.Planner.addPropagate": "3.16%",
            "itable": "3.04%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "3.03%",
            "deltablue.ScaleConstraint.execute": "5.67%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "84.10%",
            "som.Random.next": "1.45%",
            "clear_page_rep_[k]": "0.09%",
            "java.util.Arrays.setAll": "1.32%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "Bounce.benchmark": "8.92%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "Bounce$Ball.<init>": "3.11%",
            "Bounce.lambda$benchmark$0": "0.27%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.02%",
            "VMError::is_error_reported()": "0.00%",
            "Mandelbrot.mandelbrot": "99.58%",
            "ciEnv::get_method_by_index(constantPoolHandle": "0.00%",
            "__GI___pthread_disable_asynccancel": "0.00%",
            "OptoRuntime::osr_end_Type()": "0.00%",
            "SystemDictionary::find_constrained_instance_or_array_klass(Thread*,": "0.00%",
            "jdk.internal.org.objectweb.asm.Frame.execute": "0.01%",
            "copy_page_[k]": "0.01%",
            "os::elapsed_counter()": "0.00%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.55%",
            "som.Random.next": "12.73%",
            "java.util.Arrays.setAll": "35.97%",
            "Storage.lambda$buildTreeDepth$0": "3.45%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.43%",
            "SpinPause": "0.18%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.64%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.27%",
            "Storage.buildTreeDepth": "42.67%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.03%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.71%",
            "Towers.popDiskFrom": "22.92%",
            "Towers.moveDisks": "7.96%",
            "clear_page_rep_[k]": "0.03%",
            "Towers.pushDisk": "34.69%",
            "Towers.moveTopDisk": "4.84%",
            "Towers$TowersDisk.getSize": "10.56%",
            "Towers$TowersDisk.getNext": "3.76%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Towers.benchmark": "0.04%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.10%",
            "cd.CollisionDetector.isInVoxel": "14.64%",
            "cd.RedBlackTree.forEach": "5.10%",
            "cd.RedBlackTree.put": "7.11%",
            "cd.RedBlackTree.treeInsert": "20.82%",
            "cd.RedBlackTree.findNode": "7.91%",
            "cd.RedBlackTree.treeMinimum": "6.29%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.92%",
            "cd.Vector2D.compareNumbers": "2.80%",
            "cd.RedBlackTree.leftRotate": "2.35%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.66%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.90%",
            "som.Vector.hasSome": "2.16%",
            "som.Vector.append": "4.27%",
            "som.Vector.forEach": "2.13%",
            "som.IdentitySet.lambda$contains$0": "33.08%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.01%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.58%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.76%",
            "havlak.HavlakLoopFinder.doDFS": "5.36%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.11%",
            "Sieve.benchmark": "3.16%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.09%",
            "Sieve.sieve": "89.73%",
            "SpinPause": "0.04%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.53%",
            "Permute.swap": "40.98%",
            "CodeHeap::find_blob_unsafe(void*)": "0.01%",
            "clear_page_rep_[k]": "0.01%",
            "ValueStack::ValueStack(ValueStack*,": "0.01%",
            "NullCheckEliminator::iterate_one(BlockBegin*)": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "__tls_get_addr": "0.01%",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.73%",
            "nbody.Body.getZ": "8.00%",
            "nbody.Body.getY": "0.85%",
            "nbody.Body.setX": "1.22%",
            "nbody.Body.setY": "1.78%",
            "nbody.Body.setZ": "0.51%",
            "nbody.Body.setVX": "28.78%",
            "nbody.Body.setVY": "6.16%",
            "nbody.Body.getMass": "0.50%",
            "nbody.NBodySystem.advance": "41.52%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.78%",
            "List.makeList": "0.68%",
            "clear_page_rep_[k]": "0.06%",
            "List$Element.setNext": "0.03%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "4.89%",
            "List$Element.length": "0.08%",
            "List.isShorterThan": "83.88%",
            "List$Element.<init>": "0.16%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.46%",
            "java.lang.String.length": "2.70%",
            "java.lang.String.<init>": "4.50%",
            "json.JsonPureStringParser.readArray": "2.63%",
            "java.lang.String.isLatin1": "2.51%",
            "json.JsonPureStringParser.readStringInternal": "9.19%",
            "java.util.Arrays.copyOfRange": "6.89%",
            "java.lang.String.equals": "21.80%",
            "json.JsonPureStringParser.read": "16.66%",
            "json.JsonPureStringParser.readValue": "2.26%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.53%",
            "Queens.getRowColumn": "56.82%",
            "Queens.setRowColumn": "26.24%",
            "clear_page_rep_[k]": "0.11%",
            "Queens.queens": "0.48%",
            "Queens.placeQueen": "14.15%",
            "__futex_abstimed_wait_common": "0.02%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.04%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "7.12%",
            "Richards.benchmark": "4.48%",
            "richards.Packet.<init>": "7.84%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.68%",
            "itable": "35.76%",
            "richards.TaskControlBlock.<init>": "3.15%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "2.95%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.34%",
            "richards.RBObject.<init>": "6.36%",
            "richards.RBObject.append": "3.29%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.8",
            "Towers.moveDisks": "94.7",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "Towers.pushDisk": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.6",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.9",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "93.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.4",
            "deltablue.AbstractConstraint.satisfy": "12.4",
            "deltablue.Planner.removePropagateFrom": "8.9",
            "som.Vector.<init>": "29.3",
            "deltablue.Variable.<init>": "4.6",
            "som.Vector.forEach": "7.4",
            "deltablue.Planner.addPropagate": "1.8",
            "deltablue.Planner.constraintsConsuming": "5.1",
            "deltablue.AbstractConstraint.<init>": "4.6",
            "deltablue.Planner.addConstraintsConsumingTo": "17.5"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.0",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.3"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.1",
            "richards.Scheduler.<init>": "0.1",
            "richards.Packet.<init>": "0.2",
            "richards.TaskControlBlock.addInputAndCheckPriority": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.6",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.3",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.getSuiteFromName": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "52.3",
            "Bounce$Ball.<init>": "46.5",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "8.1",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.0",
            "cd.RedBlackTree$Node.<init>": "7.6",
            "cd.RedBlackTree$Entry.<init>": "4.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.3",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.3",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.9",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.2",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "74.6",
            "List$Element.<init>": "21.3",
            "Benchmark.innerBenchmarkLoop": "0.2"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.6",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.2",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readValue": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.3",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "23.9",
            "Queens.placeQueen": "74.9",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.3",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.982622016298137",
            "java.lang.String.<init>(byte[], byte) String.java": "6.905990632965432",
            "json.JsonPureStringParser.read()": "20.554739393026207",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.3567299925080465",
            "java.lang.String.length() String.java": "3.130715753610996",
            "json.JsonArray.<init>()": "2.0048300079942076",
            "java.lang.String.substring(int, int) String.java": "11.020286870665446",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.566969274619856",
            "json.JsonPureStringParser.readStringInternal()": "3.5283333961150665",
            "json.JsonPureStringParser.readValue()": "2.2099170025489383"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "2.006150463448891",
            "som.Vector.forEach(ForEachInterface)": "2.296144165824459",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.730621820078385",
            "havlak.HavlakLoopFinder.findLoops()": "11.104161842455513",
            "som.Vector.<init>(int)": "3.289480803066143",
            "som.Vector.append(Object)": "4.200580420231173",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.987811607971798",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "3.9084225857483252",
            "som.Vector.removeAll()": "2.8263565321081465",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.714330233574785"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "8.778012185946329",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.26555330982694775",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.1917885015416845",
            "Queens.getRowColumn(int, int)": "63.18693477715651",
            "Queens.queens()": "1.017954354336633",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.20654146319873715",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.4425888497115796",
            "Benchmark.innerBenchmarkLoop(int)": "0.2803062714840004",
            "Queens.setRowColumn(int, int, boolean)": "25.08003481698951",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.2803062714840004"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.9982032825916822",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9400138887357945",
            "richards.TaskControlBlock.runTask()": "38.396108214562595",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.181317813222223",
            "richards.Scheduler.schedule()": "2.5205483478650663",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.0937342695370056",
            "richards.RBObject.append(Packet, Packet)": "2.9063465643750255",
            "richards.Scheduler$$Lambda$12.0x00000008000c7520.apply(Packet, RBObject)": "1.5358443285825039",
            "Richards.benchmark()": "27.24102835433178",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.9400138887357945"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.14572853472657016",
            "Storage$$Lambda$7.0x00000008000c2a98.<init>(Storage, int, Random)": "0.21049677238282358",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.3979144627474693",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.8959606209115054",
            "jdk.internal.org.objectweb.asm.Label.resolve(byte[], int) Label.java": "0.15112588786459127",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.201904186187114",
            "som.Random.next()": "13.498780198190813",
            "Storage.buildTreeDepth(int, Random)": "37.155379002137366",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.7079816058205073",
            "com.yourkit.probes.builtin.Files.<clinit>() a": "0.11334441589844345"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.71938800370316",
            "Towers.popDiskFrom(int)": "29.41821371144569",
            "Towers.moveDisks(int, int, int)": "8.234663548214199",
            "Towers$TowersDisk.getSize()": "1.5592262339813865",
            "com.yourkit.probes.ForeignKeyColumn.setValue(int, int) a": "0.10963309457681625",
            "Towers.moveTopDisk(int, int)": "8.502655557179748",
            "java.util.Objects.equals(Object, Object) Objects.java": "0.1949032792476733",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.649807533011742",
            "Towers.benchmark()": "0.2192661891536325",
            "com.yourkit.probes.Table.createRow() a": "0.10963309457681625"
        },
        "YourKit_Permute.txt": {
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.0011159219747355264",
            "Permute.permute(int)": "55.1042271124403",
            "java.lang.ThreadLocal$ThreadLocalMap.<init>(ThreadLocal, Object) ThreadLocal.java": "0.1897067357050395",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.10043297772619737",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation(String, boolean) MethodWriter.java": "0.30129893317859213",
            "java.io.File.toPath() File.java": "0.03347765924206579",
            "Permute.benchmark()": "0.5468017676204079",
            "jdk.internal.loader.NativeLibraries.find(String) NativeLibraries.java": "0.06695531848413158",
            "Permute.swap(int, int)": "43.554434673927595",
            "java.lang.Integer.valueOf(int) Integer.java": "0.10043297772619737"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.682983323038912",
            "som.Vector.forEach(ForEachInterface)": "41.36426806670784",
            "deltablue.BinaryConstraint.getOutput()": "2.0846201358863494",
            "deltablue.BinaryConstraint.isSatisfied()": "2.0074119827053734",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.682983323038912",
            "deltablue.Planner.makePlan(Vector)": "2.6250772081531806",
            "som.Vector.append(Object)": "2.91460778258184",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "12.777949351451511",
            "deltablue.Variable.getValue()": "5.636195182211241",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, int) DirectMethodHandle$Holder": "1.7178814082767138"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "2.388203882843841",
            "List$Element.<init>(Object)": "0.36225564515047026",
            "com.yourkit.probes.builtin.Processes$FileOutputStream_write_arrayRange_Probe.onExit(int, Throwable) a": "0.12075188171682343",
            "List.makeList(int)": "0.8318462962714502",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.1073350059705097",
            "jdk.internal.org.objectweb.asm.SymbolTable.addType(String) SymbolTable.java": "0.32200501791152913",
            "List$Element.setNext(List$Element)": "0.12075188171682343",
            "List$Element.getNext()": "23.88203882843841",
            "List.isShorterThan(List$Element, List$Element)": "71.63269960956892",
            "sun.nio.fs.UnixFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.12075188171682343"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.62582678059443",
            "nbody.Body.getZ()": "5.478752093564594",
            "nbody.Body.setX(double)": "0.6954892554006868",
            "nbody.Body.getX()": "1.1638799784256393",
            "nbody.NBodySystem.advance(double)": "46.640361086666466",
            "nbody.Body.setVY(double)": "5.833593550401679",
            "nbody.Body.setVZ(double)": "8.218128140346892",
            "nbody.Body.getVX()": "0.5819399892128196",
            "nbody.Body.setVX(double)": "25.406648309535296",
            "nbody.Body.setY(double)": "1.1354926618786725"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.56283962658492",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry) URLClassPath.java": "0.026125121917235608",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.11320886164135431",
            "Harness.main(String[])": "8.708373972411871E-4",
            "sun.nio.fs.UnixNativeDispatcher.<clinit>() UnixNativeDispatcher.java": "0.0",
            "java.util.ArrayDeque.addFirst(Object) ArrayDeque.java": "0.06966699177929496",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.026125121917235608",
            "jdk.internal.misc.Unsafe.compareAndSetLong(Object, long, long, long) Unsafe.java (native)": "0.03483349588964748",
            "jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String) BuiltinClassLoader.java": "8.708373972411871E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.407942912113946",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.095036397834797",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "16.468763909428976",
            "cd.RedBlackTree.findNode(Comparable)": "8.729737102818499",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.789280227432625",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.5198501012247476",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.1106436745301305",
            "cd.RedBlackTree.put(Comparable, Object)": "5.951440837365572",
            "cd.Vector2D.compareNumbers(double, double)": "8.622051201056758",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.005915545536778"
        },
        "YourKit_Sieve.txt": {
            "java.lang.invoke.MethodTypeForm.canonicalizeAll(Class[], int) MethodTypeForm.java": "0.2521846869072289",
            "java.util.zip.ZipCoder$UTF8ZipCoder.checkedHash(byte[], int, int) ZipCoder.java": "0.010964551604662125",
            "java.util.concurrent.ConcurrentHashMap$Traverser.advance() ConcurrentHashMap.java": "0.06578730962797276",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.09868096444195915",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.335449491793033",
            "Benchmark.innerBenchmarkLoop(int)": "0.09868096444195915",
            "Sieve.benchmark()": "89.13083999429843",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.03289365481398638",
            "Sieve.sieve(boolean[], int)": "7.927370810170717",
            "sun.nio.fs.UnixFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.0438582064186485"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.17035452669833998",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17035452669833998",
            "Bounce.benchmark()": "63.27724252806117",
            "Benchmark.innerBenchmarkLoop(int)": "0.26499593041964",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.35963733414093996",
            "som.Random.next()": "0.45427873786223993",
            "Bounce.lambda$benchmark$0(Random, int)": "0.37856561488519996",
            "com.yourkit.probes.Table.createRow() a": "0.22713936893111997",
            "Bounce$Ball.bounce()": "32.38628835342885",
            "Bounce$Ball.<init>(Random)": "2.0253260396358197"
        }
    },
    "Runtimes": {
        "NBody.data": 103.558,
        "JavaFlightRecorder_Queens.jfr": 105.905,
        "rebench_test_Async_Bounce.txt": 101.9395,
        "JavaFlightRecorder_Sieve.jfr": 109.869,
        "Permute.hpl": 104.1855,
        "CD.data": 95.1585,
        "DeltaBlue.hpl": 90.3725,
        "List.data": 153.28,
        "Towers.hpl": 108.93,
        "Bounce.hpl": 101.7945,
        "JavaFlightRecorder_Json.jfr": 84.75999999999999,
        "NBody.hpl": 102.66,
        "Sieve.data": 106.10849999999999,
        "Richards.hpl": 92.75200000000001,
        "JavaFlightRecorder_Havlak.jfr": 162.796,
        "JavaFlightRecorder_CD.jfr": 98.8685,
        "JavaFlightRecorder_DeltaBlue.jfr": 83.243,
        "rebench_test_Async_Mandelbrot.txt": 85.25399999999999,
        "JavaFlightRecorder_Towers.jfr": 109.893,
        "rebench_test_Async_CD.txt": 94.92699999999999,
        "rebench_test_Async_Permute.txt": 105.2945,
        "Mandelbrot.data": 87.3385,
        "rebench_test_Async_NBody.txt": 103.666,
        "JavaFlightRecorder_Permute.jfr": 106.2595,
        "JavaFlightRecorder_Bounce.jfr": 103.0395,
        "Havlak.data": 159.857,
        "Mandelbrot.hpl": 85.7505,
        "List.hpl": 153.8915,
        "JavaFlightRecorder_Storage.jfr": 101.67150000000001,
        "rebench_test_Async_Towers.txt": 108.7445,
        "Queens.hpl": 109.004,
        "JavaFlightRecorder_NBody.jfr": 103.5805,
        "Storage.data": 115.863,
        "rebench_test_Async_Sieve.txt": 105.1575,
        "JavaFlightRecorder_Richards.jfr": 93.1885,
        "Storage.hpl": 107.2635,
        "rebench_test_Async_List.txt": 149.113,
        "Bounce.data": 102.92250000000001,
        "rebench_test_Async_Richards.txt": 99.445,
        "Permute.data": 107.02799999999999,
        "rebench_test_Async_DeltaBlue.txt": 93.448,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.724,
        "JavaFlightRecorder_List.jfr": 153.518,
        "DeltaBlue.data": 86.167,
        "rebench_test_Async_Storage.txt": 108.82,
        "Queens.data": 111.23949999999999,
        "Json.hpl": 81.3075,
        "Towers.data": 110.7715,
        "Havlak.hpl": 156.7155,
        "Richards.data": 92.363,
        "rebench_test_Async_Havlak.txt": 158.062,
        "Sieve.hpl": 104.2925,
        "CD.hpl": 94.41900000000001,
        "rebench_test_Async_Json.txt": 80.2695,
        "rebench_test_Async_Queens.txt": 104.47399999999999,
        "Json.data": 81.0755
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.14%",
            "[.] Interpreter": "0.12%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.27%",
            "[.] void nbody.NBodySystem.advance(double)": "98.64%",
            "native_apic_msr_eoi_write": "0.04%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.11%",
            "[.] java.lang.Object Permute.benchmark()": "0.01%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.15%",
            "[.] void Permute.permute(int)": "99.23%",
            "LIR_OpVisitState::visit": "0.02%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.HavlakLoopFinder.stepD(int, som.Vector)": "5.04%",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "33.95%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.49%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.00%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.19%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "5.45%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.75%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.37%",
            "[.] boolean deltablue.Planner.addPropagate(deltablue.AbstractConstraint, int)": "5.03%",
            "[.] void deltablue.Planner.chainTest(int)": "28.15%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.74%",
            "x86_pmu_disable_all": "0.06%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.18%",
            "[.] boolean Queens.placeQueen(int)": "96.08%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.03%",
            "x86_pmu_disable_all": "0.04%",
            "[.] Interpreter": "0.10%",
            "[.] void Towers.moveDisks(int, int, int)": "99.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.13%",
            "[.] boolean richards.Scheduler.start()": "23.48%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.87%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.34%",
            "[.] void richards.Scheduler.schedule()": "7.62%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.49%",
            "x86_pmu_disable_all": "0.24%",
            "[.] Interpreter": "0.13%",
            "clear_page_rep": "0.08%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.49%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.15%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.74%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.95%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.58%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.03%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.12%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.45%",
            "exit_to_user_mode_prepare": "0.01%",
            "Reflection::verify_class_access": "0.01%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.21%",
            "[.] Interpreter": "0.06%",
            "[.] java.lang.Object List.benchmark()": "0.48%",
            "[.] List$Element List.makeList(int)": "0.64%",
            "[.] int List$Element.length()": "0.08%"
        },
        "Sieve.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.26%",
            "[.] Interpreter": "0.16%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "93.48%",
            "[.] java.lang.Object Sieve.benchmark()": "2.01%",
            "[.] int Sieve.sieve(boolean[], int)": "2.14%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.99%",
            "clear_page_rep": "0.08%",
            "__tls_get_addr": "0.02%",
            "[.] java.lang.Object Bounce.benchmark()": "5.85%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "31.73%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.40%",
            "[.] StubRoutines (2)": "8.22%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.43%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.55%"
        }
    }
}