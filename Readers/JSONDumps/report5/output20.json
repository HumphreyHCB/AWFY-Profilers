{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.004172926055750292",
            "java.lang.String.regionMatches(ZILjava/lang/String;II)Z": "0.004172926055750292",
            "Mandelbrot.mandelbrot(I)I": "99.97078951760975",
            "java.lang.StringConcatHelper.prepend(J[BLjava/lang/String;Ljava/lang/String;)J": "0.004172926055750292",
            "java.io.PrintStream.writeln(Ljava/lang/String;)V": "0.008345852111500584",
            "java.lang.invoke.MethodType.toFieldDescriptorString(Ljava/lang/Class;)Ljava/lang/String;": "0.004172926055750292",
            "java.lang.invoke.LambdaForm.normalize()I": "0.004172926055750292"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.47522992239050904",
            "Queens.benchmark()Ljava/lang/Object;": "0.06154056548941844",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.010256760914903074",
            "Queens.placeQueen(I)Z": "14.222708468665594",
            "Queens.getRowColumn(II)Z": "56.93527983862696",
            "java.util.Arrays.fill([ZZ)V": "0.40001367568121987",
            "Queens.verifyResult(Ljava/lang/Object;)Z": "0.006837840609935382",
            "Queens.setRowColumn(IIZ)V": "26.927416321925534",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.04444596396457998",
            "Queens.queens()Z": "0.851311155936955"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.4314544189283229",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.534446764091858",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.003479471120389701",
            "Bounce$Ball.bounce()Z": "84.68336812804453",
            "jdk.internal.org.objectweb.asm.AnnotationWriter.<init>(Ljdk/internal/org/objectweb/asm/SymbolTable;ZLjdk/internal/org/objectweb/asm/ByteVector;Ljdk/internal/org/objectweb/asm/AnnotationWriter;)V": "0.003479471120389701",
            "Bounce.benchmark()Ljava/lang/Object;": "8.458594293667362",
            "som.Random.next()I": "1.2874043145441894",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.08002783576896312",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.03479471120389701",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.4516353514265834"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.605098232518837",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.027838415135086",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.917423655611107",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.7791470084266368",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "15.95192826796235",
            "havlak.HavlakLoopFinder.findLoops()V": "4.713283102128958",
            "havlak.HavlakLoopFinder$$Lambda$79+0x000000080100f598.667447085.apply(Ljava/lang/Object;)V": "1.7557449005938548",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.61000399032932",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.5655470272046568",
            "som.Vector.append(Ljava/lang/Object;)V": "1.826162476820881"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.346446897838595",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "8.839993780127507",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.837816824755093",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.4024257502721196",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.644534287047116",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.845125174933914",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.08287980096408",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.144145545016327",
            "cd.Vector2D.compareNumbers(DD)I": "3.1177110869227183",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.803607526045717"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.44314868804665",
            "List$Element.getNext()LList$Element;": "9.85076839452488",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.16800909225675742",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.007412165834856946",
            "List.benchmark()Ljava/lang/Object;": "0.00494144388990463",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.344715125759747",
            "List$Element.length()I": "0.06423877056876019",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.00988288777980926",
            "List$Element.setNext(LList$Element;)V": "0.06176804862380788",
            "List.makeList(I)LList$Element;": "1.0228788852102584"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.8516829425469687",
            "deltablue.BinaryConstraint.inputsHasOne(Lsom/TestInterface;)Z": "1.9134486690130372",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "10.390125415158876",
            "deltablue.ScaleConstraint.execute()V": "7.272096366430377",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "21.241263074406387",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "12.893471471769196",
            "som.Vector.<init>(I)V": "8.749318395875676",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "7.311753333663808",
            "deltablue.Planner$$Lambda$84+0x0000000801014668.2039810346.apply(Ljava/lang/Object;)V": "2.156347593317801",
            "som.Vector.append(Ljava/lang/Object;)V": "2.9395726961780597"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.4341311613969035",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "36.40554765838104",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.6492758077528911",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.98017595758577",
            "Storage.benchmark()Ljava/lang/Object;": "0.015367474739713397",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.64635598755235",
            "som.Random.next()I": "11.925160398017596",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.275500403396212",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.019209343424641746",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6031733835337508"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.0034334763948497852",
            "Sieve.benchmark()Ljava/lang/Object;": "3.1931330472103",
            "java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendL(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;Ljava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;": "0.0034334763948497852",
            "java.io.FileOutputStream.write([BII)V": "0.0034334763948497852",
            "java.util.Arrays.fill([ZZ)V": "6.032618025751073",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.0034334763948497852",
            "Sieve.sieve([ZI)I": "90.68154506437767",
            "java.io.BufferedWriter.ensureOpen()V": "0.0034334763948497852",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010300429184549355",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e400.1702660825.linkToTargetMethod(Ljava/lang/Object;JLjava/lang/Object;)Ljava/lang/Object;": "0.0068669527896995704"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.05472330528763937",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.87529926807579",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.5399138107941717",
            "Towers.moveDisks(III)V": "3.950338600451467",
            "Towers$TowersDisk.getSize()I": "10.739448662699226",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.017101032902387302",
            "Towers.benchmark()Ljava/lang/Object;": "0.013680826321909843",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.45680279088857",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "22.039811204596756",
            "Towers.moveTopDisk(II)V": "4.271838019016348"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.7640113896798388",
            "nbody.Body.getMass()D": "0.506979651364678",
            "nbody.Body.setVX(D)V": "28.741579276338634",
            "nbody.NBodySystem.advance(D)V": "42.575873324536424",
            "nbody.Body.getY()D": "0.7708868671435516",
            "nbody.Body.getZ()D": "8.052642544621154",
            "nbody.Body.setVZ(D)V": "9.097854017640113",
            "nbody.Body.getVZ()D": "0.42016806722689076",
            "nbody.Body.setVY(D)V": "6.010834085700396",
            "nbody.Body.setX(D)V": "1.1424404472532814"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.280140803754767",
            "richards.Scheduler.schedule()V": "11.484306248166618",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.635670284540922",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.7934878263420355",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.8574361982986214",
            "Richards.benchmark()Ljava/lang/Object;": "9.240246406570842",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.180111469639191",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.172777940745086",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.287474332648871",
            "richards.RBObject.<init>()V": "10.384276914051041"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.635912698412698",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.8095238095238093",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.803571428571427",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.3125",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "11.041666666666666",
            "java.lang.String.<init>([BB)V": "4.449404761904762",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.913690476190476",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.738095238095238",
            "json.JsonPureStringParser.read()V": "15.674603174603174",
            "java.util.Arrays.copyOfRange([BII)[B": "6.750992063492063"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.003643783704999271",
            "jdk.jfr.internal.handlers.EventHandler1364_1687209980645-2862004.write(JJLjava/lang/String;Ljava/lang/Class;)V": "0.003643783704999271",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003643783704999271",
            "Permute.swap(II)V": "44.27561579944614",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.007287567409998542",
            "java.lang.invoke.InvokerBytecodeGenerator.lookupPregenerated(Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.003643783704999271",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.003643783704999271",
            "Permute.permute(I)V": "55.58227663605888",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.018218918524996356",
            "Permute.benchmark()Ljava/lang/Object;": "0.058300539279988337"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.0",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "2.8",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "45.7",
            "richards.HandlerTaskDataRecord::workInAdd": "2.1",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.9",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.4"
        },
        "Mandelbrot.hpl": {
            "sun.nio.fs.UnixNativeDispatcher::init": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::putMethodInfo": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.Class::getClassLoader": "0.0",
            "java.lang.invoke.LambdaForm$BasicType::basicType": "0.0",
            "Mandelbrot::mandelbrot": "96.3",
            "jdk.internal.org.objectweb.asm.MethodVisitor::<init>": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.6",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "82.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "15.2",
            "java.lang.String::<init>": "5.5",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "7.8",
            "java.lang.String::equals": "22.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "10.1",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.9",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.0",
            "havlak.HavlakLoopFinder::findLoops": "5.6",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "5.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.5",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "7.2",
            "havlak.HavlakLoopFinder::doDFS": "5.5",
            "som.Vector::<init>": "2.2",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.7",
            "Permute::permute": "50.9",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "5.9",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "java.io.OutputStreamWriter::write": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "66.7",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "0.6",
            "Queens::placeQueen": "8.1",
            "Queens::setRowColumn": "19.5",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.8",
            "java.util.Arrays::setAll": "34.7",
            "som.Random::next": "12.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "2.0",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.4"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "89.4",
            "java.lang.StringConcatHelper::newArrayWithSuffix": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "5.5"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "14.7",
            "deltablue.ScaleConstraint::execute": "5.8",
            "deltablue.Variable::<init>": "3.8",
            "som.Dictionary::getBucket": "11.2",
            "AGCT::Unknown not Java[ERR=-3]": "6.2",
            "AGCT::Unknown Java[ERR=-5]": "9.7",
            "java.util.Arrays::copyOf": "3.4",
            "som.Vector::<init>": "3.2",
            "som.Vector::forEach": "11.3",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.5"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "82.6",
            "java.util.Arrays::setAll": "1.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "1.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "Bounce$Ball::<init>": "3.1",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.5",
            "nbody.Body::setX": "1.5",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.7",
            "nbody.Body::getZ": "8.3",
            "nbody.Body::setVX": "28.4",
            "nbody.Body::setVY": "6.0",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "nbody.NBodySystem::advance": "40.4"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.5",
            "Towers::popDiskFrom": "20.2",
            "Towers::moveDisks": "3.4",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "Towers::pushDisk": "35.1",
            "Towers$TowersDisk::setNext": "15.0",
            "AGCT::Unknown Java[ERR=-5]": "4.7",
            "Towers::moveTopDisk": "3.9",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.5",
            "cd.RedBlackTree::forEach": "4.5",
            "cd.RedBlackTree::put": "7.4",
            "cd.RedBlackTree::findNode": "7.8",
            "cd.RedBlackTree::treeMinimum": "6.1",
            "AGCT::Unknown not Java[ERR=-3]": "5.1",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.Vector2D::compareNumbers": "2.7",
            "cd.RedBlackTree::treeInsert": "21.0",
            "cd.CollisionDetector::isInVoxel": "14.0"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "6.33%",
            "deltablue.Planner.incrementalAdd": "12.15%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "11.06%",
            "som.Dictionary.at": "3.11%",
            "deltablue.Variable.<init>": "5.43%",
            "som.Vector.forEach": "7.84%",
            "deltablue.Planner.addPropagate": "3.27%",
            "itable": "2.72%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "2.31%",
            "deltablue.ScaleConstraint.execute": "7.07%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.82%",
            "som.Random.next": "1.35%",
            "clear_page_rep_[k]": "0.08%",
            "java.util.Arrays.setAll": "1.37%",
            "SpinPause": "0.03%",
            "Bounce.benchmark": "9.24%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.05%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "Bounce$Ball.<init>": "3.09%",
            "Bounce.lambda$benchmark$0": "0.24%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Mutex::lock_without_safepoint_check()": "0.01%",
            "G1ServiceThread::sleep_before_next_cycle()": "0.00%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "clock_gettime@GLIBC_2.2.5": "0.00%",
            "Mandelbrot.mandelbrot": "99.57%",
            "LinearScan::build_intervals()": "0.01%",
            "SymbolTable::lookup_shared(char": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.00%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.55%",
            "som.Random.next": "13.51%",
            "java.util.Arrays.setAll": "35.83%",
            "Storage.lambda$buildTreeDepth$0": "3.27%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.38%",
            "SpinPause": "0.19%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.57%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.20%",
            "Storage.buildTreeDepth": "42.46%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.05%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.38%",
            "Towers.popDiskFrom": "23.76%",
            "Towers.moveDisks": "7.35%",
            "clear_page_rep_[k]": "0.04%",
            "Towers.pushDisk": "34.46%",
            "Towers.moveTopDisk": "5.26%",
            "Towers$TowersDisk.getSize": "10.72%",
            "Towers.buildTowerAt": "0.03%",
            "Towers$TowersDisk.getNext": "3.46%",
            "Towers.benchmark": "0.03%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.40%",
            "cd.CollisionDetector.isInVoxel": "14.60%",
            "cd.RedBlackTree.forEach": "5.44%",
            "cd.RedBlackTree.put": "6.92%",
            "cd.RedBlackTree.treeInsert": "20.55%",
            "cd.RedBlackTree.findNode": "6.85%",
            "cd.RedBlackTree.treeMinimum": "6.01%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.90%",
            "cd.Vector2D.compareNumbers": "3.04%",
            "cd.RedBlackTree.leftRotate": "2.45%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "6.16%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.59%",
            "som.Vector.hasSome": "2.07%",
            "som.Vector.append": "3.32%",
            "som.Vector.forEach": "2.17%",
            "som.IdentitySet.lambda$contains$0": "33.45%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "6.07%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.54%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.70%",
            "havlak.HavlakLoopFinder.doDFS": "5.04%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.20%",
            "Sieve.benchmark": "3.11%",
            "G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask,": "0.01%",
            "clear_page_rep_[k]": "0.08%",
            "Sieve.sieve": "90.68%",
            "syscall_enter_from_user_mode_[k]": "0.01%",
            "SpinPause": "0.07%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "__memset_avx2_unaligned_erms": "0.06%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.06%",
            "Permute.swap": "41.43%",
            "Permute.benchmark": "0.01%",
            "NodeHash::hash_find_insert(Node*)": "0.01%",
            "clear_page_rep_[k]": "0.01%",
            "LinearScan::resolve_collect_mappings(BlockBegin*,": "0.01%",
            "PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*)": "0.01%",
            "Permute.verifyResult": "0.01%",
            "__tls_get_addr": "0.02%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.04%",
            "nbody.Body.getZ": "8.14%",
            "nbody.Body.getY": "0.67%",
            "nbody.Body.setX": "1.18%",
            "nbody.Body.setY": "1.66%",
            "nbody.Body.setVX": "28.34%",
            "nbody.Body.setVY": "5.50%",
            "nbody.Body.getMass": "0.50%",
            "nbody.Body.getVZ": "0.44%",
            "nbody.NBodySystem.advance": "43.16%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.84%",
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "List.makeList": "0.70%",
            "clear_page_rep_[k]": "0.07%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "4.69%",
            "List$Element.length": "0.08%",
            "List.isShorterThan": "84.01%",
            "List$Element.<init>": "0.17%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.72%",
            "java.lang.String.length": "3.07%",
            "java.lang.String.<init>": "6.54%",
            "json.JsonPureStringParser.readArray": "2.69%",
            "json.JsonPureStringParser.isWhiteSpace": "2.19%",
            "java.lang.String.isLatin1": "2.72%",
            "json.JsonPureStringParser.readStringInternal": "9.04%",
            "java.util.Arrays.copyOfRange": "7.74%",
            "java.lang.String.equals": "21.74%",
            "json.JsonPureStringParser.read": "14.19%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.66%",
            "Queens.getRowColumn": "59.63%",
            "Queens.setRowColumn": "23.08%",
            "clear_page_rep_[k]": "0.09%",
            "Queens.queens": "0.61%",
            "Queens.placeQueen": "15.32%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Queens.benchmark": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.52%",
            "Richards.benchmark": "4.40%",
            "richards.Packet.<init>": "6.92%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.94%",
            "itable": "37.18%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.38%",
            "richards.TaskControlBlock.<init>": "3.26%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.15%",
            "richards.RBObject.<init>": "5.92%",
            "richards.RBObject.append": "2.74%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "5.3",
            "Towers.moveDisks": "92.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.8",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "5.5",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "93.8",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Harness.processArguments": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.4",
            "deltablue.AbstractConstraint.satisfy": "9.7",
            "deltablue.Planner.removePropagateFrom": "8.9",
            "som.Vector.<init>": "32.1",
            "deltablue.Variable.<init>": "4.6",
            "som.Vector.forEach": "6.8",
            "deltablue.Planner.constraintsConsuming": "5.5",
            "deltablue.AbstractConstraint.<init>": "4.0",
            "deltablue.Plan.lambda$execute$0": "1.9",
            "deltablue.Planner.addConstraintsConsumingTo": "18.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.4",
            "java.lang.Integer.valueOf": "9.1",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "3.8"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.1",
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.schedule": "14.7",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Scheduler.<init>": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.TaskControlBlock.runTask": "84.0",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.util.Arrays.setAll": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "1.0",
            "Bounce.benchmark": "51.7",
            "Bounce$Ball.<init>": "46.6",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "cd.Aircraft.<init>": "1.5",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "7.7",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "14.7",
            "cd.RedBlackTree$Node.<init>": "8.2",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.2",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.lambda$getSuiteFromName$8": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "Run.lambda$getSuiteFromName$5": "0.1",
            "java.io.PrintStream.println": "0.3",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "List.tail": "2.7",
            "List$Element.length": "0.2",
            "List.isShorterThan": "74.6",
            "List$Element.<init>": "21.0",
            "Run.printResult": "0.4"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "Harness.main": "0.0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.6",
            "som.Vector.<init>": "2.4",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "23.7",
            "Queens.placeQueen": "74.9",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.3",
            "java.util.Arrays.fill0": "0.3",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.925546154924856",
            "java.lang.String.<init>(byte[], byte) String.java": "5.447738678519679",
            "json.JsonPureStringParser.isWhiteSpace()": "2.3286745677291605",
            "json.JsonPureStringParser.read()": "21.06430626319972",
            "java.lang.String.length() String.java": "3.1828052029728853",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.1318123292269915",
            "java.lang.String.substring(int, int) String.java": "9.731140073174776",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.9718859289414326",
            "json.JsonPureStringParser.readStringInternal()": "3.225299264427797",
            "json.JsonPureStringParser.readValue()": "2.9235914280979243"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.077305893520842",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.004088167123927",
            "havlak.HavlakLoopFinder.findLoops()": "10.60273312001877",
            "som.Vector.<init>(int)": "2.2461024474696596",
            "som.Vector.append(Object)": "2.4915662545915858",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.128801159110509",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.3030913233974815",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.1533345063462175",
            "som.Vector.removeAll()": "2.860848088314837",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.88179940176344"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.144830420077756",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.23706419698454342",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.1896513575876347",
            "Queens.getRowColumn(int, int)": "58.2545753390018",
            "Queens.queens()": "1.0114739071340517",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.45832411417011726",
            "Benchmark.innerBenchmarkLoop(int)": "0.17384707778866515",
            "Queens.setRowColumn(int, int, boolean)": "24.401808009609",
            "java.lang.System.nanoTime() System.java (native)": "0.14223851819072603",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.30028131618042164"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.506154145825141",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9588890563153039",
            "richards.TaskControlBlock.runTask()": "37.82897759222031",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.322393446358414",
            "richards.Scheduler.schedule()": "2.1647010397180377",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "3.958205466513288",
            "richards.RBObject.append(Packet, Packet)": "3.5208550017824787",
            "richards.Packet.<init>(Packet, int, int)": "1.6391454392431999",
            "Richards.benchmark()": "26.98342110969411",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.6464958672218688"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$11.0x00000008000c2aa0.apply(int)": "0.6745233094416814",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.5100054290900518",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.250335890672385",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.644959446342504",
            "som.Random.next()": "15.39887360091253",
            "Storage$$Lambda$11.0x00000008000c2aa0.<init>(Storage, int, Random)": "0.2138732444571185",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1096785869010864",
            "Storage.buildTreeDepth(int, Random)": "37.6362070951078",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "1.8426002599382516",
            "com.yourkit.probes.CallCounterBase.update(long, Object) a": "0.12613037493624935"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "35.71596354411349",
            "Towers.popDiskFrom(int)": "30.16066898430893",
            "Towers.moveDisks(int, int, int)": "6.447900028187541",
            "Towers$TowersDisk.getSize()": "2.4194306116696414",
            "java.util.jar.JarEntry.<init>(String) JarEntry.java": "0.07046885276707694",
            "Towers.moveTopDisk(int, int)": "6.8354787184064625",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.2114065583012308",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.59372357418021",
            "Towers.benchmark()": "0.22315136709574362",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.14093770553415388"
        },
        "YourKit_Permute.txt": {
            "java.lang.String.getBytes(String) String.java": "0.06680547359513656",
            "java.util.IdentityHashMap.put(Object, Object) IdentityHashMap.java": "0.11134245599189425",
            "java.lang.invoke.LambdaForm$Name.<init>(LambdaForm$Name, Object) LambdaForm.java": "0.10020821039270482",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.08907396479351541",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.044536982396757706",
            "Permute.permute(int)": "56.92939774865553",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.12247670159108368",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.23381915758297794",
            "Permute.benchmark()": "0.3228931223764933",
            "Permute.swap(int, int)": "41.909300435348996"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.027904872039822",
            "deltablue.Variable.<init>()": "2.8659057770626983",
            "som.Vector.forEach(ForEachInterface)": "24.460757202473733",
            "deltablue.BinaryConstraint.getOutput()": "3.016742923223893",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "8.99994972095128",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "3.4441148373472776",
            "deltablue.ScaleConstraint.execute()": "3.242998642465685",
            "deltablue.BinaryConstraint.chooseMethod(int)": "3.192719593745287",
            "som.Vector.append(Object)": "19.131178038111525",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "3.3184172155462828"
        },
        "YourKit_List.txt": {
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.11981468661803076",
            "List.tail(List$Element, List$Element, List$Element)": "3.5278768837531276",
            "List$Element.<init>(Object)": "0.3860695457692102",
            "List.makeList(int)": "0.3195058309814154",
            "List$Element.setNext(List$Element)": "0.1597529154907077",
            "List$Element.getNext()": "24.149315725011977",
            "List.isShorterThan(List$Element, List$Element)": "70.31790830182649",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.11981468661803076",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.18637840140582562",
            "java.lang.Integer.valueOf(int) Integer.java": "0.10650194366047178"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.143199571360086",
            "nbody.Body.getZ()": "7.303798539240293",
            "nbody.Body.setX(double)": "0.6203998759200249",
            "nbody.Body.getX()": "0.4088999182200164",
            "nbody.Body.setZ(double)": "0.549899890020022",
            "nbody.NBodySystem.advance(double)": "45.105890978821805",
            "nbody.Body.setVY(double)": "5.188798962240208",
            "nbody.Body.setVZ(double)": "7.303798539240293",
            "nbody.Body.setVX(double)": "28.18589436282113",
            "nbody.Body.setY(double)": "1.4099997180000565"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.12943567987979",
            "java.io.RandomAccessFile.<init>(File, String, boolean) RandomAccessFile.java": "0.044191082239604045",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.07954394803128727",
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.07954394803128727",
            "jdk.internal.org.objectweb.asm.FieldVisitor.<init>(int, FieldVisitor) FieldVisitor.java": "0.23863184409386182",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.1060585973750497",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.03535286579168323",
            "java.net.URL$DefaultFactory.createURLStreamHandler(String) URL.java": "0.017676432895841615",
            "com.yourkit.probes.Table.createRow() a": "0.16792611251049536",
            "java.lang.invoke.MemberName.getDeclaringClass() MemberName.java": "0.07954394803128727"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.892104367204184",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.32941285709864",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.448265189266145",
            "cd.RedBlackTree.findNode(Comparable)": "9.447831873471786",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.993128849546564",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.522516945742672",
            "cd.RedBlackTree.put(Comparable, Object)": "6.909839363644804",
            "cd.Vector2D.compareNumbers(double, double)": "9.525209693893341",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.2712556872698",
            "cd.CollisionDetector.lambda$handleNewFrame$0(RedBlackTree, Vector, Aircraft)": "2.9171438298925993"
        },
        "YourKit_Sieve.txt": {
            "java.util.stream.MatchOps.makeRef(Predicate, MatchOps$MatchKind) MatchOps.java": "0.13516885709532522",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.753535185493261",
            "Benchmark.innerBenchmarkLoop(int)": "0.22874729662285803",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.07278323074363664",
            "Sieve.benchmark()": "87.30868407918814",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.10397604391948093",
            "java.lang.invoke.InvokerBytecodeGenerator.<init>(LambdaForm, int, String, String, MethodType) InvokerBytecodeGenerator.java": "0.05198802195974046",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.11437364831142902",
            "Sieve.sieve(boolean[], int)": "7.9125769422725",
            "java.util.TreeMap$PrivateEntryIterator.hasNext() TreeMap.java": "0.08318083513558473"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.17233455882352938",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.17233455882352938",
            "Bounce.benchmark()": "60.049019607843135",
            "Bounce.lambda$benchmark$0(Random, int)": "0.3829656862745097",
            "som.Random.next()": "0.1531862745098039",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.708486519607843",
            "com.yourkit.probes.Table.createRow() a": "0.5553002450980391",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c9800.invoke(Object, Object, long) LambdaForm$MH": "0.17233455882352938",
            "Bounce$Ball.bounce()": "35.577512254901954",
            "Bounce$Ball.<init>(Random)": "1.723345588235294"
        }
    },
    "Runtimes": {
        "NBody.data": 104.202,
        "JavaFlightRecorder_Queens.jfr": 106.856,
        "rebench_test_Async_Bounce.txt": 101.59649999999999,
        "JavaFlightRecorder_Sieve.jfr": 105.326,
        "Permute.hpl": 105.84049999999999,
        "CD.data": 94.858,
        "DeltaBlue.hpl": 95.753,
        "List.data": 152.1205,
        "NBody.hpl": 102.82249999999999,
        "Bounce.hpl": 102.46600000000001,
        "Towers.hpl": 109.0515,
        "JavaFlightRecorder_Json.jfr": 83.69999999999999,
        "Sieve.data": 105.043,
        "Richards.hpl": 90.3885,
        "JavaFlightRecorder_Havlak.jfr": 163.015,
        "JavaFlightRecorder_CD.jfr": 97.3735,
        "rebench_test_Async_Mandelbrot.txt": 85.09049999999999,
        "JavaFlightRecorder_DeltaBlue.jfr": 84.501,
        "JavaFlightRecorder_Towers.jfr": 110.608,
        "rebench_test_Async_CD.txt": 94.68350000000001,
        "rebench_test_Async_Permute.txt": 104.8965,
        "Mandelbrot.data": 85.26599999999999,
        "JavaFlightRecorder_Permute.jfr": 106.0015,
        "rebench_test_Async_NBody.txt": 102.568,
        "JavaFlightRecorder_Bounce.jfr": 104.61449999999999,
        "Havlak.data": 158.78699999999998,
        "Mandelbrot.hpl": 86.259,
        "List.hpl": 147.877,
        "JavaFlightRecorder_Storage.jfr": 98.5035,
        "rebench_test_Async_Towers.txt": 108.34899999999999,
        "Queens.hpl": 109.28200000000001,
        "JavaFlightRecorder_NBody.jfr": 104.1725,
        "Storage.data": 113.6855,
        "rebench_test_Async_Sieve.txt": 104.325,
        "JavaFlightRecorder_Richards.jfr": 92.4795,
        "Storage.hpl": 109.3425,
        "rebench_test_Async_List.txt": 148.9875,
        "Bounce.data": 102.287,
        "rebench_test_Async_Richards.txt": 93.2245,
        "Permute.data": 106.309,
        "rebench_test_Async_DeltaBlue.txt": 88.707,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.242,
        "JavaFlightRecorder_List.jfr": 151.968,
        "DeltaBlue.data": 102.7175,
        "Queens.data": 111.27250000000001,
        "rebench_test_Async_Storage.txt": 108.834,
        "Json.hpl": 80.0595,
        "Towers.data": 111.5375,
        "Havlak.hpl": 157.89749999999998,
        "Richards.data": 95.08850000000001,
        "rebench_test_Async_Havlak.txt": 156.8795,
        "Sieve.hpl": 102.241,
        "CD.hpl": 94.1815,
        "rebench_test_Async_Json.txt": 82.67,
        "Json.data": 82.013,
        "rebench_test_Async_Queens.txt": 105.0755
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.06%",
            "[.] Interpreter": "0.11%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.25%",
            "[.] void nbody.NBodySystem.advance(double)": "99.06%",
            "native_apic_msr_write": "0.02%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.26%",
            "[.] Interpreter": "0.12%",
            "asm_sysvec_apic_timer_interrupt": "0.10%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "98.43%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.06%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.41%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.78%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.48%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.42%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.EqualityConstraint.execute()": "6.46%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "9.75%",
            "[.] vtable chunks": "6.24%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "11.21%",
            "[.] void deltablue.Planner.chainTest(int)": "26.84%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.54%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.17%",
            "[.] boolean Queens.placeQueen(int)": "96.44%",
            "clear_page_rep": "0.05%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.27%",
            "[.] Interpreter": "0.10%",
            "[.] void Towers.moveDisks(int, int, int)": "98.06%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.11%",
            "native_apic_msr_write": "0.08%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.85%",
            "[.] boolean richards.Scheduler.start()": "23.48%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.32%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.56%",
            "[.] void richards.Scheduler.schedule()": "8.03%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.74%",
            "x86_pmu_disable_all": "0.09%",
            "[.] Interpreter": "0.10%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.38%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "23.90%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.68%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.08%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.49%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.50%"
        },
        "Mandelbrot.data": {" ": "0"},
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.06%",
            "[.] Interpreter": "0.06%",
            "[.] java.lang.Object List.benchmark()": "0.47%",
            "[.] List$Element List.makeList(int)": "0.69%",
            "[.] int List$Element.length()": "0.08%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.26%",
            "[.] java.lang.Object Sieve.benchmark()": "1.92%",
            "clear_page_rep": "0.07%",
            "[.] int Sieve.sieve(boolean[], int)": "2.19%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "clear_page_rep": "0.05%",
            "[.] java.lang.Object Bounce.benchmark()": "6.40%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.88%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.43%",
            "[.] StubRoutines (2)": "8.24%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.74%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.30%"
        }
    }
}