{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.String.coder()B": "0.004156794280251071",
            "jdk.internal.misc.VM.isSystemDomainLoader(Ljava/lang/ClassLoader;)Z": "0.004156794280251071",
            "java.net.URL.<init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V": "0.004156794280251071",
            "Mandelbrot.mandelbrot(I)I": "99.96258885147775",
            "Mandelbrot.verifyResult(II)Z": "0.004156794280251071",
            "jdk.internal.misc.Unsafe.putAddress(Ljava/lang/Object;JJ)V": "0.004156794280251071",
            "java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(Ljava/lang/invoke/LambdaForm$BasicType;)I": "0.004156794280251071",
            "jdk.internal.org.objectweb.asm.MethodWriter.<init>(Ljdk/internal/org/objectweb/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V": "0.004156794280251071",
            "java.lang.invoke.StringConcatFactory.makeConcatWithConstants(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;": "0.004156794280251071",
            "jdk.internal.org.objectweb.asm.Frame.execute(IILjdk/internal/org/objectweb/asm/Symbol;Ljdk/internal/org/objectweb/asm/SymbolTable;)V": "0.004156794280251071"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.521891418563923",
            "Queens.benchmark()Ljava/lang/Object;": "0.03502626970227671",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.0035026269702276708",
            "Queens.placeQueen(I)Z": "14.108581436077058",
            "Queens.getRowColumn(II)Z": "58.9246935201401",
            "java.nio.CharBuffer.limit(I)Ljava/nio/Buffer;": "0.0035026269702276708",
            "java.util.Arrays.fill([ZZ)V": "0.4448336252189142",
            "Queens.setRowColumn(IIZ)V": "25.152364273204903",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.017513134851138354",
            "Queens.queens()Z": "0.7250437828371279"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.StringConcatHelper.mix(JLjava/lang/String;)J": "0.0029168125072920313",
            "Bounce.verifyResult(Ljava/lang/Object;)Z": "0.0029168125072920313",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.2041768755104422",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.1783922529459807",
            "Bounce$Ball.bounce()Z": "85.01050052502625",
            "Bounce.benchmark()Ljava/lang/Object;": "9.803406837008517",
            "som.Random.next()I": "1.2833975032084937",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.026251312565628283",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.011667250029168125",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.4617897561544746"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "8.161128176487015",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "37.75016289676999",
            "havlak.HavlakLoopFinder.stepD(ILsom/Vector;)V": "3.5115889416364143",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.2931211021130045",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "12.182351298519967",
            "havlak.HavlakLoopFinder.findLoops()V": "7.472307549101741",
            "som.Vector.<init>(I)V": "2.2828818765707903",
            "havlak.HavlakLoopFinder$$Lambda$79+0x000000080100f598.667447085.apply(Ljava/lang/Object;)V": "1.8849483384529462",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.093363120171275",
            "som.Vector.append(Ljava/lang/Object;)V": "2.017592851158894"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.30116648992577",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.961195553984526",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.8985507246376816",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.238718039354307",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.427909351557284",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "14.97584541062802",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.6101095793566635",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.8080201091866",
            "cd.Vector2D.compareNumbers(DD)I": "2.926043753191155",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "23.451553356113273"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.05962223892539",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.04121911597119511",
            "List$Element.getNext()LList$Element;": "9.601629367407801",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.19154765657202433",
            "List.benchmark()Ljava/lang/Object;": "0.004849307761317072",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.9930654899013165",
            "List$Element.length()I": "0.08728753970370728",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.009698615522634143",
            "List$Element.setNext(LList$Element;)V": "0.08486288582304875",
            "List.makeList(I)LList$Element;": "0.8971219358436583"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.081931951505671",
            "deltablue.UnaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "13.868791552600705",
            "deltablue.ScaleConstraint.execute()V": "13.140398904966759",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "12.436448963629253",
            "deltablue.Planner.chainTest(I)V": "2.864685177942902",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.790770434102464",
            "deltablue.Variable.<init>()V": "7.523464998044584",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "10.710793899100508",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.805436057880328",
            "som.Vector.append(Ljava/lang/Object;)V": "2.6495893625342197"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.543302270355845",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "36.149390134206456",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.683625373295434",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.515273630050732",
            "Storage.benchmark()Ljava/lang/Object;": "0.02158816968301371",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.05451012844961",
            "som.Random.next()I": "11.98503220235311",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.3060842658223293",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.032382254524520565",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6656352318929226"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.0034672861551263826",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0034672861551263826",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.0034672861551263826",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.0034672861551263826",
            "Sieve.benchmark()Ljava/lang/Object;": "3.144828542699629",
            "java.util.Arrays.fill([ZZ)V": "5.169723657293437",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.01386914462050553",
            "Sieve.sieve([ZI)I": "91.59529835997365",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.006934572310252765",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.006934572310252765"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.059233449477351915",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "15.153310104529616",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.128919860627177",
            "Towers.moveDisks(III)V": "3.658536585365854",
            "Towers$TowersDisk.getSize()I": "12.331010452961673",
            "Towers.benchmark()Ljava/lang/Object;": "0.04529616724738676",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.006968641114982578",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "40.91289198606272",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.278745644599304",
            "Towers.moveTopDisk(II)V": "3.3867595818815333"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.7159598214285716",
            "nbody.Body.getMass()D": "0.5859375",
            "nbody.Body.setVX(D)V": "29.54450334821429",
            "nbody.NBodySystem.advance(D)V": "41.92940848214286",
            "nbody.Body.getY()D": "0.6591796875",
            "nbody.Body.getZ()D": "8.088030133928571",
            "nbody.Body.setVZ(D)V": "8.998325892857144",
            "nbody.Body.getVZ()D": "0.4778180803571429",
            "nbody.Body.setVY(D)V": "5.894252232142858",
            "nbody.Body.setX(D)V": "1.039341517857143"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.731556332386571",
            "richards.Scheduler.schedule()V": "12.366178719685383",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.465880125264002",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.6514456339669366",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.668268880635059",
            "Richards.benchmark()Ljava/lang/Object;": "9.802636370257083",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.488456776636807",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.331002840288399",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.269973053674168",
            "richards.RBObject.<init>()V": "10.436239166848736"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.7173978215249326",
            "java.lang.Object.<init>()V": "2.8180273808334166",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.4176076746277606",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.736984111122215",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "4.841610872389327",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "11.067252922953932",
            "java.lang.String.<init>([BB)V": "6.510442690116919",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.427600679524333",
            "json.JsonPureStringParser.read()V": "13.140801438992705",
            "java.util.Arrays.copyOfRange([BII)[B": "5.576096732287398"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.01439055979277594",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.003597639948193985",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)J": "0.003597639948193985",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.00719527989638797",
            "Permute.swap(II)V": "43.65376313138581",
            "java.nio.CharBuffer.array()[C": "0.003597639948193985",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.003597639948193985",
            "Permute.permute(I)V": "56.256295869909344",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01439055979277594",
            "Permute.benchmark()Ljava/lang/Object;": "0.02878111958555188"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.1",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "45.9",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.4",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::execute": "0.0",
            "jdk.internal.org.objectweb.asm.ClassWriter::toByteArray": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Run::printResult": "0.0",
            "java.nio.charset.CharsetEncoder::encode": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.3",
            "sun.nio.cs.US_ASCII$Encoder::encodeLoop": "0.0",
            "Mandelbrot::mandelbrot": "98.5"
        },
        "List.hpl": {
            "List$Element::getNext": "9.6",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "82.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "16.1",
            "java.lang.String::<init>": "5.7",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "2.6",
            "java.util.Arrays::copyOfRange": "7.1",
            "java.lang.String::equals": "21.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.8"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.0",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.7",
            "havlak.HavlakLoopFinder::findLoops": "6.3",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "6.5",
            "som.Vector::hasSome": "2.3",
            "som.Vector::forEach": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "40.4",
            "Permute::permute": "51.6",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "AGCT::Unknown Java[ERR=-5]": "6.2",
            "jdk.internal.org.objectweb.asm.ByteVector::putUTF8": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "13.8",
            "Queens::setRowColumn": "24.9",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.9",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.6",
            "Storage::buildTreeDepth": "40.3",
            "java.util.Arrays::setAll": "33.9",
            "som.Random::next": "15.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "2.6"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "2.9",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "85.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "sun.nio.cs.StreamEncoder::implWrite": "0.0",
            "java.util.Arrays::fill": "9.6",
            "java.lang.Long::stringSize": "0.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "8.8",
            "deltablue.ScaleConstraint::execute": "6.1",
            "deltablue.Planner::newMark": "6.4",
            "deltablue.Planner::addPropagate": "2.1",
            "AGCT::Unknown not Java[ERR=-3]": "6.0",
            "AGCT::Unknown Java[ERR=-5]": "15.4",
            "deltablue.AbstractConstraint::satisfy": "2.1",
            "som.Vector::<init>": "2.9",
            "som.Vector::forEach": "23.4",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.3"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "6.3",
            "Bounce$Ball::bounce": "88.0",
            "java.util.Arrays::setAll": "0.8",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "2.0",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.5",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "9.0",
            "nbody.Body::getZ": "8.1",
            "nbody.Body::setVX": "28.9",
            "nbody.Body::setVY": "6.4",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "1.3",
            "nbody.NBodySystem::advance": "39.7"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.3",
            "Towers::popDiskFrom": "20.6",
            "Towers::moveDisks": "3.6",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "Towers::pushDisk": "35.9",
            "Towers$TowersDisk::setNext": "15.2",
            "AGCT::Unknown Java[ERR=-5]": "4.7",
            "Towers::moveTopDisk": "4.0",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.2",
            "cd.RedBlackTree::forEach": "5.5",
            "cd.RedBlackTree::put": "7.1",
            "cd.RedBlackTree::findNode": "6.8",
            "cd.RedBlackTree::treeMinimum": "6.1",
            "AGCT::Unknown not Java[ERR=-3]": "5.5",
            "AGCT::Unknown Java[ERR=-5]": "3.6",
            "cd.Vector2D::compareNumbers": "3.6",
            "cd.RedBlackTree::treeInsert": "20.3",
            "cd.CollisionDetector::isInVoxel": "14.0"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "som.Dictionary.getBucket": "11.89%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.77%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "10.61%",
            "deltablue.Variable.<init>": "4.46%",
            "som.Vector.<init>": "3.14%",
            "som.Vector.forEach": "9.65%",
            "deltablue.Planner.addPropagate": "3.41%",
            "itable": "3.38%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "4.21%",
            "deltablue.ScaleConstraint.execute": "6.44%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.52%",
            "som.Random.next": "1.45%",
            "clear_page_rep_[k]": "0.09%",
            "java.util.Arrays.setAll": "1.29%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "Bounce.benchmark": "9.29%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Bounce$Ball.<init>": "3.22%",
            "Bounce.lambda$benchmark$0": "0.31%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "AdapterHandlerLibrary::get_simple_adapter(methodHandle": "0.01%",
            "Mandelbrot.mandelbrot": "99.57%",
            "RelocIterator::reloc()": "0.01%",
            "I2C/C2I": "0.01%",
            "SymbolTable::lookup_shared(char": "0.01%",
            "Dictionary::find(unsigned": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "LinearScan::compute_local_live_sets()": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.55%",
            "som.Random.next": "12.22%",
            "java.util.Arrays.setAll": "35.56%",
            "Storage.lambda$buildTreeDepth$0": "3.06%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.64%",
            "SpinPause": "0.22%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.50%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.21%",
            "Storage.buildTreeDepth": "43.82%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.06%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.58%",
            "Towers.popDiskFrom": "24.20%",
            "Towers.moveDisks": "7.21%",
            "clear_page_rep_[k]": "0.05%",
            "Towers.pushDisk": "34.34%",
            "Towers.moveTopDisk": "4.99%",
            "Towers$TowersDisk.getSize": "10.52%",
            "Towers.buildTowerAt": "0.02%",
            "Towers$TowersDisk.getNext": "3.55%",
            "Towers.benchmark": "0.03%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.38%",
            "cd.CollisionDetector.isInVoxel": "14.14%",
            "cd.RedBlackTree.forEach": "5.09%",
            "cd.RedBlackTree.put": "7.26%",
            "cd.RedBlackTree.treeInsert": "20.72%",
            "cd.RedBlackTree.findNode": "8.07%",
            "cd.RedBlackTree.treeMinimum": "6.11%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.89%",
            "cd.Vector2D.compareNumbers": "3.20%",
            "cd.RedBlackTree.leftRotate": "2.24%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.59%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.91%",
            "som.Vector.hasSome": "2.21%",
            "som.Vector.append": "3.19%",
            "som.Vector.<init>": "1.89%",
            "som.IdentitySet.lambda$contains$0": "32.28%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.65%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.23%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.62%",
            "havlak.HavlakLoopFinder.doDFS": "5.97%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "13.27%",
            "Sieve.benchmark": "2.76%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.07%",
            "Sieve.sieve": "83.00%",
            "SpinPause": "0.03%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "__memset_avx2_unaligned_erms": "0.03%",
            "__futex_abstimed_wait_common": "0.02%",
            "_raw_spin_unlock_irqrestore_[k]": "0.05%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.87%",
            "Permute.swap": "41.59%",
            "Permute.benchmark": "0.03%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "Matcher::find_shared(Node*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "Symbol::as_klass_external_name()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.45%",
            "nbody.Body.getZ": "7.77%",
            "nbody.Body.getY": "0.76%",
            "nbody.Body.setX": "1.26%",
            "nbody.Body.setY": "1.74%",
            "nbody.Body.setVX": "28.09%",
            "nbody.Body.setVY": "5.78%",
            "nbody.Body.getVZ": "0.53%",
            "nbody.Body.getMass": "0.43%",
            "nbody.NBodySystem.advance": "42.69%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.61%",
            "Interpreter": "0.01%",
            "List.makeList": "0.80%",
            "clear_page_rep_[k]": "0.05%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "4.90%",
            "List$Element.length": "0.06%",
            "List.isShorterThan": "83.99%",
            "List$Element.<init>": "0.17%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.43%",
            "java.lang.String.length": "3.02%",
            "java.lang.String.<init>": "5.42%",
            "json.JsonPureStringParser.readArray": "2.55%",
            "json.JsonPureStringParser.isWhiteSpace": "2.35%",
            "java.lang.String.isLatin1": "2.53%",
            "json.JsonPureStringParser.readStringInternal": "9.11%",
            "java.util.Arrays.copyOfRange": "7.04%",
            "java.lang.String.equals": "21.71%",
            "json.JsonPureStringParser.read": "16.02%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.71%",
            "Queens.getRowColumn": "58.97%",
            "Queens.setRowColumn": "23.73%",
            "Interpreter": "0.01%",
            "clear_page_rep_[k]": "0.07%",
            "Queens.queens": "0.59%",
            "Queens.placeQueen": "15.42%",
            "Queens.benchmark": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.96%",
            "Richards.benchmark": "4.61%",
            "richards.Packet.<init>": "6.46%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.86%",
            "itable": "37.24%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.31%",
            "richards.TaskControlBlock.<init>": "3.17%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.96%",
            "richards.RBObject.<init>": "5.81%",
            "richards.RBObject.append": "3.29%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.2",
            "Towers.moveDisks": "95.3",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.5",
            "Benchmark.innerBenchmarkLoop": "0.2"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.3",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.4",
            "deltablue.AbstractConstraint.satisfy": "9.0",
            "deltablue.Planner.removePropagateFrom": "10.2",
            "som.Vector.<init>": "26.5",
            "deltablue.Variable.<init>": "5.7",
            "som.Vector.forEach": "7.1",
            "deltablue.Planner.addPropagate": "1.9",
            "deltablue.AbstractConstraint.<init>": "9.0",
            "deltablue.Planner.constraintsConsuming": "4.4",
            "deltablue.Planner.addConstraintsConsumingTo": "17.1"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepEProcessNonBackPreds": "9.8",
            "havlak.HavlakLoopFinder.findLoops": "6.1",
            "java.lang.ClassLoader.loadClass": "9.0",
            "som.Vector.<init>": "17.1",
            "som.Vector.forEach": "5.9",
            "java.lang.Integer.valueOf": "3.0",
            "som.Set.<init>": "5.9",
            "havlak.UnionFindNode.findSet": "5.9",
            "havlak.HavlakLoopFinder.processEdges": "3.0",
            "som.Set.contains": "19.4"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Mandelbrot.mandelbrot": "99.5",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.0",
            "Run.printResult": "0.2"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.8",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Scheduler.<init>": "0.1",
            "richards.Packet.<init>": "0.2",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "84.0",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.3",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.8",
            "Harness.processArguments": "0.0",
            "Bounce.benchmark": "51.2",
            "Bounce$Ball.<init>": "47.1",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "7.6",
            "cd.RedBlackTree.treeInsert": "2.0",
            "cd.RedBlackTree.findNode": "1.6",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "44.6",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.6",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.6",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.3",
            "Run.runBenchmark": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.4",
            "List$Element.length": "0.1",
            "List.isShorterThan": "72.3",
            "List$Element.<init>": "24.6",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readName": "0.0",
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.6",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.4",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "22.6",
            "Queens.placeQueen": "76.4",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.2",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.627057342433577",
            "json.JsonPureStringParser.readChar(String)": "2.0462899416007385",
            "java.lang.String.<init>(byte[], byte) String.java": "6.6357056542443695",
            "json.JsonPureStringParser.isWhiteSpace()": "2.795754158894836",
            "json.JsonPureStringParser.read()": "21.658673785173246",
            "java.lang.String.length() String.java": "2.842069363334359",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.7536494275861787",
            "java.lang.String.substring(int, int) String.java": "8.98514966126744",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.888334042096313",
            "json.JsonPureStringParser.readStringInternal()": "3.006277815438122"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.065375145079239",
            "som.Vector.hasSome(TestInterface)": "2.078293976635464",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.898623509887084",
            "havlak.HavlakLoopFinder.findLoops()": "10.215747741102714",
            "som.Vector.<init>(int)": "2.6705426777017287",
            "som.Vector.append(Object)": "5.002657526222735",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.34778882971223",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.644705014589278",
            "som.Vector.removeAll()": "2.6618650410560694",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.8822227766268"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.665012171603806",
            "sun.reflect.generics.parser.SignatureParser.parseTypeArgument() SignatureParser.java": "0.031614555341279126",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.23710916505959345",
            "Queens.getRowColumn(int, int)": "61.45869558344662",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.4584110524485473",
            "Queens.setRowColumn(int, int, boolean)": "21.35563213303405",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.28453099807151216",
            "Queens.verifyResult(Object)": "0.18968733204767474",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14226549903575608",
            "com.yourkit.probes.builtin.Files.<clinit>() a": "0.11065094369447694"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.039081197828498",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.747562897670889",
            "richards.Scheduler.findTask(int)": "1.4301558578016462",
            "richards.TaskControlBlock.runTask()": "39.13592318019964",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.5899830716245402",
            "richards.Scheduler.schedule()": "2.947872278325842",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "3.422158659739653",
            "richards.RBObject.append(Packet, Packet)": "3.079213122409667",
            "Richards.benchmark()": "26.62570778121534",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.0649699375401322"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.6600001109243885",
            "javax.management.openmbean.TabularDataSupport.checkValueAndIndex(CompositeData) TabularDataSupport.java": "0.07764707187345748",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object) DirectMethodHandle$Holder": "0.0998319495515882",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.702689361796532",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.96824234760377",
            "Storage$$Lambda$10.0x00000008000c2aa0.apply(int)": "1.0149581537744798",
            "som.Random.next()": "12.678657593051698",
            "Storage$$Lambda$10.0x00000008000c2aa0.<init>(Storage, int, Random)": "0.21075633794224174",
            "Storage.buildTreeDepth(int, Random)": "37.958325707281645",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.1890761662312896"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "33.42833735273415",
            "Towers.popDiskFrom(int)": "29.216620703183594",
            "Towers.moveDisks(int, int, int)": "8.64267334387224",
            "java.io.RandomAccessFile.<init>(File, String, boolean) RandomAccessFile.java": "0.11538949724796048",
            "Towers$TowersDisk.getSize()": "2.0654720007384926",
            "Towers.moveTopDisk(int, int)": "8.077264807357233",
            "jdk.internal.org.objectweb.asm.ClassWriter.<init>(ClassReader, int) ClassWriter.java": "0.09231159779836838",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.63151517948836",
            "Towers.benchmark()": "0.10385054752316443",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.09231159779836838"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.190976903028669",
            "jdk.internal.org.objectweb.asm.MethodWriter.<init>(SymbolTable, int, String, String, String, String[], int) MethodWriter.java": "0.08987148377819718",
            "java.lang.invoke.LambdaForm$Name.useCount(LambdaForm$Name) LambdaForm.java": "0.11233935472274646",
            "Permute.permute(int)": "53.47353284802732",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.06740361283364789",
            "java.lang.invoke.MethodHandles$Lookup.lookupClassOrNull() MethodHandles.java": "0.04493574188909859",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.022467870944549294",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.20221083850094365",
            "Permute.benchmark()": "0.2134447739732183",
            "Permute.swap(int, int)": "45.553608340073694"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.234954657873042",
            "som.Vector.forEach(ForEachInterface)": "43.73454245671888",
            "deltablue.EqualityConstraint.execute()": "5.255564715581204",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.3075020610057715",
            "som.Vector.<init>(int)": "2.6793075020610058",
            "deltablue.ScaleConstraint.execute()": "2.061005770816158",
            "deltablue.BinaryConstraint.chooseMethod(int)": "6.141797197032152",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "3.5243198680956307",
            "som.Vector.append(Object)": "2.019785655399835",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.741137675185491"
        },
        "YourKit_List.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.11897679952409279",
            "List.tail(List$Element, List$Element, List$Element)": "3.304911097891466",
            "List.makeList(int)": "1.4409412386806792",
            "sun.reflect.generics.factory.CoreReflectionFactory.makeWildcard(FieldTypeSignature[], FieldTypeSignature[]) CoreReflectionFactory.java": "0.11897679952409279",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.linkToTargetMethod(Object, long, Object) LambdaForm$MH": "0.11897679952409279",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.33049110978914664",
            "List$Element.getNext()": "22.248661511005352",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.2643928878313173",
            "List.isShorterThan(List$Element, List$Element)": "71.51827615837134",
            "com.yourkit.probes.Table.createRow() a": "0.11897679952409279"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.6779233231341915",
            "nbody.Body.getZ()": "5.372174673227958",
            "nbody.Body.setX(double)": "0.5499076437162477",
            "nbody.Body.getX()": "0.5499076437162477",
            "nbody.NBodySystem.advance(double)": "40.83416759492957",
            "nbody.Body.setVY(double)": "6.3309880007332096",
            "nbody.Body.setVZ(double)": "11.294256990172164",
            "NBody.innerBenchmarkLoop(int)": "0.662709211658042",
            "nbody.Body.setVX(double)": "28.863101197106637",
            "nbody.Body.setY(double)": "1.085715091439771"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.26839134028596",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "jdk.internal.org.objectweb.asm.Type.getArgumentTypes(String) Type.java": "0.09672710645257733",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.079140359824836",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.079140359824836",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.079140359824836",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.39570179912417996",
            "Run.measure(Benchmark)": "8.793373313870667E-4",
            "Run.printResult(long)": "8.793373313870667E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.053738852046649",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.81134232792133",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.362298955713086",
            "cd.RedBlackTree.findNode(Comparable)": "8.582971263053585",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.76591203597835",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "1.9056330512996416",
            "cd.RedBlackTree.put(Comparable, Object)": "7.050842289808673",
            "cd.Vector2D.compareNumbers(double, double)": "9.528165256498207",
            "cd.Vector2D.compareTo(Vector2D)": "1.9971034377620243",
            "cd.RedBlackTree.forEach(ForEachInterface)": "2.843204512539065"
        },
        "YourKit_Sieve.txt": {
            "java.nio.CharBuffer.arrayOffset() CharBuffer.java": "0.10812564199599933",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.0973130777963994",
            "sun.reflect.generics.parser.SignatureParser.parseTypeArgument() SignatureParser.java": "0.05406282099799967",
            "javax.management.openmbean.CompositeDataSupport.<init>(SortedMap, CompositeType) CompositeDataSupport.java": "0.0973130777963994",
            "java.lang.Class.isAssignableFrom(Class) Class.java (native)": "0.1946261555927988",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.1464561820835804",
            "java.nio.Buffer.clear() Buffer.java": "0.0973130777963994",
            "Sieve.benchmark()": "87.74395847975346",
            "java.lang.Object.clone() Object.java (native)": "0.11893820619559925",
            "Sieve.sieve(boolean[], int)": "7.8066713521111515"
        },
        "YourKit_Bounce.txt": {
            "sun.reflect.generics.visitor.Reifier.visitWildcard(Wildcard) Reifier.java": "0.0",
            "java.io.FileCleanable.<clinit>() FileCleanable.java": "0.5350895245935378",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.10290183165260341",
            "Bounce.benchmark()": "66.78328874253961",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.5968306235850998",
            "Bounce.lambda$benchmark$0(Random, int)": "0.41160732661041366",
            "som.Random.next()": "0.18522329697468615",
            "com.yourkit.probes.Table.createRow() a": "0.18522329697468615",
            "Bounce$Ball.bounce()": "31.117513891747272",
            "javax.management.openmbean.CompositeType.isAssignableFrom(OpenType) CompositeType.java": "0.08232146532208273"
        }
    },
    "Runtimes": {
        "NBody.data": 102.983,
        "JavaFlightRecorder_Queens.jfr": 104.603,
        "rebench_test_Async_Bounce.txt": 102.55799999999999,
        "JavaFlightRecorder_Sieve.jfr": 104.7505,
        "Permute.hpl": 104.03,
        "CD.data": 95.537,
        "List.data": 152.198,
        "DeltaBlue.hpl": 101.8615,
        "JavaFlightRecorder_Json.jfr": 83.63300000000001,
        "NBody.hpl": 102.774,
        "Towers.hpl": 109.2935,
        "Bounce.hpl": 174.348,
        "Sieve.data": 106.1935,
        "Richards.hpl": 91.0455,
        "JavaFlightRecorder_Havlak.jfr": 164.0035,
        "JavaFlightRecorder_CD.jfr": 97.16499999999999,
        "JavaFlightRecorder_DeltaBlue.jfr": 84.00450000000001,
        "rebench_test_Async_Mandelbrot.txt": 85.7835,
        "JavaFlightRecorder_Towers.jfr": 110.33500000000001,
        "rebench_test_Async_CD.txt": 95.0175,
        "rebench_test_Async_Permute.txt": 105.6705,
        "Mandelbrot.data": 85.8595,
        "JavaFlightRecorder_Permute.jfr": 107.5435,
        "rebench_test_Async_NBody.txt": 102.9965,
        "JavaFlightRecorder_Bounce.jfr": 124.082,
        "Havlak.data": 158.879,
        "Mandelbrot.hpl": 85.0925,
        "JavaFlightRecorder_Storage.jfr": 105.33,
        "rebench_test_Async_Towers.txt": 108.9075,
        "List.hpl": 150.2425,
        "JavaFlightRecorder_NBody.jfr": 103.87950000000001,
        "Queens.hpl": 105.0665,
        "Storage.data": 119.97149999999999,
        "rebench_test_Async_Sieve.txt": 116.839,
        "JavaFlightRecorder_Richards.jfr": 91.814,
        "Storage.hpl": 108.7385,
        "rebench_test_Async_List.txt": 151.1325,
        "Bounce.data": 102.95949999999999,
        "rebench_test_Async_Richards.txt": 93.5,
        "Permute.data": 107.099,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.3865,
        "rebench_test_Async_DeltaBlue.txt": 88.076,
        "JavaFlightRecorder_List.jfr": 153.697,
        "DeltaBlue.data": 100.4555,
        "rebench_test_Async_Storage.txt": 108.31450000000001,
        "Queens.data": 106.94149999999999,
        "Json.hpl": 79.64949999999999,
        "Towers.data": 110.4795,
        "Havlak.hpl": 160.6725,
        "Richards.data": 93.19749999999999,
        "rebench_test_Async_Havlak.txt": 161.21550000000002,
        "Sieve.hpl": 106.60300000000001,
        "CD.hpl": 94.2005,
        "Json.data": 80.02449999999999,
        "rebench_test_Async_Queens.txt": 106.4065,
        "rebench_test_Async_Json.txt": 80.8555
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.44%",
            "[.] Interpreter": "0.13%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.33%",
            "[.] void nbody.NBodySystem.advance(double)": "97.69%",
            "native_apic_msr_write": "0.12%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.07%",
            "[.] Interpreter": "0.12%",
            "asm_sysvec_apic_timer_interrupt": "0.02%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.13%",
            "[.] void Permute.permute(int)": "99.03%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.25%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.49%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.23%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.91%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "22.19%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "5.75%",
            "[.] void deltablue.EqualityConstraint.execute()": "6.82%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "9.17%",
            "[.] vtable chunks": "6.63%",
            "[.] void deltablue.Planner.chainTest(int)": "29.05%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.77%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.24%",
            "native_apic_msr_write": "0.06%",
            "[.] boolean Queens.placeQueen(int)": "96.02%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.03%",
            "[.] Interpreter": "0.10%",
            "[.] void Towers.moveDisks(int, int, int)": "99.08%",
            "[.] java.lang.Object Towers.benchmark()": "0.03%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.65%",
            "[.] boolean richards.Scheduler.start()": "24.06%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.67%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.60%",
            "[.] void richards.Scheduler.schedule()": "7.94%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.49%",
            "x86_pmu_disable_all": "0.06%",
            "[.] Interpreter": "0.10%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.76%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.21%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.69%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.70%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.33%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.23%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.06%",
            "[.] Interpreter": "0.14%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.26%",
            "[.] Interpreter": "0.07%",
            "[.] java.lang.Object List.benchmark()": "0.43%",
            "[.] List$Element List.makeList(int)": "0.66%",
            "[.] int List$Element.length()": "0.05%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.16%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.36%",
            "[.] java.lang.Object Sieve.benchmark()": "2.05%",
            "clear_page_rep": "0.09%",
            "[.] int Sieve.sieve(boolean[], int)": "2.11%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.77%",
            "clear_page_rep": "0.06%",
            "[.] boolean Bounce$Ball.bounce()": "0.02%",
            "[.] java.lang.Object Bounce.benchmark()": "6.07%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.20%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.71%",
            "[.] StubRoutines (2)": "8.51%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.78%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.38%"
        }
    }
}