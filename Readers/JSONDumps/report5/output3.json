{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.0081662651586297",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.00408313257931485",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.00408313257931485",
            "Run.measure(LBenchmark;)V": "0.00408313257931485",
            "jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;)J": "0.00408313257931485",
            "Mandelbrot.mandelbrot(I)I": "99.95100240904821",
            "java.lang.invoke.MethodType.parameterType(I)Ljava/lang/Class;": "0.00408313257931485",
            "jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class;": "0.00408313257931485",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(Ljava/lang/invoke/MemberName;Ljava/lang/invoke/LambdaForm$Name;)V": "0.00408313257931485",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.00408313257931485"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.289211729889696",
            "Queens.benchmark()Ljava/lang/Object;": "0.050443906376109765",
            "Queens.placeQueen(I)Z": "8.353510895883778",
            "Queens.getRowColumn(II)Z": "71.61353241861717",
            "java.lang.Long.getChars(JI[B)I": "0.003362927091740651",
            "java.util.Arrays.fill([ZZ)V": "0.4808985741189131",
            "Queens.setRowColumn(IIZ)V": "18.54317998385795",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.03699219800914716",
            "java.lang.invoke.MemberName.getFieldType()Ljava/lang/Class;": "0.003362927091740651",
            "Queens.queens()Z": "0.6120527306967984"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.Math.abs(I)I": "0.007042501496531568",
            "Bounce.verifyResult(Ljava/lang/Object;)Z": "0.003521250748265784",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.34156132258178107",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.433149054544174",
            "Bounce$Ball.bounce()Z": "85.06285432585655",
            "Bounce.benchmark()Ljava/lang/Object;": "8.426353040600022",
            "som.Random.next()I": "1.3415965350892638",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.07394626571358147",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01760625374132892",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.260678192894116"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.160168474552342",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.135014941528034",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.550742370408716",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "15.73448787030283",
            "som.Vector.<init>(I)V": "4.776582978423022",
            "havlak.HavlakLoopFinder.findLoops()V": "3.863620320478129",
            "havlak.HavlakLoopFinder$$Lambda$79+0x000000080100f598.667447085.apply(Ljava/lang/Object;)V": "1.7459234334925526",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.397750535306713",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.757711946163439",
            "som.Vector.append(Ljava/lang/Object;)V": "2.2918186310266124"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.496071653048396",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.837052168447517",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.745914519170333",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.2666561910747958",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.104651162790698",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "16.015870521684473",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.996385920804525",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.774198617221873",
            "cd.Vector2D.compareNumbers(DD)I": "3.7162162162162162",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "21.27985543683218"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.5930637810436",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.01949745314518291",
            "List$Element.getNext()LList$Element;": "9.841339475031074",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.20716043966756842",
            "List.benchmark()Ljava/lang/Object;": "0.007311544929443591",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.17884038897419",
            "List$Element.length()I": "0.0731154492944359",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.007311544929443591",
            "List$Element.setNext(LList$Element;)V": "0.07555263093758377",
            "List.makeList(I)LList$Element;": "0.9578123857571104"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.086758903151691",
            "deltablue.ScaleConstraint.execute()V": "7.432196193996304",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "6.603066779881125",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "6.368313271065381",
            "deltablue.Planner.chainTest(I)V": "18.525548174416862",
            "deltablue.Variable.<init>()V": "7.27236401778133",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "13.016332850506968",
            "som.Vector.<init>(I)V": "4.939813196144049",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.015783427401229",
            "som.Vector.append(Ljava/lang/Object;)V": "3.416412766595075"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.5279550288666058",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "34.67790945001519",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7710422364023093",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "2.928441203281677",
            "Storage.benchmark()Ljava/lang/Object;": "0.022789425706472195",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.59784260103312",
            "som.Random.next()I": "13.282436949255546",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.3521725919173504",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.011394712853236098",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.7748404740200546"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.010276788161140039",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.003425596053713346",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.006851192107426692",
            "Sieve.benchmark()Ljava/lang/Object;": "3.254316251027679",
            "java.io.FileOutputStream.write([BII)V": "0.010276788161140039",
            "java.util.Arrays.fill([ZZ)V": "5.138394080570019",
            "Sieve.sieve([ZI)I": "91.49767059468348",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.006851192107426692",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.006851192107426692",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.006851192107426692"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.03155348315394594",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.140553237737965",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.207131087192792",
            "Towers.moveDisks(III)V": "3.9266556813799394",
            "Towers$TowersDisk.getSize()I": "11.664270939242016",
            "Towers.benchmark()Ljava/lang/Object;": "0.08764856431651649",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01051782771798198",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.716123829891664",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "19.87168250184062",
            "Towers.moveTopDisk(II)V": "4.284261823791327"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.6785420663195396",
            "nbody.Body.getMass()D": "0.4898602356810085",
            "nbody.Body.setVX(D)V": "28.31597697999452",
            "nbody.NBodySystem.advance(D)V": "42.439709509454644",
            "nbody.Body.setZ(D)V": "0.36653877774732807",
            "nbody.Body.getY()D": "0.801589476568923",
            "nbody.Body.getZ()D": "8.509180597423953",
            "nbody.Body.setVZ(D)V": "9.286790901616882",
            "nbody.Body.setVY(D)V": "5.991367497944642",
            "nbody.Body.setX(D)V": "1.2126610030145246"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.7144880328565355",
            "richards.Scheduler.schedule()V": "11.726384364820847",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.015153660954539",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.05438323183685",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.036255487891234",
            "Richards.benchmark()Ljava/lang/Object;": "8.277864325166407",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.369069536892791",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.367511683897465",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.02209318793372",
            "richards.RBObject.<init>()V": "10.218099419345702"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.593187814823699",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "4.370352602542576",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.612856800191896",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.646437994722955",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.261453585991845",
            "java.lang.String.<init>([BB)V": "4.173662748860639",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.9481890141520752",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.7872391460781962",
            "json.JsonPureStringParser.read()V": "15.298632765651236",
            "java.util.Arrays.copyOfRange([BII)[B": "6.500359798512833"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.007206687806284232",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003603343903142116",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.007206687806284232",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.003603343903142116",
            "Permute.swap(II)V": "42.83655232055347",
            "java.lang.invoke.InvokerBytecodeGenerator.addMethod()V": "0.003603343903142116",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.003603343903142116",
            "Permute.permute(I)V": "56.763476506197755",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.021620063418852697",
            "Permute.benchmark()Ljava/lang/Object;": "0.3351109829922168"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "richards.Packet::setLink": "2.3",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "2.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "46.4",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.1",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.5"
        },
        "Mandelbrot.hpl": {
            "Harness::processArguments": "0.0",
            "sun.nio.fs.NativeBuffer::<init>": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MemberName::testAnyFlags": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "sun.invoke.util.VerifyType::isNullConversion": "0.0",
            "Mandelbrot::mandelbrot": "98.3",
            "java.lang.invoke.Invokers$Holder::invokeExact_MT": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.lang.StringLatin1::getChars": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "82.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.6",
            "json.JsonPureStringParser::read": "12.7",
            "java.lang.String::<init>": "4.5",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "3.8",
            "java.util.Arrays::copyOfRange": "8.6",
            "java.lang.String::equals": "20.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "json.JsonPureStringParser::readStringInternal": "9.1"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.7",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.3",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.9",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "5.2",
            "som.Vector::hasSome": "2.5",
            "som.Vector::forEach": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "50.3",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.lang.invoke.LambdaFormBuffer::insertName": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "6.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "69.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "8.3",
            "Queens::setRowColumn": "18.6",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.8",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.6",
            "Storage::buildTreeDepth": "40.6",
            "java.util.Arrays::setAll": "34.4",
            "som.Random::next": "12.7",
            "AGCT::Unknown not Java[ERR=-3]": "4.7",
            "AGCT::Unknown Java[ERR=-5]": "1.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.1",
            "java.io.PrintStream::writeln": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Sieve::sieve": "89.8",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "Run::measure": "0.0",
            "sun.nio.cs.StreamEncoder::implWrite": "0.0",
            "java.util.Arrays::fill": "5.1"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "23.5",
            "deltablue.ScaleConstraint::execute": "6.2",
            "deltablue.Planner::addPropagate": "3.4",
            "som.Vector::append": "3.9",
            "AGCT::Unknown not Java[ERR=-3]": "7.9",
            "AGCT::Unknown Java[ERR=-5]": "10.5",
            "deltablue.EqualityConstraint::execute": "2.3",
            "som.Vector::<init>": "5.3",
            "som.Vector::forEach": "16.1",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "1.7"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.2",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "82.7",
            "java.util.Arrays::setAll": "1.2",
            "Bounce::lambda$benchmark$0": "0.3",
            "som.Random::next": "1.4",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "3.2",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.7",
            "nbody.Body::getZ": "7.7",
            "nbody.Body::setVX": "28.2",
            "nbody.Body::setVY": "5.7",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "nbody.NBodySystem::advance": "42.0"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.5",
            "Towers::popDiskFrom": "20.6",
            "Towers::moveDisks": "3.4",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "Towers::pushDisk": "36.3",
            "Towers$TowersDisk::setNext": "14.9",
            "AGCT::Unknown Java[ERR=-5]": "4.6",
            "Towers::moveTopDisk": "3.7",
            "Towers$TowersDisk::getNext": "3.3"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.4",
            "cd.RedBlackTree::forEach": "4.8",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::findNode": "7.9",
            "cd.RedBlackTree::leftRotate": "2.6",
            "cd.RedBlackTree::treeMinimum": "6.2",
            "AGCT::Unknown not Java[ERR=-3]": "5.4",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.RedBlackTree::treeInsert": "21.1",
            "cd.CollisionDetector::isInVoxel": "14.9"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.98%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "11.18%",
            "java.util.Arrays.setAll": "2.97%",
            "som.Vector.forEach": "23.07%",
            "deltablue.Planner.chainTest": "3.64%",
            "itable": "2.83%",
            "deltablue.Planner.addPropagate": "2.82%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "3.29%",
            "deltablue.ScaleConstraint.execute": "6.14%",
            "deltablue.Planner$$Lambda$10.0x000000080100dd80.apply": "2.81%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "86.00%",
            "som.Random.next": "1.22%",
            "clear_page_rep_[k]": "0.11%",
            "java.util.Arrays.setAll": "1.14%",
            "SpinPause": "0.02%",
            "Bounce.benchmark": "7.82%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.05%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%",
            "Bounce$Ball.<init>": "2.74%",
            "Bounce.lambda$benchmark$0": "0.24%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "stringStream::write(char": "0.00%",
            "java.nio.ByteBuffer.arrayOffset": "0.01%",
            "Mandelbrot.mandelbrot": "99.53%",
            "rmqueue_[k]": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "I2C/C2I": "0.01%",
            ".annobin__ZN15StatSamplerTask4taskEv.start": "0.00%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "__tls_get_addr": "0.00%",
            "futex_wake_[k]": "0.00%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.51%",
            "som.Random.next": "13.33%",
            "java.util.Arrays.setAll": "36.22%",
            "Storage.lambda$buildTreeDepth$0": "3.10%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.57%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.47%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.27%",
            "Storage.buildTreeDepth": "42.28%",
            "_raw_spin_unlock_irqrestore_[k]": "0.19%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "0.82%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.91%",
            "Towers.popDiskFrom": "24.17%",
            "Towers.moveDisks": "7.53%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.05%",
            "Towers.pushDisk": "34.20%",
            "Towers.moveTopDisk": "5.16%",
            "Towers$TowersDisk.getSize": "9.90%",
            "Towers.buildTowerAt": "0.02%",
            "Towers$TowersDisk.getNext": "3.52%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.30%",
            "cd.CollisionDetector.isInVoxel": "14.42%",
            "cd.RedBlackTree.forEach": "5.50%",
            "cd.RedBlackTree.put": "7.16%",
            "cd.RedBlackTree.treeInsert": "20.40%",
            "cd.RedBlackTree.findNode": "6.93%",
            "cd.RedBlackTree.treeMinimum": "5.99%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.04%",
            "cd.Vector2D.compareNumbers": "3.55%",
            "cd.RedBlackTree.leftRotate": "2.31%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.50%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.84%",
            "som.Vector.hasSome": "2.22%",
            "som.Vector.append": "3.43%",
            "som.Vector.forEach": "2.46%",
            "som.IdentitySet.lambda$contains$0": "33.17%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "5.40%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.40%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.93%",
            "havlak.HavlakLoopFinder.doDFS": "6.13%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.45%",
            "Sieve.benchmark": "3.18%",
            "clear_page_rep_[k]": "0.08%",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic": "0.01%",
            "Sieve.sieve": "89.36%",
            "SpinPause": "0.05%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.03%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.47%",
            "Permute.swap": "41.05%",
            "Permute.benchmark": "0.02%",
            "Interpreter": "0.02%",
            "os::PlatformMonitor::wait(long)": "0.00%",
            "sun.nio.cs.StreamEncoder.writeBytes": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "[vdso]": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.96%",
            "nbody.Body.getZ": "8.10%",
            "nbody.Body.getY": "0.76%",
            "nbody.Body.setX": "1.28%",
            "nbody.Body.setY": "1.73%",
            "nbody.Body.setVX": "28.61%",
            "nbody.Body.setVY": "5.67%",
            "nbody.Body.getVZ": "0.52%",
            "nbody.Body.getMass": "0.41%",
            "nbody.NBodySystem.advance": "42.55%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.36%",
            "List.makeList": "0.77%",
            "clear_page_rep_[k]": "0.05%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.03%",
            "List.tail": "4.91%",
            "List$Element.length": "0.09%",
            "List.isShorterThan": "84.22%",
            "List$Element.<init>": "0.14%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.27%",
            "java.lang.String.length": "3.28%",
            "java.lang.String.<init>": "5.73%",
            "json.JsonPureStringParser.readArray": "2.63%",
            "json.JsonPureStringParser.isWhiteSpace": "2.29%",
            "java.lang.String.isLatin1": "2.76%",
            "json.JsonPureStringParser.readStringInternal": "9.33%",
            "java.util.Arrays.copyOfRange": "8.04%",
            "java.lang.String.equals": "22.31%",
            "json.JsonPureStringParser.read": "14.59%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.62%",
            "Queens.getRowColumn": "56.81%",
            "Queens.setRowColumn": "26.53%",
            "clear_page_rep_[k]": "0.10%",
            "Queens.queens": "0.51%",
            "Queens.placeQueen": "14.88%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Queens.benchmark": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.24%",
            "Richards.benchmark": "4.56%",
            "richards.Packet.<init>": "6.96%",
            "richards.TaskState.isTaskHoldingOrWaiting": "3.11%",
            "itable": "37.03%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.30%",
            "richards.TaskControlBlock.<init>": "3.23%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.78%",
            "richards.RBObject.<init>": "5.84%",
            "richards.RBObject.append": "2.62%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.5",
            "Towers.moveDisks": "95.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.5",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.3",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.4",
            "deltablue.AbstractConstraint.satisfy": "15.2",
            "deltablue.Planner.removePropagateFrom": "9.1",
            "som.Vector.<init>": "26.1",
            "deltablue.Variable.<init>": "5.3",
            "som.Vector.forEach": "6.7",
            "deltablue.Planner.addPropagate": "2.5",
            "deltablue.Planner.constraintsConsuming": "5.3",
            "deltablue.AbstractConstraint.<init>": "4.0",
            "deltablue.Planner.addConstraintsConsumingTo": "16.2"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.7",
            "som.Dictionary$Entry.<init>": "3.4",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "43.0",
            "java.lang.Integer.valueOf": "8.6",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.6",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.5",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.0",
            "Run.printResult": "0.1",
            "java.lang.System.nanoTime": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.schedule": "14.7",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.1",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.3"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "54.0",
            "Bounce$Ball.<init>": "44.6",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.6",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.9"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Run.runBenchmark": "0.2",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "99.0",
            "java.lang.System.nanoTime": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.0",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.swap": "0.1",
            "Permute.benchmark": "1.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.2",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.2",
            "List$Element.length": "0.1",
            "List.isShorterThan": "71.1",
            "List$Element.<init>": "25.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.1",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.1",
            "json.JsonValue.<init>": "4.2",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "28.7",
            "Queens.placeQueen": "70.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.787261893630955",
            "java.lang.String.<init>(byte[], byte) String.java": "6.961503480751742",
            "json.JsonPureStringParser.read()": "21.322260661130336",
            "java.lang.String.length() String.java": "2.817751408875705",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.7115013557506784",
            "json.JsonArray.<init>()": "2.0315010157505085",
            "java.lang.String.substring(int, int) String.java": "10.110755055377531",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.552253776126889",
            "json.JsonPureStringParser.readStringInternal()": "3.5105017552508784",
            "json.JsonPureStringParser.readValue()": "2.142001071000536"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.070787193382027",
            "som.Vector.hasSome(TestInterface)": "2.1270190319118307",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.938200825501542",
            "havlak.HavlakLoopFinder.findLoops()": "11.577528207544702",
            "som.Vector.append(Object)": "2.7356737087358316",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.5240625845353724",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.50237789819978",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.247493389879317",
            "som.Vector.removeAll()": "2.299362112446225",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.82385228234597"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "15.5841717388243",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.2503481403827197",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, long, Object) DirectMethodHandle$Holder": "0.14082082896527984",
            "Queens.getRowColumn(int, int)": "57.11066952480793",
            "Queens.queens()": "0.5319897983132793",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6102235921828794",
            "Queens.setRowColumn(int, int, boolean)": "24.565411275054373",
            "com.yourkit.probes.Table.createRow() a": "0.26599489915663965",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.35987545180015956",
            "javax.management.openmbean.CompositeType.isAssignableFrom(OpenType) CompositeType.java": "0.23470138160879972"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.5000018059864844",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.5675962681095297",
            "richards.Scheduler.findTask(int)": "1.5098047006216206",
            "richards.TaskControlBlock.runTask()": "39.760598431681345",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.998454075569699",
            "richards.Scheduler.schedule()": "1.748194916509245",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "4.254904156297295",
            "richards.RBObject.append(Packet, Packet)": "3.1749242388669967",
            "Richards.benchmark()": "26.761107719869827",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.3906095926778086"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.10280606447563498",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.201207700715314",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.4869760948845867",
            "com.yourkit.probes.ReflectionUtilImpl$MemberIdCache.get(Class, String) a": "0.14068198296665838",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.302996526237195",
            "som.Random.next()": "14.782429902496567",
            "com.yourkit.probes.Table.createRow() a": "0.10280606447563498",
            "Storage.buildTreeDepth(int, Random)": "35.327410261127405",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.6901966301254236",
            "sun.nio.fs.NativeBuffers.<clinit>() NativeBuffers.java": "0.11903860097178787"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.20201971453736",
            "Towers.popDiskFrom(int)": "31.297129688838478",
            "Towers.moveDisks(int, int, int)": "8.264662234716406",
            "Towers$TowersDisk.getSize()": "2.3889096678450343",
            "Towers.moveTopDisk(int, int)": "8.638683445338609",
            "java.lang.invoke.MethodHandles$Lookup$ClassDefiner.<init>(MethodHandles$Lookup, MethodHandles$Lookup$ClassFile, int) MethodHandles.java": "0.16891280479712364",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "16.23975966120917",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.12065200342651689",
            "Towers.benchmark()": "0.1085868030838652",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.3136952089089439"
        },
        "YourKit_Permute.txt": {
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.23661705220222867",
            "sun.reflect.generics.factory.CoreReflectionFactory.makeWildcard(FieldTypeSignature[], FieldTypeSignature[]) CoreReflectionFactory.java": "0.04506991470518642",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.07887235073407624",
            "java.security.Permissions.add(Permission) Permissions.java": "0.02253495735259321",
            "Permute.permute(int)": "57.22752419691045",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.15774470146815248",
            "jdk.internal.loader.URLClassPath$JarLoader$2.getBytes() URLClassPath.java": "0.15774470146815248",
            "Permute.benchmark()": "0.6647812419014997",
            "Permute.swap(int, int)": "41.40798413539002",
            "jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String) BuiltinClassLoader.java": "0.0011267478676296606"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.305971442005494",
            "som.Vector.forEach(ForEachInterface)": "40.68400603825881",
            "deltablue.Variable.setValue(int)": "2.2272266079338765",
            "deltablue.BinaryConstraint.isSatisfied()": "3.9100200450394715",
            "som.Vector.<init>(int)": "3.8110321957979663",
            "deltablue.ScaleConstraint.execute()": "2.152985721002747",
            "deltablue.BinaryConstraint.chooseMethod(int)": "2.3014674948650056",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "5.073127273627163",
            "som.Vector.append(Object)": "7.424088693112921",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "3.192358138038556"
        },
        "YourKit_List.txt": {
            "java.util.ArrayList$Itr.next() ArrayList.java": "0.22690567397658867",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.1201265332817234",
            "List.tail(List$Element, List$Element, List$Element)": "2.6427837321979153",
            "List$Element.<init>(Object)": "0.253600459150305",
            "List.makeList(int)": "0.1334739258685816",
            "Benchmark.innerBenchmarkLoop(int)": "0.1201265332817234",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0667369629342908",
            "com.sun.management.internal.GcInfoBuilder.getItemNames() GcInfoBuilder.java": "0.1201265332817234",
            "List$Element.getNext()": "23.264505278893765",
            "List.isShorterThan(List$Element, List$Element)": "72.9168057020061"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.315926229276697",
            "nbody.Body.getZ()": "4.56124495156325",
            "nbody.Body.getMass()": "0.5507385545231168",
            "nbody.Body.getX()": "0.6919535685034032",
            "nbody.Body.setZ(double)": "0.6213460615132601",
            "nbody.NBodySystem.advance(double)": "46.304403084135906",
            "nbody.Body.setVY(double)": "6.2275821165306295",
            "nbody.Body.setVZ(double)": "9.0236393933403",
            "nbody.Body.setVX(double)": "26.887338661846528",
            "nbody.Body.setY(double)": "1.1155986104442623"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.71107042766782",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "java.net.URI.<init>(String) URI.java": "0.03470625493479562",
            "Run.runBenchmark()": "8.676563733698905E-4",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.026029691201096716",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "8.676563733698905E-4",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.05205938240219343",
            "com.yourkit.probes.Table.createRow() a": "0.07808907360329014",
            "Run.measure(Benchmark)": "8.676563733698905E-4",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.09544220107068795"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.044731989087528",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.565848231295625",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.082575099446757",
            "cd.RedBlackTree.findNode(Comparable)": "9.48744913355585",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "9.281697224635362",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.011796442778108",
            "cd.RedBlackTree.put(Comparable, Object)": "6.073491533689969",
            "cd.Vector2D.compareNumbers(double, double)": "9.502690015698107",
            "cd.RedBlackTree.forEach(ForEachInterface)": "5.006629783731882",
            "cd.CollisionDetector.lambda$handleNewFrame$0(RedBlackTree, Vector, Aircraft)": "1.7984240927864905"
        },
        "YourKit_Sieve.txt": {
            "sun.invoke.util.Wrapper.asPrimitiveType(Class) Wrapper.java": "0.11571273786857136",
            "java.io.BufferedWriter.flushBuffer() BufferedWriter.java": "0.09467405825610384",
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.0525966990311688",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "4.712664233192725",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.09467405825610384",
            "java.util.TreeMap.containsKey(Object) TreeMap.java": "0.08415471844987008",
            "Sieve.benchmark()": "85.19613309068723",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.1367514174810389",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1367514174810389",
            "Sieve.sieve(boolean[], int)": "9.246499689679474"
        },
        "YourKit_Bounce.txt": {
            "sun.net.util.URLUtil.urlNoFragString(URL) URLUtil.java": "0.22809745982374283",
            "Bounce.benchmark()": "67.9937791601866",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.8087091757387246",
            "Bounce.lambda$benchmark$0(Random, int)": "0.8294453084499739",
            "som.Random.next()": "0.18662519440124414",
            "com.yourkit.probes.Table.createRow() a": "0.18662519440124414",
            "jdk.internal.org.objectweb.asm.ByteVector.putShort(int) ByteVector.java": "0.29030585795749086",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1658890616899948",
            "Bounce$Ball.bounce()": "28.387765681700355",
            "Bounce$Ball.<init>(Random)": "0.39398652151373764"
        }
    },
    "Runtimes": {
        "NBody.data": 103.81299999999999,
        "JavaFlightRecorder_Queens.jfr": 108.33099999999999,
        "rebench_test_Async_Bounce.txt": 120.411,
        "JavaFlightRecorder_Sieve.jfr": 105.5185,
        "Permute.hpl": 104.7305,
        "CD.data": 95.2065,
        "List.data": 151.0475,
        "DeltaBlue.hpl": 83.13399999999999,
        "Bounce.hpl": 100.088,
        "JavaFlightRecorder_Json.jfr": 85.7295,
        "NBody.hpl": 102.71000000000001,
        "Towers.hpl": 107.988,
        "Sieve.data": 108.3295,
        "Richards.hpl": 90.878,
        "JavaFlightRecorder_Havlak.jfr": 161.589,
        "JavaFlightRecorder_CD.jfr": 96.596,
        "rebench_test_Async_Mandelbrot.txt": 86.7165,
        "JavaFlightRecorder_DeltaBlue.jfr": 80.15350000000001,
        "JavaFlightRecorder_Towers.jfr": 109.86,
        "rebench_test_Async_CD.txt": 93.68350000000001,
        "Mandelbrot.data": 84.526,
        "rebench_test_Async_Permute.txt": 105.042,
        "JavaFlightRecorder_Permute.jfr": 107.816,
        "rebench_test_Async_NBody.txt": 103.4645,
        "JavaFlightRecorder_Bounce.jfr": 103.08250000000001,
        "Havlak.data": 161.2065,
        "Mandelbrot.hpl": 85.48949999999999,
        "JavaFlightRecorder_Storage.jfr": 99.369,
        "rebench_test_Async_Towers.txt": 108.541,
        "List.hpl": 151.423,
        "JavaFlightRecorder_NBody.jfr": 106.2985,
        "Queens.hpl": 109.864,
        "Storage.data": 115.7695,
        "rebench_test_Async_Sieve.txt": 105.3455,
        "JavaFlightRecorder_Richards.jfr": 93.6015,
        "Storage.hpl": 107.488,
        "rebench_test_Async_List.txt": 151.52499999999998,
        "Bounce.data": 101.4365,
        "rebench_test_Async_Richards.txt": 92.194,
        "Permute.data": 105.79599999999999,
        "rebench_test_Async_DeltaBlue.txt": 84.1875,
        "JavaFlightRecorder_Mandelbrot.jfr": 88.344,
        "JavaFlightRecorder_List.jfr": 152.526,
        "DeltaBlue.data": 84.22749999999999,
        "rebench_test_Async_Storage.txt": 110.098,
        "Queens.data": 111.35149999999999,
        "Json.hpl": 80.2045,
        "Towers.data": 109.68199999999999,
        "Havlak.hpl": 158.08350000000002,
        "Richards.data": 91.83250000000001,
        "rebench_test_Async_Havlak.txt": 160.11450000000002,
        "Sieve.hpl": 103.1805,
        "CD.hpl": 94.249,
        "rebench_test_Async_Json.txt": 79.1185,
        "rebench_test_Async_Queens.txt": 106.2195,
        "Json.data": 81.31450000000001
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.09%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.31%",
            "asm_sysvec_apic_timer_interrupt": "0.01%",
            "[.] void nbody.NBodySystem.advance(double)": "0.01%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.02%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%",
            "[.] void Permute.permute(int)": "0.02%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "33.68%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.42%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.94%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.10%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.70%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "6.14%",
            " ": "0",
            "[.] void deltablue.Planner.incrementalAdd(deltablue.AbstractConstraint)": "6.67%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "11.01%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.33%",
            "[.] void deltablue.Planner.chainTest(int)": "29.91%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.45%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.15%",
            "[.] boolean Queens.placeQueen(int)": "96.45%",
            "clear_page_rep": "0.05%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.04%",
            "[.] Interpreter": "0.13%",
            "[.] void Towers.moveDisks(int, int, int)": "99.07%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "clear_page_rep": "0.04%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.89%",
            "[.] boolean richards.Scheduler.start()": "21.76%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.64%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.71%",
            "[.] void richards.Scheduler.schedule()": "7.93%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.62%",
            "x86_pmu_disable_all": "0.20%",
            "[.] Interpreter": "0.10%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.26%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.65%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.55%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.47%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.28%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.17%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.10%",
            "[.] Interpreter": "0.14%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "97.97%",
            "[.] Interpreter": "0.09%",
            "[.] java.lang.Object List.benchmark()": "0.50%",
            "[.] List$Element List.makeList(int)": "0.76%",
            "[.] int List$Element.length()": "0.06%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.63%",
            "[.] java.lang.Object Sieve.benchmark()": "1.80%",
            "clear_page_rep": "0.06%",
            "[.] int Sieve.sieve(boolean[], int)": "2.19%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.03%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.77%",
            "clear_page_rep": "0.09%",
            "[.] java.lang.Object Bounce.benchmark()": "6.10%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.32%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.55%",
            "[.] StubRoutines (2)": "8.15%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.74%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.21%"
        }
    }
}