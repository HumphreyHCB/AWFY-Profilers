{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.004183575283437225",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.004183575283437225",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;JLjava/lang/Object;)J": "0.004183575283437225",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.00836715056687445",
            "Mandelbrot.mandelbrot(I)I": "99.92051206961469",
            "java.util.jar.JarFile$JarFileEntry.<init>(Ljava/util/jar/JarFile;Ljava/lang/String;)V": "0.004183575283437225",
            "jdk.internal.org.objectweb.asm.MethodWriter.computeAllFrames()V": "0.004183575283437225",
            "java.io.BufferedWriter.ensureOpen()V": "0.004183575283437225",
            "sun.invoke.util.BytecodeDescriptor.unparse(Ljava/lang/Class;)Ljava/lang/String;": "0.004183575283437225",
            "java.util.Arrays.copyOfRange([BII)[B": "0.004183575283437225"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.3351139719300574",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.00331796011811938",
            "Queens.benchmark()Ljava/lang/Object;": "0.0331796011811938",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.00331796011811938",
            "Queens.placeQueen(I)Z": "8.265038654235376",
            "Queens.getRowColumn(II)Z": "71.59494342877998",
            "java.util.Arrays.fill([ZZ)V": "0.40810909452868377",
            "Queens.setRowColumn(IIZ)V": "18.68343342513023",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.02322572082683566",
            "Queens.queens()Z": "0.6038687414977272"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.007039774727208729",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.3484688489968321",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.3269975360788455",
            "Bounce$Ball.bounce()Z": "84.97712073213657",
            "Bounce.benchmark()Ljava/lang/Object;": "8.47588877155931",
            "som.Random.next()I": "1.3093980992608236",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.09503695881731784",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.017599436818021823",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.3896515311510034",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.007039774727208729"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.104519774011299",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.42749529190207",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.824387947269303",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.540489642184557",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.5329566854990584",
            "havlak.HavlakLoopFinder.findLoops()V": "5.91337099811676",
            "som.Vector.<init>(I)V": "2.2339924670433144",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.3008474576271185",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.356403013182674",
            "som.Vector.append(Ljava/lang/Object;)V": "3.5616760828625234"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.822009494902327",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "8.012296676784185",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.790100396918048",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.319246633979298",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.027706436298544",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.187952369834228",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.973305315588761",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.097906451863958",
            "cd.Vector2D.compareNumbers(DD)I": "3.599501906763172",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.20017121955016"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.90187116126268",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.007141836880445651",
            "List$Element.getNext()LList$Element;": "9.779555301623578",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.16426224825024996",
            "List.benchmark()Ljava/lang/Object;": "0.004761224586963767",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.023520449459601",
            "List$Element.length()I": "0.07856020568490216",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.009522449173927534",
            "List$Element.setNext(LList$Element;)V": "0.05951530733704709",
            "List.makeList(I)LList$Element;": "0.9332000190448984"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.314086078897569",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "13.683342229123198",
            "deltablue.ScaleConstraint.execute()V": "9.102819156679121",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "2.4649425008491437",
            "deltablue.AbstractConstraint.<init>(Ldeltablue/Strength$Sym;)V": "16.240477461303314",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "1.9651608520549275",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "12.644960939395409",
            "som.Vector.<init>(I)V": "10.087825707215295",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.77946528215828",
            "som.Vector.append(Ljava/lang/Object;)V": "3.0908826240962686"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.4976602540295625",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.159325558939315",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7167793211022803",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.921859912352373",
            "Storage.benchmark()Ljava/lang/Object;": "0.03713882492757929",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.49877441877739",
            "som.Random.next()I": "12.125826338854639",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.3221421674218228",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.029711059942063432",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6202183762905742"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.003374843913469002",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.003374843913469002",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JJ)J": "0.006749687826938004",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStoreResult(Ljava/lang/invoke/LambdaForm$Name;)V": "0.003374843913469002",
            "java.io.Writer.write(Ljava/lang/String;)V": "0.003374843913469002",
            "Sieve.benchmark()Ljava/lang/Object;": "3.222975937362897",
            "java.util.Arrays.fill([ZZ)V": "6.39195437211029",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.006749687826938004",
            "Sieve.sieve([ZI)I": "90.30407343660356",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.013499375653876008"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.05901753167852804",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.469189376844298",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.9611178614823817",
            "Towers.moveDisks(III)V": "3.4299600763756293",
            "Towers$TowersDisk.getSize()I": "11.300121506682869",
            "Towers.benchmark()Ljava/lang/Object;": "0.04165943412601979",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.013886478042006597",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.71914598160042",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.833015101544873",
            "Towers.moveTopDisk(II)V": "4.134698837007464"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.531569076891019",
            "nbody.Body.getMass()D": "0.7918316315899145",
            "nbody.Body.setVX(D)V": "30.874487740501493",
            "nbody.NBodySystem.advance(D)V": "39.01159963881364",
            "nbody.Body.setZ(D)V": "0.43759116482600546",
            "nbody.Body.getY()D": "0.805723414600264",
            "nbody.Body.getZ()D": "8.637216086684726",
            "nbody.Body.setVZ(D)V": "9.304021671181497",
            "nbody.Body.setVY(D)V": "5.990831423213169",
            "nbody.Body.setX(D)V": "1.4482183788289227"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.582835990027952",
            "richards.Scheduler.schedule()V": "10.281785903150261",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.850343733474352",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.187202538339503",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.996373800710131",
            "Richards.benchmark()Ljava/lang/Object;": "9.125934879504419",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.751831986099569",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.860391327340032",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.054015260255345",
            "richards.RBObject.<init>()V": "10.750169978091712"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.597585114806017",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "4.562549485352336",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.52454473475851",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.359263657957245",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.525534441805226",
            "java.lang.String.<init>([BB)V": "4.315122723673793",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.028107680126682",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.855304829770388",
            "json.JsonPureStringParser.read()V": "15.642319873317497",
            "java.util.Arrays.copyOfRange([BII)[B": "6.749802058590657"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "java.util.concurrent.CopyOnWriteArrayList$COWIterator.<init>([Ljava/lang/Object;I)V": "0.0035980282805022847",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.0035980282805022847",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.007196056561004569",
            "Permute.swap(II)V": "43.9463174180549",
            "Run.printResult(J)V": "0.0035980282805022847",
            "java.net.URLStreamHandler.toExternalForm(Ljava/net/URL;)Ljava/lang/String;": "0.0035980282805022847",
            "java.lang.StringConcatHelper.prepend(J[BJLjava/lang/String;)J": "0.0035980282805022847",
            "Permute.permute(I)V": "55.94214370524952",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.014392113122009139",
            "Permute.benchmark()Ljava/lang/Object;": "0.050372395927031986"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.7",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "45.3",
            "richards.HandlerTaskDataRecord::workInAdd": "2.1",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.6",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.6",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "java.io.BufferedWriter::write": "0.0",
            "java.lang.invoke.MethodType::insertParameterTypes": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.Class::getName": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.9",
            "java.lang.invoke.DirectMethodHandle::internalMemberName": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.5",
            "List::makeList": "0.6",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "81.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "14.5",
            "java.lang.String::<init>": "5.5",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "7.8",
            "java.lang.String::equals": "21.7",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.4"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.0",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078::apply": "1.7",
            "havlak.HavlakLoopFinder::findLoops": "9.9",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "5.9",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.6",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::hasSome": "2.2",
            "som.Vector::forEach": "2.8"
        },
        "Permute.hpl": {
            "Permute::swap": "40.4",
            "Permute::permute": "50.5",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.util.zip.Inflater::inflateBytesBytes": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "AGCT::Unknown Java[ERR=-5]": "6.0",
            "java.nio.CharBuffer::wrap": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "67.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "0.8",
            "Queens::placeQueen": "8.3",
            "Queens::setRowColumn": "19.3",
            "java.util.Arrays::fill": "0.2",
            "Queens::queens": "0.6"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "2.0",
            "java.util.Arrays::setAll": "40.5",
            "Storage::buildTreeDepth": "32.6",
            "Storage::benchmark": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.5",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "11.1",
            "Storage::lambda$buildTreeDepth$0": "8.2"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.1",
            "jdk.internal.org.objectweb.asm.MethodWriter::endCurrentBasicBlockWithNoSuccessor": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "89.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0",
            "java.util.Arrays::fill": "5.8"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "15.4",
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "9.1",
            "deltablue.ScaleConstraint::execute": "4.8",
            "java.util.Arrays::setAll": "7.1",
            "deltablue.Planner::addPropagate": "3.5",
            "som.Vector::append": "4.0",
            "AGCT::Unknown not Java[ERR=-3]": "6.4",
            "AGCT::Unknown Java[ERR=-5]": "11.7",
            "som.Vector::<init>": "5.9",
            "som.Vector::forEach": "7.8"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "8.9",
            "Bounce$Ball::bounce": "83.4",
            "java.util.Arrays::setAll": "1.4",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "java.lang.System::arraycopy": "0.0",
            "Bounce$Ball::<init>": "3.1",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.9",
            "nbody.Body::getZ": "7.9",
            "nbody.Body::setVX": "27.9",
            "nbody.Body::setVY": "6.0",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.3",
            "nbody.NBodySystem::advance": "41.8"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.4",
            "Towers::popDiskFrom": "23.7",
            "Towers::moveDisks": "3.6",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "Towers::pushDisk": "32.1",
            "Towers$TowersDisk::setNext": "14.7",
            "AGCT::Unknown Java[ERR=-5]": "3.8",
            "Towers::moveTopDisk": "5.0",
            "Towers$TowersDisk::getNext": "3.7"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.2",
            "cd.RedBlackTree::forEach": "5.3",
            "cd.RedBlackTree::put": "6.8",
            "cd.RedBlackTree::findNode": "7.9",
            "cd.RedBlackTree::treeMinimum": "6.4",
            "AGCT::Unknown not Java[ERR=-3]": "5.2",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "cd.Vector2D::compareNumbers": "2.9",
            "cd.RedBlackTree::treeInsert": "21.4",
            "cd.CollisionDetector::isInVoxel": "14.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "6.28%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.33%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "9.79%",
            "vtable": "3.21%",
            "som.Vector.forEach": "22.77%",
            "itable": "2.94%",
            "deltablue.Planner.addPropagate": "2.57%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "2.54%",
            "deltablue.Strength.of": "6.94%",
            "deltablue.ScaleConstraint.execute": "5.86%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.89%",
            "som.Random.next": "1.28%",
            "clear_page_rep_[k]": "0.10%",
            "java.util.Arrays.setAll": "1.45%",
            "SpinPause": "0.02%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "Bounce.benchmark": "9.03%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.07%",
            "Bounce$Ball.<init>": "3.14%",
            "Bounce.lambda$benchmark$0": "0.30%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.02%",
            "VirtualSpace::reserved_size()": "0.01%",
            "LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*,": "0.01%",
            "Mandelbrot.mandelbrot": "99.56%",
            "jdk.internal.org.objectweb.asm.Frame.execute": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "Dependencies::assert_evol_method(ciMethod*)": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "__tls_get_addr": "0.01%",
            "java.io.BufferedWriter.flushBuffer": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.53%",
            "som.Random.next": "13.51%",
            "java.util.Arrays.setAll": "36.00%",
            "Storage.lambda$buildTreeDepth$0": "3.34%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.47%",
            "SpinPause": "0.19%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.50%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.21%",
            "Storage.buildTreeDepth": "42.33%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.06%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.00%",
            "Towers.popDiskFrom": "23.78%",
            "Towers.moveDisks": "7.62%",
            "clear_page_rep_[k]": "0.04%",
            "Towers.pushDisk": "34.77%",
            "Towers.moveTopDisk": "4.72%",
            "Towers$TowersDisk.getSize": "9.94%",
            "Towers.buildTowerAt": "0.02%",
            "Towers$TowersDisk.getNext": "3.56%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "10.92%",
            "cd.CollisionDetector.isInVoxel": "14.73%",
            "cd.RedBlackTree.forEach": "4.82%",
            "cd.RedBlackTree.put": "7.53%",
            "cd.RedBlackTree.treeInsert": "20.45%",
            "cd.RedBlackTree.findNode": "7.98%",
            "cd.RedBlackTree.treeMinimum": "6.10%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.94%",
            "cd.Vector2D.compareNumbers": "2.61%",
            "cd.RedBlackTree.leftRotate": "2.67%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.83%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.29%",
            "som.Vector.hasSome": "1.92%",
            "som.Vector.append": "3.31%",
            "som.Vector.forEach": "2.23%",
            "som.IdentitySet.lambda$contains$0": "33.01%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.63%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.40%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.72%",
            "havlak.HavlakLoopFinder.doDFS": "4.97%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.18%",
            "Sieve.benchmark": "3.18%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.13%",
            "Sieve.sieve": "90.66%",
            "SpinPause": "0.04%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "__memset_avx2_unaligned_erms": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.54%",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8": "0.01%",
            "Permute.swap": "40.97%",
            "Interpreter": "0.02%",
            "Permute.benchmark": "0.02%",
            "java.lang.AbstractStringBuilder.append": "0.01%",
            "GraphBuilder::iterate_bytecodes_for_block(int)": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "__futex_abstimed_wait_common": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.18%",
            "nbody.Body.getZ": "8.08%",
            "nbody.Body.getY": "0.77%",
            "nbody.Body.setX": "1.23%",
            "nbody.Body.setY": "1.78%",
            "nbody.Body.setVX": "28.16%",
            "nbody.Body.setVY": "5.73%",
            "nbody.Body.getVZ": "0.47%",
            "nbody.Body.getMass": "0.46%",
            "nbody.NBodySystem.advance": "42.78%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.73%",
            "List.makeList": "0.69%",
            "clear_page_rep_[k]": "0.06%",
            "List$Element.setNext": "0.03%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "4.96%",
            "List$Element.length": "0.07%",
            "List.isShorterThan": "83.86%",
            "__memset_avx2_unaligned_erms": "0.01%",
            "List$Element.<init>": "0.15%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.08%",
            "java.lang.String.length": "3.14%",
            "java.lang.String.<init>": "5.69%",
            "json.JsonPureStringParser.isWhiteSpace": "2.39%",
            "json.JsonPureStringParser.readArray": "2.18%",
            "java.lang.String.isLatin1": "2.68%",
            "json.JsonPureStringParser.readStringInternal": "9.27%",
            "java.util.Arrays.copyOfRange": "8.14%",
            "java.lang.String.equals": "22.22%",
            "json.JsonPureStringParser.read": "15.15%"
        },
        "rebench_test_Async_Queens.txt": {
            "PhaseIdealLoop::build_loop_late(VectorSet&,": "0.01%",
            "java.util.Arrays.fill": "0.69%",
            "Queens.getRowColumn": "57.54%",
            "Queens.setRowColumn": "25.33%",
            "Interpreter": "0.01%",
            "clear_page_rep_[k]": "0.10%",
            "Queens.queens": "0.52%",
            "Queens.placeQueen": "15.23%",
            "Queens.benchmark": "0.06%",
            "Benchmark.innerBenchmarkLoop": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.71%",
            "Richards.benchmark": "4.91%",
            "richards.Packet.<init>": "7.23%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.83%",
            "itable": "37.65%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.26%",
            "richards.TaskControlBlock.<init>": "3.15%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.89%",
            "richards.RBObject.<init>": "5.67%",
            "richards.RBObject.append": "2.60%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.4",
            "Towers.moveDisks": "95.6",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.4",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.7",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.9",
            "deltablue.Planner.removePropagateFrom": "8.8",
            "som.Vector.<init>": "33.0",
            "deltablue.Variable.<init>": "4.5",
            "som.Vector.forEach": "7.1",
            "deltablue.Planner.addPropagate": "1.3",
            "deltablue.Planner.constraintsConsuming": "5.6",
            "deltablue.AbstractConstraint.<init>": "4.2",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "41.8",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.5",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.2"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.schedule": "15.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "richards.TaskControlBlock.runTask": "83.8",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.4",
            "richards.Scheduler.createTask": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "54.7",
            "Bounce$Ball.<init>": "43.9",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.0",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.8",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "99.0",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.6",
            "List$Element.length": "0.2",
            "List.isShorterThan": "76.9",
            "List$Element.<init>": "19.4"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.1",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.4",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "21.4",
            "Queens.placeQueen": "77.7",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.3",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.855530474040638",
            "java.lang.String.<init>(byte[], byte) String.java": "6.258978042273755",
            "json.JsonPureStringParser.isWhiteSpace()": "2.377043573431836",
            "json.JsonPureStringParser.read()": "21.838019016348593",
            "java.lang.String.length() String.java": "3.5185375196661886",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.2962240919351538",
            "java.lang.String.substring(int, int) String.java": "10.175114576920448",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "5.9853615158355575",
            "json.JsonPureStringParser.readStringInternal()": "3.7066488815924488",
            "json.JsonPureStringParser.readValue()": "2.7660920719611473"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.810588668267293",
            "som.Vector.hasSome(TestInterface)": "2.0548185275407023",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.914722840468972",
            "havlak.HavlakLoopFinder.findLoops()": "11.393508701214492",
            "som.Vector.<init>(int)": "3.9738174935595243",
            "som.Vector.append(Object)": "3.8073289987907684",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.5336043882862205",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "3.6649375230017003",
            "som.Vector.removeAll()": "2.760203992218854",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.43800494207953"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.563028853101265",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.7546442735344647",
            "Run.runBenchmark()": "0.0016056261139031165",
            "Queens.getRowColumn(int, int)": "60.4839357107304",
            "Queens.queens()": "0.4656315730319037",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6261941844222154",
            "Queens.setRowColumn(int, int, boolean)": "22.510878116921692",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.14450635025128047",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.4495753118928726"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.725142709656659",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.8469294379099868",
            "richards.TaskControlBlock.runTask()": "35.84920206614756",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.1441375912151854",
            "richards.Scheduler.schedule()": "2.8324053993356415",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.067042533008417",
            "richards.RBObject.append(Packet, Packet)": "2.708382914394318",
            "Richards.benchmark()": "29.63802194192396",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "3.673747121505164",
            "richards.Packet.setLink(Packet)": "1.7564265434933446"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$10.0x00000008000c2a98.<init>(Storage, int, Random)": "0.28060128847530424",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.6986399427344311",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.5382963493199715",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.6377952755905516",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.874731567644965",
            "som.Random.next()": "14.161775232641377",
            "java.lang.invoke.LambdaForm$NamedFunction.methodType() LambdaForm.java": "0.10880458124552614",
            "Storage.buildTreeDepth(int, Random)": "36.11166785969937",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.74874731567645",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.28060128847530424"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "30.918409085440672",
            "Towers.popDiskFrom(int)": "27.754385120666008",
            "Towers.moveDisks(int, int, int)": "12.475638218522171",
            "Towers$TowersDisk.getSize()": "1.6842713120473518",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.1082745843459012",
            "Towers.moveTopDisk(int, int)": "9.588315969298138",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitField(int, String, String, String, Object) ClassWriter.java": "0.0962440749741344",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.1323356030894348",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.047231779793556",
            "java.lang.Object.equals(Object) Object.java": "0.060152546858834"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.reflect.UTF8.encode(String) UTF8.java": "0.08985533291400843",
            "Run.runBenchmark()": "0.0011231916614251056",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.1010872495282595",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.15724683259951475",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "0.0011231916614251056",
            "Permute.permute(int)": "55.45197232455745",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.02246383322850211",
            "java.lang.invoke.InvokerBytecodeGenerator.classData(Object) InvokerBytecodeGenerator.java": "0.05615958307125527",
            "Permute.benchmark()": "0.21340641567077004",
            "Permute.swap(int, int)": "43.905562045107374"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.269191958394784",
            "som.Vector.forEach(ForEachInterface)": "17.95648011591503",
            "deltablue.BinaryConstraint.getOutput()": "3.260110222774199",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "7.322311055913479",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "4.269191958394784",
            "som.Vector.<init>(int)": "3.5447230200005175",
            "deltablue.ScaleConstraint.execute()": "3.182488550803385",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.485264819270874",
            "java.lang.Object.<init>() Object.java": "4.243318067737846",
            "som.Dictionary.getBucket(int)": "13.63554037620637"
        },
        "YourKit_List.txt": {
            "java.lang.invoke.LambdaForm.compileToBytecode() LambdaForm.java": "0.12109143748990903",
            "List.tail(List$Element, List$Element, List$Element)": "3.081104353909908",
            "List$Element.<init>(Object)": "0.269092083310909",
            "List.makeList(int)": "0.659275604111727",
            "List$Element.getNext()": "21.016091706581992",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.25563747914536356",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.20181906248318174",
            "List.isShorterThan(List$Element, List$Element)": "73.85232226467897",
            "java.util.concurrent.atomic.AtomicLong.addAndGet(long) AtomicLong.java": "0.12109143748990903",
            "java.nio.Buffer.limit(int) Buffer.java": "0.12109143748990903"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.7060687301974167",
            "nbody.Body.getZ()": "5.964072199681725",
            "nbody.Body.getMass()": "0.6881621768863528",
            "nbody.Body.getX()": "1.275967369643446",
            "nbody.Body.getVZ()": "0.47311149660936763",
            "nbody.NBodySystem.advance(double)": "43.81299192843113",
            "nbody.Body.setVY(double)": "6.021419047755588",
            "nbody.Body.setVZ(double)": "7.698814353916072",
            "nbody.Body.setVX(double)": "29.218219093633063",
            "nbody.Body.setY(double)": "1.232957233588049"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.71227649272868",
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.0",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.060847871628375974",
            "sun.nio.fs.UnixFileAttributes.get(UnixPath, boolean) UnixFileAttributes.java": "0.0",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.0",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.07823297780791195",
            "sun.nio.fs.UnixNativeDispatcher.stat(UnixPath, UnixFileAttributes) UnixNativeDispatcher.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.07823297780791195",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.06954042471814396",
            "Run.measure(Benchmark)": "8.692553089767996E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.90083622716726",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.759798807169435",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.46995343912048",
            "cd.RedBlackTree.findNode(Comparable)": "8.502421477178938",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.058613762710806",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.0788887677717733",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.390332777924848",
            "cd.RedBlackTree.put(Comparable, Object)": "6.3846022081380305",
            "cd.Vector2D.compareNumbers(double, double)": "9.771555818552716",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.667253219552454"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.1132666090036657",
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.09267268009390829",
            "jdk.internal.reflect.UTF8.encode(String) UTF8.java": "0.1750483957329379",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.811071296181885",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0617817867292722",
            "Sieve.benchmark()": "88.56419127641169",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.102969644548787",
            "com.yourkit.probes.Table.createRow() a": "0.09267268009390829",
            "Sieve.sieve(boolean[], int)": "7.640347625519996",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Class) InvokerBytecodeGenerator.java": "0.0823757156390296"
        },
        "YourKit_Bounce.txt": {
            "Run.runBenchmark()": "0.11551568125373018",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.17327352188059528",
            "Bounce.benchmark()": "64.26522400415855",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17327352188059528",
            "som.Random.next()": "0.17327352188059528",
            "Bounce.lambda$benchmark$0(Random, int)": "0.17327352188059528",
            "java.lang.invoke.MemberName.isGetter() MemberName.java": "0.11551568125373018",
            "jdk.internal.org.objectweb.asm.Frame.getAbstractTypeFromDescriptor(SymbolTable, String, int) Frame.java": "0.8856202229452649",
            "Bounce$Ball.bounce()": "33.03748483856683",
            "Bounce$Ball.<init>(Random)": "0.7508519281492462"
        }
    },
    "Runtimes": {
        "NBody.data": 102.97149999999999,
        "JavaFlightRecorder_Queens.jfr": 109.666,
        "rebench_test_Async_Bounce.txt": 101.15,
        "JavaFlightRecorder_Sieve.jfr": 106.7085,
        "Permute.hpl": 104.46600000000001,
        "CD.data": 95.906,
        "List.data": 152.9445,
        "DeltaBlue.hpl": 85.978,
        "Towers.hpl": 108.84,
        "NBody.hpl": 102.7915,
        "Bounce.hpl": 102.45599999999999,
        "JavaFlightRecorder_Json.jfr": 83.6445,
        "Sieve.data": 106.6625,
        "Richards.hpl": 92.22999999999999,
        "JavaFlightRecorder_Havlak.jfr": 162.189,
        "JavaFlightRecorder_CD.jfr": 97.87950000000001,
        "rebench_test_Async_Mandelbrot.txt": 86.33449999999999,
        "JavaFlightRecorder_DeltaBlue.jfr": 84.645,
        "JavaFlightRecorder_Towers.jfr": 109.249,
        "rebench_test_Async_CD.txt": 95.38550000000001,
        "Mandelbrot.data": 85.60749999999999,
        "rebench_test_Async_Permute.txt": 105.186,
        "JavaFlightRecorder_Permute.jfr": 107.356,
        "rebench_test_Async_NBody.txt": 102.648,
        "JavaFlightRecorder_Bounce.jfr": 103.055,
        "Havlak.data": 158.057,
        "Mandelbrot.hpl": 85.5735,
        "rebench_test_Async_Towers.txt": 108.958,
        "JavaFlightRecorder_Storage.jfr": 101.7705,
        "List.hpl": 153.98000000000002,
        "JavaFlightRecorder_NBody.jfr": 104.20949999999999,
        "Queens.hpl": 110.076,
        "Storage.data": 116.43,
        "rebench_test_Async_Sieve.txt": 103.3935,
        "JavaFlightRecorder_Richards.jfr": 91.48150000000001,
        "Storage.hpl": 109.804,
        "rebench_test_Async_List.txt": 149.872,
        "rebench_test_Async_Richards.txt": 90.386,
        "Bounce.data": 101.89500000000001,
        "Permute.data": 105.8955,
        "JavaFlightRecorder_Mandelbrot.jfr": 85.966,
        "rebench_test_Async_DeltaBlue.txt": 101.1275,
        "JavaFlightRecorder_List.jfr": 156.23000000000002,
        "DeltaBlue.data": 89.5115,
        "Queens.data": 111.9875,
        "rebench_test_Async_Storage.txt": 110.61,
        "Json.hpl": 79.7145,
        "Towers.data": 112.627,
        "Havlak.hpl": 157.39,
        "Richards.data": 94.578,
        "rebench_test_Async_Havlak.txt": 156.9065,
        "Sieve.hpl": 103.0425,
        "CD.hpl": 93.679,
        "rebench_test_Async_Json.txt": 81.816,
        "Json.data": 80.55199999999999,
        "rebench_test_Async_Queens.txt": 105.0625
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.03%",
            "[.] Interpreter": "0.13%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.26%",
            "asm_sysvec_apic_timer_interrupt": "0.02%",
            "[.] void nbody.NBodySystem.advance(double)": "99.04%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.13%",
            "resource_allocate_bytes": "0.01%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.14%",
            "PhaseIdealLoop::build_loop_late": "0.01%",
            "[.] void Permute.permute(int)": "99.26%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.81%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.65%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.24%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.10%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.73%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "5.77%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.64%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.61%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "11.46%",
            "[.] void deltablue.Planner.chainTest(int)": "27.05%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.36%",
            "[.] Interpreter": "0.09%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.18%",
            "[.] boolean Queens.placeQueen(int)": "96.73%",
            "clear_page_rep": "0.05%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Interpreter": "0.13%",
            "[.] void Towers.moveDisks(int, int, int)": "0.03%",
            "[.] java.lang.Object Towers.benchmark()": "0.03%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.10%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.31%",
            "[.] boolean richards.Scheduler.start()": "23.07%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.68%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.13%",
            "[.] void richards.Scheduler.schedule()": "7.89%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.47%",
            "x86_pmu_disable_all": "0.17%",
            "[.] Interpreter": "0.13%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.49%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "23.98%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.21%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.03%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.34%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.21%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.17%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.33%",
            "PhaseChaitin::gather_lrg_masks": "0.01%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.08%",
            "[.] Interpreter": "0.10%",
            "[.] java.lang.Object List.benchmark()": "0.53%",
            "[.] List$Element List.makeList(int)": "0.64%",
            "[.] int List$Element.length()": "0.06%"
        },
        "Sieve.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.16%",
            "[.] Interpreter": "0.16%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.38%",
            "[.] java.lang.Object Sieve.benchmark()": "1.74%",
            "[.] int Sieve.sieve(boolean[], int)": "2.10%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.09%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.59%",
            "clear_page_rep": "0.05%",
            "[.] java.lang.Object Bounce.benchmark()": "6.08%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "31.78%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "5.55%",
            "[.] StubRoutines (2)": "8.19%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.67%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.23%"
        }
    }
}