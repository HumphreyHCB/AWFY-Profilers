{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.004156967076820751",
            "jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes(Ljava/lang/String;)I": "0.004156967076820751",
            "Mandelbrot.mandelbrot(I)I": "99.91686065846358",
            "sun.net.www.protocol.jar.Handler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V": "0.004156967076820751",
            "java.lang.StringLatin1.inflate([BI[CII)V": "0.008313934153641503",
            "java.nio.CharBuffer.<init>(IIII[CILjdk/internal/access/foreign/MemorySegmentProxy;)V": "0.004156967076820751",
            "sun.net.www.protocol.jar.Handler.parseContextSpec(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/String;": "0.004156967076820751",
            "jdk.internal.org.objectweb.asm.Frame.execute(IILjdk/internal/org/objectweb/asm/Symbol;Ljdk/internal/org/objectweb/asm/SymbolTable;)V": "0.004156967076820751",
            "java.lang.invoke.LambdaForm.normalize()I": "0.004156967076820751",
            "java.lang.String.lastIndexOf(I)I": "0.004156967076820751"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.2842780377881782",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.006933610677760444",
            "Queens.benchmark()Ljava/lang/Object;": "0.05200208008320333",
            "Queens.placeQueen(I)Z": "14.016293985092737",
            "java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendL(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;Ljava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;": "0.003466805338880222",
            "Queens.getRowColumn(II)Z": "58.218062055815565",
            "java.util.Arrays.fill([ZZ)V": "0.5234876061709135",
            "Queens.setRowColumn(IIZ)V": "26.139712255156873",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.04506846940544289",
            "Queens.queens()Z": "0.6898942624371641"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x0000000801010400.63001505.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.006982265046781176",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.2932551319648094",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.389470744309454",
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.006982265046781176",
            "Bounce$Ball.bounce()Z": "85.11031978773914",
            "Bounce.benchmark()Ljava/lang/Object;": "8.270492947912302",
            "som.Random.next()I": "1.2428431783270493",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.06982265046781176",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010473397570171763",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.557464041335009"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.076251722553973",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "37.82498851630684",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.248507119889756",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.6136885622416166",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "15.656867248507119",
            "som.Dictionary.atPut(Lsom/Dictionary$CustomHash;Ljava/lang/Object;)V": "2.9329352319706015",
            "havlak.HavlakLoopFinder.findLoops()V": "4.694533762057877",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.242076251722554",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.6228755167661917",
            "som.Vector.append(Ljava/lang/Object;)V": "2.119889756545705"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "11.736426418405891",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.34480521958106",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "3.109618833225228",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.453355717501622",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.265023465221871",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.174176809492923",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.680911137395552",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.2643366782403",
            "cd.Vector2D.compareNumbers(DD)I": "3.262238162463276",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "23.354572856652297"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.59141034458226",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.004743045509521664",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.004743045509521664",
            "List$Element.getNext()LList$Element;": "10.06474257120497",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.19446486589038822",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.0703393649062063",
            "List$Element.length()I": "0.0664026371333033",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.009486091019043328",
            "List$Element.setNext(LList$Element;)V": "0.07826025090710746",
            "List.makeList(I)LList$Element;": "0.8869495102805511"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "som.Dictionary.at(Lsom/Dictionary$CustomHash;)Ljava/lang/Object;": "16.55964683455403",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.073442359787299",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "9.275609511387579",
            "deltablue.ScaleConstraint.execute()V": "6.687067322163139",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "3.1353466439249527",
            "deltablue.Variable.<init>()V": "7.755593458412763",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "12.696899769238488",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.906190428413765",
            "som.Vector.append(Ljava/lang/Object;)V": "6.536570683254741",
            "deltablue.ScaleConstraint.recalculate()V": "4.233972107956256"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.445202938339393",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.605104993692954",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.6529643095644431",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.5133931883950433",
            "Storage.benchmark()Ljava/lang/Object;": "0.02226014691696965",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.266008755657786",
            "som.Random.next()I": "12.26905097573644",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.420939378199896",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.029680195889292868",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6863545299398975"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(Ljava/lang/String;)I": "0.0033553669093715397",
            "Run.measure(LBenchmark;)V": "0.006710733818743079",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.006710733818743079",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.010066100728114619",
            "Sieve.benchmark()Ljava/lang/Object;": "3.5030030533838876",
            "java.lang.System$2.encodeASCII([CI[BII)I": "0.0033553669093715397",
            "Run.printResult(J)V": "0.006710733818743079",
            "java.util.Arrays.fill([ZZ)V": "5.875247458309566",
            "Sieve.sieve([ZI)I": "90.50766701338792",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.026842935274972318"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.031302170283806344",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.066638842515303",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.996243739565943",
            "Towers.moveDisks(III)V": "3.7875626043405672",
            "Towers$TowersDisk.getSize()I": "11.75222593210907",
            "Towers.benchmark()Ljava/lang/Object;": "0.024346132442960487",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.017390094602114634",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.40609348914858",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.622843628269337",
            "Towers.moveTopDisk(II)V": "4.257095158597663"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.5501749091158517",
            "nbody.Body.getMass()D": "0.6241854722546128",
            "nbody.Body.setVX(D)V": "30.050072021400645",
            "nbody.NBodySystem.advance(D)V": "40.99046573839084",
            "nbody.Body.setZ(D)V": "0.39097331778585637",
            "nbody.Body.getY()D": "0.7373619589820976",
            "nbody.Body.getZ()D": "8.272172302627066",
            "nbody.Body.setVZ(D)V": "8.618560943823308",
            "nbody.Body.setVY(D)V": "6.169833321901365",
            "nbody.Body.setX(D)V": "1.43013924137458"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.659819713314615",
            "richards.Scheduler.schedule()V": "10.22609723658933",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.706221368405497",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.82237328210433",
            "Richards.benchmark()Ljava/lang/Object;": "8.78528151322595",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.337224767252845",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.9456184424412593",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.312546179991133",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.975173636766662",
            "richards.RBObject.<init>()V": "11.216196246490322"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.2091662119934523",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.8192549972719605",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.043400624969",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.470958781806457",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.832795992262287",
            "java.lang.String.<init>([BB)V": "4.855909925102921",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.042458211398244",
            "json.JsonPureStringParser.read()V": "13.183869847725806",
            "java.util.Arrays.copyOfRange([BII)[B": "6.20008928128565",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.4571697832448787"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.003630686562829031",
            "java.lang.ApplicationShutdownHooks.runHooks()V": "0.003630686562829031",
            "jdk.internal.org.objectweb.asm.Handler.getExceptionTableSize(Ljdk/internal/org/objectweb/asm/Handler;)I": "0.003630686562829031",
            "jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;JI)V": "0.003630686562829031",
            "Permute.swap(II)V": "43.895000544602986",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.003630686562829031",
            "sun.invoke.util.VerifyType.isNullType(Ljava/lang/Class;)Z": "0.003630686562829031",
            "Permute.permute(I)V": "56.021493664451945",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.014522746251316124",
            "Permute.benchmark()Ljava/lang/Object;": "0.039937552191119344"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.TaskControlBlock::runTask": "2.2",
            "richards.Packet::<init>": "6.8",
            "Richards::benchmark": "5.1",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "45.4",
            "richards.HandlerTaskDataRecord::workInAdd": "2.2",
            "richards.TaskControlBlock::<init>": "3.2",
            "richards.Scheduler::schedule": "5.5",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.invoke.MethodHandle::intrinsicName": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "java.lang.System::arraycopy": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.MemberName::getFieldType": "0.0",
            "sun.nio.cs.StreamEncoder::writeBytes": "0.0",
            "Mandelbrot::mandelbrot": "98.1",
            "java.lang.invoke.DirectMethodHandle::internalMemberName": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.7",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.3",
            "List::isShorterThan": "81.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "java.lang.String::substring": "2.6",
            "json.JsonPureStringParser::read": "12.6",
            "java.lang.String::<init>": "4.7",
            "java.lang.String::length": "3.7",
            "java.util.Arrays::copyOfRange": "8.4",
            "java.lang.String::equals": "20.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "10.5",
            "java.lang.String::isLatin1": "2.8",
            "json.JsonPureStringParser::readStringInternal": "9.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.2",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.8",
            "havlak.HavlakLoopFinder::findLoops": "6.4",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.1",
            "som.Vector::append": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "7.2",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.8",
            "havlak.HavlakLoopFinder::doDFS": "5.2",
            "som.Vector::hasSome": "2.1",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "39.7",
            "Permute::permute": "51.7",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.Type::getReturnTypeOffset": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "6.4",
            "Run::measure": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "67.6",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "7.8",
            "Queens::setRowColumn": "18.7",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.3",
            "java.util.Arrays::setAll": "34.2",
            "som.Random::next": "13.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "1.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "87.3",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.io.PrintStream::println": "0.0",
            "Run::measure": "0.0",
            "java.util.Arrays::fill": "7.5"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "13.3",
            "deltablue.ScaleConstraint::execute": "5.6",
            "deltablue.Planner::addPropagate": "2.5",
            "deltablue.Variable::<init>": "3.8",
            "som.Dictionary::getBucket": "12.8",
            "AGCT::Unknown not Java[ERR=-3]": "5.7",
            "AGCT::Unknown Java[ERR=-5]": "10.5",
            "java.util.Arrays::copyOf": "4.0",
            "som.Vector::forEach": "11.5",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.7"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "10.0",
            "Bounce$Ball::bounce": "82.1",
            "java.util.Arrays::setAll": "1.3",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.4",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "3.1",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.5",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "8.2",
            "nbody.Body::setVX": "28.7",
            "nbody.Body::setVY": "6.3",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.6",
            "nbody.NBodySystem::advance": "40.4"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.8",
            "Towers::popDiskFrom": "23.4",
            "Towers::moveDisks": "3.6",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.4",
            "Towers::pushDisk": "32.0",
            "Towers$TowersDisk::setNext": "14.8",
            "AGCT::Unknown Java[ERR=-5]": "3.8",
            "Towers::moveTopDisk": "4.7",
            "Towers$TowersDisk::getNext": "3.3"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.6",
            "cd.RedBlackTree::forEach": "5.5",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::findNode": "7.1",
            "cd.RedBlackTree::treeMinimum": "6.1",
            "AGCT::Unknown not Java[ERR=-3]": "5.1",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "cd.Vector2D::compareNumbers": "3.5",
            "cd.RedBlackTree::treeInsert": "19.7",
            "cd.CollisionDetector::isInVoxel": "14.0"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.54%",
            "deltablue.AbstractConstraint.satisfy": "2.45%",
            "deltablue.Planner.incrementalAdd": "13.57%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "11.35%",
            "som.Dictionary.at": "3.04%",
            "deltablue.Variable.<init>": "8.06%",
            "som.Vector.forEach": "11.66%",
            "itable": "2.64%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "2.94%",
            "deltablue.ScaleConstraint.execute": "6.88%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.83%",
            "som.Random.next": "1.54%",
            "clear_page_rep_[k]": "0.10%",
            "java.util.Arrays.setAll": "1.21%",
            "SpinPause": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.03%",
            "Bounce.benchmark": "9.15%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.03%",
            "Bounce$Ball.<init>": "3.09%",
            "Bounce.lambda$benchmark$0": "0.28%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "IntervalWalker::walk_to(int)": "0.01%",
            "LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*,": "0.01%",
            "Mandelbrot.mandelbrot": "99.56%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "non-virtual": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "ValueStack::values_do(ValueVisitor*)": "0.01%",
            "__tls_get_addr": "0.02%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.52%",
            "som.Random.next": "13.04%",
            "java.util.Arrays.setAll": "36.27%",
            "Storage.lambda$buildTreeDepth$0": "3.26%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.57%",
            "SpinPause": "0.18%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.42%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.25%",
            "Storage.buildTreeDepth": "42.58%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "0.88%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.26%",
            "Towers.popDiskFrom": "23.17%",
            "Towers.moveDisks": "7.63%",
            "clear_page_rep_[k]": "0.04%",
            "Towers.pushDisk": "34.91%",
            "Towers.moveTopDisk": "4.68%",
            "Towers$TowersDisk.getSize": "10.21%",
            "Towers.buildTowerAt": "0.02%",
            "Towers$TowersDisk.getNext": "3.57%",
            "Towers.benchmark": "0.03%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.12%",
            "cd.CollisionDetector.isInVoxel": "14.22%",
            "cd.RedBlackTree.forEach": "5.07%",
            "cd.RedBlackTree.put": "7.48%",
            "cd.RedBlackTree.treeInsert": "21.84%",
            "cd.RedBlackTree.findNode": "7.44%",
            "cd.RedBlackTree.treeMinimum": "6.01%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.06%",
            "cd.Vector2D.compareNumbers": "2.66%",
            "cd.RedBlackTree.leftRotate": "2.85%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.69%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.15%",
            "som.Vector.hasSome": "2.32%",
            "som.Vector.append": "4.30%",
            "som.Vector.<init>": "2.10%",
            "som.IdentitySet.lambda$contains$0": "33.32%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "6.92%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.20%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.87%",
            "havlak.HavlakLoopFinder.doDFS": "5.10%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.07%",
            "Sieve.benchmark": "3.04%",
            "clear_page_rep_[k]": "0.10%",
            "Sieve.sieve": "90.88%",
            "SpinPause": "0.03%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "__memset_avx2_unaligned_erms": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.78%",
            "Permute.swap": "41.71%",
            "Permute.benchmark": "0.03%",
            "Interpreter": "0.02%",
            "os::PlatformMonitor::wait(long)": "0.01%",
            "clock_gettime@GLIBC_2.2.5": "0.01%",
            "java.lang.Long.stringSize": "0.01%",
            "ciObjectFactory::ciObjectFactory(Arena*,": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.03%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.25%",
            "nbody.Body.getZ": "7.93%",
            "nbody.Body.getY": "0.69%",
            "nbody.Body.setX": "1.21%",
            "nbody.Body.setY": "1.79%",
            "nbody.Body.setVX": "28.36%",
            "nbody.Body.setVY": "5.81%",
            "nbody.Body.getVZ": "0.52%",
            "nbody.Body.getMass": "0.42%",
            "nbody.NBodySystem.advance": "42.63%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.30%",
            "List.makeList": "0.82%",
            "clear_page_rep_[k]": "0.06%",
            "List$Element.setNext": "0.03%",
            "java.lang.Integer.valueOf": "0.01%",
            "List.tail": "4.49%",
            "List$Element.length": "0.07%",
            "List.isShorterThan": "84.69%",
            "List$Element.<init>": "0.17%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.39%",
            "java.lang.String.length": "2.96%",
            "java.lang.String.substring": "2.12%",
            "java.lang.String.<init>": "6.35%",
            "json.JsonPureStringParser.isWhiteSpace": "2.33%",
            "java.lang.String.isLatin1": "2.63%",
            "json.JsonPureStringParser.readStringInternal": "9.10%",
            "java.util.Arrays.copyOfRange": "7.84%",
            "java.lang.String.equals": "21.49%",
            "json.JsonPureStringParser.read": "14.49%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.74%",
            "Queens.getRowColumn": "57.10%",
            "Queens.setRowColumn": "26.82%",
            "clear_page_rep_[k]": "0.09%",
            "Queens.queens": "0.55%",
            "Queens.placeQueen": "14.07%",
            "SpinPause": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "Queens.benchmark": "0.05%",
            "Benchmark.innerBenchmarkLoop": "0.03%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.37%",
            "Richards.benchmark": "4.93%",
            "richards.Packet.<init>": "6.73%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.70%",
            "itable": "37.39%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.54%",
            "richards.TaskControlBlock.<init>": "3.20%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.04%",
            "richards.RBObject.<init>": "5.62%",
            "richards.RBObject.append": "2.59%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "4.5",
            "Towers.moveDisks": "93.7",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "0.9",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.4",
            "java.io.PrintStream.println": "0.1",
            "Sieve.sieve": "93.7",
            "java.lang.Integer.valueOf": "0.3",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.5",
            "deltablue.Planner.removePropagateFrom": "9.3",
            "som.Vector.<init>": "31.2",
            "deltablue.Variable.<init>": "4.7",
            "som.Vector.forEach": "7.2",
            "deltablue.Planner.constraintsConsuming": "4.9",
            "deltablue.AbstractConstraint.<init>": "3.9",
            "deltablue.Plan.lambda$execute$0": "2.5",
            "deltablue.Planner.addConstraintsConsumingTo": "16.6"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.2",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "14.0",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.7",
            "richards.RBObject.<init>": "0.6",
            "richards.RBObject.append": "0.3"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "52.1",
            "Bounce$Ball.<init>": "47.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.9",
            "cd.RedBlackTree.treeInsert": "2.0",
            "cd.RedBlackTree.<init>": "1.4",
            "cd.Vector2D.<init>": "43.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.4",
            "cd.RedBlackTree$Node.<init>": "8.2",
            "cd.RedBlackTree$Entry.<init>": "4.9",
            "cd.Motion.<init>": "1.4"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.2",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.8",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "4.5",
            "List$Element.length": "0.1",
            "List.isShorterThan": "73.4",
            "List$Element.<init>": "21.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.4",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.1",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.4",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "21.0",
            "Queens.placeQueen": "77.9",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.3",
            "Queens.benchmark": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "21.385621351404367",
            "java.lang.String.<init>(byte[], byte) String.java": "6.593030582481736",
            "json.JsonPureStringParser.isWhiteSpace()": "1.9612179580800102",
            "json.JsonPureStringParser.read()": "18.214290185147327",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "5.382917374304709",
            "java.lang.String.length() String.java": "2.7707419663087802",
            "java.lang.String.substring(int, int) String.java": "8.787925573864896",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.9936197824299935",
            "json.JsonPureStringParser.readStringInternal()": "3.889053482830999",
            "json.JsonPureStringParser.readValue()": "3.3382433329021453"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.179180067280323",
            "som.Vector.hasSome(TestInterface)": "2.5050721186777922",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.6625067682612595",
            "havlak.HavlakLoopFinder.findLoops()": "9.859372383754437",
            "som.Vector.<init>(int)": "2.581181080616788",
            "som.Vector.append(Object)": "5.723393937812456",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.358649348616014",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.233832825577831",
            "som.Vector.removeAll()": "2.3354578606423164",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.06506446429077"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "10.549943883277216",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2543958099513655",
            "Queens.getRowColumn(int, int)": "66.29255518144406",
            "Queens.queens()": "0.4339693228582117",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17957351290684623",
            "java.lang.StringConcatHelper.prepend(long, byte[], long) StringConcatHelper.java": "0.13468013468013468",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.9277964833520388",
            "Queens.setRowColumn(int, int, boolean)": "20.276842499064717",
            "com.sun.management.internal.GcInfoCompositeData.getCompositeData() GcInfoCompositeData.java": "0.13468013468013468",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.20950243172465394"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.4402549623236007",
            "richards.Scheduler.findTask(int)": "1.5917057659541372",
            "richards.TaskControlBlock.runTask()": "36.714140496973954",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.2268216891615693",
            "richards.Scheduler.schedule()": "2.1560378102469677",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "4.1926976880473745",
            "richards.RBObject.append(Packet, Packet)": "2.358618544095676",
            "Richards.benchmark()": "28.585588551294528",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.2898857951112928",
            "richards.Scheduler$$Lambda$12.0x00000008000c7528.apply(Packet, RBObject)": "1.8268441177428165"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.30672865814283873",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.08071806793232598",
            "Storage$$Lambda$7.0x00000008000c2a98.<init>(Storage, int, Random)": "0.14529252227818676",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.0170476559473074",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.5273580438245298",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.359938008523834",
            "som.Random.next()": "14.125661888157047",
            "com.yourkit.probes.FailedEventPolicy.<clinit>() a": "0.12914890869172158",
            "Storage.buildTreeDepth(int, Random)": "39.32584269662922",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.556072151190323"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "37.20990535459613",
            "Towers.popDiskFrom(int)": "28.747215444998403",
            "Towers.moveDisks(int, int, int)": "6.800796765790931",
            "Towers.buildTowerAt(int, int)": "0.10607828577490186",
            "Towers$TowersDisk.getSize()": "0.4596725716912414",
            "Towers.moveTopDisk(int, int)": "6.1996864797331535",
            "jdk.internal.perf.PerfCounter.getZipFileOpenTime() PerfCounter.java": "0.17679714295816978",
            "Benchmark.innerBenchmarkLoop(int)": "0.10607828577490186",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.58912343976521",
            "Towers.benchmark()": "0.10607828577490186"
        },
        "YourKit_Permute.txt": {
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.10162142631317463",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0903301567228219",
            "java.lang.String.coder() String.java": "0.10162142631317463",
            "java.lang.invoke.BoundMethodHandle$Species_LL.<init>(MethodType, LambdaForm, Object, Object) java/lang/invoke/BoundMethodHandle$Species_LL": "0.0903301567228219",
            "java.security.Permissions.add(Permission) Permissions.java": "0.20324285262634925",
            "Permute.permute(int)": "56.411182873402275",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.10162142631317463",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.04516507836141095",
            "Permute.benchmark()": "0.5532722099272841",
            "Permute.swap(int, int)": "42.20676572873853"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "3.4954187263438734",
            "som.Vector.forEach(ForEachInterface)": "46.019566071687095",
            "deltablue.EqualityConstraint.execute()": "2.0476121533020324",
            "deltablue.BinaryConstraint.getOutput()": "2.8335642929533176",
            "som.Dictionary.at(Dictionary$CustomHash)": "1.5305383772156607",
            "deltablue.ScaleConstraint.execute()": "2.812881341909863",
            "som.Vector.<init>(int)": "2.6681006846056787",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.233758712693126",
            "som.Vector.append(Object)": "2.3992223210407655",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "14.416016877288046"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "2.984954217256262",
            "List.makeList(int)": "0.5243838489774514",
            "java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) StringCoding.java": "0.12101165745633494",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.04033721915211165",
            "List$Element.getNext()": "24.027536874941173",
            "List$Element.length()": "0.12101165745633494",
            "java.lang.StringConcatHelper.prepend(long, byte[], String, String) StringConcatHelper.java": "0.12101165745633494",
            "List.isShorterThan(List$Element, List$Element)": "71.61200973471554",
            "java.lang.invoke.LambdaFormBuffer.indexOf(LambdaForm$Name, LambdaForm$Name[]) LambdaFormBuffer.java": "0.2016860957605582",
            "java.util.TreeMap.getEntry(Object) TreeMap.java": "0.12101165745633494"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.656853830416003",
            "nbody.Body.getZ()": "5.24266878836099",
            "nbody.Body.setX(double)": "0.4120254603318935",
            "nbody.Body.getX()": "0.4120254603318935",
            "nbody.Body.setZ(double)": "0.4120254603318935",
            "nbody.NBodySystem.advance(double)": "49.911911798135925",
            "nbody.Body.setVY(double)": "4.773812230052283",
            "nbody.Body.setVZ(double)": "6.947601727665377",
            "nbody.Body.setVX(double)": "26.284382814275965",
            "nbody.Body.setY(double)": "0.4120254603318935"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.22748134393721",
            "java.io.BufferedOutputStream.flush() BufferedOutputStream.java": "0.07882843429212065",
            "java.lang.invoke.LambdaForm$MH.0x0000000800142000.<clinit>() LambdaForm$MH": "0.07006971937077391",
            "Run.runBenchmark()": "8.75871492134674E-4",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.0",
            "jdk.internal.org.objectweb.asm.Symbol.<init>(int, int, String, String, String, long) Symbol.java": "0.02627614476404022",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.21020915811232177",
            "Run.measure(Benchmark)": "8.75871492134674E-4",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c8c00.invoke(Object, Object, long) LambdaForm$MH": "0.07882843429212065",
            "java.lang.StringConcatHelper.newArray(long) StringConcatHelper.java": "0.07882843429212065"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.956765103261919",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.872032426172552",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.804789690140009",
            "cd.RedBlackTree.findNode(Comparable)": "8.9305598859739",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.972918800944279",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.0489065075052335",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.1676836963461166",
            "cd.RedBlackTree.put(Comparable, Object)": "6.926194824283996",
            "cd.Vector2D.compareNumbers(double, double)": "9.925318842516294",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.253708075364127"
        },
        "YourKit_Sieve.txt": {
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.10362336361438292",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.10362336361438292",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.09210965654611813",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.0724672722876583",
            "java.lang.invoke.LambdaForm.parameter(int) LambdaForm.java": "0.023027414136529534",
            "java.lang.StringLatin1.equals(byte[], byte[]) StringLatin1.java": "0.149678191887442",
            "Sieve.benchmark()": "86.3067481837127",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(int, String, String, String, String[]) ClassWriter.java": "0.0690822424095886",
            "java.lang.invoke.LambdaForm$Name.internArguments() LambdaForm.java": "0.12665077775091244",
            "Sieve.sieve(boolean[], int)": "10.914994300715"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.17279447057694147",
            "Bounce.benchmark()": "65.70029759047709",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17279447057694147",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(int, String, String, String, String[]) ClassWriter.java": "0.17279447057694147",
            "java.lang.StringConcatHelper.mix(long, long) StringConcatHelper.java": "0.17279447057694147",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5759815685898049",
            "som.Random.next()": "0.17279447057694147",
            "Bounce$Ball.bounce()": "31.160602860708448",
            "Bounce$Ball.<init>(Random)": "0.8831717385043675",
            "jdk.internal.misc.Unsafe.compareAndSetLong(Object, long, long, long) Unsafe.java (native)": "0.17279447057694147"
        }
    },
    "Runtimes": {
        "NBody.data": 104.5375,
        "JavaFlightRecorder_Queens.jfr": 105.4025,
        "rebench_test_Async_Bounce.txt": 102.35249999999999,
        "JavaFlightRecorder_Sieve.jfr": 106.759,
        "Permute.hpl": 104.37950000000001,
        "CD.data": 95.23949999999999,
        "DeltaBlue.hpl": 94.19200000000001,
        "List.data": 150.7505,
        "JavaFlightRecorder_Json.jfr": 83.505,
        "Bounce.hpl": 101.8415,
        "NBody.hpl": 103.91,
        "Towers.hpl": 109.47200000000001,
        "Sieve.data": 104.768,
        "Richards.hpl": 91.17500000000001,
        "JavaFlightRecorder_Havlak.jfr": 166.301,
        "JavaFlightRecorder_CD.jfr": 100.362,
        "JavaFlightRecorder_DeltaBlue.jfr": 82.541,
        "rebench_test_Async_Mandelbrot.txt": 87.069,
        "JavaFlightRecorder_Towers.jfr": 109.257,
        "rebench_test_Async_CD.txt": 96.19749999999999,
        "rebench_test_Async_Permute.txt": 104.4455,
        "Mandelbrot.data": 86.11500000000001,
        "JavaFlightRecorder_Permute.jfr": 105.80449999999999,
        "rebench_test_Async_NBody.txt": 102.544,
        "JavaFlightRecorder_Bounce.jfr": 103.8295,
        "Havlak.data": 158.6085,
        "Mandelbrot.hpl": 85.66149999999999,
        "rebench_test_Async_Towers.txt": 110.4265,
        "List.hpl": 149.659,
        "JavaFlightRecorder_Storage.jfr": 101.8885,
        "JavaFlightRecorder_NBody.jfr": 106.606,
        "Queens.hpl": 109.052,
        "Storage.data": 111.2505,
        "rebench_test_Async_Sieve.txt": 104.7775,
        "JavaFlightRecorder_Richards.jfr": 92.41050000000001,
        "Storage.hpl": 108.018,
        "rebench_test_Async_List.txt": 157.13049999999998,
        "rebench_test_Async_Richards.txt": 91.128,
        "Bounce.data": 102.938,
        "Permute.data": 105.431,
        "rebench_test_Async_DeltaBlue.txt": 89.217,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.4125,
        "JavaFlightRecorder_List.jfr": 157.17450000000002,
        "DeltaBlue.data": 102.96000000000001,
        "rebench_test_Async_Storage.txt": 108.411,
        "Queens.data": 106.88499999999999,
        "Json.hpl": 80.103,
        "Towers.data": 111.7675,
        "Havlak.hpl": 156.47050000000002,
        "Richards.data": 97.5575,
        "rebench_test_Async_Havlak.txt": 157.2115,
        "Sieve.hpl": 104.1055,
        "CD.hpl": 94.7475,
        "rebench_test_Async_Queens.txt": 104.3425,
        "rebench_test_Async_Json.txt": 80.3955,
        "Json.data": 81.1015
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] Interpreter": "0.12%",
            "LinearScan::allocate_registers": "0.01%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.29%",
            "[.] void nbody.NBodySystem.advance(double)": "0.02%"
        },
        "Permute.data": {
            " ": "0",
            "[.] Interpreter": "0.07%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "[.] void Permute.permute(int)": "0.02%",
            "2848280     [.] flush_icache_stub": "0.01%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.43%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.04%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.55%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.12%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "19.60%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] void deltablue.EqualityConstraint.execute()": "6.69%",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "9.60%",
            "[.] vtable chunks": "6.32%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "11.70%",
            "[.] void deltablue.Planner.chainTest(int)": "27.12%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.84%",
            "[.] Interpreter": "0.15%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.21%",
            "[.] boolean Queens.placeQueen(int)": "96.02%",
            "clear_page_rep": "0.06%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.20%",
            "[.] Interpreter": "0.13%",
            "[.] void Towers.moveDisks(int, int, int)": "98.57%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.11%",
            "native_apic_msr_write": "0.05%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "36.68%",
            "[.] boolean richards.Scheduler.start()": "24.58%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.58%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "11.84%",
            "[.] void richards.Scheduler.schedule()": "7.64%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "10.01%",
            "x86_pmu_disable_all": "0.13%",
            "[.] Interpreter": "0.15%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.02%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.45%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.21%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.62%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.49%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.22%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.11%",
            "[.] Interpreter": "0.10%",
            "asm_sysvec_apic_timer_interrupt": "0.03%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.92%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.18%",
            "[.] Interpreter": "0.10%",
            "[.] java.lang.Object List.benchmark()": "0.42%",
            "[.] List$Element List.makeList(int)": "0.66%",
            "[.] int List$Element.length()": "0.07%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.31%",
            "[.] java.lang.Object Sieve.benchmark()": "2.01%",
            "clear_page_rep": "0.07%",
            "[.] int Sieve.sieve(boolean[], int)": "2.22%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.08%",
            "[.] Interpreter": "0.15%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.27%",
            "clear_page_rep": "0.07%",
            "[.] java.lang.Object Bounce.benchmark()": "6.11%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.19%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.39%",
            "[.] StubRoutines (2)": "8.11%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.40%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.38%"
        }
    }
}