{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClass(ZLjava/lang/Object;)Ljava/lang/Class;": "0.004156448730204913",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.004156448730204913",
            "jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(I)V": "0.004156448730204913",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.004156448730204913",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.008312897460409826",
            "Run.measure(LBenchmark;)V": "0.004156448730204913",
            "java.nio.charset.CharsetEncoder.encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;": "0.004156448730204913",
            "Mandelbrot.mandelbrot(I)I": "99.95427906396775",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.004156448730204913",
            "java.lang.StringLatin1.inflate([BI[CII)V": "0.004156448730204913"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.7627293341579056",
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.003435717721432007",
            "Queens.benchmark()Ljava/lang/Object;": "0.017178588607160036",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)J": "0.003435717721432007",
            "Queens.placeQueen(I)Z": "14.00054971483543",
            "Queens.getRowColumn(II)Z": "57.963993678279394",
            "java.util.Arrays.fill([ZZ)V": "0.4329004329004329",
            "Queens.setRowColumn(IIZ)V": "25.943104514533086",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.03435717721432007",
            "Queens.queens()Z": "0.8177008177008177"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClass(ZLjava/lang/Object;)Ljava/lang/Class;": "0.0034746351633078527",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.0034746351633078527",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.36483669214732456",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.483669214732453",
            "Bounce$Ball.bounce()Z": "84.62126476719945",
            "Bounce.benchmark()Ljava/lang/Object;": "8.686587908269631",
            "som.Random.next()I": "1.4211257817929117",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.0660180681028492",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.017373175816539264",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.2870048644892287"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.387683284457478",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "37.9941348973607",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.766568914956012",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.6041055718475072",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "16.502052785923755",
            "havlak.HavlakLoopFinder.findLoops()V": "4.70850439882698",
            "havlak.HavlakLoopFinder$$Lambda$79+0x000000080100f598.667447085.apply(Ljava/lang/Object;)V": "1.6563049853372434",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.401173020527859",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.6087976539589444",
            "som.Vector.append(Ljava/lang/Object;)V": "1.7853372434017596"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.331187185929647",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.969535175879396",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.7167085427135675",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.3476758793969847",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.94770728643216",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "15.01256281407035",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "7.090138190954773",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.894943467336683",
            "cd.Vector2D.compareNumbers(DD)I": "3.8120288944723613",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.34610552763819"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.8568947635013",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.004824043030463832",
            "List.verifyResult(Ljava/lang/Object;)Z": "0.004824043030463832",
            "List$Element.getNext()LList$Element;": "9.720446706384621",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.17848959212716178",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.187703514315348",
            "List$Element.length()I": "0.06271255939602982",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.007236064545695748",
            "List$Element.setNext(LList$Element;)V": "0.04341638727417449",
            "List.makeList(I)LList$Element;": "0.9165681757881281"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.BinaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "2.8191566791207725",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "2.9550196516085205",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "13.513513513513514",
            "deltablue.ScaleConstraint.execute()V": "7.356009510408074",
            "deltablue.AbstractConstraint.<init>(Ldeltablue/Strength$Sym;)V": "17.788344897860156",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.037071182493086",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "12.019020816148284",
            "som.Vector.<init>(I)V": "9.020330923382987",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.158377407928575",
            "som.Vector.append(Ljava/lang/Object;)V": "3.449949051385317"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.548017687743301",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "37.13670206734949",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.57447371404815",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.4090479609962587",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "43.93590082769568",
            "som.Random.next()I": "12.664877735364149",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.0922559431573378",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.022676593975584868",
            "Storage.verifyResult(Ljava/lang/Object;)Z": "0.018897161646320722",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.548017687743301"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "java.lang.StringConcatHelper.mix(JLjava/lang/String;)J": "0.0033364473508608033",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.01000934205258241",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.0066728947017216066",
            "Sieve.benchmark()Ljava/lang/Object;": "3.0795409048445213",
            "Run.printResult(J)V": "0.0066728947017216066",
            "java.util.Arrays.fill([ZZ)V": "5.471773655411718",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.0066728947017216066",
            "Sieve.sieve([ZI)I": "91.34191912451621",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.013345789403443213",
            "java.nio.HeapCharBuffer.<init>([CIILjdk/internal/access/foreign/MemorySegmentProxy;)V": "0.0066728947017216066"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.048570635581459895",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "18.155009714127115",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.041770746600055",
            "Towers.moveDisks(III)V": "3.2438245906189285",
            "Towers$TowersDisk.getSize()I": "10.54676658340272",
            "Towers.benchmark()Ljava/lang/Object;": "0.06244796003330558",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010407993338884263",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "39.18956425201221",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.687621426588954",
            "Towers.moveTopDisk(II)V": "3.972384124340827"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.6028955532574973",
            "nbody.Body.getMass()D": "0.8617718028266115",
            "nbody.Body.setVX(D)V": "30.510168907273354",
            "nbody.NBodySystem.advance(D)V": "39.927611168562564",
            "nbody.Body.setZ(D)V": "0.4722509479489831",
            "nbody.Body.getY()D": "0.803171320234402",
            "nbody.Body.getZ()D": "8.035160289555325",
            "nbody.Body.setVZ(D)V": "8.896932092381936",
            "nbody.Body.setVY(D)V": "6.308169596690796",
            "nbody.Body.setX(D)V": "1.4477766287487073"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.433230630495228",
            "richards.Scheduler.schedule()V": "9.942135718043135",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.59487487788382",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.861576613812279",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.644698279101225",
            "Richards.benchmark()Ljava/lang/Object;": "8.882543022469378",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.238370782295033",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.9152325843540994",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.921695348312918",
            "richards.RBObject.<init>()V": "12.376944465319005"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.353897375636506",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.7602820211515864",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "24.926556991774383",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.704073638856247",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.72267920094007",
            "java.lang.String.<init>([BB)V": "4.617117117117117",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.9414414414414414",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.673325499412456",
            "json.JsonPureStringParser.read()V": "14.879553466509988",
            "java.util.Arrays.copyOfRange([BII)[B": "7.016255385820603"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.014493803898833249",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.007246901949416624",
            "java.lang.invoke.ClassSpecializer$Factory.findGetter(Ljava/lang/Class;Ljava/util/List;I)Ljava/lang/invoke/MethodHandle;": "0.003623450974708312",
            "java.lang.invoke.InvokerBytecodeGenerator.<init>(Ljava/lang/String;Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)V": "0.003623450974708312",
            "Permute.swap(II)V": "44.104645264149575",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.003623450974708312",
            "java.security.SecureClassLoader$CodeSourceKey.equals(Ljava/lang/Object;)Z": "0.003623450974708312",
            "Permute.permute(I)V": "55.76128704978622",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01811725487354156",
            "Permute.benchmark()Ljava/lang/Object;": "0.05435176462062468"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.5",
            "richards.Packet::setLink": "2.4",
            "Richards::benchmark": "4.6",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "46.1",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "3.0",
            "richards.RBObject::<init>": "5.5"
        },
        "Mandelbrot.hpl": {
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "sun.nio.cs.StreamEncoder::write": "0.0",
            "java.lang.AbstractStringBuilder::putStringAt": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "java.util.concurrent.ConcurrentHashMap::get": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "jdk.internal.org.objectweb.asm.ByteVector::putUTF8": "0.0",
            "Mandelbrot::mandelbrot": "97.1",
            "sun.invoke.util.VerifyAccess::isTypeVisible": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "81.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.4",
            "json.JsonPureStringParser::read": "14.8",
            "java.lang.String::<init>": "5.7",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "7.9",
            "java.lang.String::equals": "22.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.9",
            "AGCT::Unknown Java[ERR=-5]": "10.0",
            "java.lang.String::isLatin1": "2.4",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "33.8",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.2",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "8.1",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "6.4",
            "som.Vector::hasSome": "2.3",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "39.9",
            "Permute::permute": "51.3",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "java.lang.System::arraycopy": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "6.3"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "66.9",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "8.7",
            "Queens::setRowColumn": "20.2",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.6",
            "Storage::buildTreeDepth": "41.7",
            "java.util.Arrays::setAll": "32.8",
            "som.Random::next": "12.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "2.1",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.6",
            "Storage::lambda$buildTreeDepth$0": "3.1"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Run::printResult": "0.0",
            "Sieve::sieve": "90.1",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "5.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "9.9",
            "deltablue.ScaleConstraint::execute": "6.5",
            "deltablue.Planner::addPropagate": "18.3",
            "som.Vector::append": "7.6",
            "AGCT::Unknown not Java[ERR=-3]": "6.7",
            "AGCT::Unknown Java[ERR=-5]": "10.5",
            "deltablue.AbstractConstraint::<init>": "4.3",
            "som.Vector::<init>": "2.3",
            "som.Vector::forEach": "9.5",
            "java.lang.invoke.Invokers$Holder::linkToTargetMethod": "2.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "82.7",
            "java.util.Arrays::setAll": "1.3",
            "Bounce::lambda$benchmark$0": "0.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.4",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "Bounce$Ball::<init>": "3.2",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.6",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.2",
            "nbody.Body::getZ": "8.0",
            "nbody.Body::setVX": "28.8",
            "nbody.Body::setVY": "6.1",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "nbody.NBodySystem::advance": "39.2"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.6",
            "Towers::popDiskFrom": "23.7",
            "Towers::moveDisks": "3.5",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "Towers::pushDisk": "33.6",
            "Towers$TowersDisk::setNext": "15.1",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "Towers::moveTopDisk": "5.2",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "10.6",
            "cd.RedBlackTree::forEach": "4.9",
            "cd.RedBlackTree::put": "7.6",
            "cd.RedBlackTree::findNode": "7.8",
            "cd.RedBlackTree::treeMinimum": "6.1",
            "AGCT::Unknown not Java[ERR=-3]": "5.3",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "cd.Vector2D::compareNumbers": "2.8",
            "cd.RedBlackTree::treeInsert": "22.8",
            "cd.CollisionDetector::isInVoxel": "12.9"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "7.24%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.59%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "12.61%",
            "deltablue.UnaryConstraint.<init>": "8.67%",
            "som.Vector.append": "2.91%",
            "vtable": "2.65%",
            "som.Vector.forEach": "19.95%",
            "itable": "2.79%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "3.57%",
            "deltablue.ScaleConstraint.execute": "4.79%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "83.58%",
            "som.Random.next": "1.31%",
            "clear_page_rep_[k]": "0.08%",
            "java.util.Arrays.setAll": "1.31%",
            "SpinPause": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.03%",
            "Bounce.benchmark": "9.37%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.07%",
            "Bounce$Ball.<init>": "3.24%",
            "Bounce.lambda$benchmark$0": "0.29%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.01%",
            "os::PlatformMonitor::wait(long)": "0.00%",
            "Mandelbrot.mandelbrot": "99.58%",
            ".annobin__ZN15PerfLongVariant6sampleEv.start": "0.00%",
            "_copy_to_user_[k]": "0.00%",
            "WatcherThread::sleep()": "0.00%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "__tls_get_addr": "0.01%",
            "_dl_update_slotinfo": "0.01%",
            "os::elapsed_counter()": "0.00%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.49%",
            "som.Random.next": "13.13%",
            "java.util.Arrays.setAll": "35.34%",
            "Storage.lambda$buildTreeDepth$0": "3.05%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.54%",
            "SpinPause": "0.27%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.46%",
            "Storage.buildTreeDepth": "43.28%",
            "_raw_spin_unlock_irqrestore_[k]": "0.22%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "0.93%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.07%",
            "Towers.popDiskFrom": "22.82%",
            "Towers.moveDisks": "7.40%",
            "clear_page_rep_[k]": "0.03%",
            "Towers.pushDisk": "35.79%",
            "Towers.moveTopDisk": "4.79%",
            "Towers$TowersDisk.getSize": "10.26%",
            "Towers.buildTowerAt": "0.02%",
            "Towers$TowersDisk.getNext": "3.32%",
            "Towers.benchmark": "0.02%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.06%",
            "cd.CollisionDetector.isInVoxel": "13.78%",
            "cd.RedBlackTree.forEach": "5.11%",
            "cd.RedBlackTree.put": "7.50%",
            "cd.RedBlackTree.treeInsert": "21.07%",
            "cd.RedBlackTree.findNode": "8.29%",
            "cd.RedBlackTree.treeMinimum": "6.23%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "2.02%",
            "cd.Vector2D.compareNumbers": "2.78%",
            "cd.RedBlackTree.leftRotate": "2.79%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.94%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.18%",
            "som.Vector.hasSome": "2.45%",
            "som.Vector.append": "3.24%",
            "som.Vector.forEach": "2.14%",
            "som.IdentitySet.lambda$contains$0": "32.54%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "6.72%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.00%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.65%",
            "havlak.HavlakLoopFinder.doDFS": "6.15%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.78%",
            "Sieve.benchmark": "3.24%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.11%",
            "Sieve.sieve": "88.94%",
            "SpinPause": "0.04%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.02%",
            "__memset_avx2_unaligned_erms": "0.03%",
            "_raw_spin_unlock_irqrestore_[k]": "0.05%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.25%",
            "Permute.swap": "41.27%",
            "Permute.benchmark": "0.03%",
            "clear_page_rep_[k]": "0.01%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "__vfprintf_internal": "0.01%",
            "syscall_enter_from_user_mode_[k]": "0.01%",
            "java.util.zip.Inflater.inflate": "0.01%",
            "[vdso]": "0.01%",
            "Benchmark.innerBenchmarkLoop": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.85%",
            "nbody.Body.getZ": "7.92%",
            "nbody.Body.getY": "0.70%",
            "nbody.Body.setX": "1.27%",
            "nbody.Body.setY": "1.80%",
            "nbody.Body.setVX": "27.95%",
            "nbody.Body.setVY": "5.78%",
            "nbody.Body.getMass": "0.52%",
            "nbody.Body.getVZ": "0.50%",
            "nbody.NBodySystem.advance": "43.29%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.25%",
            "List.makeList": "0.74%",
            "clear_page_rep_[k]": "0.08%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.04%",
            "List.tail": "5.05%",
            "List$Element.length": "0.08%",
            "List.isShorterThan": "84.23%",
            "List$Element.<init>": "0.12%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.42%",
            "java.lang.String.length": "3.00%",
            "java.lang.String.substring": "2.13%",
            "java.lang.String.<init>": "5.48%",
            "java.lang.String.isLatin1": "2.65%",
            "json.JsonPureStringParser.readStringInternal": "9.01%",
            "java.util.Arrays.copyOfRange": "7.31%",
            "java.lang.String.equals": "21.54%",
            "json.JsonPureStringParser.read": "16.43%",
            "json.JsonPureStringParser.readValue": "2.33%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.69%",
            "Queens.getRowColumn": "59.72%",
            "Queens.setRowColumn": "23.47%",
            "clear_page_rep_[k]": "0.05%",
            "Queens.queens": "0.47%",
            "Queens.placeQueen": "14.98%",
            "_raw_spin_unlock_irqrestore_[k]": "0.04%",
            "__tls_get_addr": "0.01%",
            "Queens.benchmark": "0.05%",
            "Benchmark.innerBenchmarkLoop": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.83%",
            "Richards.benchmark": "4.84%",
            "richards.Packet.<init>": "7.18%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.69%",
            "itable": "37.49%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.28%",
            "richards.TaskControlBlock.<init>": "3.04%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.93%",
            "richards.RBObject.<init>": "5.67%",
            "richards.RBObject.append": "2.65%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.8",
            "Towers.moveDisks": "95.0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "Run.runBenchmark": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Towers.benchmark": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.5",
            "java.io.PrintStream.println": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.3",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.6",
            "deltablue.AbstractConstraint.satisfy": "14.3",
            "deltablue.Planner.removePropagateFrom": "9.7",
            "som.Vector.<init>": "28.0",
            "deltablue.Variable.<init>": "4.9",
            "som.Vector.forEach": "8.0",
            "deltablue.Planner.constraintsConsuming": "4.9",
            "deltablue.AbstractConstraint.<init>": "4.3",
            "deltablue.Plan.lambda$execute$0": "1.2",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.3",
            "havlak.HavlakLoopFinder.stepD": "3.4",
            "java.lang.Integer.valueOf": "8.4",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "15.0",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.Packet.getData": "0.0",
            "richards.TaskControlBlock.runTask": "83.7",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "53.4",
            "Bounce$Ball.<init>": "45.3",
            "Bounce.lambda$benchmark$0": "0.3",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "cd.Aircraft.<init>": "1.6",
            "som.Vector.<init>": "6.3",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.6",
            "cd.RedBlackTree$InsertResult.<init>": "14.9",
            "cd.RedBlackTree$Node.<init>": "8.3",
            "cd.RedBlackTree$Entry.<init>": "4.9"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "98.6",
            "Run.printResult": "0.3"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.5",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.0",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.2",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.6",
            "List$Element.length": "0.1",
            "List.isShorterThan": "72.8",
            "List$Element.<init>": "23.8",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "Run.runBenchmark": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.5",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "24.8",
            "Queens.placeQueen": "74.0",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.585293926317846",
            "json.JsonPureStringParser.readChar(String)": "1.6653294880412868",
            "java.lang.String.<init>(byte[], byte) String.java": "6.43580458399289",
            "json.JsonPureStringParser.isWhiteSpace()": "3.0357568792419287",
            "json.JsonPureStringParser.read()": "20.257171975627212",
            "java.lang.String.length() String.java": "2.957694559489993",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.8406010798620906",
            "java.lang.String.substring(int, int) String.java": "10.048355270290783",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.3421948522236935",
            "json.JsonPureStringParser.readStringInternal()": "3.21356549645467"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.1426969560380758",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.684253064722771",
            "havlak.HavlakLoopFinder.findLoops()": "13.533407199017692",
            "som.Vector.<init>(int)": "2.8554490004818294",
            "som.Set.<init>(int)": "2.1093907857369656",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.471684204215673",
            "havlak.HavlakLoopFinder$$Lambda$19.0x00000008000cc428.apply(Object)": "2.0805254381426703",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.050030308614974",
            "som.Vector.removeAll()": "2.5934404607797643",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "38.06895265416871"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.696866298627095",
            "sun.nio.fs.LinuxFileSystemProvider.readAttributes(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.14485522524987524",
            "Queens.getRowColumn(int, int)": "61.30595033075276",
            "Queens.queens()": "1.1266517519434742",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11266517519434743",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6277059760827928",
            "Benchmark.innerBenchmarkLoop(int)": "0.14485522524987524",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.03219005005552784",
            "Queens.setRowColumn(int, int, boolean)": "22.500844988813956",
            "java.util.Objects.checkIndex(int, int) Objects.java": "0.2736154254719866"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.076888939841644",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.2041175578673315",
            "richards.TaskControlBlock.runTask()": "40.16967267374992",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.7943366012951043",
            "richards.Scheduler.schedule()": "2.46668860922401",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.5717281243181476",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.0473034692662435",
            "richards.RBObject.append(Packet, Packet)": "2.940056138430417",
            "Richards.benchmark()": "27.11138559853256",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.4570844258384708"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.18223788118090148",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.695364530985962",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.12546802001303",
            "java.lang.Class.forName(String) Class.java": "0.1491037209661921",
            "som.Random.next()": "16.539468307175753",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.3423863222186634",
            "java.lang.invoke.LambdaForm$Name.withConstraint(Object) LambdaForm.java": "0.18223788118090148",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.16014844103776188",
            "Storage.buildTreeDepth(int, Random)": "37.082647640295555",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.2361029809699473"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "36.106393666132455",
            "Towers.popDiskFrom(int)": "27.55519410625015",
            "Towers.moveDisks(int, int, int)": "6.93663740521922",
            "Towers$TowersDisk.getSize()": "1.4232066400363574",
            "sun.invoke.util.Wrapper.findPrimitiveType(Class) Wrapper.java": "0.08371803764919748",
            "java.lang.invoke.LambdaForm$Name.replaceNames(LambdaForm$Name[], LambdaForm$Name[], int, int) LambdaForm.java": "0.08371803764919748",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.09567775731336856",
            "Towers.moveTopDisk(int, int)": "8.862152271150762",
            "com.yourkit.probes.IntColumn.setValue(int, int) a": "0.10763747697753964",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.382089123830934"
        },
        "YourKit_Permute.txt": {
            "java.io.BufferedWriter.write(String, int, int) BufferedWriter.java": "0.10248001639680263",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.045546673954134496",
            "Benchmark.innerBenchmarkLoop(int)": "0.10248001639680263",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.011386668488533624",
            "java.nio.CharBuffer.position(int) CharBuffer.java": "0.10248001639680263",
            "Permute.permute(int)": "52.02568832411013",
            "java.io.PrintStream.writeln(String) PrintStream.java": "0.0011386668488533624",
            "jdk.internal.org.objectweb.asm.ByteVector.put122(int, int, int) ByteVector.java": "0.11386668488533623",
            "Permute.benchmark()": "0.10248001639680263",
            "Permute.swap(int, int)": "47.391314249276945"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.746638832972987",
            "som.Vector.forEach(ForEachInterface)": "38.61924998136138",
            "deltablue.EqualityConstraint.execute()": "2.9573299535276725",
            "deltablue.Planner.projectionTest(int)": "1.8887149283033877",
            "deltablue.BinaryConstraint.getOutput()": "2.236636099306643",
            "deltablue.BinaryConstraint.isSatisfied()": "3.8768359054648482",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "7.977335420860361",
            "som.Vector.<init>(int)": "7.405750639926441",
            "deltablue.ScaleConstraint.execute()": "1.9384179527324241",
            "deltablue.Plan$$Lambda$32.0x00000008000ccd88.apply(Object)": "3.28039961231641"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.1594578433326689",
            "List.tail(List$Element, List$Element, List$Element)": "3.7738356255398307",
            "List.makeList(int)": "1.3155272074945183",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.4385090691648395",
            "List$Element.setNext(List$Element)": "0.26576307222111484",
            "java.nio.CharBuffer.hasArray() CharBuffer.java": "0.11959338249950169",
            "List$Element.getNext()": "23.639625274068166",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.2524749186100591",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.1594578433326689",
            "List.isShorterThan(List$Element, List$Element)": "69.27114477443358"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.3731029386687887",
            "nbody.Body.getZ()": "5.328823964076621",
            "nbody.Body.getMass()": "0.90945262320241",
            "nbody.Body.getX()": "0.8810322287273348",
            "nbody.Body.setZ(double)": "0.8241914397771841",
            "nbody.NBodySystem.advance(double)": "43.15636901040187",
            "nbody.Body.setVY(double)": "2.8420394475075312",
            "nbody.Body.setVZ(double)": "9.22241800716194",
            "nbody.Body.setVX(double)": "31.916102995509576",
            "nbody.Body.setY(double)": "0.625248678451657"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.52239121622813",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07930773162263619",
            "java.lang.String.charAt(int) String.java": "0.07930773162263619",
            "Harness.main(String[])": "8.811970180292911E-4",
            "java.util.concurrent.ConcurrentHashMap$ValueIterator.next() ConcurrentHashMap.java": "0.07930773162263619",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.026435910540878727",
            "java.lang.invoke.LambdaFormBuffer.startEdit() LambdaFormBuffer.java": "0.01762394036058582",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.07930773162263619",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.11455561234380782",
            "Run.measure(Benchmark)": "8.811970180292911E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.058718658726245",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.932253537154345",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.10450252247468",
            "cd.RedBlackTree.findNode(Comparable)": "3.9145772484163412",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "17.296969237188485",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.5110950953988542",
            "cd.CollisionDetector.lambda$reduceCollisionSet$5(Vector, RedBlackTree$Entry)": "1.8965975040776846",
            "cd.RedBlackTree.put(Comparable, Object)": "7.123620225315784",
            "cd.Vector2D.compareNumbers(double, double)": "5.940143382771308",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.1801008989872175"
        },
        "YourKit_Sieve.txt": {
            "java.lang.StringConcatHelper.prepend(long, byte[], long, String) StringConcatHelper.java": "0.09488266177493831",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.09488266177493831",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.09488266177493831",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.150673666898602",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.26356294937482866",
            "java.lang.System.nanoTime() System.java (native)": "0.09488266177493831",
            "Sieve.benchmark()": "89.63248782339173",
            "com.yourkit.probes.Table.createRow() a": "0.09488266177493831",
            "Sieve.sieve(boolean[], int)": "7.116199633120374",
            "com.yourkit.probes.builtin.Files.<clinit>() a": "0.16868028759989032"
        },
        "YourKit_Bounce.txt": {
            "java.nio.Buffer.remaining() Buffer.java": "0.03843788437884378",
            "Bounce.benchmark()": "62.15405904059039",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "0.0019218942189421892",
            "java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(Class, String, MethodType) InvokerBytecodeGenerator.java": "0.40359778597785967",
            "java.lang.Long.stringSize(long) Long.java": "0.17297047970479704",
            "Bounce.lambda$benchmark$0(Random, int)": "0.3459409594095941",
            "java.lang.invoke.LambdaForm$Name.index() LambdaForm.java": "0.07687576875768756",
            "Bounce$Ball.bounce()": "36.15083025830258",
            "Bounce$Ball.<init>(Random)": "0.5573493234932348",
            "java.lang.invoke.MethodType.hashCode() MethodType.java": "0.09609471094710946"
        }
    },
    "Runtimes": {
        "NBody.data": 104.5435,
        "JavaFlightRecorder_Queens.jfr": 107.05000000000001,
        "rebench_test_Async_Bounce.txt": 100.3995,
        "JavaFlightRecorder_Sieve.jfr": 108.338,
        "Permute.hpl": 103.8545,
        "CD.data": 96.161,
        "DeltaBlue.hpl": 86.17099999999999,
        "List.data": 154.42649999999998,
        "Towers.hpl": 107.881,
        "NBody.hpl": 103.386,
        "Bounce.hpl": 102.0655,
        "JavaFlightRecorder_Json.jfr": 84.2745,
        "Sieve.data": 107.478,
        "Richards.hpl": 89.44,
        "JavaFlightRecorder_Havlak.jfr": 161.986,
        "JavaFlightRecorder_CD.jfr": 96.828,
        "JavaFlightRecorder_DeltaBlue.jfr": 84.125,
        "rebench_test_Async_Mandelbrot.txt": 86.70849999999999,
        "JavaFlightRecorder_Towers.jfr": 110.434,
        "rebench_test_Async_CD.txt": 95.6445,
        "rebench_test_Async_Permute.txt": 104.8695,
        "Mandelbrot.data": 85.66650000000001,
        "JavaFlightRecorder_Permute.jfr": 107.7695,
        "rebench_test_Async_NBody.txt": 102.6855,
        "JavaFlightRecorder_Bounce.jfr": 104.72749999999999,
        "Havlak.data": 160.60649999999998,
        "Mandelbrot.hpl": 86.739,
        "JavaFlightRecorder_Storage.jfr": 99.917,
        "rebench_test_Async_Towers.txt": 110.4315,
        "List.hpl": 149.488,
        "JavaFlightRecorder_NBody.jfr": 104.75450000000001,
        "Queens.hpl": 110.3035,
        "Storage.data": 114.953,
        "rebench_test_Async_Sieve.txt": 103.5155,
        "JavaFlightRecorder_Richards.jfr": 92.878,
        "Storage.hpl": 104.9795,
        "rebench_test_Async_List.txt": 150.107,
        "Bounce.data": 102.9785,
        "rebench_test_Async_Richards.txt": 91.1755,
        "Permute.data": 105.467,
        "rebench_test_Async_DeltaBlue.txt": 100.2695,
        "JavaFlightRecorder_Mandelbrot.jfr": 86.507,
        "JavaFlightRecorder_List.jfr": 154.1115,
        "DeltaBlue.data": 89.22749999999999,
        "rebench_test_Async_Storage.txt": 110.1665,
        "Queens.data": 109.803,
        "Json.hpl": 81.3655,
        "Towers.data": 114.949,
        "Havlak.hpl": 161.035,
        "Richards.data": 92.61449999999999,
        "rebench_test_Async_Havlak.txt": 160.142,
        "Sieve.hpl": 103.23949999999999,
        "CD.hpl": 97.9935,
        "rebench_test_Async_Queens.txt": 105.5075,
        "rebench_test_Async_Json.txt": 81.411,
        "Json.data": 79.8045
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.15%",
            "[.] Interpreter": "0.10%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.31%",
            "[.] void nbody.NBodySystem.advance(double)": "98.74%",
            "native_apic_msr_write": "0.04%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.01%",
            "[.] Interpreter": "0.10%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.15%",
            "[.] void Permute.permute(int)": "0.01%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "33.61%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "7.09%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "7.92%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "5.08%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.70%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "5.95%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "10.81%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.72%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "12.81%",
            "[.] void deltablue.Planner.chainTest(int)": "27.36%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.74%",
            "x86_pmu_disable_all": "0.07%",
            "[.] Interpreter": "0.13%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.13%",
            "[.] boolean Queens.placeQueen(int)": "96.14%"
        },
        "Towers.data": {
            " ": "0",
            "[.] Towers$TowersDisk Towers.popDiskFrom(int)": "0.03%",
            "[.] Interpreter": "0.09%",
            "[.] void Towers.moveDisks(int, int, int)": "99.18%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.08%",
            "clear_page_rep": "0.03%"
        },
        "Richards.data": {
            " ": "0",
            "[.] vtable chunks": "37.41%",
            "[.] boolean richards.Scheduler.start()": "22.09%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$5/0x0000000801006c50.apply(richards.Packet, richards.RBObject)": "6.96%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "12.72%",
            "[.] void richards.Scheduler.schedule()": "7.88%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "9.89%",
            "x86_pmu_disable_all": "0.09%",
            "[.] Interpreter": "0.12%",
            "clear_page_rep": "0.12%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "87.04%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "23.84%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.57%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "14.50%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.48%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "10.18%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.12%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.45%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "97.95%",
            "[.] Interpreter": "0.10%",
            "[.] java.lang.Object List.benchmark()": "0.58%",
            "[.] List$Element List.makeList(int)": "0.74%",
            "[.] int List$Element.length()": "0.07%"
        },
        "Sieve.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.54%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.20%",
            "native_apic_msr_write": "0.18%",
            "[.] java.lang.Object Sieve.benchmark()": "1.86%",
            "[.] int Sieve.sieve(boolean[], int)": "2.41%"
        },
        "Bounce.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.03%",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "92.87%",
            "clear_page_rep": "0.06%",
            "[.] java.lang.Object Bounce.benchmark()": "5.91%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.68%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.62%",
            "[.] StubRoutines (2)": "8.39%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.26%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "20.24%"
        }
    }
}