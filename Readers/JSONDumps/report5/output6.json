{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            "java.lang.invoke.LambdaForm$MH+0x000000080100e000.1197365356.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.00412609341475491",
            "java.util.concurrent.CopyOnWriteArrayList$COWIterator.<init>([Ljava/lang/Object;I)V": "0.00412609341475491",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.00412609341475491",
            "Run.measure(LBenchmark;)V": "0.00825218682950982",
            "Mandelbrot.mandelbrot(I)I": "99.93810859877868",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.00412609341475491",
            "java.lang.StringCoding.implEncodeAsciiArray([CI[BII)I": "0.00412609341475491",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(Ljava/lang/invoke/MemberName;Ljava/lang/invoke/LambdaForm$Name;)V": "0.00412609341475491",
            "java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendJ(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;J)Ljava/lang/invoke/BoundMethodHandle;": "0.00412609341475491",
            "sun.nio.cs.StreamEncoder.implWrite([CII)V": "0.00412609341475491"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.7118141374196737",
            "Queens.benchmark()Ljava/lang/Object;": "0.02306805074971165",
            "jdk.internal.misc.Unsafe.allocateUninitializedArray0(Ljava/lang/Class;I)Ljava/lang/Object;": "0.0032954358213873785",
            "Queens.placeQueen(I)Z": "8.129840171362662",
            "Queens.getRowColumn(II)Z": "70.34437304333498",
            "java.util.Arrays.fill([ZZ)V": "0.31636183885318836",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.0032954358213873785",
            "Queens.setRowColumn(IIZ)V": "19.429889602899983",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01647717910693689",
            "Queens.queens()Z": "1.001812489701763"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            "java.lang.Math.abs(I)I": "0.007049948887870563",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.42652190771616905",
            "java.io.PrintStream.write([BII)V": "0.007049948887870563",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.5333638831118475",
            "Bounce$Ball.bounce()Z": "84.92720927773274",
            "Bounce.benchmark()Ljava/lang/Object;": "8.354189432126617",
            "som.Random.next()I": "1.339490288695407",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.07754943776657619",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.03524974443935282",
            "Bounce$Ball.<init>(Lsom/Random;)V": "3.2570763861962"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.2670162014075865",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.330735439988665",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.2845401728779935",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.553918095508006",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.2766992584195362",
            "havlak.HavlakLoopFinder.findLoops()V": "6.199518208870625",
            "som.Vector.<init>(I)V": "2.2885078645316708",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.222757545699306",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.798639648575882",
            "som.Vector.append(Ljava/lang/Object;)V": "4.558121959283926"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.796227003429998",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "7.98643592142189",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.7673838478328654",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.178827564702214",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "6.045369504209542",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "14.928281883380105",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.8249142500779545",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.795447458684128",
            "cd.Vector2D.compareNumbers(DD)I": "3.9561895852821953",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "22.443093233551608"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.84740930095369",
            "java.lang.invoke.LambdaForm$MH+0x0000000801010000.254749889.invoke(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;": "0.004915937469275391",
            "List$Element.getNext()LList$Element;": "9.54675056533281",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.1573099990168125",
            "List.benchmark()Ljava/lang/Object;": "0.004915937469275391",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.004915937469275391",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.308032641824796",
            "List$Element.length()I": "0.09094484318159472",
            "List$Element.setNext(LList$Element;)V": "0.02212171861173926",
            "List.makeList(I)LList$Element;": "0.9881034313243535"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.102461476886131",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "10.616369821893135",
            "deltablue.ScaleConstraint.execute()V": "8.530118070842505",
            "deltablue.Planner.chainTest(I)V": "1.8210926555933558",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "23.439063438062835",
            "deltablue.Plan$$Lambda$82+0x0000000801014220.111156771.apply(Ljava/lang/Object;)V": "13.408044826896136",
            "som.Vector.<init>(I)V": "8.229937962777665",
            "deltablue.Planner$$Lambda$79+0x000000080100f388.1262773598.apply(Ljava/lang/Object;)V": "4.78787272363418",
            "deltablue.Planner$$Lambda$84+0x0000000801014668.2039810346.apply(Ljava/lang/Object;)V": "2.076245747448469",
            "som.Vector.append(Ljava/lang/Object;)V": "2.5515309185511303"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$76+0x000000080100e000.1653986196.apply(I)Ljava/lang/Object;": "0.5429132493935543",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.82457356282007",
            "Storage$$Lambda$76+0x000000080100e000.1653986196.<init>(LStorage;ILsom/Random;)V": "0.7315852296792577",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.7002810827461396",
            "Storage.benchmark()Ljava/lang/Object;": "0.019252242886296254",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.96553848523353",
            "som.Random.next()I": "12.063455392553232",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100c400.1197365356.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.4015632821223671",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.015401794309037002",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6545762581340726"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            "Run.measure(LBenchmark;)V": "0.009987681859040516",
            "java.util.zip.ZipFile.getZipEntry(Ljava/lang/String;I)Ljava/util/zip/ZipEntry;": "0.0033292272863468387",
            "Sieve.benchmark()Ljava/lang/Object;": "3.15943669474315",
            "java.lang.System$2.encodeASCII([CI[BII)I": "0.0033292272863468387",
            "java.io.FileOutputStream.write([BII)V": "0.0066584545726936775",
            "java.util.Arrays.fill([ZZ)V": "5.5697972500582615",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.009987681859040516",
            "Sieve.sieve([ZI)I": "91.1509138728901",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.0066584545726936775",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.0066584545726936775"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.04151961801951422",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.566327589786173",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.103522247595322",
            "Towers.moveDisks(III)V": "4.255760847000207",
            "Towers$TowersDisk.getSize()I": "11.50093419140544",
            "Towers.benchmark()Ljava/lang/Object;": "0.04151961801951422",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.01729984084146426",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "38.02851013770673",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.01238668604249",
            "Towers.moveTopDisk(II)V": "4.373399764722165"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.6052421731442637",
            "nbody.Body.getMass()D": "0.5789966369656415",
            "nbody.Body.setVX(D)V": "29.951808064348366",
            "nbody.NBodySystem.advance(D)V": "40.658045279617234",
            "nbody.Body.setZ(D)V": "0.4437818534826474",
            "nbody.Body.getY()D": "0.7419477862913012",
            "nbody.Body.getZ()D": "8.28970634122664",
            "nbody.Body.setVZ(D)V": "8.740422286169954",
            "nbody.Body.setVY(D)V": "6.271885726172728",
            "nbody.Body.setX(D)V": "1.456159206739937"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.420765027322404",
            "richards.Scheduler.schedule()V": "11.271402550091075",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.296903460837887",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.959927140255009",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.014571948998179",
            "Richards.benchmark()Ljava/lang/Object;": "8.539162112932605",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.313296903460838",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.007285974499089",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "6.33879781420765",
            "richards.RBObject.<init>()V": "10.797814207650273"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.1784478497281268",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.0894710825506677",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.991102323282256",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.215027187345527",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.400395452298568",
            "java.lang.String.<init>([BB)V": "4.468610973801286",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.231339594661394",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.6445872466633715",
            "json.JsonPureStringParser.read()V": "14.587246663371232",
            "java.util.Arrays.copyOfRange([BII)[B": "5.358378645575878"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.010862480990658266",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.0036208269968860886",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.007241653993772177",
            "java.io.OutputStreamWriter.write([CII)V": "0.0036208269968860886",
            "Permute.swap(II)V": "43.652690274458685",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.007241653993772177",
            "Permute.permute(I)V": "56.26040987761604",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.010862480990658266",
            "Permute.benchmark()Ljava/lang/Object;": "0.021724961981316532",
            "sun.nio.cs.StreamEncoder.implWrite(Ljava/nio/CharBuffer;)V": "0.0036208269968860886"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.5",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.2",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "2.9",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "45.1",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "5.8",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.9",
            "richards.RBObject::<init>": "6.8"
        },
        "Mandelbrot.hpl": {
            "java.lang.String::substring": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.io.FileOutputStream::write": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "jdk.internal.loader.NativeLibraries::load": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "jdk.internal.org.objectweb.asm.ByteVector::putUTF8": "0.0",
            "Mandelbrot::mandelbrot": "98.3",
            "java.lang.Enum::ordinal": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.4",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.0",
            "List::tail": "2.2",
            "List::isShorterThan": "82.4",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "16.2",
            "java.lang.String::<init>": "5.3",
            "json.JsonPureStringParser::readArray": "2.5",
            "java.lang.String::length": "2.9",
            "java.util.Arrays::copyOfRange": "7.1",
            "java.lang.String::equals": "21.7",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "java.lang.String::isLatin1": "2.7",
            "json.JsonPureStringParser::readStringInternal": "8.7"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.8",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.9",
            "havlak.HavlakLoopFinder::findLoops": "5.6",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.0",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.7",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::hasSome": "2.1",
            "som.Vector::<init>": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "39.4",
            "Permute::permute": "50.6",
            "Permute::verifyResult": "0.0",
            "Permute::benchmark": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::<init>": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.util.concurrent.ConcurrentHashMap::get": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "6.1",
            "java.lang.invoke.LambdaForm::useCount": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.3",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "13.8",
            "Queens::setRowColumn": "24.9",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.8",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.9",
            "java.util.Arrays::setAll": "34.4",
            "som.Random::next": "13.4",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "1.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.6",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.0"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "3.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "jdk.internal.misc.Unsafe::shouldBeInitialized0": "0.0",
            "Sieve::sieve": "86.4",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "java.lang.System::arraycopy": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "7.2"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "10.2",
            "deltablue.ScaleConstraint::execute": "6.6",
            "deltablue.Planner::addPropagate": "3.6",
            "deltablue.Variable::<init>": "4.4",
            "som.Dictionary::getBucket": "12.6",
            "AGCT::Unknown not Java[ERR=-3]": "6.3",
            "AGCT::Unknown Java[ERR=-5]": "10.6",
            "java.util.Arrays::copyOf": "3.5",
            "som.Vector::forEach": "9.9",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.9"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "9.1",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "82.8",
            "java.util.Arrays::setAll": "1.3",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "Bounce$Ball::<init>": "3.1",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.1",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.4",
            "nbody.Body::getZ": "7.8",
            "nbody.Body::setVX": "28.1",
            "nbody.Body::setVY": "5.7",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "1.5",
            "nbody.NBodySystem::advance": "41.3"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.1",
            "Towers::popDiskFrom": "22.5",
            "Towers::moveDisks": "3.8",
            "Towers::buildTowerAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "Towers::pushDisk": "33.7",
            "Towers$TowersDisk::setNext": "15.2",
            "AGCT::Unknown Java[ERR=-5]": "3.9",
            "Towers::moveTopDisk": "4.8",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.4",
            "cd.RedBlackTree::forEach": "5.0",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::findNode": "8.0",
            "cd.RedBlackTree::leftRotate": "2.6",
            "cd.RedBlackTree::treeMinimum": "6.4",
            "AGCT::Unknown not Java[ERR=-3]": "5.3",
            "AGCT::Unknown Java[ERR=-5]": "3.4",
            "cd.RedBlackTree::treeInsert": "20.5",
            "cd.CollisionDetector::isInVoxel": "14.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner.newMark": "6.68%",
            "deltablue.EqualityConstraint.execute": "5.52%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.41%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "9.50%",
            "vtable": "3.62%",
            "som.Vector.forEach": "24.12%",
            "deltablue.Planner.addPropagate": "3.37%",
            "itable": "2.82%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "2.63%",
            "deltablue.ScaleConstraint.execute": "5.58%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "84.45%",
            "som.Random.next": "1.27%",
            "clear_page_rep_[k]": "0.12%",
            "java.util.Arrays.setAll": "1.06%",
            "SpinPause": "0.03%",
            "Bounce.benchmark": "8.97%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.05%",
            "_raw_spin_unlock_irqrestore_[k]": "0.02%",
            "Bounce$Ball.<init>": "3.09%",
            "Bounce.lambda$benchmark$0": "0.22%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "jdk.internal.org.objectweb.asm.Frame.push": "0.01%",
            "__xfs_filemap_fault?[xfs]_[k]": "0.01%",
            "Interpreter": "0.02%",
            "LinearScan::assign_reg_num(GrowableArray<LIR_Op*>*,": "0.01%",
            "NullCheckEliminator::iterate_one(BlockBegin*)": "0.01%",
            "Mandelbrot.mandelbrot": "99.56%",
            ".annobin__ZN11Instruction6as_PhiEv.start": "0.01%",
            "I2C/C2I": "0.01%",
            "futex_wake_[k]": "0.01%",
            "JNIHandles::make_global(Handle,": "0.00%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.51%",
            "som.Random.next": "13.59%",
            "java.util.Arrays.setAll": "35.71%",
            "Storage.lambda$buildTreeDepth$0": "3.08%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.61%",
            "SpinPause": "0.22%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.44%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.25%",
            "Storage.buildTreeDepth": "42.47%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "0.98%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "14.37%",
            "Towers.popDiskFrom": "22.44%",
            "Towers.moveDisks": "7.67%",
            "clear_page_rep_[k]": "0.02%",
            "Towers.pushDisk": "37.30%",
            "Towers.moveTopDisk": "4.67%",
            "Towers$TowersDisk.getSize": "9.94%",
            "Towers.buildTowerAt": "0.02%",
            "Towers$TowersDisk.getNext": "3.03%",
            "Towers.benchmark": "0.03%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.04%",
            "cd.CollisionDetector.isInVoxel": "14.52%",
            "cd.RedBlackTree.forEach": "5.20%",
            "cd.RedBlackTree.put": "7.05%",
            "cd.RedBlackTree.treeInsert": "21.43%",
            "cd.RedBlackTree.findNode": "7.95%",
            "cd.RedBlackTree.treeMinimum": "5.99%",
            "cd.CollisionDetector.lambda$handleNewFrame$0": "1.98%",
            "cd.Vector2D.compareNumbers": "2.82%",
            "cd.RedBlackTree.leftRotate": "2.35%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.47%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.55%",
            "som.Vector.hasSome": "2.56%",
            "som.Vector.append": "4.17%",
            "som.Vector.<init>": "2.34%",
            "som.IdentitySet.lambda$contains$0": "33.23%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "6.99%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.50%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.79%",
            "havlak.HavlakLoopFinder.doDFS": "4.98%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.07%",
            "Sieve.benchmark": "3.16%",
            "Interpreter": "0.02%",
            "clear_page_rep_[k]": "0.10%",
            "Sieve.sieve": "90.76%",
            "SpinPause": "0.03%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "_raw_spin_unlock_irqrestore_[k]": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "58.41%",
            "Permute.swap": "41.12%",
            "Permute.benchmark": "0.01%",
            "clear_page_rep_[k]": "0.02%",
            "syscall_enter_from_user_mode_[k]": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "_raw_spin_unlock_irqrestore_[k]": "0.01%",
            "[vdso]": "0.01%",
            "CompileTask::select_for_compilation()": "0.01%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "9.25%",
            "nbody.Body.getZ": "8.00%",
            "nbody.Body.getY": "0.68%",
            "nbody.Body.setX": "1.17%",
            "nbody.Body.setY": "1.78%",
            "nbody.Body.setVX": "28.20%",
            "nbody.Body.setVY": "5.78%",
            "nbody.Body.getVZ": "0.48%",
            "nbody.Body.getMass": "0.42%",
            "nbody.NBodySystem.advance": "42.96%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.50%",
            "List.makeList": "0.74%",
            "clear_page_rep_[k]": "0.05%",
            "List$Element.setNext": "0.02%",
            "java.lang.Integer.valueOf": "0.02%",
            "List.tail": "5.00%",
            "List$Element.length": "0.05%",
            "List.isShorterThan": "84.06%",
            "List$Element.<init>": "0.18%",
            "__tls_get_addr": "0.01%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.28%",
            "java.lang.String.length": "3.19%",
            "java.lang.String.<init>": "5.41%",
            "json.JsonPureStringParser.readArray": "2.53%",
            "json.JsonPureStringParser.isWhiteSpace": "2.27%",
            "java.lang.String.isLatin1": "2.75%",
            "json.JsonPureStringParser.readStringInternal": "9.00%",
            "java.util.Arrays.copyOfRange": "6.99%",
            "java.lang.String.equals": "21.76%",
            "json.JsonPureStringParser.read": "15.63%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.71%",
            "Queens.getRowColumn": "59.36%",
            "Queens.setRowColumn": "23.09%",
            "clear_page_rep_[k]": "0.09%",
            "Queens.queens": "0.59%",
            "Queens.placeQueen": "15.53%",
            "SpinPause": "0.01%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.01%",
            "Queens.benchmark": "0.06%",
            "Benchmark.innerBenchmarkLoop": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.21%",
            "Richards.benchmark": "4.79%",
            "richards.Packet.<init>": "6.88%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.67%",
            "itable": "37.16%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.29%",
            "richards.TaskControlBlock.<init>": "3.18%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.12%",
            "richards.RBObject.<init>": "5.87%",
            "richards.RBObject.append": "3.12%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.8",
            "Towers.moveDisks": "93.6",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "Towers.pushDisk": "0.1",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.5"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "7.7",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "91.4",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "java.lang.System.nanoTime": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.1",
            "deltablue.AbstractConstraint.satisfy": "10.3",
            "deltablue.Planner.removePropagateFrom": "9.2",
            "som.Vector.<init>": "33.4",
            "deltablue.Variable.<init>": "4.7",
            "som.Vector.forEach": "7.3",
            "deltablue.Planner.constraintsConsuming": "4.7",
            "deltablue.AbstractConstraint.<init>": "3.4",
            "deltablue.Plan.lambda$execute$0": "2.0",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "havlak.HavlakLoopFinder.stepEProcessNonBackPreds": "3.4",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.5",
            "java.lang.Integer.valueOf": "9.0",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.6",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "3.9"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "15.9",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "82.9",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "54.1",
            "Bounce$Ball.<init>": "44.9",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "3.1",
            "som.Vector.<init>": "6.3",
            "cd.Vector3D.<init>": "7.7",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "14.8",
            "cd.RedBlackTree$Node.<init>": "7.4",
            "cd.RedBlackTree$Entry.<init>": "5.0"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "99.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.2",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.1",
            "List$Element.length": "0.2",
            "List.isShorterThan": "73.6",
            "List$Element.<init>": "22.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.2",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "25.1",
            "Queens.placeQueen": "74.0",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "java.util.Arrays.fill0": "0.2",
            "Run.printResult": "0.1",
            "java.lang.System.nanoTime": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.41728452176596",
            "java.lang.String.<init>(byte[], byte) String.java": "7.600936623690739",
            "json.JsonPureStringParser.isWhiteSpace()": "2.106185855683659",
            "json.JsonPureStringParser.read()": "21.11055649569633",
            "java.lang.String.length() String.java": "3.104493602308284",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.7960733228632777",
            "java.lang.String.substring(int, int) String.java": "9.435225654074195",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.191062304954612",
            "json.JsonPureStringParser.readValue()": "3.6766943839102026",
            "json.JsonPureStringParser.readStringInternal()": "3.559007698332503"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.756246481617807",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.012644524314729",
            "havlak.HavlakLoopFinder.findLoops()": "10.903737063179323",
            "som.Vector.<init>(int)": "3.241241934785434",
            "som.Set.<init>(int)": "2.258260078811762",
            "som.Vector.append(Object)": "4.146278092928594",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "6.809422768804402",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.1267916684709665",
            "som.Vector.removeAll()": "2.5245745463993425",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.21474039752307"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "8.508805797273618",
            "Queens.getRowColumn(int, int)": "67.09037450625166",
            "Queens.queens()": "0.905824002851118",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.2821419025273974",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.267292328710166",
            "java.util.TreeMap$PrivateEntryIterator.nextEntry() TreeMap.java": "0.133646164355083",
            "Queens.setRowColumn(int, int, boolean)": "21.517032461168363",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.3860889192480175",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.20789403344124024",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.2821419025273974"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.906084491957656",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.4489476055822945",
            "richards.TaskControlBlock.runTask()": "33.782415903139224",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.836684582078928",
            "richards.Scheduler.schedule()": "2.667720258347646",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.402404540022334",
            "richards.RBObject.append(Packet, Packet)": "3.288120318428494",
            "Richards.benchmark()": "30.422459788280314",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.6415981505547683",
            "richards.Packet.setLink(Packet)": "2.2660928510321496"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2619424368130694",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.5880340418252579",
            "java.util.HashMap$Node.getKey() HashMap.java": "0.10691528033186506",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1653765556173292",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.09622375229867856",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.12427832185777",
            "som.Random.next()": "16.01590899371339",
            "Storage.benchmark()": "0.1817559765641706",
            "Storage.buildTreeDepth(int, Random)": "35.60278835051107",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.459051447632896"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "30.432681541199624",
            "Towers.popDiskFrom(int)": "29.32475277866176",
            "Towers.moveDisks(int, int, int)": "8.333038671428401",
            "java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(LambdaForm$Name, int) InvokerBytecodeGenerator.java": "0.21215657154980372",
            "Towers.buildTowerAt(int, int)": "0.10607828577490186",
            "Towers$TowersDisk.getSize()": "1.4968824770458375",
            "Towers.moveTopDisk(int, int)": "10.383885529743171",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.17679714295816978",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.200169725257236",
            "com.yourkit.probes.Table.createRow() a": "0.10607828577490186"
        },
        "YourKit_Permute.txt": {
            "java.lang.invoke.MethodType.checkPtypes(Class[]) MethodType.java": "0.22327907651773946",
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.10047558443298275",
            "java.nio.CharBuffer.arrayOffset() CharBuffer.java": "0.10047558443298275",
            "java.nio.LongBuffer.<clinit>() LongBuffer.java": "0.2567709379954004",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c5c00.<clinit>() LambdaForm$MH": "0.11163953825886973",
            "Permute.permute(int)": "55.339719114921735",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.10047558443298275",
            "com.yourkit.probes.Table.createRow() a": "0.2121151226918525",
            "Permute.benchmark()": "0.32375466095072225",
            "Permute.swap(int, int)": "42.702123384017675"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.661497959085091",
            "som.Vector.forEach(ForEachInterface)": "23.331642634591702",
            "som.Dictionary.at(Dictionary$CustomHash)": "6.811100644880808",
            "deltablue.BinaryConstraint.isSatisfied()": "2.6085066299543516",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.540733763253871",
            "som.Vector.<init>(int)": "3.0915634132792316",
            "deltablue.ScaleConstraint.execute()": "3.0432577349467436",
            "deltablue.BinaryConstraint.chooseMethod(int)": "5.144554742409971",
            "deltablue.Strength.weaker(Strength)": "14.20186942975147",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.4394367557906436"
        },
        "YourKit_List.txt": {
            "java.lang.StringConcatHelper.prepend(long, byte[], long, String) StringConcatHelper.java": "0.12058847174210145",
            "List.tail(List$Element, List$Element, List$Element)": "3.1888951416244606",
            "jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry) URLClassPath.java": "0.2411769434842029",
            "List$Element.<init>(Object)": "0.13398719082455718",
            "List.makeList(int)": "0.7905244258648871",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.2545756625666586",
            "List$Element.getNext()": "23.380764798885227",
            "List.isShorterThan(List$Element, List$Element)": "71.16059704692232",
            "com.yourkit.probes.Table.closeRow(int, Throwable) a": "0.12058847174210145",
            "com.yourkit.probes.Table.createRow() a": "0.12058847174210145"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.240785125725064",
            "nbody.Body.getZ()": "5.559416261292564",
            "nbody.Body.getMass()": "0.6949270326615705",
            "nbody.Body.getX()": "1.120392562862532",
            "nbody.Body.setZ(double)": "0.8367488760618911",
            "nbody.NBodySystem.advance(double)": "42.83019670689679",
            "nbody.Body.setVY(double)": "7.998751967778077",
            "nbody.Body.setVZ(double)": "9.360241664421153",
            "nbody.Body.setVX(double)": "26.563231268880035",
            "nbody.Body.setY(double)": "0.55310518926125"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.83258052702254",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "java.lang.invoke.LambdaForm$Name.useCount(LambdaForm$Name) LambdaForm.java": "0.08719764217575557",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.07847787795818001",
            "Run.measure(Benchmark)": "8.719764217575556E-4",
            "Run.printResult(long)": "8.719764217575556E-4",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.0"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.04702108989682",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.165542073890283",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.669097400829072",
            "cd.RedBlackTree.findNode(Comparable)": "9.614511785530576",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.237768162425489",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.178583315682774",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "3.1014554146872824",
            "cd.RedBlackTree.put(Comparable, Object)": "6.717298556688553",
            "cd.Vector2D.compareNumbers(double, double)": "11.187933069079245",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.3269085297588425"
        },
        "YourKit_Sieve.txt": {
            "javax.management.openmbean.OpenType.isAssignableFrom(OpenType) OpenType.java": "0.0409316032909009",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.9033195530268918",
            "java.lang.reflect.Modifier.isPrivate(int) Modifier.java": "0.09209610740452702",
            "Sieve.benchmark()": "90.21325365314557",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.1637264131636036",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1330277106954279",
            "java.util.Arrays$ArrayItr.next() Arrays.java": "0.11256190904997748",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.0409316032909009",
            "Sieve.sieve(boolean[], int)": "7.0402357660349555",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.10232900822725224"
        },
        "YourKit_Bounce.txt": {
            "Bounce.benchmark()": "63.598729180706634",
            "Bounce.lambda$benchmark$0(Random, int)": "1.213054780013478",
            "som.Random.next()": "0.7894483488976605",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.09627418888995858",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.42360643111581775",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.134783864445942",
            "Bounce$Ball.bounce()": "32.097814575912196",
            "jdk.internal.misc.Unsafe.allocateInstance(Class) Unsafe.java (native)": "0.23105805333590057",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.21180321555790887",
            "Bounce$Ball.<init>(Random)": "0.943487051121594"
        }
    },
    "Runtimes": {
        "NBody.data": 103.362,
        "JavaFlightRecorder_Queens.jfr": 110.8985,
        "rebench_test_Async_Bounce.txt": 102.5655,
        "JavaFlightRecorder_Sieve.jfr": 107.30799999999999,
        "Permute.hpl": 105.13550000000001,
        "CD.data": 97.2065,
        "List.data": 153.817,
        "DeltaBlue.hpl": 89.38550000000001,
        "JavaFlightRecorder_Json.jfr": 83.693,
        "Bounce.hpl": 101.61250000000001,
        "NBody.hpl": 101.91900000000001,
        "Towers.hpl": 108.642,
        "Sieve.data": 107.879,
        "Richards.hpl": 92.798,
        "JavaFlightRecorder_Havlak.jfr": 161.368,
        "JavaFlightRecorder_CD.jfr": 97.8955,
        "JavaFlightRecorder_DeltaBlue.jfr": 81.19,
        "rebench_test_Async_Mandelbrot.txt": 86.386,
        "JavaFlightRecorder_Towers.jfr": 109.44399999999999,
        "rebench_test_Async_CD.txt": 95.21799999999999,
        "rebench_test_Async_Permute.txt": 106.382,
        "Mandelbrot.data": 86.636,
        "JavaFlightRecorder_Permute.jfr": 106.5015,
        "rebench_test_Async_NBody.txt": 102.9245,
        "JavaFlightRecorder_Bounce.jfr": 103.092,
        "Havlak.data": 159.8205,
        "Mandelbrot.hpl": 85.893,
        "rebench_test_Async_Towers.txt": 111.69300000000001,
        "JavaFlightRecorder_Storage.jfr": 97.864,
        "List.hpl": 147.552,
        "Queens.hpl": 105.6925,
        "JavaFlightRecorder_NBody.jfr": 104.1275,
        "Storage.data": 120.025,
        "rebench_test_Async_Sieve.txt": 106.8305,
        "JavaFlightRecorder_Richards.jfr": 93.58449999999999,
        "Storage.hpl": 108.38149999999999,
        "rebench_test_Async_List.txt": 152.921,
        "Bounce.data": 102.28800000000001,
        "rebench_test_Async_Richards.txt": 92.16300000000001,
        "Permute.data": 105.585,
        "rebench_test_Async_DeltaBlue.txt": 103.0025,
        "JavaFlightRecorder_Mandelbrot.jfr": 87.9305,
        "JavaFlightRecorder_List.jfr": 151.503,
        "DeltaBlue.data": 84.33449999999999,
        "Queens.data": 110.664,
        "rebench_test_Async_Storage.txt": 111.7465,
        "Json.hpl": 80.37950000000001,
        "Towers.data": 111.212,
        "Havlak.hpl": 157.30200000000002,
        "Richards.data": 97.2285,
        "rebench_test_Async_Havlak.txt": 158.54000000000002,
        "Sieve.hpl": 105.636,
        "CD.hpl": 94.4865,
        "rebench_test_Async_Json.txt": 81.4225,
        "rebench_test_Async_Queens.txt": 104.04150000000001,
        "Json.data": 80.777
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.18%",
            "[.] Interpreter": "0.11%",
            "[.] boolean NBody.innerBenchmarkLoop(int)": "0.27%",
            "asm_sysvec_apic_timer_interrupt": "0.13%",
            "[.] void nbody.NBodySystem.advance(double)": "98.48%"
        },
        "Permute.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.01%",
            "[.] Interpreter": "0.12%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.12%",
            "Matcher::match_tree": "0.01%",
            "[.] void Permute.permute(int)": "99.23%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] void havlak.LoopStructureGraph$$Lambda$12/0x0000000801009f90.apply(java.lang.Object)": "34.16%",
            "[.] int havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)": "6.38%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$3/0x0000000801008a28.apply(java.lang.Object)": "8.53%",
            "[.] void havlak.HavlakLoopFinder$$Lambda$8/0x00000008010096f0.apply(java.lang.Object)": "4.90%",
            "[.] void havlak.HavlakLoopFinder.findLoops()": "21.36%"
        },
        "DeltaBlue.data": {
            "[.] void deltablue.ScaleConstraint.execute()": "6.18%",
            " ": "0",
            "[.] void deltablue.Plan$$Lambda$8/0x000000080100d938.apply(java.lang.Object)": "11.88%",
            "[.] som.Vector deltablue.Planner.removePropagateFrom(deltablue.Variable)": "5.49%",
            "[.] deltablue.AbstractConstraint deltablue.AbstractConstraint.satisfy(int, deltablue.Planner)": "9.09%",
            "[.] void deltablue.Planner.chainTest(int)": "29.89%"
        },
        "Queens.data": {
            " ": "0",
            "[.] boolean Queens.queens()": "2.49%",
            "x86_pmu_disable_all": "0.19%",
            "[.] Interpreter": "0.11%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.16%",
            "[.] boolean Queens.placeQueen(int)": "95.89%"
        },
        "Towers.data": {
            " ": "0",
            "x86_pmu_disable_all": "0.11%",
            "[.] Interpreter": "0.11%",
            "[.] void Towers.moveDisks(int, int, int)": "98.87%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "0.07%",
            "native_apic_msr_eoi_write": "0.04%"
        },
        "Richards.data": {
            "[.] java.lang.Object Richards.benchmark()": "6.50%",
            " ": "0",
            "[.] vtable chunks": "35.07%",
            "[.] boolean richards.Scheduler.start()": "24.02%",
            "[.] richards.TaskControlBlock richards.Scheduler$$Lambda$4/0x0000000801006a28.apply(richards.Packet, richards.RBObject)": "13.08%",
            "[.] void richards.Scheduler.schedule()": "8.25%"
        },
        "Storage.data": {
            " ": "0",
            "[.] java.lang.Object Storage.buildTreeDepth(int, som.Random)": "8.05%",
            "x86_pmu_disable_all": "0.12%",
            "[.] Interpreter": "0.13%",
            "clear_page_rep": "0.11%",
            "[.] void java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)": "88.82%"
        },
        "CD.data": {
            " ": "0",
            "[.] cd.RedBlackTree$InsertResult cd.RedBlackTree.treeInsert(java.lang.Comparable, java.lang.Object)": "24.82%",
            "[.] void cd.RedBlackTree.forEach(som.ForEachInterface)": "20.11%",
            "[.] boolean cd.CollisionDetector.isInVoxel(cd.Vector2D, cd.Motion)": "13.86%",
            "[.] java.lang.Object cd.RedBlackTree.put(java.lang.Comparable, java.lang.Object)": "11.27%",
            "[.] void cd.CollisionDetector$$Lambda$5/0x000000080100c450.apply(java.lang.Object)": "9.72%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] Interpreter": "0.15%",
            "[.] int Mandelbrot.mandelbrot(int)": "0.44%"
        },
        "List.data": {
            " ": "0",
            "[.] List$Element List.tail(List$Element, List$Element, List$Element)": "98.02%",
            "[.] Interpreter": "0.10%",
            "[.] java.lang.Object List.benchmark()": "0.59%",
            "[.] List$Element List.makeList(int)": "0.61%",
            "[.] int List$Element.length()": "0.08%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "94.61%",
            "[.] java.lang.Object Sieve.benchmark()": "1.95%",
            "clear_page_rep": "0.07%",
            "[.] int Sieve.sieve(boolean[], int)": "1.99%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] Interpreter": "0.14%",
            "[.] boolean Benchmark.innerBenchmarkLoop(int)": "93.34%",
            "clear_page_rep": "0.07%",
            "[.] boolean Bounce$Ball.bounce()": "0.02%",
            "[.] java.lang.Object Bounce.benchmark()": "5.44%"
        },
        "Json.data": {
            "[.] java.lang.String json.JsonPureStringParser.readStringInternal()": "32.80%",
            " ": "0",
            "[.] json.JsonValue json.JsonPureStringParser.readNull()": "4.56%",
            "[.] StubRoutines (2)": "8.30%",
            "[.] json.JsonArray json.JsonPureStringParser.readArray()": "19.82%",
            "[.] json.JsonValue json.JsonPureStringParser.readValue()": "19.56%"
        }
    }
}