{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "jdk.internal.misc.Unsafe.allocateUninitializedArray0(Ljava/lang/Class;I)Ljava/lang/Object;": "0.08710801393728224",
            "Mandelbrot.mandelbrot(I)I": "99.82578397212544",
            "java.lang.invoke.MethodHandles$Lookup.resolveOrFail(BLjava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.08710801393728224"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4629629629629629",
            " ": "0",
            "Queens.placeQueen(I)Z": "9.876543209876543",
            "Queens.getRowColumn(II)Z": "67.90123456790123",
            "java.util.Arrays.fill([ZZ)V": "0.30864197530864196",
            "Queens.setRowColumn(IIZ)V": "20.98765432098765",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15432098765432098",
            "Queens.queens()Z": "0.30864197530864196"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.15174506828528073",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.30349013657056145",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.6069802731411229",
            "Bounce$Ball.bounce()Z": "78.60394537177541",
            "Bounce.benchmark()Ljava/lang/Object;": "16.99544764795144",
            "som.Random.next()I": "1.2139605462822458",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.12443095599393"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.780013413816231",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.72121618600492",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.355242566510173",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.2803487592219986",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "15.135255980326404",
            "som.Dictionary.atPut(Lsom/Dictionary$CustomHash;Ljava/lang/Object;)V": "2.5486250838363516",
            "havlak.HavlakLoopFinder.findLoops()V": "4.6054102392130565",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "3.8900067069081157",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.5262687234518224",
            "som.Vector.append(Ljava/lang/Object;)V": "2.3027051196065282"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "14.297872340425531",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "4.085106382978723",
            "cd.RedBlackTree.rightRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.0425531914893615",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "3.0638297872340425",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.9361702127659575",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.70212765957447",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "5.276595744680851",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.574468085106383",
            "cd.Vector2D.compareNumbers(DD)I": "4.680851063829787",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "15.23404255319149"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.07784431137723",
            " ": "0",
            "List$Element.getNext()LList$Element;": "10.029940119760479",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.5449101796407185",
            "List.makeList(I)LList$Element;": "1.3473053892215567"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "23.322683706070286",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "7.348242811501597",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "21.08626198083067",
            "deltablue.ScaleConstraint.execute()V": "2.5559105431309903",
            "deltablue.Planner.chainTest(I)V": "4.472843450479233",
            "deltablue.EqualityConstraint.execute()V": "3.5143769968051117",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "5.431309904153355",
            "som.Vector.<init>(I)V": "3.8338658146964857",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "6.070287539936102",
            "som.Vector.append(Ljava/lang/Object;)V": "2.8753993610223643"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.48455481526347666",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.7874015748031495",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;JLjava/lang/Object;)J": "0.06056935190793458",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.06056935190793458",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "34.34282253179891",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.3325257419745609",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "2.6650514839491217",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.24530587522713",
            "som.Random.next()I": "14.41550575408843",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.5451241671714112"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.10548523206751055",
            "Sieve.benchmark()Ljava/lang/Object;": "5.379746835443038",
            "java.util.Arrays.fill([ZZ)V": "5.063291139240507",
            "Sieve.sieve([ZI)I": "89.34599156118144",
            "java.lang.String.getBytes([BIB)V": "0.10548523206751055"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.util.zip.ZipUtils.SH([BI)I": "0.13966480446927373",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "15.363128491620111",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "5.865921787709497",
            "Towers.moveDisks(III)V": "3.072625698324022",
            "Towers$TowersDisk.getSize()I": "10.055865921787708",
            "Towers.benchmark()Ljava/lang/Object;": "0.13966480446927373",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "40.642458100558656",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "20.810055865921786",
            "Towers.moveTopDisk(II)V": "3.9106145251396645"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.41287284144427",
            "nbody.Body.getMass()D": "0.7849293563579278",
            "nbody.Body.setVX(D)V": "27.94348508634223",
            "nbody.NBodySystem.advance(D)V": "43.956043956043956",
            "nbody.Body.getVX()D": "0.3139717425431711",
            "nbody.Body.getY()D": "0.3139717425431711",
            "nbody.Body.getZ()D": "10.361067503924646",
            "nbody.Body.setVZ(D)V": "8.006279434850864",
            "nbody.Body.setVY(D)V": "5.180533751962323",
            "nbody.Body.setX(D)V": "1.098901098901099"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.152394775036284",
            "richards.Scheduler.createPacket(Lrichards/Packet;II)Lrichards/Packet;": "3.7010159651669086",
            "richards.Scheduler.schedule()V": "10.2322206095791",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.989840348330913",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "4.499274310595065",
            "Richards.benchmark()Ljava/lang/Object;": "10.014513788098693",
            "richards.Packet.setLink(Lrichards/Packet;)V": "5.805515239477503",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.354136429608127",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.716981132075471",
            "richards.RBObject.<init>()V": "11.46589259796807"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.822843822843823",
            "json.JsonPureStringParser.isWhiteSpace()Z": "2.843822843822844",
            "json.JsonPureStringParser.isDigit()Z": "3.3100233100233103",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "24.102564102564106",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.407925407925409",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.76923076923077",
            "java.lang.String.<init>([BB)V": "5.967365967365968",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.755244755244756",
            "json.JsonPureStringParser.read()V": "11.561771561771563",
            "java.util.Arrays.copyOfRange([BII)[B": "6.060606060606061"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.11990407673860912",
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.11990407673860912",
            "Permute.swap(II)V": "45.08393285371703",
            "Permute.permute(I)V": "54.436450839328536",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.11990407673860912",
            "Permute.benchmark()Ljava/lang/Object;": "0.11990407673860912"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.TaskControlBlock::runTask": "2.0",
            "richards.Packet::<init>": "7.0",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "46.1",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "6.1",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.ByteVector::put122": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.6",
            "Run::measure": "0.0",
            "java.lang.invoke.BoundMethodHandle$Species_L::copyWith": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.1",
            "List::makeList": "0.7",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "List::tail": "1.9",
            "List::isShorterThan": "81.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.5",
            "Run::measure": "0.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.4",
            "json.JsonPureStringParser::read": "16.3",
            "java.lang.String::<init>": "5.4",
            "java.lang.String::length": "3.2",
            "java.util.Arrays::copyOfRange": "7.2",
            "java.lang.String::equals": "21.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "AGCT::Unknown Java[ERR=-5]": "9.6",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.3"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "33.8",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.2",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "8.6",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "6.4",
            "som.Vector::hasSome": "1.9",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "40.1",
            "Permute::permute": "50.6",
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "6.0",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "57.8",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "12.7",
            "Queens::setRowColumn": "23.2",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.1"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.2",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "40.2",
            "java.util.Arrays::setAll": "35.0",
            "som.Random::next": "11.3",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.8"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.8",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.1",
            "jdk.internal.org.objectweb.asm.Frame::execute": "0.0",
            "Sieve::sieve": "85.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "jdk.internal.org.objectweb.asm.AnnotationWriter::<init>": "0.0",
            "java.io.PrintStream::println": "0.0",
            "java.util.Arrays::fill": "5.3"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "5.5",
            "deltablue.AbstractConstraint::addConstraint": "3.3",
            "deltablue.Planner::addPropagate": "3.2",
            "deltablue.Variable::<init>": "4.3",
            "som.Vector::append": "3.7",
            "AGCT::Unknown not Java[ERR=-3]": "13.5",
            "deltablue.AbstractConstraint::satisfy": "15.2",
            "AGCT::Unknown Java[ERR=-5]": "13.7",
            "som.Vector::forEach": "6.8",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.4"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.6",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "76.0",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.3",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "som.Random::next": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "8.1",
            "nbody.Body::getZ": "7.6",
            "nbody.Body::setVX": "28.7",
            "nbody.Body::setVY": "6.0",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "nbody.NBodySystem::advance": "39.7"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.1",
            "Towers::popDiskFrom": "23.4",
            "Towers::moveDisks": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "Towers::pushDisk": "33.5",
            "Towers$TowersDisk::setNext": "14.0",
            "AGCT::Unknown Java[ERR=-5]": "3.6",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.9",
            "Towers$TowersDisk::getNext": "3.1"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.1",
            "cd.RedBlackTree::forEach": "3.9",
            "cd.RedBlackTree::put": "6.9",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "10.8",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "cd.Vector2D::compareNumbers": "4.7",
            "cd.CollisionDetector::isInVoxel": "21.1",
            "cd.RedBlackTree::treeInsert": "14.3"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.09%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "1.98%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "6.01%",
            "som.Vector.append": "3.19%",
            "som.Vector.<init>": "1.89%",
            "som.Vector.forEach": "6.09%",
            "itable": "4.65%",
            "deltablue.Planner.addPropagate": "2.80%",
            "som.Dictionary.hash": "3.57%",
            "deltablue.Variable.setDeterminedBy": "9.54%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.18%",
            "som.Random.next": "0.90%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.68%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.79%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.78%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.46%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "__futex_abstimed_wait_common": "0.03%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "__condvar_dec_grefs": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.55%",
            "java.util.Arrays.setAll": "35.47%",
            "Storage.lambda$buildTreeDepth$0": "4.08%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.55%",
            "SpinPause": "0.21%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.56%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.37%",
            "Storage.buildTreeDepth": "43.25%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.16%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.33%",
            "Towers.popDiskFrom": "20.14%",
            "Towers.moveDisks": "8.26%",
            "Interpreter": "0.06%",
            "Towers.pushDisk": "34.39%",
            "Towers.moveTopDisk": "4.32%",
            "Towers$TowersDisk.getSize": "10.51%",
            "Towers$TowersDisk.getNext": "3.81%",
            "Towers.benchmark": "0.13%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.19%",
            "cd.CollisionDetector.isInVoxel": "19.38%",
            "cd.RedBlackTree.forEach": "6.37%",
            "Node::set_req_X(unsigned": "2.24%",
            "cd.RedBlackTree.put": "6.65%",
            "cd.RedBlackTree.treeInsert": "12.07%",
            "cd.RedBlackTree.treeMinimum": "5.29%",
            "cd.RedBlackTree.findNode": "2.79%",
            "cd.Vector2D.compareNumbers": "3.95%",
            "cd.RedBlackTree.leftRotate": "2.17%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.16%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.11%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "12.11%",
            "som.Vector.append": "3.98%",
            "som.Vector.forEach": "2.08%",
            "som.IdentitySet.lambda$contains$0": "31.16%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.58%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.33%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.84%",
            "havlak.HavlakLoopFinder.doDFS": "5.59%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "10.21%",
            "Sieve.benchmark": "7.04%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "79.60%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.33%",
            "Permute.swap": "40.16%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "__tls_get_addr": "0.03%",
            "g1_post_barrier_slow": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.33%",
            "nbody.Body.getZ": "8.00%",
            "nbody.Body.getY": "0.77%",
            "nbody.Body.setX": "1.54%",
            "nbody.Body.setY": "1.55%",
            "nbody.Body.setZ": "0.35%",
            "nbody.Body.setVX": "28.62%",
            "nbody.Body.setVY": "6.03%",
            "nbody.Body.getMass": "0.59%",
            "nbody.NBodySystem.advance": "39.90%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.27%",
            "Interpreter": "0.05%",
            "List.makeList": "1.26%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.39%",
            "List$Element.length": "0.15%",
            "List.verifyResult": "0.10%",
            "List.isShorterThan": "81.47%",
            "List$Element.<init>": "0.17%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.47%",
            "java.lang.String.length": "3.46%",
            "java.lang.String.<init>": "6.16%",
            "json.JsonPureStringParser.isWhiteSpace": "2.19%",
            "java.lang.String.isLatin1": "2.95%",
            "json.JsonPureStringParser.readStringInternal": "6.31%",
            "java.util.Arrays.copyOfRange": "7.87%",
            "java.lang.String.equals": "21.15%",
            "json.JsonPureStringParser.read": "16.25%",
            "json.JsonPureStringParser.readValue": "2.40%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.07%",
            "Queens.getRowColumn": "67.93%",
            "Queens.setRowColumn": "18.02%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.65%",
            "Queens.placeQueen": "8.76%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.25%",
            "Richards.benchmark": "4.79%",
            "richards.Packet.<init>": "6.45%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.76%",
            "itable": "37.76%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.39%",
            "richards.TaskControlBlock.<init>": "3.06%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.31%",
            "richards.RBObject.<init>": "5.85%",
            "richards.RBObject.append": "2.51%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "5.7",
            "Towers.moveDisks": "92.7",
            "Towers.moveTopDisk": "0.2",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Towers.buildTowerAt": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "6.4",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.3",
            "java.lang.Integer.valueOf": "0.8",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.0",
            "deltablue.AbstractConstraint.satisfy": "10.8",
            "deltablue.Planner.removePropagateFrom": "9.3",
            "som.Vector.<init>": "27.9",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "7.2",
            "deltablue.Planner.addPropagate": "1.8",
            "deltablue.Planner.constraintsConsuming": "4.7",
            "deltablue.AbstractConstraint.<init>": "3.8",
            "deltablue.Planner.addConstraintsConsumingTo": "21.1"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.4",
            "havlak.UnionFindNode.<init>": "3.4",
            "som.Vector.<init>": "42.2",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.5",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.8",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.createHandler": "0.0",
            "richards.Scheduler.schedule": "14.5",
            "richards.Packet.<init>": "0.1",
            "richards.HandlerTaskDataRecord.workInAdd": "3.1",
            "Run.runBenchmark": "0.0",
            "richards.Scheduler.queuePacket": "0.0",
            "richards.TaskControlBlock.runTask": "81.2",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.util.Arrays.setAll": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "53.2",
            "Bounce$Ball.<init>": "45.6",
            "Bounce.lambda$benchmark$0": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "43.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.4",
            "cd.RedBlackTree$Node.<init>": "7.9",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.9",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.4",
            "List$Element.length": "0.1",
            "Run.printTotal": "0.1",
            "List.isShorterThan": "72.4",
            "List$Element.<init>": "24.2",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "100.0",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "1.0",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.8",
            "java.lang.String.substring": "90.7",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.5",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "30.0",
            "Queens.placeQueen": "69.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Queens.benchmark": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "24.783977207782797",
            "java.lang.String.<init>(byte[], byte) String.java": "6.917847363796885",
            "json.JsonPureStringParser.isWhiteSpace()": "2.030145095664191",
            "json.JsonPureStringParser.read()": "20.11379048561412",
            "java.lang.String.length() String.java": "3.040952632791109",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.9684474508031022",
            "json.JsonArray.<init>()": "2.077060213421136",
            "java.lang.String.substring(int, int) String.java": "9.220953144592395",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.858137213924409",
            "json.JsonPureStringParser.readStringInternal()": "3.7574744312608233"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.6948267658351224",
            "som.Vector.hasSome(TestInterface)": "2.111568897883827",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.481617510015153",
            "havlak.HavlakLoopFinder.findLoops()": "11.110404574846678",
            "som.Vector.<init>(int)": "3.205725574980431",
            "som.Vector.append(Object)": "3.5762916640171563",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "8.194115235090198",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.319616540842304",
            "som.Vector.removeAll()": "2.556686744478237",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.51926834028054"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.27216690374585",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.6638217164532955",
            "Queens.getRowColumn(int, int)": "61.40350877192983",
            "Queens.queens()": "0.632211158526948",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.1422475106685633",
            "Benchmark.innerBenchmarkLoop(int)": "0.1422475106685633",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0",
            "Queens.setRowColumn(int, int, boolean)": "22.364469732890786",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3793266951161688"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.0586180308639044",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.7248120795313775",
            "richards.TaskControlBlock.runTask()": "38.74980358337018",
            "richards.Scheduler.schedule()": "2.4702817071254475",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.4836307294274136",
            "richards.Scheduler$$Lambda$9.0x00000008000c7978.apply(Packet, RBObject)": "3.5702148341147364",
            "richards.RBObject.append(Packet, Packet)": "2.7772397890759466",
            "Richards.benchmark()": "27.20598714430319",
            "richards.Scheduler$$Lambda$10.0x00000008000c7ba0.apply(Packet, RBObject)": "3.9904550653564916",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.4872849923077767"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2628766708384052",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1143684959454134",
            "java.lang.StringLatin1.trim(byte[]) StringLatin1.java": "0.09715007400549759",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.31156600204588",
            "som.Random.next()": "14.252487327630059",
            "Storage.buildTreeDepth(int, Random)": "39.50579185882381",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.9602199020498676",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.1028647842411151",
            "Storage$$Lambda$8.0x00000008000c2a98.apply(int)": "0.5143239212055755",
            "Storage$$Lambda$8.0x00000008000c2a98.<init>(Storage, int, Random)": "0.3371679039014328"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "34.913567631351654",
            "Towers.pushDisk(Towers$TowersDisk, int)": "29.244674768560763",
            "Towers.moveDisks(int, int, int)": "8.199214140603143",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.21897011057990587",
            "Towers$TowersDisk.getSize()": "2.724961376105495",
            "Towers.moveTopDisk(int, int)": "8.041069060739876",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "15.948323053903144",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.20680510443657776",
            "Towers.benchmark()": "0.10948505528995293",
            "java.util.zip.ZipFile.<init>(File, int, Charset) ZipFile.java": "0.14598007371993724"
        },
        "YourKit_Permute.txt": {
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.15806171180833886",
            "com.yourkit.probes.builtin.Processes$FileOutputStream_write_arrayRange_Probe.onExit(int, Throwable) a": "0.10161110044821783",
            "javax.management.ObjectName$Property.<init>(int, int, int) ObjectName.java": "0.04516048908809682",
            "java.util.zip.ZipFile$Source.readAt(byte[], int, int, long) ZipFile.java": "0.23709256771250828",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.12419134499226626",
            "Permute.permute(int)": "56.811895272825794",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.09032097817619364",
            "com.yourkit.probes.Table.createRow() a": "0.21451232316845986",
            "Permute.benchmark()": "0.21451232316845986",
            "Permute.swap(int, int)": "41.908933873753845"
        },
        "YourKit_DeltaBlue.txt": {
            "som.Vector.forEach(ForEachInterface)": "34.58162521063354",
            "deltablue.Variable.setValue(int)": "4.778551847287544",
            "deltablue.EqualityConstraint.execute()": "2.892281381252987",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "5.180956213374916",
            "som.Vector.<init>(int)": "3.521038203264506",
            "deltablue.ScaleConstraint.execute()": "3.3198360202208197",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "4.099494479515103",
            "som.Vector.append(Object)": "2.4395764694046935",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.457609215059985",
            "deltablue.Planner.lambda$addConstraintsConsumingTo$2(AbstractConstraint, Vector, AbstractConstraint)": "2.4395764694046935"
        },
        "YourKit_List.txt": {
            "java.lang.invoke.LambdaForm$MH.0x00000008000c3400.invoke(Object, long, Object, Object) LambdaForm$MH": "0.11850993508289111",
            "List.tail(List$Element, List$Element, List$Element)": "5.003752814610958",
            "List$Element.<init>(Object)": "0.23701987016578221",
            "List.makeList(int)": "0.5135430520258615",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(int, int) MethodWriter.java": "0.10534216451812542",
            "List$Element.getNext()": "25.769326995246434",
            "List$Element.length()": "0.14484547621242247",
            "List.isShorterThan(List$Element, List$Element)": "67.48482414442411",
            "com.yourkit.probes.ReflectionUtilImpl.callMethod0(Class, Object, String, CallStatus) a": "0.18434878790671952",
            "com.yourkit.probes.Table.createRow() a": "0.11850993508289111"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.8416736209029956",
            "nbody.Body.getZ()": "7.237201807142241",
            "nbody.Body.getX()": "0.5611349313688815",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.31653765359270236",
            "nbody.Body.setZ(double)": "0.5899110816954908",
            "nbody.NBodySystem.advance(double)": "43.5958677448131",
            "nbody.Body.setVY(double)": "4.57540790193088",
            "nbody.Body.setVZ(double)": "7.222813731978936",
            "nbody.Body.setVX(double)": "31.768869960576673",
            "nbody.Body.setY(double)": "0.992777186268021"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.37090432503275",
            "sun.nio.fs.UnixFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.05242463958060288",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.2621231979030144",
            "java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes() InvokerBytecodeGenerator.java": "0.235910878112713",
            "sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "java.io.BufferedWriter.ensureOpen() BufferedWriter.java": "0.07863695937090433",
            "jdk.internal.loader.URLClassPath.getResource(String, boolean) URLClassPath.java": "0.0",
            "sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java": "0.0"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.638142407288514",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.869577180592497",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.813690421596501",
            "cd.RedBlackTree.findNode(Comparable)": "7.138708000856034",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.016417499770705",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.378275092482191",
            "cd.RedBlackTree$Node.successor()": "1.6814943899232628",
            "cd.RedBlackTree.put(Comparable, Object)": "6.473753401204561",
            "cd.Vector2D.compareNumbers(double, double)": "9.454584365159437",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.601180103335474"
        },
        "YourKit_Sieve.txt": {
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, long) DirectMethodHandle$Holder": "0.10101803733177689",
            "java.util.HashMap$HashIterator.nextNode() HashMap.java": "0.05612113185098716",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.683633955529615",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.15713916918276408",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.05612113185098716",
            "com.yourkit.probes.ProbeConstants.shouldIgnoreRow(int) a": "0.10101803733177689",
            "Sieve.benchmark()": "88.27854040160281",
            "com.yourkit.probes.Table.createRow() a": "0.15713916918276408",
            "Sieve.sieve(boolean[], int)": "9.10284758623012",
            "java.lang.Integer.valueOf(int) Integer.java": "0.10101803733177689"
        },
        "YourKit_Bounce.txt": {
            "java.lang.ClassLoader.definePackage(String, String, String, String, String, String, String, URL) ClassLoader.java": "0.3277234784955564",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.3277234784955564",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.2120563684383012",
            "Bounce.benchmark()": "64.06030112004318",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.5590576986100668",
            "Bounce.lambda$benchmark$0(Random, int)": "0.26988992346692875",
            "som.Random.next()": "0.1735006650858828",
            "java.security.SecureClassLoader.getPermissions(CodeSource) SecureClassLoader.java": "0.19277851676209198",
            "Bounce$Ball.bounce()": "31.673510304011714",
            "Bounce$Ball.<init>(Random)": "1.4265610240394808"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.878500000000003,
        "JavaFlightRecorder_Bounce.jfr": 23.936500000000002,
        "rebench_test_Async_Bounce.txt": 65.964,
        "Mandelbrot.hpl": 38.427499999999995,
        "JavaFlightRecorder_Storage.jfr": 57.775999999999996,
        "List.hpl": 23.4895,
        "rebench_test_Async_Towers.txt": 77.7965,
        "JavaFlightRecorder_Sieve.jfr": 31.683999999999997,
        "Permute.hpl": 29.745,
        "Queens.hpl": 21.298000000000002,
        "JavaFlightRecorder_NBody.jfr": 21.371,
        "rebench_test_Async_Sieve.txt": 99.417,
        "JavaFlightRecorder_Richards.jfr": 90.2295,
        "Storage.hpl": 59.2305,
        "DeltaBlue.hpl": 12.1775,
        "NBody.hpl": 21.0825,
        "Towers.hpl": 26.104,
        "JavaFlightRecorder_Json.jfr": 82.095,
        "Bounce.hpl": 26.166,
        "rebench_test_Async_List.txt": 71.495,
        "rebench_test_Async_Richards.txt": 271.959,
        "rebench_test_Async_DeltaBlue.txt": 36.704,
        "Richards.hpl": 91.75200000000001,
        "JavaFlightRecorder_Mandelbrot.jfr": 38.1085,
        "JavaFlightRecorder_Havlak.jfr": 160.12349999999998,
        "JavaFlightRecorder_List.jfr": 22.8915,
        "JavaFlightRecorder_CD.jfr": 41.7105,
        "rebench_test_Async_Storage.txt": 174.987,
        "rebench_test_Async_Mandelbrot.txt": 117.912,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.1455,
        "JavaFlightRecorder_Towers.jfr": 25.541,
        "Json.hpl": 79.427,
        "Havlak.hpl": 159.7135,
        "rebench_test_Async_CD.txt": 145.4765,
        "rebench_test_Async_Havlak.txt": 515.5995,
        "Sieve.hpl": 30.3515,
        "rebench_test_Async_Permute.txt": 87.79750000000001,
        "JavaFlightRecorder_Permute.jfr": 29.875,
        "rebench_test_Async_NBody.txt": 59.8585,
        "CD.hpl": 42.5065,
        "rebench_test_Async_Json.txt": 291.452,
        "rebench_test_Async_Queens.txt": 63.661
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007fd9b8ad5cfd": "18.59%",
            "[.] 0x00007fd9b8ad5d01": "4.47%",
            "[.] 0x00007fd9b8ad5d10": "5.19%",
            "[.] 0x00007fd9b8ad5cf5": "23.35%",
            "[.] 0x00007fd9b8ad5cf9": "4.81%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007f9cc8ad3554": "11.03%",
            "[.] 0x00007f9cc8ad3610": "25.76%",
            "[.] 0x00007f9cc8ad367c": "19.75%",
            "[.] 0x00007f9cc8ad34dc": "13.97%",
            "[.] 0x00007f9cc8ad3716": "2.56%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007f5678b04fd3": "1.59%",
            "[.] 0x00007f5678b316f5": "16.80%",
            "[.] 0x00007f5678ae0e43": "1.34%",
            "[.] 0x00007f5678b316fc": "16.66%",
            "[.] 0x00007f5678b1e380": "1.36%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007f4e50afc6c0": "1.64%",
            "[.] 0x00007f4e50b33b15": "3.66%",
            "[.] 0x00007f4e50b33bb5": "6.44%",
            "[.] 0x00007f4e50afc750": "3.78%",
            "[.] 0x00007f4e50b33ba4": "3.02%"
        },
        "Queens.data": {
            "[.] 0x00007f22b4ad3a2d": "26.52%",
            " ": "0",
            "[.] 0x00007f22b4ad3a1e": "6.94%",
            "[.] 0x00007f22b4ad38ed": "3.15%",
            "[.] 0x00007f22b4ad39ff": "3.42%",
            "[.] 0x00007f22b4ad3a96": "4.39%"
        },
        "Towers.data": {
            "[.] 0x00007fda94ad4f23": "3.99%",
            " ": "0",
            "[.] 0x00007fda94ad4ac6": "3.61%",
            "[.] 0x00007fda94ad4f02": "11.16%",
            "[.] 0x00007fda94ad4f85": "6.69%",
            "[.] 0x00007fda94ad4efd": "3.41%"
        },
        "Richards.data": {
            "[.] 0x00007f1928af1eba": "6.05%",
            " ": "0",
            "[.] 0x00007f1928646eba": "10.08%",
            "[.] 0x00007f1928646e9b": "4.71%",
            "[.] 0x00007f1928646eaf": "8.13%",
            "[.] 0x00007f1928646f1c": "6.70%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f30d8ad5dea": "5.98%",
            "[.] 0x00007f30d8ad5da6": "6.93%",
            "[.] 0x00007f30d8ad5e59": "4.94%",
            "[.] 0x00007f30d8ad5e3d": "4.64%",
            "[.] 0x00007f30d8ad5d22": "4.50%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007f0094b0c1e8": "5.00%",
            "[.] 0x00007f0094b0c200": "3.60%",
            "[.] 0x00007f0094adb348": "2.17%",
            "[.] 0x00007f0094b2323a": "2.86%",
            "[.] 0x00007f0094adb319": "2.33%"
        },
        "Mandelbrot.data": {
            "[.] 0x00007f5fa0ad7bd5": "4.94%",
            " ": "0",
            "[.] 0x00007f5fa0ad7b97": "6.16%",
            "[.] 0x00007f5fa0ad7b65": "6.30%",
            "[.] 0x00007f5fa0ad7b33": "5.44%",
            "[.] 0x00007f5fa0ad7bc9": "5.86%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007fbcfcad45f5": "5.25%",
            "[.] 0x00007fbcfcad44c5": "11.53%",
            "[.] 0x00007fbcfcad44b5": "25.06%",
            "[.] 0x00007fbcfcad46d5": "5.93%",
            "[.] 0x00007fbcfcad4605": "4.86%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f3980ad8a55": "3.33%",
            "[.] 0x00007f3980adaa38": "21.62%",
            "[.] 0x00007f3980adaa8c": "13.83%",
            "[.] 0x00007f3980adaa82": "3.81%",
            "[.] 0x00007f3980adaa8e": "25.94%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007f5bb0adc4d4": "16.32%",
            "[.] 0x00007f5bb0adc4c2": "9.55%",
            "[.] 0x00007f5bb0ad59e2": "8.44%",
            "[.] 0x00007f5bb0ad59ef": "5.32%",
            "[.] 0x00007f5bb0adc4c7": "26.26%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007fe00cadbaf4": "1.59%",
            "[.] 0x00007fe00cadbb96": "0.98%",
            "[.] 0x00007fe00cadbc8b": "1.12%",
            "[.] 0x00007fe00cadbcaa": "2.63%",
            "[.] 0x00007fe00cadba66": "1.46%"
        }
    }
}