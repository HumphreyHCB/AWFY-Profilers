{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.15847860538827258",
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.15847860538827258",
            "Queens.placeQueen(I)Z": "7.448494453248811",
            "Queens.getRowColumn(II)Z": "69.57210776545166",
            "java.util.Arrays.fill([ZZ)V": "0.31695721077654515",
            "Queens.setRowColumn(IIZ)V": "21.236133122028527",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15847860538827258",
            "Queens.queens()Z": "0.9508716323296355"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.6934812760055478",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.8321775312066574",
            "Bounce$Ball.bounce()Z": "77.80859916782246",
            "Bounce.benchmark()Ljava/lang/Object;": "17.891816920943135",
            "som.Random.next()I": "0.8321775312066574",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.13869625520110956",
            "Bounce$Ball.<init>(Lsom/Random;)V": "1.8030513176144243"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.4096609382257315",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "39.13144449605202",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.270320483046912",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.237343241987924",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.763585694379935",
            "havlak.HavlakLoopFinder$$Lambda$80+0x000000080100f7a8.331418503.apply(Ljava/lang/Object;)V": "2.2758941012540643",
            "havlak.HavlakLoopFinder.findLoops()V": "6.758012076172783",
            "som.Vector.<init>(I)V": "2.601021830004645",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.226660473757548",
            "som.Vector.append(Ljava/lang/Object;)V": "4.784022294472829"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "16.708229426433917",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "2.743142144638404",
            "cd.RedBlackTree.rightRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.4106400665004157",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.57689110556941",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.987531172069826",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.685785536159603",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.655029093931837",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.647547797173733",
            "cd.Vector2D.compareNumbers(DD)I": "4.8212801330008315",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "16.37572734829593"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.09794628751975",
            " ": "0",
            "List$Element.getNext()LList$Element;": "9.95260663507109",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.843601895734597",
            "List.makeList(I)LList$Element;": "1.1058451816745656"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.0",
            "deltablue.UnaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "8.615384615384617",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "5.538461538461538",
            "deltablue.UnaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "18.461538461538463",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "12.923076923076923",
            "deltablue.ScaleConstraint.execute()V": "12.307692307692308",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "3.076923076923077",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "4.0",
            "deltablue.Variable.getValue()I": "4.307692307692308",
            "som.Vector.append(Ljava/lang/Object;)V": "3.6923076923076925"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.42735042735042733",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.18315018315018314",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.06105006105006105",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "35.775335775335776",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.5262515262515262",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "4.517704517704518",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "43.894993894993895",
            "som.Random.next()I": "12.759462759462759",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.06105006105006105",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.7936507936507936"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.MethodHandles$Lookup.lookupClassOrNull()Ljava/lang/Class;": "0.10471204188481675",
            "Sieve.benchmark()Ljava/lang/Object;": "6.596858638743456",
            "java.util.Arrays.fill([ZZ)V": "3.769633507853403",
            "Sieve.sieve([ZI)I": "89.31937172774869",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.2094240837696335"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.622691292875988",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.6939313984168867",
            "java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(Ljava/lang/invoke/LambdaForm$BasicType;)I": "0.13192612137203166",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.13192612137203166",
            "Towers.moveDisks(III)V": "4.353562005277045",
            "Towers$TowersDisk.getSize()I": "11.609498680738787",
            "Towers.benchmark()Ljava/lang/Object;": "0.2638522427440633",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "36.93931398416886",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "22.559366754617415",
            "Towers.moveTopDisk(II)V": "3.5620052770448547"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.8957345971563981",
            "nbody.Body.setVX(D)V": "27.014218009478675",
            "nbody.NBodySystem.advance(D)V": "41.864139020537124",
            "nbody.Body.setZ(D)V": "0.631911532385466",
            "NBody.innerBenchmarkLoop(I)Z": "0.7898894154818326",
            "nbody.Body.getY()D": "0.7898894154818326",
            "nbody.Body.getZ()D": "8.688783570300158",
            "nbody.Body.setVZ(D)V": "9.95260663507109",
            "nbody.Body.setVY(D)V": "5.529225908372828",
            "nbody.Body.setX(D)V": "1.5797788309636651"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.577240940877305",
            "richards.Scheduler.schedule()V": "10.998092816274635",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "14.49459631277813",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "5.5308328035600764",
            "Richards.benchmark()Ljava/lang/Object;": "9.281627463445645",
            "richards.Packet.setLink(Lrichards/Packet;)V": "5.08582326764145",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.877940241576605",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.657978385251113",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.6872218690400507",
            "richards.RBObject.<init>()V": "12.015257469802924"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "2.532250358337315",
            "java.lang.String.isLatin1()Z": "3.487816531294792",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "4.061156235069278",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "32.632584806497846",
            "java.lang.String.<init>([BB)V": "6.6411849020544675",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.7744863831820354",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.388915432393693",
            "json.JsonPureStringParser.read()V": "15.33683707596751",
            "java.util.Arrays.copyOfRange([BII)[B": "9.89010989010989",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "2.150023889154324"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "41.44578313253012",
            "Permute.permute(I)V": "58.31325301204819",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12048192771084337",
            "Permute.benchmark()Ljava/lang/Object;": "0.12048192771084337"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.5",
            "richards.Packet::setLink": "2.3",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "AGCT::Unknown Java[ERR=-5]": "45.5",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.4",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "java.lang.reflect.Modifier::isStatic": "0.0",
            "java.lang.invoke.ClassSpecializer$Factory::loadSpecies": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.1",
            "java.lang.invoke.LambdaFormBuffer::clearDuplicatesAndNulls": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.3"
        },
        "List.hpl": {
            "List$Element::getNext": "8.6",
            "List::makeList": "0.9",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "List::tail": "2.1",
            "List::isShorterThan": "80.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.2",
            "json.JsonPureStringParser::read": "14.0",
            "java.lang.String::<init>": "4.6",
            "java.lang.String::length": "3.6",
            "java.util.Arrays::copyOfRange": "8.5",
            "java.lang.String::equals": "22.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "10.0",
            "java.lang.String::isLatin1": "2.7",
            "json.JsonPureStringParser::readStringInternal": "9.4"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.1",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.0",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.6",
            "havlak.HavlakLoopFinder::doDFS": "5.5",
            "som.Vector::hasSome": "2.3",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "40.0",
            "Permute::permute": "50.4",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "6.0",
            "jdk.internal.org.objectweb.asm.ByteVector::putUTF8": "0.0",
            "java.lang.invoke.MethodType::makeImpl": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "54.6",
            "java.lang.Math::min": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "14.7",
            "Queens::setRowColumn": "23.5",
            "Queens::queens": "0.8",
            "java.util.Arrays::fill": "0.4"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.4",
            "java.util.Arrays::setAll": "34.4",
            "som.Random::next": "11.2",
            "AGCT::Unknown not Java[ERR=-3]": "6.0",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.7"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "6.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Sieve::sieve": "85.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "java.util.Arrays::fill": "4.5"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "4.3",
            "deltablue.EqualityConstraint::<init>": "3.7",
            "deltablue.Planner::addPropagate": "3.2",
            "deltablue.Variable::<init>": "2.8",
            "som.Vector::append": "4.4",
            "AGCT::Unknown not Java[ERR=-3]": "10.7",
            "AGCT::Unknown Java[ERR=-5]": "17.4",
            "deltablue.AbstractConstraint::satisfy": "3.7",
            "som.Vector::<init>": "2.3",
            "som.Vector::forEach": "26.6"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.7",
            "Bounce$Ball::bounce": "76.1",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.6",
            "jdk.internal.org.objectweb.asm.MethodWriter::computeAllFrames": "0.0",
            "java.lang.invoke.ClassSpecializer::findSpecies": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "Bounce$Ball::<init>": "1.6"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "9.4",
            "nbody.Body::getZ": "7.2",
            "nbody.Body::setVX": "28.1",
            "nbody.Body::setVY": "5.2",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "nbody.NBodySystem::advance": "40.9"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.5",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "Towers::popDiskFrom": "21.6",
            "Towers::moveDisks": "3.7",
            "AGCT::Unknown not Java[ERR=-3]": "6.2",
            "Towers::pushDisk": "32.5",
            "Towers$TowersDisk::setNext": "14.1",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "Towers::moveTopDisk": "4.8",
            "Towers$TowersDisk::getNext": "3.5"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.4",
            "cd.RedBlackTree::forEach": "3.9",
            "cd.RedBlackTree::put": "7.1",
            "cd.RedBlackTree::findNode": "3.1",
            "cd.RedBlackTree::treeMinimum": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "5.0",
            "cd.CollisionDetector::isInVoxel": "21.6",
            "cd.RedBlackTree::treeInsert": "13.8"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.45%",
            "deltablue.AbstractConstraint.satisfy": "3.19%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "5.33%",
            "som.Vector.append": "5.14%",
            "vtable": "3.04%",
            "som.Vector.<init>": "2.67%",
            "som.Vector.forEach": "22.50%",
            "itable": "4.10%",
            "deltablue.Planner.addPropagate": "1.90%",
            "deltablue.AbstractConstraint.<init>": "2.08%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "72.03%",
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.04%",
            "som.Random.next": "0.96%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.75%",
            "Bounce.benchmark": "20.20%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "1.92%",
            "Bounce.lambda$benchmark$0": "0.17%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.35%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "__futex_abstimed_wait_common": "0.02%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.44%",
            "som.Random.next": "10.99%",
            "java.util.Arrays.setAll": "34.91%",
            "Storage.lambda$buildTreeDepth$0": "4.16%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.56%",
            "SpinPause": "0.20%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.54%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.32%",
            "Storage.buildTreeDepth": "43.72%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.14%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.56%",
            "Towers.popDiskFrom": "19.07%",
            "Towers.moveDisks": "8.63%",
            "Interpreter": "0.07%",
            "Towers.pushDisk": "35.00%",
            "Towers.moveTopDisk": "4.06%",
            "Towers$TowersDisk.getSize": "10.47%",
            "Towers$TowersDisk.getNext": "3.82%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.14%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "11.01%",
            "cd.CollisionDetector.isInVoxel": "20.05%",
            "cd.RedBlackTree.forEach": "6.26%",
            "Node::set_req_X(unsigned": "2.02%",
            "cd.RedBlackTree.put": "6.52%",
            "cd.RedBlackTree.treeInsert": "12.92%",
            "cd.RedBlackTree.treeMinimum": "5.51%",
            "cd.RedBlackTree.findNode": "4.28%",
            "cd.Vector2D.compareNumbers": "5.32%",
            "cd.RedBlackTree.leftRotate": "2.21%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.41%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.23%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.11%",
            "som.Vector.hasSome": "2.23%",
            "som.Vector.append": "3.06%",
            "som.IdentitySet.lambda$contains$0": "31.43%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.17%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.24%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.89%",
            "havlak.HavlakLoopFinder.doDFS": "5.55%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.88%",
            "Sieve.benchmark": "7.42%",
            "Interpreter": "0.07%",
            "G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask,": "0.03%",
            "Sieve.sieve": "83.10%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.04%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.10%",
            "G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr,": "0.05%",
            "__memset_avx2_unaligned_erms": "0.08%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.32%",
            "Permute.swap": "40.34%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.71%",
            "nbody.Body.getZ": "7.77%",
            "nbody.Body.getY": "0.73%",
            "nbody.Body.setX": "1.17%",
            "nbody.Body.setY": "1.74%",
            "nbody.Body.setVX": "27.63%",
            "nbody.Body.setVY": "5.61%",
            "nbody.Body.getMass": "0.47%",
            "nbody.Body.getVZ": "0.46%",
            "nbody.NBodySystem.advance": "41.92%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.25%",
            "Interpreter": "0.06%",
            "List.makeList": "1.25%",
            "List.tail": "4.43%",
            "List$Element.length": "0.14%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.39%",
            "List$Element.<init>": "0.17%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.30%",
            "java.lang.String.length": "2.86%",
            "java.lang.String.<init>": "5.34%",
            "json.JsonPureStringParser.readArray": "2.63%",
            "java.lang.String.isLatin1": "2.88%",
            "json.JsonPureStringParser.readStringInternal": "8.01%",
            "java.util.Arrays.copyOfRange": "6.87%",
            "java.lang.String.equals": "21.46%",
            "json.JsonPureStringParser.read": "16.34%",
            "json.JsonPureStringParser.readValue": "2.24%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.99%",
            "Queens.getRowColumn": "55.89%",
            "Queens.setRowColumn": "24.42%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.63%",
            "Queens.placeQueen": "14.39%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.13%",
            "Queens.benchmark": "0.06%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.04%",
            "Richards.benchmark": "4.41%",
            "richards.Packet.<init>": "7.26%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.60%",
            "itable": "35.70%",
            "richards.TaskControlBlock.<init>": "3.21%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.10%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.81%",
            "richards.RBObject.<init>": "6.65%",
            "richards.RBObject.append": "3.60%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.2",
            "Towers.moveDisks": "94.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.7",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "5.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "93.9",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.0",
            "deltablue.AbstractConstraint.satisfy": "9.5",
            "deltablue.Planner.removePropagateFrom": "10.0",
            "som.Vector.<init>": "33.5",
            "deltablue.Variable.<init>": "4.8",
            "som.Vector.forEach": "6.8",
            "deltablue.Planner.constraintsConsuming": "4.6",
            "deltablue.AbstractConstraint.<init>": "3.9",
            "deltablue.Plan.lambda$execute$0": "1.1",
            "deltablue.Planner.addConstraintsConsumingTo": "16.7"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "havlak.HavlakLoopFinder.stepEProcessNonBackPreds": "3.4",
            "som.Vector.<init>": "42.1",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.1",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.5",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "13.7",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "85.0",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.5",
            "Run.printResult": "0.1",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "53.0",
            "Bounce$Ball.<init>": "45.8",
            "Bounce.lambda$benchmark$0": "0.0",
            "Run.printResult": "0.0",
            "java.lang.System.nanoTime": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "2.0",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.8",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.4",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "98.9",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.5",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.6",
            "java.io.PrintStream.println": "0.2",
            "java.lang.Integer.valueOf": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.2",
            "List$Element.length": "0.1",
            "List.isShorterThan": "74.9",
            "List$Element.<init>": "21.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.6",
            "Run.runBenchmark": "0.0",
            "java.lang.Integer.valueOf": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.7",
            "java.lang.String.substring": "91.0",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "28.3",
            "Queens.placeQueen": "70.9",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.82340311325819",
            "java.lang.String.<init>(byte[], byte) String.java": "5.367686527106819",
            "json.JsonPureStringParser.isWhiteSpace()": "2.181427804616211",
            "json.JsonPureStringParser.read()": "19.508319914117024",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "4.667740203972089",
            "java.lang.String.length() String.java": "2.0139559849704782",
            "java.lang.String.substring(int, int) String.java": "8.77724100912507",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.622114868491682",
            "json.JsonPureStringParser.readValue()": "4.680622651637146",
            "json.JsonPureStringParser.readStringInternal()": "3.246376811594204"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.hasSome(TestInterface)": "2.139439596488726",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.862928914418094",
            "havlak.HavlakLoopFinder.findLoops()": "12.026243792383596",
            "som.Vector.<init>(int)": "3.5398000596449832",
            "som.Vector.append(Object)": "3.8790849249467305",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.221559500192334",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.209263125137768",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "5.052535127869335",
            "som.Vector.removeAll()": "2.5003349627651072",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.150612225492615"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.365331027193234",
            "Queens.getRowColumn(int, int)": "60.343999231286624",
            "Queens.queens()": "0.784728227795394",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17616347970917007",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.304282374043112",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.16014861791742735",
            "Queens.setRowColumn(int, int, boolean)": "22.596969988149",
            "java.lang.Class.getPackageName() Class.java": "0.1921783415009128",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3202972358348547",
            "jdk.internal.org.objectweb.asm.SymbolTable.put(SymbolTable$Entry) SymbolTable.java": "0.3683418212100829"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.1007864523953033",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.6193802784172193",
            "richards.Scheduler.findTask(int)": "1.3434320695389488",
            "richards.TaskControlBlock.runTask()": "37.223961018684605",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.2641768392311215",
            "richards.Scheduler.schedule()": "2.8502545259137158",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "4.070236080954491",
            "richards.RBObject.append(Packet, Packet)": "3.115310042336265",
            "Richards.benchmark()": "28.00148140617398",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.4617484949929924"
        },
        "YourKit_Storage.txt": {
            "javax.management.openmbean.TabularType.isAssignableFrom(OpenType) TabularType.java": "0.10576190879092986",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.428335730603266",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.6028428801083002",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1105000423047637",
            "java.util.jar.JarFile.entryFor(String) JarFile.java": "0.11105000423047635",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.18952534055335",
            "jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init>(int, int, String, String, int) SymbolTable.java": "0.11633809967002286",
            "som.Random.next()": "15.615745832980796",
            "Storage.buildTreeDepth(int, Random)": "38.97326338945766",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.3108977070818177"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "32.00145516279633",
            "Towers.pushDisk(Towers$TowersDisk, int)": "31.8438125265264",
            "Towers.moveDisks(int, int, int)": "8.064027163038864",
            "Towers$TowersDisk.getSize()": "2.3040077608682465",
            "java.lang.StringLatin1.compareTo(byte[], byte[], int, int) StringLatin1.java": "0.109137209725338",
            "Towers.moveTopDisk(int, int)": "7.227308555144606",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.109137209725338",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.47407991269023",
            "Towers.benchmark()": "0.23040077608682466",
            "java.lang.invoke.InvokerBytecodeGenerator.addMethod() InvokerBytecodeGenerator.java": "0.218274419450676"
        },
        "YourKit_Permute.txt": {
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.044472610431050774",
            "Benchmark.innerBenchmarkLoop(int)": "0.044472610431050774",
            "java.lang.ClassLoader.findLoadedClass(String) ClassLoader.java": "0.14453598390091502",
            "Permute.permute(int)": "58.370301190754134",
            "java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(LambdaForm$BasicType) InvokerBytecodeGenerator.java": "0.05559076303881346",
            "com.yourkit.probes.ResourceCounter.open(Object, String) a": "0.20012674693972846",
            "Run.measure(Benchmark)": "0.0011118152607762694",
            "java.util.zip.ZipFile.<init>(File, int, Charset) ZipFile.java": "0.0011118152607762694",
            "Permute.swap(int, int)": "41.09269203829091",
            "jdk.internal.perf.PerfCounter.addElapsedTimeFrom(long) PerfCounter.java": "0.044472610431050774"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.586945522010457",
            "deltablue.Variable.<init>()": "1.4125484904705685",
            "som.Vector.forEach(ForEachInterface)": "47.668240850059036",
            "deltablue.EqualityConstraint.execute()": "4.680384550514421",
            "deltablue.BinaryConstraint.<init>(Variable, Variable, Strength$Sym, Planner)": "3.1202563670096137",
            "deltablue.BinaryConstraint.isSatisfied()": "2.8883454208129535",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "2.656434474616293",
            "som.Vector.append(Object)": "6.535672120087704",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.867262607522348",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, int) DirectMethodHandle$Holder": "1.3493000505987518"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "4.043467273186758",
            "List$Element.<init>(Object)": "0.11970791269302901",
            "List.makeList(int)": "0.38572549645531573",
            "List$Element.getNext()": "21.108495271537446",
            "List$Element.length()": "0.11970791269302901",
            "List.isShorterThan(List$Element, List$Element)": "73.30114520569809",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.2261149461979437",
            "com.yourkit.probes.Table.createRow() a": "0.11970791269302901",
            "Run.lambda$getSuiteFromName$5()": "0.29261934213851537",
            "java.lang.Integer.valueOf(int) Integer.java": "0.11970791269302901"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.1004229229939537",
            "nbody.Body.getZ()": "4.371150407311742",
            "nbody.Body.setX(double)": "0.6812182452953364",
            "nbody.Body.getX()": "0.6954102920723225",
            "nbody.NBodySystem.advance(double)": "43.981152961880156",
            "nbody.Body.setVY(double)": "7.890778008004312",
            "nbody.Body.setVZ(double)": "9.281598592148956",
            "NBody.innerBenchmarkLoop(int)": "0.5676818710794469",
            "nbody.Body.setVX(double)": "26.638471800403046",
            "nbody.Body.setY(double)": "0.6954102920723225"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.71110840396095",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "8.701554097561825E-4",
            "com.yourkit.probes.builtin.Processes.processWriteEnterImpl(FileOutputStream, int) a": "0.07831398687805642",
            "java.util.zip.ZipFile.getInputStream(ZipEntry) ZipFile.java": "0.01740310819512365",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.01740310819512365",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "java.lang.invoke.LambdaFormBuffer.insertName(int, LambdaForm$Name, boolean) LambdaFormBuffer.java": "0.09571709507318006",
            "com.yourkit.probes.Table.createRow() a": "0.07831398687805642",
            "Run.measure(Benchmark)": "8.701554097561825E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.8833127162832928",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.239387438736042",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.881277108811046",
            "cd.RedBlackTree.findNode(Comparable)": "7.10896763384119",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.392966193257442",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "3.131703803454269",
            "cd.RedBlackTree$Node.successor()": "1.785071167968933",
            "cd.RedBlackTree.put(Comparable, Object)": "6.584407246762599",
            "cd.Vector2D.compareNumbers(double, double)": "9.84137920235504",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.076898986893819"
        },
        "YourKit_Sieve.txt": {
            "java.lang.invoke.MethodTypeForm.parameterSlotCount() MethodTypeForm.java": "0.14146539284939594",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.17918949760923486",
            "com.yourkit.probes.ForeignKeyColumn.setValue(int, int) a": "0.08487923570963755",
            "sun.invoke.util.VerifyType.isNullReferenceConversion(Class, Class) VerifyType.java": "0.018862052379919458",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "5.3285297973272465",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(int, String, String, String) MethodWriter.java": "0.06601718332971811",
            "Sieve.benchmark()": "87.67081946186563",
            "com.yourkit.probes.Table.createRow() a": "0.08487923570963755",
            "Sieve.sieve(boolean[], int)": "6.290494468703139",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.11317231427951674"
        },
        "YourKit_Bounce.txt": {
            "jdk.internal.org.objectweb.asm.Type.getReturnTypeOffset(String) Type.java": "0.4014298549117809",
            "java.net.URI.<init>(String) URI.java": "0.2676199032745206",
            "sun.nio.fs.NativeBuffers.allocNativeBuffer(int) NativeBuffers.java": "0.1338099516372603",
            "java.util.zip.ZipUtils.SH(byte[], int) ZipUtils.java": "0.11469424426050884",
            "Bounce.benchmark()": "59.77481696710185",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.64993405080955",
            "som.Random.next()": "0.36319844015827796",
            "Bounce.lambda$benchmark$0(Random, int)": "0.19115707376751473",
            "Bounce$Ball.bounce()": "37.23739796991187",
            "Bounce$Ball.<init>(Random)": "0.7455125876933075"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.546,
        "JavaFlightRecorder_Bounce.jfr": 24.3565,
        "rebench_test_Async_Bounce.txt": 60.204,
        "Mandelbrot.hpl": 38.075500000000005,
        "List.hpl": 22.4405,
        "rebench_test_Async_Towers.txt": 79.0975,
        "JavaFlightRecorder_Storage.jfr": 57.992999999999995,
        "JavaFlightRecorder_Sieve.jfr": 31.4875,
        "Permute.hpl": 29.834,
        "Queens.hpl": 21.0335,
        "JavaFlightRecorder_NBody.jfr": 21.262,
        "rebench_test_Async_Sieve.txt": 87.93950000000001,
        "JavaFlightRecorder_Richards.jfr": 97.37950000000001,
        "Storage.hpl": 59.999,
        "DeltaBlue.hpl": 15.0945,
        "NBody.hpl": 21.411,
        "Towers.hpl": 25.401,
        "JavaFlightRecorder_Json.jfr": 80.4205,
        "Bounce.hpl": 26.1715,
        "rebench_test_Async_List.txt": 73.298,
        "rebench_test_Async_Richards.txt": 281.796,
        "rebench_test_Async_DeltaBlue.txt": 44.4135,
        "Richards.hpl": 91.1385,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.9775,
        "JavaFlightRecorder_Havlak.jfr": 154.7505,
        "JavaFlightRecorder_List.jfr": 22.4645,
        "JavaFlightRecorder_CD.jfr": 42.019999999999996,
        "rebench_test_Async_Mandelbrot.txt": 108.148,
        "rebench_test_Async_Storage.txt": 171.812,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.3975,
        "Json.hpl": 79.95400000000001,
        "JavaFlightRecorder_Towers.jfr": 26.188,
        "Havlak.hpl": 157.436,
        "rebench_test_Async_CD.txt": 148.6315,
        "rebench_test_Async_Havlak.txt": 519.3109999999999,
        "Sieve.hpl": 31.503,
        "rebench_test_Async_Permute.txt": 85.398,
        "JavaFlightRecorder_Permute.jfr": 30.188499999999998,
        "rebench_test_Async_NBody.txt": 59.798500000000004,
        "CD.hpl": 43.260999999999996,
        "rebench_test_Async_Json.txt": 282.272,
        "rebench_test_Async_Queens.txt": 63.9955
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007f972cad5bb8": "4.30%",
            "[.] 0x00007f972cad5bf9": "4.48%",
            "[.] 0x00007f972cad5c10": "5.45%",
            "[.] 0x00007f972cad5bf5": "22.62%",
            "[.] 0x00007f972cad5bfd": "18.74%"
        },
        "Permute.data": {
            "[.] 0x00007f178cad34dc": "14.23%",
            " ": "0",
            "[.] 0x00007f178cad367c": "19.48%",
            "[.] 0x00007f178cad3610": "25.73%",
            "[.] 0x00007f178cad3554": "11.06%",
            "[.] 0x00007f178cad3716": "2.65%"
        },
        "Havlak.data": {
            "[.] 0x00007fba64b35275": "16.96%",
            " ": "0",
            "[.] 0x00007fba64b3527c": "16.80%",
            "[.] 0x00007fba64ade4c3": "1.14%",
            "[.] 0x00007fba64b294b0": "1.50%",
            "[.] 0x00007fba64af5ed3": "1.66%"
        },
        "DeltaBlue.data": {
            "[.] 0x00007fd85cb3460e": "3.22%",
            " ": "0",
            "[.] 0x00007fd85cafc6d0": "3.87%",
            "[.] 0x00007fd85cafc640": "1.88%",
            "[.] 0x00007fd85cb345d1": "7.27%",
            "[.] 0x00007fd85cb345c0": "3.82%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007f5680ad361e": "5.59%",
            "[.] 0x00007f5680ad34d7": "4.59%",
            "[.] 0x00007f5680ad362d": "24.25%",
            "[.] 0x00007f5680ad3696": "3.91%",
            "[.] 0x00007f5680ad34ed": "3.56%"
        },
        "Towers.data": {
            "[.] 0x00007f1c10ad4f85": "6.68%",
            "[.] 0x00007f1c10ad4c5d": "3.32%",
            " ": "0",
            "[.] 0x00007f1c10ad4f23": "3.92%",
            "[.] 0x00007f1c10ad4f02": "10.43%",
            "[.] 0x00007f1c10ad4ac6": "3.79%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007fc898646a9b": "4.57%",
            "[.] 0x00007fc898646aba": "10.04%",
            "[.] 0x00007fc898af22ba": "6.55%",
            "[.] 0x00007fc898646b1c": "6.15%",
            "[.] 0x00007fc898646aaf": "8.07%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f8d10ad4c50": "8.08%",
            "[.] 0x00007f8d10ad4c9b": "6.49%",
            "[.] 0x00007f8d10ad4dcf": "5.03%",
            "[.] 0x00007f8d10ad4ca6": "6.14%",
            "[.] 0x00007f8d10ad4c1a": "8.76%"
        },
        "CD.data": {
            "[.] 0x00007fa0b4aee480": "3.61%",
            " ": "0",
            "[.] 0x00007fa0b4adb848": "2.03%",
            "[.] 0x00007fa0b4adb819": "2.37%",
            "[.] 0x00007fa0b4aee468": "5.48%",
            "[.] 0x00007fa0b4b1d53a": "2.85%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007f9758ad8080": "5.04%",
            "[.] 0x00007f9758ad8074": "6.22%",
            "[.] 0x00007f9758ad8042": "5.46%",
            "[.] 0x00007f9758ad80d8": "5.99%",
            "[.] 0x00007f9758ad80a6": "5.87%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007f68c4ad4135": "26.21%",
            "[.] 0x00007f68c4ad4355": "5.88%",
            "[.] 0x00007f68c4ad4145": "11.32%",
            "[.] 0x00007f68c4ad4275": "5.23%",
            "[.] 0x00007f68c4ad4285": "4.93%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007fa64cada682": "4.73%",
            "[.] 0x00007fa64cada68e": "26.50%",
            "[.] 0x00007fa64cada68c": "13.49%",
            "[.] 0x00007fa64cada632": "3.35%",
            "[.] 0x00007fa64cada638": "20.75%"
        },
        "Bounce.data": {
            "[.] 0x00007faa38adc454": "16.15%",
            " ": "0",
            "[.] 0x00007faa38adc442": "10.17%",
            "[.] 0x00007faa38ad5562": "8.45%",
            "[.] 0x00007faa38ad556f": "5.29%",
            "[.] 0x00007faa38adc447": "26.16%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007f778cadc3a8": "2.07%",
            "[.] 0x00007f778cadc291": "0.99%",
            "[.] 0x00007f778cadc1f5": "1.39%",
            "[.] 0x00007f778cadc169": "1.29%",
            "[.] 0x00007f778c56ecc5": "1.06%"
        }
    }
}