{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4909983633387889",
            " ": "0",
            "Queens.placeQueen(I)Z": "16.202945990180034",
            "Queens.getRowColumn(II)Z": "55.319148936170215",
            "java.util.Arrays.fill([ZZ)V": "0.32733224222585927",
            "Queens.verifyResult(Ljava/lang/Object;)Z": "0.16366612111292964",
            "Queens.setRowColumn(IIZ)V": "26.5139116202946",
            "Queens.queens()Z": "0.9819967266775778"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.verifyResult(Ljava/lang/Object;)Z": "0.14285714285714285",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.14285714285714285",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.0",
            "Bounce$Ball.bounce()Z": "77.71428571428571",
            "Bounce.benchmark()Ljava/lang/Object;": "16.57142857142857",
            "som.Random.next()I": "1.2857142857142856",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;": "0.2857142857142857",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.8571428571428568"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "8.572721103822666",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.611173942546934",
            "havlak.HavlakLoopFinder.stepD(ILsom/Vector;)V": "2.5559828093191586",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.5191133227776525",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "12.98348789866546",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "3.2119429993214204",
            "havlak.HavlakLoopFinder.findLoops()V": "4.297670210359647",
            "som.Vector.<init>(I)V": "3.7095679710472744",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "3.664329337254015",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "3.189323682424791"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.934518997574777",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.8803556992724335",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.5869037995149555",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.8504446240905414",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.060630557801133",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.12287793047696",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.922392886014551",
            "cd.Vector2D.compareNumbers(DD)I": "6.628940986257073",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "16.08730800323363",
            "som.Vector.append(Ljava/lang/Object;)V": "2.263540824575586"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.54708520179372",
            " ": "0",
            "java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()Ljava/lang/Object;": "0.14947683109118087",
            "List$Element.getNext()LList$Element;": "10.612855007473842",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.14947683109118087",
            "java.lang.invoke.InvokerBytecodeGenerator.lookupPregenerated(Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MemberName;": "0.14947683109118087",
            "java.lang.invoke.BoundMethodHandle.bindArgumentL(ILjava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;": "0.14947683109118087",
            "jdk.jfr.internal.PlatformRecording.start()J": "0.14947683109118087",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.6442451420029895",
            "List.makeList(I)LList$Element;": "0.4484304932735426"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "8.474576271186441",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.672316384180791",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "1.694915254237288",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "38.983050847457626",
            "deltablue.UnaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "7.909604519774011",
            "deltablue.EqualityConstraint.execute()V": "2.2598870056497176",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "2.2598870056497176",
            "som.Vector.<init>(I)V": "2.542372881355932",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "6.779661016949152",
            "som.Vector.append(Ljava/lang/Object;)V": "2.824858757062147"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.6777572396796057",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.3080714725816389",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.061614294516327786",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "38.20086260012323",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.5403573629081946",
            "java.net.URL.<init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V": "0.061614294516327786",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.8200862600123227",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "42.205791743684536",
            "som.Random.next()I": "12.076401725200245",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.9858287122612446"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.String.getChars(II[CI)V": "0.10718113612004287",
            "java.lang.Integer.valueOf(I)Ljava/lang/Integer;": "0.10718113612004287",
            "Sieve.benchmark()Ljava/lang/Object;": "6.430868167202572",
            "java.util.Arrays.fill([ZZ)V": "4.394426580921758",
            "Sieve.sieve([ZI)I": "88.85316184351554",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.10718113612004287"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "java.net.URL.<init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V": "0.13812154696132597",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.712707182320443",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.419889502762431",
            "Towers.moveDisks(III)V": "4.143646408839779",
            "Towers$TowersDisk.getSize()I": "11.049723756906078",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "35.0828729281768",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "23.895027624309392",
            "Towers.moveTopDisk(II)V": "4.558011049723757"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.40625",
            "nbody.Body.getMass()D": "0.625",
            "nbody.Body.setVX(D)V": "30.9375",
            "nbody.NBodySystem.advance(D)V": "39.6875",
            "nbody.Body.getVX()D": "0.3125",
            "nbody.Body.getZ()D": "9.84375",
            "nbody.Body.setVZ(D)V": "7.1875",
            "nbody.Body.getVZ()D": "0.78125",
            "nbody.Body.setVY(D)V": "5.78125",
            "nbody.Body.setX(D)V": "1.875"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.833442194644023",
            "richards.Scheduler.schedule()V": "12.410189418680602",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.671456564337035",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "7.119529719137819",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.702808621815807",
            "Richards.benchmark()Ljava/lang/Object;": "10.189418680600916",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.8536903984323976",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.657740039190072",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.702808621815807",
            "richards.RBObject.<init>()V": "11.691704768125408"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.497164461247637",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "4.395085066162571",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "26.134215500945178",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "4.489603024574669",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.01890359168242",
            "java.lang.String.<init>([BB)V": "5.5765595463138",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.0245746691871456",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.504725897920605",
            "json.JsonPureStringParser.read()V": "13.563327032136106",
            "java.util.Arrays.copyOfRange([BII)[B": "6.66351606805293"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "46.24553039332539",
            "Permute.permute(I)V": "53.63528009535161",
            "Permute.benchmark()Ljava/lang/Object;": "0.11918951132300358"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.0",
            "richards.Packet::setLink": "2.2",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.3",
            "Richards::benchmark": "4.7",
            "richards.RBObject::append": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "45.0",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.5",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "6.0"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::No Java Frames[ERR=0]": "0.0",
            "java.lang.Object::hashCode": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodType::checkPtypes": "0.0",
            "java.net.URLStreamHandler::setURL": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.7"
        },
        "List.hpl": {
            "List$Element::getNext": "9.5",
            "List::makeList": "1.1",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "2.0",
            "List::isShorterThan": "79.8",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.5",
            "List$Element::setNext": "0.0",
            "List$Element::length": "0.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "16.7",
            "java.lang.String::<init>": "5.5",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "3.0",
            "java.util.Arrays::copyOfRange": "6.7",
            "java.lang.String::equals": "21.8",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "10.1",
            "java.lang.String::isLatin1": "2.7",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.5",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.9",
            "havlak.HavlakLoopFinder::findLoops": "6.0",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "7.9",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "5.4",
            "som.Vector::hasSome": "2.4",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.3",
            "Permute::permute": "50.8",
            "Permute::benchmark": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MemberName::testAnyFlags": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "6.0",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "java.io.BufferedOutputStream::flushBuffer": "0.0",
            "java.lang.invoke.MethodHandleNatives::findMethodHandleType": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "54.8",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "Queens::benchmark": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "15.3",
            "Queens::setRowColumn": "23.9",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "0.9",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.0",
            "java.util.Arrays::setAll": "34.8",
            "som.Random::next": "11.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "6.2",
            "jdk.internal.org.objectweb.asm.ByteVector::putInt": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.util.zip.Inflater::inflateBytesBytes": "0.0",
            "Sieve::sieve": "85.7",
            "java.lang.invoke.InvokerBytecodeGenerator::emitStaticInvoke": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "4.9"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "6.1",
            "deltablue.Planner::addPropagate": "2.7",
            "som.Vector::append": "2.2",
            "AGCT::Unknown not Java[ERR=-3]": "10.6",
            "AGCT::Unknown Java[ERR=-5]": "17.8",
            "deltablue.Plan::lambda$execute$0": "3.8",
            "deltablue.AbstractConstraint::satisfy": "2.1",
            "deltablue.EqualityConstraint::execute": "1.7",
            "som.Vector::forEach": "29.1",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "2.8"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.8",
            "Bounce$Ball::bounce": "75.3",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.2",
            "java.lang.ClassLoader::defineClass1": "0.0",
            "som.Random::next": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "1.6",
            "Run::measure": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.8",
            "nbody.Body::setVZ": "9.0",
            "nbody.Body::getZ": "7.6",
            "nbody.Body::setVX": "27.3",
            "nbody.Body::setVY": "5.2",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "nbody.NBodySystem::advance": "41.3"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.0",
            "Towers::popDiskFrom": "23.2",
            "Towers::moveDisks": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "6.5",
            "Towers::pushDisk": "31.3",
            "Towers$TowersDisk::setNext": "13.9",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.8",
            "Towers$TowersDisk::getNext": "2.9"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "15.5",
            "cd.RedBlackTree::forEach": "3.8",
            "cd.RedBlackTree::put": "7.1",
            "cd.RedBlackTree::findNode": "3.2",
            "cd.RedBlackTree::treeMinimum": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "9.5",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "cd.Vector2D::compareNumbers": "4.3",
            "cd.CollisionDetector::isInVoxel": "21.0",
            "cd.RedBlackTree::treeInsert": "13.4"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.25%",
            "deltablue.EqualityConstraint.execute": "3.01%",
            "deltablue.AbstractConstraint.satisfy": "2.47%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "18.11%",
            "som.Vector.<init>": "1.97%",
            "som.Vector.forEach": "7.42%",
            "itable": "4.09%",
            "deltablue.Planner.addPropagate": "3.42%",
            "deltablue.ScaleConstraint.execute": "1.90%",
            "deltablue.Variable.setValue": "3.73%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.70%",
            "som.Random.next": "0.90%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.70%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.98%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.83%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.13%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.41%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "LinearScanWalker::alloc_free_reg(Interval*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "10.77%",
            "java.util.Arrays.setAll": "35.18%",
            "Storage.lambda$buildTreeDepth$0": "3.81%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.51%",
            "SpinPause": "0.18%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.57%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.27%",
            "Storage.buildTreeDepth": "44.08%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.16%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.66%",
            "Towers.popDiskFrom": "19.13%",
            "Towers.moveDisks": "8.61%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "35.08%",
            "Towers.moveTopDisk": "4.03%",
            "Towers$TowersDisk.getSize": "10.50%",
            "Towers$TowersDisk.getNext": "3.77%",
            "Towers.benchmark": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.81%",
            "cd.CollisionDetector.isInVoxel": "19.18%",
            "cd.RedBlackTree.forEach": "6.41%",
            "Node::set_req_X(unsigned": "2.02%",
            "cd.RedBlackTree.put": "6.53%",
            "cd.RedBlackTree.treeInsert": "12.19%",
            "cd.RedBlackTree.treeMinimum": "5.62%",
            "cd.RedBlackTree.findNode": "2.92%",
            "cd.Vector2D.compareNumbers": "4.15%",
            "cd.RedBlackTree.leftRotate": "2.12%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.29%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.06%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.37%",
            "som.Vector.hasSome": "2.23%",
            "som.Vector.append": "3.97%",
            "som.IdentitySet.lambda$contains$0": "30.92%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.48%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.00%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.00%",
            "havlak.HavlakLoopFinder.doDFS": "6.50%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "7.85%",
            "Sieve.benchmark": "7.00%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "82.18%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.09%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.30%",
            "Permute.swap": "40.23%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.40%",
            "nbody.Body.getZ": "8.01%",
            "nbody.Body.getY": "0.74%",
            "nbody.Body.setX": "1.53%",
            "nbody.Body.setY": "1.55%",
            "nbody.Body.setZ": "0.35%",
            "nbody.Body.setVX": "28.77%",
            "nbody.Body.setVY": "6.04%",
            "nbody.Body.getMass": "0.58%",
            "nbody.NBodySystem.advance": "40.11%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.23%",
            "Interpreter": "0.05%",
            "List.makeList": "1.24%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.48%",
            "List$Element.length": "0.13%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.46%",
            "List$Element.<init>": "0.19%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.48%",
            "java.lang.String.length": "3.51%",
            "java.lang.String.substring": "2.34%",
            "java.lang.String.<init>": "4.73%",
            "java.lang.String.isLatin1": "3.02%",
            "json.JsonPureStringParser.readStringInternal": "7.00%",
            "java.util.Arrays.copyOfRange": "8.35%",
            "java.lang.String.equals": "20.42%",
            "json.JsonPureStringParser.read": "15.30%",
            "json.JsonPureStringParser.readValue": "3.02%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.07%",
            "Queens.getRowColumn": "68.49%",
            "Queens.setRowColumn": "17.91%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.64%",
            "Queens.placeQueen": "8.75%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.13%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.07%",
            "Richards.benchmark": "4.62%",
            "richards.Packet.<init>": "6.60%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.75%",
            "itable": "37.76%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.40%",
            "richards.TaskControlBlock.<init>": "3.23%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.07%",
            "richards.RBObject.<init>": "5.63%",
            "richards.RBObject.append": "2.65%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Towers$TowersDisk.<init>": "3.6",
            "Towers.moveDisks": "94.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Towers.buildTowerAt": "0.1",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.7",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "6.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "92.0",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.2",
            "deltablue.AbstractConstraint.satisfy": "10.9",
            "deltablue.Planner.removePropagateFrom": "9.3",
            "som.Vector.<init>": "32.0",
            "deltablue.Variable.<init>": "5.2",
            "som.Vector.forEach": "7.4",
            "deltablue.Planner.addPropagate": "1.4",
            "deltablue.Planner.constraintsConsuming": "4.5",
            "deltablue.AbstractConstraint.<init>": "4.1",
            "deltablue.Planner.addConstraintsConsumingTo": "17.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "som.Dictionary$Entry.<init>": "3.4",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.4",
            "som.Vector.<init>": "42.2",
            "java.lang.Integer.valueOf": "8.7",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.8",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.createHandler": "0.0",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "15.3",
            "java.io.PrintStream.println": "0.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "richards.TaskControlBlock.runTask": "83.4",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.4"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.0",
            "Bounce.benchmark": "51.1",
            "Bounce$Ball.<init>": "47.1",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "som.Vector.<init>": "6.3",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "14.9",
            "cd.RedBlackTree$Node.<init>": "8.1",
            "cd.RedBlackTree$Entry.<init>": "4.8"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Run.runBenchmark": "0.2",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.4",
            "Run.reportBenchmark": "0.1",
            "Permute.benchmark": "0.7",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "List.makeList": "0.6",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "71.4",
            "List$Element.<init>": "24.4",
            "Run.printResult": "0.2"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "java.io.PrintStream.println": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "18.8",
            "Queens.placeQueen": "80.2",
            "Run.getSuiteFromName": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.2",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.082619452345295",
            "json.JsonPureStringParser.readChar(String)": "1.897605062524194",
            "java.lang.String.<init>(byte[], byte) String.java": "5.974721039433161",
            "json.JsonPureStringParser.read()": "21.652052442903553",
            "java.lang.String.length() String.java": "3.626908123937595",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.049076863523908",
            "json.JsonArray.<init>()": "2.347812915495566",
            "java.lang.String.substring(int, int) String.java": "10.25379941767508",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.660551693959643",
            "json.JsonPureStringParser.readStringInternal()": "3.879361125603785"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.184233449477352",
            "som.Vector.hasSome(TestInterface)": "1.8292682926829271",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.171602787456447",
            "havlak.HavlakLoopFinder.findLoops()": "7.992160278745645",
            "som.Vector.<init>(int)": "2.643728222996516",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "13.791376306620212",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.678571428571431",
            "havlak.HavlakLoopFinder$$Lambda$19.0x00000008000cc428.apply(Object)": "1.8053135888501746",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.263937282229966",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.14285714285715"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "13.521372492003488",
            "Queens.getRowColumn(int, int)": "62.211237116732896",
            "Queens.queens()": "1.631611256502213",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.04846370068818455",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6623372427385221",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(LambdaForm$BasicType, Class, Object) InvokerBytecodeGenerator.java": "0.22616393654486122",
            "Queens.setRowColumn(int, int, boolean)": "20.9040095635036",
            "java.lang.String.<init>(byte[], byte) String.java": "0.14539110206455363",
            "java.lang.reflect.Array.newArray(Class, int) Array.java (native)": "0.12923653516849212",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.4684824399857839"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.2900708773151837",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.7561864818101318",
            "richards.TaskControlBlock.runTask()": "38.74725364297544",
            "richards.Scheduler.<init>()": "1.7339562731796239",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.075538248926466",
            "richards.Scheduler.schedule()": "2.4564380536711337",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.41974709432648",
            "richards.RBObject.append(Packet, Packet)": "2.760250904954743",
            "Richards.benchmark()": "26.202005905825427",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.2267258978225515"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.347995936305518",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.4986276611866662",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.82125357116798",
            "som.Random.next()": "13.364166521668361",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.780184437846242",
            "com.yourkit.probes.Table.createRow() a": "0.15715945510571783",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.15715945510571783",
            "Storage.buildTreeDepth(int, Random)": "38.46477663712443",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.879385731044044",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(Object) MethodType.java": "0.15715945510571783"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "33.115531328592226",
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.32133617318268",
            "Towers.moveDisks(int, int, int)": "8.85647930880955",
            "Towers$TowersDisk.getSize()": "2.2742861268546264",
            "Towers.moveTopDisk(int, int)": "7.19588943840776",
            "java.lang.String.getChars(int, int, char[], int) String.java": "0.12033259930447758",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.22863193867850742",
            "java.util.zip.ZipFile$ZipFileInflaterInputStream.<init>(ZipFile, ZipFile$ZipFileInputStream, ZipFile$CleanableResource, Inflater, int) ZipFile.java": "0.12033259930447758",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "15.378506191112235",
            "Towers.benchmark()": "0.22863193867850742"
        },
        "YourKit_Permute.txt": {
            "java.io.BufferedWriter.write(String, int, int) BufferedWriter.java": "0.11249353162193174",
            "java.lang.Long.<init>(long) Long.java": "0.04499741264877269",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.13499223794631807",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.03374805948657952",
            "jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String) ByteVector.java": "0.13499223794631807",
            "Permute.permute(int)": "50.689585348842435",
            "java.util.ArrayList.get(int) ArrayList.java": "0.08999482529754538",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.07874547213535221",
            "Permute.benchmark()": "0.10124417845973856",
            "Permute.swap(int, int)": "48.42846536324161"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.738360115368769",
            "som.Vector.forEach(ForEachInterface)": "39.8382777091059",
            "deltablue.EqualityConstraint.execute()": "3.064482900700454",
            "deltablue.Plan$$Lambda$27.0x00000008000ccd88.apply(Object)": "2.1374124433456947",
            "deltablue.BinaryConstraint.isSatisfied()": "2.5236918005768447",
            "som.Vector.<init>(int)": "6.257725587144625",
            "deltablue.ScaleConstraint.execute()": "3.73403378656778",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.781211372064278",
            "deltablue.Plan.lambda$execute$0(AbstractConstraint)": "3.0129789864029677",
            "som.Vector.append(Object)": "6.231973629995881"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "3.659491722256732",
            "List.makeList(int)": "0.9317525049288357",
            "java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(Object, long, Object) DelegatingMethodHandle$Holder": "0.1215329354255003",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, Object, Object, Object) DirectMethodHandle$Holder": "0.1215329354255003",
            "List$Element.getNext()": "19.16169281875388",
            "List$Element.length()": "0.25656953034272284",
            "List.isShorterThan(List$Element, List$Element)": "74.49968941583168",
            "com.yourkit.probes.Table.createRow() a": "0.28357684932616734",
            "sun.nio.cs.StreamEncoder.write(char[], int, int) StreamEncoder.java": "0.13503659491722256",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.1215329354255003"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.138500179404377",
            "nbody.Body.getZ()": "4.965913168281305",
            "nbody.Body.setX(double)": "0.7176175098672407",
            "nbody.Body.getX()": "0.688912809472551",
            "nbody.Body.getVZ()": "0.5597416576964477",
            "nbody.NBodySystem.advance(double)": "44.764980265518474",
            "nbody.Body.setVY(double)": "4.865446716899892",
            "nbody.Body.setVZ(double)": "9.285970577682095",
            "nbody.Body.setVX(double)": "28.9199856476498",
            "nbody.Body.setY(double)": "1.1194833153928954"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.23825832134376",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.12357338935326982",
            "jdk.internal.perf.PerfCounter$CoreCounters.<clinit>() PerfCounter.java": "0.0353066826723628",
            "java.io.RandomAccessFile.<init>(File, String, boolean) RandomAccessFile.java": "0.10592004801708843",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.06178669467663491",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.052960024008544215",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.0176533413361814",
            "jdk.internal.org.objectweb.asm.Frame.execute(int, int, Symbol, SymbolTable) Frame.java": "0.10592004801708843",
            "com.yourkit.probes.Table.createRow() a": "0.16770674269372335",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.08826670668090701"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "5.101001335617214",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.943360775110737",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "15.619930125336733",
            "cd.RedBlackTree.findNode(Comparable)": "7.379851044724313",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.768289278087577",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.339216588818545",
            "cd.RedBlackTree.put(Comparable, Object)": "7.108200086022803",
            "cd.Vector2D.compareNumbers(double, double)": "8.692830678448269",
            "cd.Simulator.simulate(double)": "1.9921070304777286",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.610520437961712"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.12292975123488523",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17880691088710576",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.100578887373997",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.547998480141257",
            "Sieve.benchmark()": "88.21885965892581",
            "com.yourkit.probes.Table.closeRow(int, Throwable) a": "0.100578887373997",
            "com.yourkit.probes.Table.createRow() a": "0.100578887373997",
            "jdk.internal.loader.URLClassPath$JarLoader$2.getBytes() URLClassPath.java": "0.3240875259828792",
            "Sieve.sieve(boolean[], int)": "8.057486421850204",
            "java.lang.Integer.valueOf(int) Integer.java": "0.100578887373997"
        },
        "YourKit_Bounce.txt": {
            "Bounce.benchmark()": "65.15524497736837",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.3771936790280314",
            "som.Random.next()": "0.7146827602636384",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5955689668863654",
            "java.util.concurrent.ConcurrentHashMap$ValuesView.<init>(ConcurrentHashMap) ConcurrentHashMap.java": "0.25807988565075834",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.4168982768204557",
            "Bounce$Ball.bounce()": "30.59239259906297",
            "java.lang.invoke.MethodHandle.invokeBasic(Object[]) MethodHandle.java (native)": "0.1786706900659096",
            "Bounce$Ball.<init>(Random)": "0.9727626459143968",
            "java.io.RandomAccessFile.seek0(long) RandomAccessFile.java (native)": "0.15881839116969743"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 20.9765,
        "JavaFlightRecorder_Bounce.jfr": 23.9125,
        "rebench_test_Async_Bounce.txt": 64.91399999999999,
        "Mandelbrot.hpl": 38.335499999999996,
        "rebench_test_Async_Towers.txt": 77.0055,
        "JavaFlightRecorder_Storage.jfr": 57.39,
        "List.hpl": 22.753,
        "JavaFlightRecorder_Sieve.jfr": 31.171999999999997,
        "Queens.hpl": 21.407,
        "Permute.hpl": 29.978,
        "JavaFlightRecorder_NBody.jfr": 21.356,
        "rebench_test_Async_Sieve.txt": 97.84800000000001,
        "JavaFlightRecorder_Richards.jfr": 93.543,
        "Storage.hpl": 59.1115,
        "DeltaBlue.hpl": 14.8275,
        "Towers.hpl": 25.898,
        "NBody.hpl": 21.371499999999997,
        "JavaFlightRecorder_Json.jfr": 81.564,
        "Bounce.hpl": 26.283,
        "rebench_test_Async_List.txt": 73.20349999999999,
        "rebench_test_Async_Richards.txt": 271.4655,
        "Richards.hpl": 90.881,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.606,
        "rebench_test_Async_DeltaBlue.txt": 36.4075,
        "JavaFlightRecorder_Havlak.jfr": 158.063,
        "JavaFlightRecorder_List.jfr": 23.061999999999998,
        "JavaFlightRecorder_CD.jfr": 42.855999999999995,
        "rebench_test_Async_Storage.txt": 165.36,
        "rebench_test_Async_Mandelbrot.txt": 115.8665,
        "JavaFlightRecorder_DeltaBlue.jfr": 14.649,
        "Json.hpl": 80.303,
        "JavaFlightRecorder_Towers.jfr": 25.692500000000003,
        "Havlak.hpl": 156.3245,
        "rebench_test_Async_CD.txt": 146.34,
        "rebench_test_Async_Havlak.txt": 524.9525,
        "Sieve.hpl": 30.9995,
        "rebench_test_Async_Permute.txt": 85.30799999999999,
        "JavaFlightRecorder_Permute.jfr": 29.966,
        "rebench_test_Async_NBody.txt": 59.6305,
        "CD.hpl": 42.3995,
        "rebench_test_Async_Queens.txt": 63.831500000000005,
        "rebench_test_Async_Json.txt": 279.67449999999997
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007f2384ad5c01": "4.35%",
            "[.] 0x00007f2384ad5bf9": "4.73%",
            "[.] 0x00007f2384ad5c10": "5.29%",
            "[.] 0x00007f2384ad5bfd": "18.75%",
            "[.] 0x00007f2384ad5bf5": "23.58%"
        },
        "Permute.data": {
            "[.] 0x00007f6d7cad3907": "2.53%",
            " ": "0",
            "[.] 0x00007f6d7cad39d4": "10.89%",
            "[.] 0x00007f6d7cad3a90": "25.59%",
            "[.] 0x00007f6d7cad395c": "14.36%",
            "[.] 0x00007f6d7cad3afc": "19.18%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007f8518b2787c": "16.68%",
            "[.] 0x00007f8518b187b0": "1.38%",
            "[.] 0x00007f8518b051d1": "1.68%",
            "[.] 0x00007f8518ae03c3": "1.16%",
            "[.] 0x00007f8518b27875": "16.99%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007ff1c8b36afd": "3.36%",
            "[.] 0x00007ff1c8b36b0e": "6.80%",
            "[.] 0x00007ff1c8afa1d0": "4.02%",
            "[.] 0x00007ff1c8afa140": "2.00%",
            "[.] 0x00007ff1c8b36a65": "3.85%"
        },
        "Queens.data": {
            "[.] 0x00007fcea4ad35f0": "5.09%",
            " ": "0",
            "[.] 0x00007fcea4ad34d2": "4.55%",
            "[.] 0x00007fcea4ad34e8": "4.25%",
            "[.] 0x00007fcea4ad3622": "13.37%",
            "[.] 0x00007fcea4ad35de": "3.03%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007f2934ad53a3": "3.92%",
            "[.] 0x00007f2934ad5405": "7.17%",
            "[.] 0x00007f2934ad4f46": "3.58%",
            "[.] 0x00007f2934ad50dd": "3.35%",
            "[.] 0x00007f2934ad5382": "10.17%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007f0a10646b1b": "4.96%",
            "[.] 0x00007f0a10646b2f": "8.19%",
            "[.] 0x00007f0a10646b9c": "6.72%",
            "[.] 0x00007f0a10646b3a": "10.30%",
            "[.] 0x00007f0a10af263a": "6.29%"
        },
        "Storage.data": {
            "[.] 0x00007ff89cad595a": "6.20%",
            " ": "0",
            "[.] 0x00007ff89cad59a5": "4.44%",
            "[.] 0x00007ff89cad5916": "7.01%",
            "[.] 0x00007ff89cad59c9": "4.93%",
            "[.] 0x00007ff89cad59ad": "4.49%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007f789cb2333a": "3.14%",
            "[.] 0x00007f789cb0c600": "3.59%",
            "[.] 0x00007f789cb0c5e8": "5.33%",
            "[.] 0x00007f789cadc117": "2.10%",
            "Node::set_req_X": "2.23%"
        },
        "Mandelbrot.data": {
            "[.] 0x00007ff154ad80be": "5.54%",
            " ": "0",
            "[.] 0x00007ff154ad8122": "6.06%",
            "[.] 0x00007ff154ad8154": "6.02%",
            "[.] 0x00007ff154ad80f0": "6.31%",
            "[.] 0x00007ff154ad80fc": "5.01%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007ff7ccad4055": "5.71%",
            "[.] 0x00007ff7ccad3f85": "4.97%",
            "[.] 0x00007ff7ccad3f75": "5.37%",
            "[.] 0x00007ff7ccad3e35": "25.53%",
            "[.] 0x00007ff7ccad3e45": "11.20%"
        },
        "Sieve.data": {
            "[.] 0x00007fd69cada40e": "26.41%",
            "[.] 0x00007fd69cada3b8": "20.60%",
            " ": "0",
            "[.] 0x00007fd69cada402": "3.60%",
            "[.] 0x00007fd69cada40c": "13.73%",
            "[.] 0x00007fd69cad86d5": "3.49%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007f3734adc7c7": "27.00%",
            "[.] 0x00007f3734ad5593": "4.72%",
            "[.] 0x00007f3734adc7d4": "16.24%",
            "[.] 0x00007f3734adc7c2": "10.08%",
            "[.] 0x00007f3734ad5586": "7.70%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007f2118adb5a8": "2.34%",
            "[.] 0x00007f2118adb491": "1.01%",
            "[.] 0x00007f211856ecc5": "1.05%",
            "[.] 0x00007f2118adb3f5": "1.43%",
            "[.] 0x00007f2118adb369": "1.26%"
        }
    }
}