{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "99.91181657848324",
            "java.lang.invoke.MethodTypeForm.<init>(Ljava/lang/invoke/MethodType;)V": "0.08818342151675485"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.15748031496062992",
            " ": "0",
            "Queens.placeQueen(I)Z": "8.188976377952756",
            "Queens.getRowColumn(II)Z": "71.65354330708661",
            "java.util.Arrays.fill([ZZ)V": "0.47244094488188976",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(Ljava/lang/invoke/MemberName;Ljava/lang/invoke/LambdaForm$Name;)V": "0.15748031496062992",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.15748031496062992",
            "Queens.setRowColumn(IIZ)V": "18.89763779527559",
            "Queens.queens()Z": "0.31496062992125984"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.1392757660167131",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.6963788300835655",
            "Bounce$Ball.bounce()Z": "76.32311977715878",
            "Bounce.benchmark()Ljava/lang/Object;": "19.35933147632312",
            "som.Random.next()I": "0.8356545961002786",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.367688022284123",
            "java.lang.invoke.LambdaForm$NamedFunction.methodType()Ljava/lang/invoke/MethodType;": "0.1392757660167131",
            "java.io.BufferedWriter.flushBuffer()V": "0.1392757660167131"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.659286037053773",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "39.132399457749656",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.896972435607772",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.666064166290104",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "16.764572977858112",
            "havlak.HavlakLoopFinder$$Lambda$80+0x000000080100f7a8.331418503.apply(Ljava/lang/Object;)V": "1.6041572525982828",
            "havlak.HavlakLoopFinder.findLoops()V": "4.47356529597831",
            "som.Vector.<init>(I)V": "1.6041572525982828",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.541346588341617",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.801626751016719"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "12.89782244556114",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "4.606365159128979",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.9313232830820772",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "1.6750418760469012",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.2713567839195985",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.79564489112228",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.1876046901172534",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "9.212730318257957",
            "cd.Vector2D.compareNumbers(DD)I": "5.778894472361809",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "15.829145728643217"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "85.93272171253822",
            " ": "0",
            "List$Element.getNext()LList$Element;": "10.091743119266054",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.1529051987767584",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.5993883792048926",
            "List$Element.length()I": "0.1529051987767584",
            "List.makeList(I)LList$Element;": "1.0703363914373087"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "6.953642384105961",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.9735099337748347",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "10.927152317880795",
            "deltablue.Planner.chainTest(I)V": "2.980132450331126",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "25.165562913907287",
            "deltablue.Variable.<init>()V": "6.291390728476822",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "3.3112582781456954",
            "som.Vector.<init>(I)V": "3.3112582781456954",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "6.953642384105961",
            "som.Vector.append(Ljava/lang/Object;)V": "2.980132450331126"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.9603841536614646",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.30012004801920766",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.060024009603841535",
            "java.nio.Buffer.flip()Ljava/nio/Buffer;": "0.060024009603841535",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "34.63385354141656",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.0204081632653061",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.061224489795918",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.057623049219686",
            "som.Random.next()I": "14.945978391356542",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.78031212484994"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "5.995934959349594",
            "java.util.Arrays.fill([ZZ)V": "8.739837398373984",
            "Sieve.sieve([ZI)I": "85.26422764227642"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.73582295988935",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.426002766251729",
            "Towers.moveDisks(III)V": "4.287690179806362",
            "Towers$TowersDisk.getSize()I": "9.95850622406639",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "36.652835408022135",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "22.821576763485478",
            "Towers.moveTopDisk(II)V": "5.117565698478562"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.getMass()D": "0.7874015748031495",
            "nbody.Body.setY(D)V": "0.7874015748031495",
            "nbody.Body.setVX(D)V": "29.921259842519685",
            "nbody.NBodySystem.advance(D)V": "38.26771653543307",
            "nbody.Body.getY()D": "0.6299212598425197",
            "nbody.Body.getX()D": "1.1023622047244095",
            "nbody.Body.getZ()D": "7.559055118110236",
            "nbody.Body.setVZ(D)V": "8.503937007874015",
            "nbody.Body.setVY(D)V": "9.448818897637794",
            "nbody.Body.setX(D)V": "1.2598425196850394"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.668989547038327",
            "richards.Scheduler.schedule()V": "10.034843205574912",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.05574912891986",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.132404181184668",
            "Richards.benchmark()Ljava/lang/Object;": "9.337979094076655",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "5.29616724738676",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.2508710801393725",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "6.341463414634146",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "4.2508710801393725",
            "richards.RBObject.<init>()V": "12.125435540069686"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "2.754435107376284",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.9682539682539684",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "26.65732959850607",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.929038281979459",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.317460317460318",
            "java.lang.String.<init>([BB)V": "5.228758169934641",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.5014005602240896",
            "json.JsonPureStringParser.read()V": "13.071895424836601",
            "java.util.Arrays.copyOfRange([BII)[B": "6.722689075630252",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.5014005602240896"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "40.7185628742515",
            "Permute.permute(I)V": "59.041916167664674",
            "Permute.benchmark()Ljava/lang/Object;": "0.23952095808383234"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.8",
            "Richards::benchmark": "5.1",
            "richards.RBObject::append": "2.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "45.8",
            "richards.HandlerTaskDataRecord::workInAdd": "2.1",
            "richards.TaskControlBlock::<init>": "2.9",
            "richards.Scheduler::schedule": "5.7",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.nio.Buffer::limit": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::getLocal": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "java.lang.System::arraycopy": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::addMethod": "0.0",
            "Mandelbrot::mandelbrot": "97.6"
        },
        "List.hpl": {
            "List$Element::getNext": "9.8",
            "List::makeList": "0.6",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "List::tail": "2.3",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "List::isShorterThan": "79.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.6",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "13.1",
            "java.lang.String::<init>": "6.5",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "3.5",
            "java.util.Arrays::copyOfRange": "8.2",
            "java.lang.String::equals": "22.1",
            "AGCT::Unknown not Java[ERR=-3]": "5.4",
            "AGCT::Unknown Java[ERR=-5]": "10.0",
            "java.lang.String::isLatin1": "2.9",
            "json.JsonPureStringParser::readStringInternal": "7.8"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.7",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "5.7",
            "som.Vector::hasSome": "2.0",
            "som.Vector::forEach": "2.4"
        },
        "Permute.hpl": {
            "Permute::swap": "39.0",
            "Permute::permute": "51.7",
            "Permute::benchmark": "0.1",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "6.4",
            "java.lang.Object::clone": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "57.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Queens::benchmark": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "Queens::placeQueen": "12.1",
            "Queens::setRowColumn": "24.7",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.3",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "39.1",
            "java.util.Arrays::setAll": "34.9",
            "som.Random::next": "11.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.6",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.3",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "4.1"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.5",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Sieve::sieve": "86.6",
            "java.nio.charset.CharsetEncoder::encode": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.io.BufferedWriter::flushBuffer": "0.0",
            "java.util.Arrays::fill": "4.6"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "20.0",
            "deltablue.Variable::getValue": "3.7",
            "deltablue.Planner::addPropagate": "2.1",
            "som.Vector::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "10.8",
            "AGCT::Unknown Java[ERR=-5]": "18.6",
            "deltablue.UnaryConstraint::<init>": "6.4",
            "deltablue.AbstractConstraint::satisfy": "3.1",
            "som.Vector::forEach": "4.2",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.1"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "23.6",
            "Bounce$Ball::bounce": "67.6",
            "java.util.Arrays::setAll": "1.0",
            "Bounce::lambda$benchmark$0": "0.4",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "som.Random::next": "0.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.5",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "2.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.9",
            "nbody.Body::getZ": "7.3",
            "nbody.Body::setVX": "28.5",
            "nbody.Body::setVY": "5.7",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "nbody.NBodySystem::advance": "40.7"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.9",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "Towers::popDiskFrom": "21.9",
            "Towers::moveDisks": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "Towers::pushDisk": "34.1",
            "Towers$TowersDisk::setNext": "15.0",
            "AGCT::Unknown Java[ERR=-5]": "3.9",
            "Towers::moveTopDisk": "4.7",
            "Towers$TowersDisk::getNext": "3.0"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "15.3",
            "cd.RedBlackTree::forEach": "3.4",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::findNode": "3.2",
            "cd.RedBlackTree::treeMinimum": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "8.2",
            "AGCT::Unknown Java[ERR=-5]": "3.2",
            "cd.Vector2D::compareNumbers": "4.7",
            "cd.CollisionDetector::isInVoxel": "22.5",
            "cd.RedBlackTree::treeInsert": "13.2"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.93%",
            "deltablue.AbstractConstraint.satisfy": "3.16%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "5.69%",
            "som.Vector.append": "3.59%",
            "som.Vector.forEach": "26.38%",
            "itable": "3.27%",
            "deltablue.Planner.addPropagate": "2.67%",
            "deltablue.Plan.lambda$execute$0": "3.95%",
            "deltablue.BinaryConstraint.isSatisfied": "2.61%",
            "deltablue.ScaleConstraint.execute": "2.19%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.97%",
            "som.Random.next": "0.89%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.70%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.88%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.84%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.51%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.43%",
            "som.Random.next": "10.70%",
            "java.util.Arrays.setAll": "35.69%",
            "Storage.lambda$buildTreeDepth$0": "4.18%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.56%",
            "SpinPause": "0.20%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.56%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.30%",
            "Storage.buildTreeDepth": "43.17%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.11%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.53%",
            "Towers.popDiskFrom": "19.51%",
            "Towers.moveDisks": "8.52%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.75%",
            "Towers.moveTopDisk": "4.13%",
            "Towers$TowersDisk.getSize": "10.55%",
            "Towers$TowersDisk.getNext": "3.83%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.14%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.41%",
            "cd.CollisionDetector.isInVoxel": "19.05%",
            "cd.RedBlackTree.forEach": "6.30%",
            "Node::set_req_X(unsigned": "2.43%",
            "cd.RedBlackTree.put": "6.72%",
            "cd.RedBlackTree.treeInsert": "12.82%",
            "cd.RedBlackTree.treeMinimum": "5.43%",
            "cd.RedBlackTree.findNode": "2.94%",
            "cd.Vector2D.compareNumbers": "3.88%",
            "cd.RedBlackTree.leftRotate": "2.21%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.84%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.17%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.44%",
            "som.Vector.hasSome": "2.29%",
            "som.Vector.append": "3.91%",
            "som.IdentitySet.lambda$contains$0": "31.14%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "9.24%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "5.93%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.90%",
            "havlak.HavlakLoopFinder.doDFS": "5.70%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.81%",
            "Sieve.benchmark": "7.46%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "83.60%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.32%",
            "Permute.swap": "40.24%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.81%",
            "nbody.Body.getZ": "7.79%",
            "nbody.Body.getY": "0.71%",
            "nbody.Body.setX": "1.16%",
            "nbody.Body.setY": "1.73%",
            "nbody.Body.setVX": "27.59%",
            "nbody.Body.setVY": "5.55%",
            "nbody.Body.getMass": "0.51%",
            "nbody.Body.getVZ": "0.48%",
            "nbody.NBodySystem.advance": "41.77%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.11%",
            "Interpreter": "0.05%",
            "List.makeList": "1.14%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.55%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.56%",
            "List$Element.<init>": "0.18%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.53%",
            "java.lang.String.length": "2.88%",
            "java.lang.String.<init>": "5.70%",
            "json.JsonPureStringParser.isWhiteSpace": "2.26%",
            "java.lang.String.isLatin1": "2.94%",
            "json.JsonPureStringParser.readStringInternal": "7.26%",
            "java.util.Arrays.copyOfRange": "7.12%",
            "java.lang.String.equals": "21.28%",
            "json.JsonPureStringParser.read": "16.98%",
            "json.JsonPureStringParser.readValue": "2.17%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.05%",
            "Queens.getRowColumn": "67.96%",
            "Queens.setRowColumn": "18.26%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.64%",
            "Queens.placeQueen": "8.70%",
            "I2C/C2I": "0.03%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.15%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.92%",
            "Richards.benchmark": "5.08%",
            "richards.Packet.<init>": "7.30%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.82%",
            "itable": "35.82%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.14%",
            "richards.TaskControlBlock.<init>": "2.87%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.59%",
            "richards.RBObject.<init>": "6.19%",
            "richards.RBObject.append": "3.03%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "3.7",
            "Towers.moveDisks": "95.0",
            "java.io.PrintStream.println": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "11.5",
            "deltablue.Planner.removePropagateFrom": "9.8",
            "som.Vector.<init>": "25.9",
            "deltablue.Variable.<init>": "5.7",
            "som.Vector.forEach": "7.5",
            "deltablue.Planner.addPropagate": "1.9",
            "deltablue.AbstractConstraint.<init>": "8.5",
            "deltablue.Planner.constraintsConsuming": "4.4",
            "deltablue.Planner.addConstraintsConsumingTo": "15.8"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Dictionary$Entry.<init>": "3.4",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.6",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.6",
            "som.Set.contains": "4.0"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "13.8",
            "richards.Packet.<init>": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "richards.HandlerTaskDataRecord.workInAdd": "0.0",
            "richards.Scheduler.queuePacket": "0.0",
            "richards.TaskControlBlock.runTask": "85.0",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "55.2",
            "Bounce$Ball.<init>": "43.7",
            "Bounce.lambda$benchmark$0": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "3.2",
            "som.Vector.<init>": "5.8",
            "cd.Vector3D.<init>": "7.4",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "15.3",
            "cd.RedBlackTree$Node.<init>": "7.6",
            "cd.RedBlackTree$Entry.<init>": "5.1"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "Run.runBenchmark": "0.2",
            "NBody.innerBenchmarkLoop": "0.2",
            "nbody.NBodySystem.advance": "99.3",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.6",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.8",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.9",
            "List$Element.length": "0.2",
            "Run.printTotal": "0.1",
            "List.isShorterThan": "74.4",
            "List$Element.<init>": "20.8",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.6",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "java.util.Arrays.fill": "0.2",
            "Queens.getRowColumn": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "23.6",
            "Queens.placeQueen": "75.5",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.242434961301033",
            "java.lang.String.<init>(byte[], byte) String.java": "6.430177619444656",
            "json.JsonPureStringParser.isWhiteSpace()": "2.214979324052318",
            "json.JsonPureStringParser.read()": "20.157996243799325",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.9898009887398205",
            "java.lang.String.length() String.java": "2.3455199306029297",
            "java.lang.String.substring(int, int) String.java": "10.464303460589372",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.162889411051316",
            "json.JsonPureStringParser.readStringInternal()": "3.4530095926290887",
            "json.JsonPureStringParser.readValue()": "3.212983316068286"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.5843854226692513",
            "som.Vector.hasSome(TestInterface)": "2.071437302460405",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.3409118689646755",
            "havlak.HavlakLoopFinder.findLoops()": "11.483489618803153",
            "som.Vector.<init>(int)": "4.020640159254022",
            "som.Vector.append(Object)": "3.6124644210452797",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.4934080709658275",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.330591789337665",
            "som.Vector.removeAll()": "2.5822026647109158",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.004295667662014"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.367128011110578",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.2394521335185096",
            "java.lang.ClassLoader.getNamedPackage(String, Module) ClassLoader.java": "0.17559823124690704",
            "Queens.getRowColumn(int, int)": "62.54489727503471",
            "Queens.queens()": "0.30330603579011217",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.17559823124690704",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.14367128011110578",
            "Queens.setRowColumn(int, int, boolean)": "21.199495554172053",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.14367128011110578",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.14367128011110578"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.300679925929067",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.8022984606250796",
            "richards.TaskControlBlock.runTask()": "37.05666991787173",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.071074169882532",
            "richards.Scheduler.schedule()": "2.6150997271814878",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.5478563250074213",
            "richards.RBObject.append(Packet, Packet)": "3.1522553468187664",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "2.8448044329474294",
            "Richards.benchmark()": "28.75196132479538",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.865908994529494"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.8083040153519614",
            "jdk.internal.reflect.Reflection.getCallerClass() Reflection.java (native)": "0.12793300962405144",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.9362370249760128",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.596080597796075",
            "som.Random.next()": "13.566714156950546",
            "Storage$$Lambda$12.0x00000008000c2a90.apply(int)": "0.4419503968830868",
            "Storage$$Lambda$12.0x00000008000c2a90.<init>(Storage, int, Random)": "0.29075684005466235",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.15119355682842442",
            "Storage.buildTreeDepth(int, Random)": "36.58302561567762",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.0587619573750477"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "36.44726675680896",
            "Towers.popDiskFrom(int)": "29.276125169016805",
            "Towers.moveDisks(int, int, int)": "6.7003090593007535",
            "Towers$TowersDisk.getSize()": "1.919548000772648",
            "sun.nio.fs.LinuxFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) LinuxFileSystemProvider.java": "0.2173073208421866",
            "Towers.moveTopDisk(int, int)": "6.953834266949971",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.20523469190650953",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.42080355418196",
            "sun.invoke.util.VerifyAccess.isTypeVisible(MethodType, Class) VerifyAccess.java": "0.3259609812632799",
            "java.lang.invoke.MemberName.isMethod() MemberName.java": "0.1086536604210933"
        },
        "YourKit_Permute.txt": {
            "java.lang.Long.valueOf(long) Long.java": "0.27148092846477534",
            "java.nio.LongBuffer.limit(int) LongBuffer.java": "0.02262341070539794",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11311705352698971",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.056558526763494855",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.13574046423238767",
            "Permute.permute(int)": "54.72603049635762",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.03393511605809692",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.15836387493778561",
            "com.yourkit.probes.Table.createRow() a": "0.01131170535269897",
            "Permute.swap(int, int)": "44.46631374145966"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.955947136563877",
            "som.Vector.forEach(ForEachInterface)": "43.711978183343824",
            "deltablue.EqualityConstraint.execute()": "4.6150618837843504",
            "deltablue.BinaryConstraint.isSatisfied()": "4.274176631004825",
            "som.Vector.<init>(int)": "5.296832389343402",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "1.9666456891126494",
            "deltablue.ScaleConstraint.execute()": "1.5470946087686175",
            "som.Vector.append(Object)": "2.648416194671701",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "4.274176631004825",
            "deltablue.BinaryConstraint.recalculate()": "1.9666456891126494"
        },
        "YourKit_List.txt": {
            "java.lang.StringLatin1.replace(byte[], char, char) StringLatin1.java": "0.2683663200268366",
            "List.tail(List$Element, List$Element, List$Element)": "4.213351224421335",
            "List$Element.<init>(Object)": "0.41596779604159667",
            "List.makeList(int)": "0.20127474002012746",
            "java.util.HashMap.getNode(Object) HashMap.java": "0.16101979201610195",
            "List$Element.setNext(List$Element)": "0.12076484401207646",
            "List$Element.getNext()": "20.8520630660852",
            "List$Element.length()": "0.12076484401207646",
            "List.isShorterThan(List$Element, List$Element)": "73.2371687353237",
            "com.yourkit.probes.Table.createRow() a": "0.12076484401207646"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.0969145400339495",
            "nbody.Body.getZ()": "6.247949445815442",
            "nbody.Body.setX(double)": "0.41367701810193563",
            "nbody.Body.getMass()": "0.4422064676262071",
            "nbody.Body.getX()": "0.5563242657232929",
            "nbody.NBodySystem.advance(double)": "47.03079754076144",
            "nbody.Body.setVY(double)": "5.877066601999913",
            "nbody.Body.setVZ(double)": "7.959716417271727",
            "nbody.Body.setVX(double)": "26.803417828053007",
            "nbody.Body.setY(double)": "0.5563242657232929"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.82270126040093",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.0",
            "Run.runBenchmark()": "8.777165326686094E-4",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.0",
            "sun.nio.cs.StreamEncoder.implWrite(CharBuffer) StreamEncoder.java": "0.0",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "8.777165326686094E-4",
            "java.lang.invoke.LambdaFormBuffer.changeName(int, LambdaForm$Name) LambdaFormBuffer.java": "0.017554330653372186",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.07899448794017483",
            "sun.nio.cs.StreamEncoder.write(char[], int, int) StreamEncoder.java": "0.0",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitSource(String, String) ClassWriter.java": "0.07899448794017483"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.274567454483773",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.37818990538656",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "16.65347355723925",
            "cd.RedBlackTree.findNode(Comparable)": "7.91586565645143",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.900787817105809",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.118436428059859",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.133514267405481",
            "cd.RedBlackTree.put(Comparable, Object)": "6.694560669456067",
            "cd.Vector2D.compareNumbers(double, double)": "8.488823551585059",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.7468430773870103"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.11741599419324536",
            "java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(LambdaForm$Name, int) InvokerBytecodeGenerator.java": "0.11741599419324536",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.28820289483796585",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.4443875154775623",
            "Benchmark.innerBenchmarkLoop(int)": "0.09606763161265529",
            "Sieve.benchmark()": "88.51031125912641",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.10674181290295033",
            "com.yourkit.probes.Table.createRow() a": "0.09606763161265529",
            "com.yourkit.probes.builtin.Files$RandomAccessFile_open_Probe.onEnter() a": "0.0640450877417702",
            "Sieve.sieve(boolean[], int)": "8.069681055463045"
        },
        "YourKit_Bounce.txt": {
            "java.util.jar.Attributes$Name.<clinit>() Attributes.java": "0.6578648881629688",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.22684996143550654",
            "Bounce.benchmark()": "68.32720838437456",
            "java.net.URI.create(String) URI.java": "0.22684996143550654",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.22684996143550654",
            "Bounce.lambda$benchmark$0(Random, int)": "0.6578648881629688",
            "som.Random.next()": "0.43101492672746233",
            "Bounce$Ball.bounce()": "27.335420352978534",
            "java.util.zip.ZipFile.<init>(File, int, Charset) ZipFile.java": "0.29490494986615845",
            "Bounce$Ball.<init>(Random)": "1.111564811033982"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.5905,
        "JavaFlightRecorder_Bounce.jfr": 24.197000000000003,
        "rebench_test_Async_Bounce.txt": 67.5895,
        "Mandelbrot.hpl": 37.255,
        "rebench_test_Async_Towers.txt": 78.18350000000001,
        "List.hpl": 22.717,
        "JavaFlightRecorder_Storage.jfr": 57.7755,
        "JavaFlightRecorder_Sieve.jfr": 31.948999999999998,
        "JavaFlightRecorder_NBody.jfr": 21.213,
        "Permute.hpl": 30.0855,
        "Queens.hpl": 20.581,
        "rebench_test_Async_Sieve.txt": 86.6685,
        "JavaFlightRecorder_Richards.jfr": 91.0975,
        "Storage.hpl": 59.6595,
        "DeltaBlue.hpl": 14.751999999999999,
        "JavaFlightRecorder_Json.jfr": 82.665,
        "NBody.hpl": 21.465,
        "Bounce.hpl": 15.363,
        "Towers.hpl": 26.363,
        "rebench_test_Async_List.txt": 71.184,
        "rebench_test_Async_Richards.txt": 276.60699999999997,
        "JavaFlightRecorder_Mandelbrot.jfr": 38.1425,
        "Richards.hpl": 91.042,
        "rebench_test_Async_DeltaBlue.txt": 44.352000000000004,
        "JavaFlightRecorder_Havlak.jfr": 159.2955,
        "JavaFlightRecorder_CD.jfr": 41.468999999999994,
        "JavaFlightRecorder_List.jfr": 22.6515,
        "rebench_test_Async_Mandelbrot.txt": 118.126,
        "rebench_test_Async_Storage.txt": 168.149,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.153500000000001,
        "JavaFlightRecorder_Towers.jfr": 25.743499999999997,
        "Json.hpl": 79.631,
        "Havlak.hpl": 157.96300000000002,
        "rebench_test_Async_CD.txt": 151.6055,
        "rebench_test_Async_Havlak.txt": 511.179,
        "Sieve.hpl": 31.585,
        "rebench_test_Async_Permute.txt": 85.691,
        "JavaFlightRecorder_Permute.jfr": 29.821,
        "rebench_test_Async_NBody.txt": 60.269,
        "CD.hpl": 42.28,
        "rebench_test_Async_Queens.txt": 64.2885,
        "rebench_test_Async_Json.txt": 271.7845
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007f17d8ad5bf9": "4.83%",
            "[.] 0x00007f17d8ad5c01": "4.28%",
            "[.] 0x00007f17d8ad5c10": "5.16%",
            "[.] 0x00007f17d8ad5bf5": "23.43%",
            "[.] 0x00007f17d8ad5bfd": "19.45%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007f0a04ad3afc": "19.53%",
            "[.] 0x00007f0a04ad3b96": "2.66%",
            "[.] 0x00007f0a04ad395c": "14.46%",
            "[.] 0x00007f0a04ad3a90": "25.27%",
            "[.] 0x00007f0a04ad39d4": "11.12%"
        },
        "Havlak.data": {
            "[.] 0x00007f7478af5453": "1.69%",
            " ": "0",
            "[.] 0x00007f7478b1bc68": "1.41%",
            "[.] 0x00007f7478b2f675": "16.47%",
            "[.] 0x00007f7478b2f67c": "16.39%",
            "[.] 0x00007f7478adf5fa": "1.99%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007f70b4b38f34": "21.58%",
            "[.] 0x00007f70b4b38ec5": "1.53%",
            "[.] 0x00007f70b4afc9c0": "1.49%",
            "[.] 0x00007f70b4afca50": "3.55%",
            "[.] 0x00007f70b4b38ef3": "1.56%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007f5d80ad40ad": "26.34%",
            "[.] 0x00007f5d80ad4116": "4.22%",
            "[.] 0x00007f5d80ad3f6d": "3.38%",
            "[.] 0x00007f5d80ad3f57": "3.32%",
            "[.] 0x00007f5d80ad409e": "7.75%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007f8ec8ad5405": "6.88%",
            "[.] 0x00007f8ec8ad4f46": "3.76%",
            "[.] 0x00007f8ec8ad53a3": "3.78%",
            "[.] 0x00007f8ec8ad50dd": "3.36%",
            "[.] 0x00007f8ec8ad5382": "10.35%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007ff44caf21ba": "5.96%",
            "[.] 0x00007ff44c646f9c": "6.95%",
            "[.] 0x00007ff44c646f3a": "10.24%",
            "[.] 0x00007ff44c646f1b": "4.98%",
            "[.] 0x00007ff44c646f2f": "8.16%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f5138ad69a5": "4.65%",
            "[.] 0x00007f5138ad6916": "6.89%",
            "[.] 0x00007f5138ad69c9": "5.03%",
            "[.] 0x00007f5138ad69ad": "4.71%",
            "[.] 0x00007f5138ad695a": "5.89%"
        },
        "CD.data": {
            "[.] 0x00007f2408afc980": "3.64%",
            " ": "0",
            "[.] 0x00007f2408adb697": "2.14%",
            "[.] 0x00007f2408b2253a": "2.89%",
            "[.] 0x00007f2408adb399": "2.37%",
            "[.] 0x00007f2408afc968": "5.18%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007f5dfcad8bd8": "5.81%",
            "[.] 0x00007f5dfcad8ba6": "6.24%",
            "[.] 0x00007f5dfcad8b80": "4.86%",
            "[.] 0x00007f5dfcad8b74": "6.25%",
            "[.] 0x00007f5dfcad8b42": "5.71%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007fc690ad3c75": "5.17%",
            "[.] 0x00007fc690ad3b35": "24.49%",
            "[.] 0x00007fc690ad3d55": "6.10%",
            "[.] 0x00007fc690ad3b45": "11.73%",
            "[.] 0x00007fc690ad3c85": "4.92%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007fd82cadab8e": "26.14%",
            "[.] 0x00007fd82cadab82": "3.73%",
            "[.] 0x00007fd82cadab8c": "14.28%",
            "[.] 0x00007fd82cad8b55": "3.30%",
            "[.] 0x00007fd82cadab38": "21.01%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007f7708adcb47": "26.71%",
            "[.] 0x00007f7708ad59ef": "5.21%",
            "[.] 0x00007f7708adcb54": "15.90%",
            "[.] 0x00007f7708adcb42": "9.96%",
            "[.] 0x00007f7708ad59e2": "8.19%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007fb468adb5e6": "1.36%",
            "[.] 0x00007fb468adb82a": "2.52%",
            "[.] 0x00007fb468adb716": "1.00%",
            "[.] 0x00007fb468adb80b": "1.02%",
            "[.] 0x00007fb468adb674": "1.44%"
        }
    }
}