{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.util.Objects.checkIndex(II)I": "0.0881057268722467",
            "Mandelbrot.mandelbrot(I)I": "99.91189427312776"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.31007751937984496",
            " ": "0",
            "Queens.placeQueen(I)Z": "9.612403100775193",
            "Queens.getRowColumn(II)Z": "68.06201550387597",
            "java.util.Arrays.fill([ZZ)V": "0.46511627906976744",
            "Queens.setRowColumn(IIZ)V": "20.62015503875969",
            "Queens.queens()Z": "0.9302325581395349"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.6527415143603134",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.5665796344647522",
            "Bounce$Ball.bounce()Z": "79.76501305483029",
            "Bounce.benchmark()Ljava/lang/Object;": "15.14360313315927",
            "som.Random.next()I": "0.39164490861618806",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.480417754569191"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.522727272727273",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "39.13636363636364",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.295454545454546",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "15.954545454545455",
            "havlak.HavlakLoopFinder$$Lambda$80+0x000000080100f7a8.331418503.apply(Ljava/lang/Object;)V": "1.7045454545454546",
            "som.Vector.<init>(I)V": "5.545454545454546",
            "havlak.HavlakLoopFinder.findLoops()V": "3.8636363636363638",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "3.8181818181818183",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.6136363636363638",
            "som.Vector.append(Ljava/lang/Object;)V": "1.9090909090909092"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "14.774624373956595",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "2.5876460767946576",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.0868113522537564",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "1.9198664440734556",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.757929883138564",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.62604340567613",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "5.342237061769616",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.347245409015025",
            "cd.Vector2D.compareNumbers(DD)I": "5.676126878130217",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "16.026711185308848"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "85.80246913580247",
            " ": "0",
            "List$Element.getNext()LList$Element;": "10.339506172839506",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.30864197530864196",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.5432098765432098",
            "java.lang.invoke.MemberName$Factory.resolve(BLjava/lang/invoke/MemberName;Ljava/lang/Class;IZ)Ljava/lang/invoke/MemberName;": "0.15432098765432098",
            "List.makeList(I)LList$Element;": "1.8518518518518516"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "7.407407407407408",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "6.0606060606060606",
            "deltablue.Variable.setDeterminedBy(Ldeltablue/AbstractConstraint;)V": "21.54882154882155",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "10.101010101010102",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "4.377104377104377",
            "deltablue.AbstractConstraint.addConstraint(Ldeltablue/Planner;)V": "3.367003367003367",
            "som.Vector.<init>(I)V": "3.367003367003367",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "5.3872053872053876",
            "som.Dictionary.hash(Lsom/Dictionary$CustomHash;)I": "4.377104377104377",
            "som.Vector.append(Ljava/lang/Object;)V": "3.367003367003367"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.49720323182100684",
            " ": "0",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.435052827843381",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "36.7930391547545",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.5537600994406464",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "4.909881914232442",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.06463642013673",
            "som.Random.next()I": "11.311373523927905",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.062150403977625855",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.3729024238657551"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "5.65843621399177",
            "java.util.Arrays.fill([ZZ)V": "5.65843621399177",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.102880658436214",
            "Sieve.sieve([ZI)I": "88.58024691358025"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.60752688172043",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.225806451612903",
            "Towers.moveDisks(III)V": "4.569892473118279",
            "Towers$TowersDisk.getSize()I": "9.00537634408602",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.76881720430107",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.639784946236556",
            "Towers.moveTopDisk(II)V": "6.182795698924731"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.4263074484944531",
            "nbody.Body.getMass()D": "0.7923930269413628",
            "nbody.Body.setVX(D)V": "30.903328050713153",
            "nbody.NBodySystem.advance(D)V": "43.74009508716323",
            "nbody.Body.setZ(D)V": "0.4754358161648177",
            "nbody.Body.getY()D": "0.4754358161648177",
            "nbody.Body.getZ()D": "6.6561014263074485",
            "nbody.Body.setVZ(D)V": "8.716323296354991",
            "nbody.Body.setVY(D)V": "5.071315372424722",
            "nbody.Body.setX(D)V": "1.109350237717908"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.774714189643578",
            "richards.Scheduler.schedule()V": "11.028917283120377",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.651647612642904",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "7.195696032279757",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.034969737726967",
            "Richards.benchmark()Ljava/lang/Object;": "8.002689979825151",
            "richards.Packet.setLink(Lrichards/Packet;)V": "5.716207128446537",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.5057162071284464",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.976462676529926",
            "richards.RBObject.<init>()V": "11.230665770006725"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.0190431955411055",
            "json.JsonPureStringParser.isDigit()Z": "3.5299581978634462",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "22.387366465397122",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.341384115188109",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.682768230376219",
            "java.lang.String.<init>([BB)V": "3.5764050162563863",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.644681839294009",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "3.297724105898746",
            "json.JsonPureStringParser.read()V": "15.838365071992568",
            "java.util.Arrays.copyOfRange([BII)[B": "6.4096609382257315"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.11961722488038277",
            "Permute.swap(II)V": "44.13875598086124",
            "Permute.permute(I)V": "55.74162679425837"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.3",
            "Richards::benchmark": "4.4",
            "richards.RBObject::append": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "AGCT::Unknown Java[ERR=-5]": "46.1",
            "richards.TaskControlBlock::<init>": "3.1",
            "richards.Scheduler::schedule": "5.3",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.7"
        },
        "Mandelbrot.hpl": {
            "java.util.zip.ZipUtils::LG": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.System::lineSeparator": "0.0",
            "Mandelbrot::verifyResult": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.7"
        },
        "List.hpl": {
            "List$Element::getNext": "8.5",
            "List::makeList": "0.6",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "List::tail": "1.7",
            "List::isShorterThan": "81.9",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "3.0",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "14.7",
            "java.lang.String::<init>": "5.7",
            "json.JsonPureStringParser::readArray": "2.4",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "7.8",
            "java.lang.String::equals": "21.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "9.3"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.3",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.0",
            "havlak.HavlakLoopFinder::findLoops": "6.2",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.8",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.3",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.3",
            "havlak.HavlakLoopFinder::doDFS": "6.3",
            "som.Vector::<init>": "1.8",
            "som.Vector::forEach": "2.3"
        },
        "Permute.hpl": {
            "Permute::swap": "39.9",
            "Permute::permute": "51.0",
            "java.lang.invoke.MethodTypeForm::canonicalizeAll": "0.0",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "5.9"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "65.5",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Queens::benchmark": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "7.9",
            "Queens::setRowColumn": "20.3",
            "Queens::queens": "0.5",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.1",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.6",
            "java.util.Arrays::setAll": "34.6",
            "som.Random::next": "11.4",
            "AGCT::Unknown not Java[ERR=-3]": "5.6",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.5"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "5.8",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "84.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.io.PrintStream::println": "0.0",
            "java.util.Arrays::fill": "6.7"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "4.7",
            "deltablue.Variable::setDeterminedBy": "12.8",
            "som.Vector::append": "4.5",
            "AGCT::Unknown not Java[ERR=-3]": "11.9",
            "AGCT::Unknown Java[ERR=-5]": "15.7",
            "deltablue.AbstractConstraint::satisfy": "3.4",
            "deltablue.Strength$Sym::customHash": "3.9",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "3.2",
            "som.Vector::forEach": "9.2",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.3"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "20.2",
            "Bounce$Ball::bounce": "69.7",
            "java.util.Arrays::setAll": "1.1",
            "Bounce::lambda$benchmark$0": "0.4",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "som.Random::next": "1.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "2.8",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.1"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.2",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "8.6",
            "nbody.Body::getZ": "7.9",
            "nbody.Body::setVX": "28.5",
            "nbody.Body::setVY": "6.1",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "nbody.NBodySystem::advance": "40.4"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.7",
            "Towers::popDiskFrom": "20.8",
            "Towers::moveDisks": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "Towers::pushDisk": "34.0",
            "Towers$TowersDisk::setNext": "15.7",
            "AGCT::Unknown Java[ERR=-5]": "4.5",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.2",
            "Towers$TowersDisk::getNext": "3.7"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.7",
            "cd.RedBlackTree::forEach": "3.5",
            "cd.RedBlackTree::put": "6.7",
            "cd.RedBlackTree::leftRotate": "2.7",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "9.1",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "cd.Vector2D::compareNumbers": "4.4",
            "cd.CollisionDetector::isInVoxel": "22.4",
            "cd.RedBlackTree::treeInsert": "14.0"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.14%",
            "deltablue.AbstractConstraint.satisfy": "3.22%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "6.32%",
            "som.Vector.append": "2.86%",
            "som.Vector.<init>": "4.52%",
            "deltablue.Variable.<init>": "4.09%",
            "som.Vector.forEach": "4.55%",
            "itable": "3.77%",
            "deltablue.Planner.addPropagate": "3.40%",
            "deltablue.AbstractConstraint.<init>": "12.34%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "72.98%",
            "som.Random.next": "0.89%",
            "Interpreter": "0.07%",
            "java.util.Arrays.setAll": "0.73%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "Bounce.benchmark": "18.29%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.07%",
            "Bounce$Ball.<init>": "1.82%",
            "Bounce.lambda$benchmark$0": "0.63%",
            "Benchmark.innerBenchmarkLoop": "0.13%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.32%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "LinearScanWalker::alloc_free_reg(Interval*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "10.47%",
            "java.util.Arrays.setAll": "35.69%",
            "Storage.lambda$buildTreeDepth$0": "4.09%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.56%",
            "SpinPause": "0.18%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.58%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.34%",
            "Storage.buildTreeDepth": "43.10%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.17%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.67%",
            "Towers.popDiskFrom": "19.17%",
            "Towers.moveDisks": "8.67%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.97%",
            "Towers.moveTopDisk": "4.08%",
            "Towers$TowersDisk.getSize": "10.44%",
            "Towers$TowersDisk.getNext": "3.83%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.42%",
            "cd.CollisionDetector.isInVoxel": "19.22%",
            "cd.RedBlackTree.forEach": "6.26%",
            "Node::set_req_X(unsigned": "2.34%",
            "cd.RedBlackTree.put": "6.42%",
            "cd.RedBlackTree.treeInsert": "12.74%",
            "cd.RedBlackTree.treeMinimum": "5.14%",
            "cd.RedBlackTree.findNode": "2.80%",
            "cd.Vector2D.compareNumbers": "4.14%",
            "cd.RedBlackTree.leftRotate": "2.13%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.65%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.14%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.36%",
            "som.Vector.hasSome": "2.39%",
            "som.Vector.append": "3.09%",
            "som.IdentitySet.lambda$contains$0": "31.01%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.06%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.45%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.95%",
            "havlak.HavlakLoopFinder.doDFS": "5.87%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.38%",
            "Sieve.benchmark": "7.04%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "84.51%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.02%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.29%",
            "Permute.swap": "40.22%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "__futex_abstimed_wait_common": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.83%",
            "nbody.Body.getZ": "7.80%",
            "nbody.Body.getY": "0.71%",
            "nbody.Body.setX": "1.16%",
            "nbody.Body.setY": "1.74%",
            "nbody.Body.setVX": "27.63%",
            "nbody.Body.setVY": "5.61%",
            "nbody.Body.getMass": "0.48%",
            "nbody.Body.getVZ": "0.46%",
            "nbody.NBodySystem.advance": "41.84%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.18%",
            "Interpreter": "0.06%",
            "List.makeList": "1.23%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.58%",
            "List$Element.length": "0.13%",
            "List.verifyResult": "0.11%",
            "List.isShorterThan": "81.26%",
            "List$Element.<init>": "0.18%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.40%",
            "java.lang.String.length": "3.10%",
            "java.lang.String.<init>": "6.38%",
            "json.JsonPureStringParser.isWhiteSpace": "2.16%",
            "java.lang.String.isLatin1": "2.87%",
            "json.JsonPureStringParser.readStringInternal": "7.54%",
            "java.util.Arrays.copyOfRange": "7.84%",
            "java.lang.String.equals": "21.57%",
            "json.JsonPureStringParser.read": "15.01%",
            "json.JsonPureStringParser.readValue": "2.21%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.04%",
            "Queens.getRowColumn": "68.09%",
            "Queens.setRowColumn": "17.90%",
            "Interpreter": "0.06%",
            "clock_gettime@GLIBC_2.2.5": "0.03%",
            "Queens.queens": "0.61%",
            "Queens.placeQueen": "8.74%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.67%",
            "Richards.benchmark": "4.38%",
            "richards.Packet.<init>": "7.02%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.67%",
            "itable": "36.72%",
            "richards.TaskControlBlock.<init>": "3.37%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.34%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.95%",
            "richards.RBObject.<init>": "6.65%",
            "richards.RBObject.append": "2.67%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.4",
            "Towers.moveDisks": "95.6",
            "Towers.popDiskFrom": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.4",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.7",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.8",
            "deltablue.AbstractConstraint.satisfy": "10.9",
            "deltablue.Planner.removePropagateFrom": "8.8",
            "som.Vector.<init>": "33.0",
            "deltablue.Variable.<init>": "4.5",
            "som.Vector.forEach": "7.1",
            "deltablue.Planner.addPropagate": "1.3",
            "deltablue.Planner.constraintsConsuming": "5.6",
            "deltablue.AbstractConstraint.<init>": "4.2",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "41.8",
            "havlak.HavlakLoopFinder.stepD": "3.5",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.5",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "4.2"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.schedule": "15.1",
            "richards.Packet.<init>": "0.1",
            "richards.Scheduler.createIdler": "0.0",
            "richards.TaskControlBlock.runTask": "83.8",
            "richards.RBObject.<init>": "0.3",
            "richards.RBObject.append": "0.4",
            "richards.Scheduler.createTask": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "som.Random.<init>": "0.6",
            "Bounce.benchmark": "54.7",
            "Bounce$Ball.<init>": "43.9",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "7.8",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "44.0",
            "cd.RedBlackTree$InsertResult.<init>": "15.1",
            "cd.RedBlackTree$Node.<init>": "7.8",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "nbody.NBodySystem.energy": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.1",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "99.0",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.6",
            "List$Element.length": "0.2",
            "List.isShorterThan": "76.9",
            "List$Element.<init>": "19.4"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.getSuiteFromName": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.1",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.4",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.2",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "21.4",
            "Queens.placeQueen": "77.7",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.3",
            "java.util.Arrays.fill0": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.855530474040638",
            "java.lang.String.<init>(byte[], byte) String.java": "6.258978042273755",
            "json.JsonPureStringParser.isWhiteSpace()": "2.377043573431836",
            "json.JsonPureStringParser.read()": "21.838019016348593",
            "java.lang.String.length() String.java": "3.5185375196661886",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.2962240919351538",
            "java.lang.String.substring(int, int) String.java": "10.175114576920448",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "5.9853615158355575",
            "json.JsonPureStringParser.readStringInternal()": "3.7066488815924488",
            "json.JsonPureStringParser.readValue()": "2.7660920719611473"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.810588668267293",
            "som.Vector.hasSome(TestInterface)": "2.0548185275407023",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.914722840468972",
            "havlak.HavlakLoopFinder.findLoops()": "11.393508701214492",
            "som.Vector.<init>(int)": "3.9738174935595243",
            "som.Vector.append(Object)": "3.8073289987907684",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.5336043882862205",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "3.6649375230017003",
            "som.Vector.removeAll()": "2.760203992218854",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.43800494207953"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.563028853101265",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.7546442735344647",
            "Run.runBenchmark()": "0.0016056261139031165",
            "Queens.getRowColumn(int, int)": "60.4839357107304",
            "Queens.queens()": "0.4656315730319037",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6261941844222154",
            "Queens.setRowColumn(int, int, boolean)": "22.510878116921692",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.14450635025128047",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.4495753118928726"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.725142709656659",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.8469294379099868",
            "richards.TaskControlBlock.runTask()": "35.84920206614756",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.1441375912151854",
            "richards.Scheduler.schedule()": "2.8324053993356415",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.067042533008417",
            "richards.RBObject.append(Packet, Packet)": "2.708382914394318",
            "Richards.benchmark()": "29.63802194192396",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "3.673747121505164",
            "richards.Packet.setLink(Packet)": "1.7564265434933446"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$10.0x00000008000c2a98.<init>(Storage, int, Random)": "0.28060128847530424",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.6986399427344311",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.5382963493199715",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.6377952755905516",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.874731567644965",
            "som.Random.next()": "14.161775232641377",
            "java.lang.invoke.LambdaForm$NamedFunction.methodType() LambdaForm.java": "0.10880458124552614",
            "Storage.buildTreeDepth(int, Random)": "36.11166785969937",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.74874731567645",
            "sun.management.MappedMXBeanType$MapMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.28060128847530424"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "30.918409085440672",
            "Towers.popDiskFrom(int)": "27.754385120666008",
            "Towers.moveDisks(int, int, int)": "12.475638218522171",
            "Towers$TowersDisk.getSize()": "1.6842713120473518",
            "sun.nio.cs.US_ASCII$Encoder.encodeLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.1082745843459012",
            "Towers.moveTopDisk(int, int)": "9.588315969298138",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitField(int, String, String, String, Object) ClassWriter.java": "0.0962440749741344",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.1323356030894348",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.047231779793556",
            "java.lang.Object.equals(Object) Object.java": "0.060152546858834"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.reflect.UTF8.encode(String) UTF8.java": "0.08985533291400843",
            "Run.runBenchmark()": "0.0011231916614251056",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.1010872495282595",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.15724683259951475",
            "java.lang.invoke.StringConcatFactory.generateMHInlineCopy(MethodType, List) StringConcatFactory.java": "0.0011231916614251056",
            "Permute.permute(int)": "55.45197232455745",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.02246383322850211",
            "java.lang.invoke.InvokerBytecodeGenerator.classData(Object) InvokerBytecodeGenerator.java": "0.05615958307125527",
            "Permute.benchmark()": "0.21340641567077004",
            "Permute.swap(int, int)": "43.905562045107374"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.269191958394784",
            "som.Vector.forEach(ForEachInterface)": "17.95648011591503",
            "deltablue.BinaryConstraint.getOutput()": "3.260110222774199",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "7.322311055913479",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "4.269191958394784",
            "som.Vector.<init>(int)": "3.5447230200005175",
            "deltablue.ScaleConstraint.execute()": "3.182488550803385",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "5.485264819270874",
            "java.lang.Object.<init>() Object.java": "4.243318067737846",
            "som.Dictionary.getBucket(int)": "13.63554037620637"
        },
        "YourKit_List.txt": {
            "java.lang.invoke.LambdaForm.compileToBytecode() LambdaForm.java": "0.12109143748990903",
            "List.tail(List$Element, List$Element, List$Element)": "3.081104353909908",
            "List$Element.<init>(Object)": "0.269092083310909",
            "List.makeList(int)": "0.659275604111727",
            "List$Element.getNext()": "21.016091706581992",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.25563747914536356",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.20181906248318174",
            "List.isShorterThan(List$Element, List$Element)": "73.85232226467897",
            "java.util.concurrent.atomic.AtomicLong.addAndGet(long) AtomicLong.java": "0.12109143748990903",
            "java.nio.Buffer.limit(int) Buffer.java": "0.12109143748990903"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.7060687301974167",
            "nbody.Body.getZ()": "5.964072199681725",
            "nbody.Body.getMass()": "0.6881621768863528",
            "nbody.Body.getX()": "1.275967369643446",
            "nbody.Body.getVZ()": "0.47311149660936763",
            "nbody.NBodySystem.advance(double)": "43.81299192843113",
            "nbody.Body.setVY(double)": "6.021419047755588",
            "nbody.Body.setVZ(double)": "7.698814353916072",
            "nbody.Body.setVX(double)": "29.218219093633063",
            "nbody.Body.setY(double)": "1.232957233588049"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.71227649272868",
            "sun.nio.fs.UnixFileSystemProvider.readAttributes(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.0",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.060847871628375974",
            "sun.nio.fs.UnixFileAttributes.get(UnixPath, boolean) UnixFileAttributes.java": "0.0",
            "sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixPath) UnixNativeDispatcher.java": "0.0",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.07823297780791195",
            "sun.nio.fs.UnixNativeDispatcher.stat(UnixPath, UnixFileAttributes) UnixNativeDispatcher.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.07823297780791195",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.06954042471814396",
            "Run.measure(Benchmark)": "8.692553089767996E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.90083622716726",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "24.759798807169435",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.46995343912048",
            "cd.RedBlackTree.findNode(Comparable)": "8.502421477178938",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.058613762710806",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.0788887677717733",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.390332777924848",
            "cd.RedBlackTree.put(Comparable, Object)": "6.3846022081380305",
            "cd.Vector2D.compareNumbers(double, double)": "9.771555818552716",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.667253219552454"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.1132666090036657",
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.09267268009390829",
            "jdk.internal.reflect.UTF8.encode(String) UTF8.java": "0.1750483957329379",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.811071296181885",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0617817867292722",
            "Sieve.benchmark()": "88.56419127641169",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.102969644548787",
            "com.yourkit.probes.Table.createRow() a": "0.09267268009390829",
            "Sieve.sieve(boolean[], int)": "7.640347625519996",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Class) InvokerBytecodeGenerator.java": "0.0823757156390296"
        },
        "YourKit_Bounce.txt": {
            "Run.runBenchmark()": "0.11551568125373018",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.17327352188059528",
            "Bounce.benchmark()": "64.26522400415855",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.17327352188059528",
            "som.Random.next()": "0.17327352188059528",
            "Bounce.lambda$benchmark$0(Random, int)": "0.17327352188059528",
            "java.lang.invoke.MemberName.isGetter() MemberName.java": "0.11551568125373018",
            "jdk.internal.org.objectweb.asm.Frame.getAbstractTypeFromDescriptor(SymbolTable, String, int) Frame.java": "0.8856202229452649",
            "Bounce$Ball.bounce()": "33.03748483856683",
            "Bounce$Ball.<init>(Random)": "0.7508519281492462"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.694499999999998,
        "JavaFlightRecorder_Bounce.jfr": 26.3115,
        "rebench_test_Async_Bounce.txt": 68.75800000000001,
        "Mandelbrot.hpl": 37.8805,
        "rebench_test_Async_Towers.txt": 77.17750000000001,
        "JavaFlightRecorder_Storage.jfr": 58.1155,
        "List.hpl": 22.976,
        "JavaFlightRecorder_Sieve.jfr": 31.307499999999997,
        "JavaFlightRecorder_NBody.jfr": 21.244,
        "Queens.hpl": 21.827,
        "Permute.hpl": 29.65,
        "rebench_test_Async_Sieve.txt": 87.7475,
        "JavaFlightRecorder_Richards.jfr": 92.81,
        "Storage.hpl": 59.947,
        "DeltaBlue.hpl": 12.252,
        "Bounce.hpl": 14.945,
        "Towers.hpl": 26.041,
        "NBody.hpl": 21.339,
        "JavaFlightRecorder_Json.jfr": 80.872,
        "rebench_test_Async_List.txt": 69.874,
        "rebench_test_Async_Richards.txt": 278.406,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.6215,
        "Richards.hpl": 91.1645,
        "rebench_test_Async_DeltaBlue.txt": 37.4875,
        "JavaFlightRecorder_Havlak.jfr": 157.9085,
        "JavaFlightRecorder_List.jfr": 22.5155,
        "JavaFlightRecorder_CD.jfr": 42.015,
        "rebench_test_Async_Mandelbrot.txt": 112.44800000000001,
        "rebench_test_Async_Storage.txt": 168.27249999999998,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.268,
        "Json.hpl": 81.5575,
        "JavaFlightRecorder_Towers.jfr": 25.9925,
        "Havlak.hpl": 156.6615,
        "rebench_test_Async_CD.txt": 148.216,
        "rebench_test_Async_Havlak.txt": 513.894,
        "Sieve.hpl": 31.3765,
        "rebench_test_Async_Permute.txt": 85.85499999999999,
        "JavaFlightRecorder_Permute.jfr": 29.4785,
        "rebench_test_Async_NBody.txt": 60.698,
        "CD.hpl": 42.375,
        "rebench_test_Async_Queens.txt": 67.47200000000001,
        "rebench_test_Async_Json.txt": 282.44050000000004
    },
    "Perf": {
        "NBody.data": {
            "[.] 0x00007fc858ad6075": "23.25%",
            " ": "0",
            "[.] 0x00007fc858ad6079": "4.79%",
            "[.] 0x00007fc858ad6090": "5.29%",
            "[.] 0x00007fc858ad6081": "4.52%",
            "[.] 0x00007fc858ad607d": "19.03%"
        },
        "Permute.data": {
            "[.] 0x00007f7a60ad3e10": "25.72%",
            " ": "0",
            "[.] 0x00007f7a60ad3d54": "11.08%",
            "[.] 0x00007f7a60ad3cdc": "13.77%",
            "[.] 0x00007f7a60ad3e7c": "19.69%",
            "[.] 0x00007f7a60ad3f16": "2.60%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007fc170ae0ac3": "1.05%",
            "[.] 0x00007fc170b3197c": "16.80%",
            "[.] 0x00007fc170b07953": "1.60%",
            "[.] 0x00007fc170b31975": "16.94%",
            "[.] 0x00007fc170b1efdc": "1.40%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007fda4cb302e4": "6.85%",
            "[.] 0x00007fda4cb302d3": "3.89%",
            "[.] 0x00007fda4cafaf50": "4.21%",
            "[.] 0x00007fda4cafaec0": "1.80%",
            "[.] 0x00007fda4cb30324": "4.56%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007ff76cad3a70": "4.82%",
            "[.] 0x00007ff76cad3952": "5.24%",
            "[.] 0x00007ff76cad3968": "4.41%",
            "[.] 0x00007ff76cad3a5e": "3.55%",
            "[.] 0x00007ff76cad3aa2": "13.64%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007f40c8ad56a3": "4.05%",
            "[.] 0x00007f40c8ad5246": "3.74%",
            "[.] 0x00007f40c8ad53dd": "3.29%",
            "[.] 0x00007f40c8ad5682": "10.58%",
            "[.] 0x00007f40c8ad5705": "5.72%"
        },
        "Richards.data": {
            "[.] 0x00007fe348646b3a": "10.11%",
            "[.] 0x00007fe348af1dba": "5.87%",
            " ": "0",
            "[.] 0x00007fe348646b9c": "6.57%",
            "[.] 0x00007fe348646b2f": "8.14%",
            "[.] 0x00007fe348646b1b": "4.86%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f1850ad596a": "5.64%",
            "[.] 0x00007f1850ad59b5": "4.68%",
            "[.] 0x00007f1850ad59bd": "4.83%",
            "[.] 0x00007f1850ad59d9": "4.97%",
            "[.] 0x00007f1850ad5926": "6.88%"
        },
        "CD.data": {
            "[.] 0x00007fc594b1b2ba": "3.21%",
            " ": "0",
            "[.] 0x00007fc594afd000": "3.61%",
            "[.] 0x00007fc594afcfe8": "5.33%",
            "[.] 0x00007fc594b1b292": "2.12%",
            "[.] 0x00007fc594adc599": "2.27%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007f7f3cad78ae": "5.12%",
            "[.] 0x00007f7f3cad783e": "5.85%",
            "[.] 0x00007f7f3cad78d4": "5.80%",
            "[.] 0x00007f7f3cad78a2": "6.21%",
            "[.] 0x00007f7f3cad7870": "6.28%"
        },
        "List.data": {
            "[.] 0x00007f7b7cad3f75": "5.10%",
            " ": "0",
            "[.] 0x00007f7b7cad3e45": "11.41%",
            "[.] 0x00007f7b7cad3e35": "25.49%",
            "[.] 0x00007f7b7cad4055": "6.04%",
            "[.] 0x00007f7b7cad3f85": "4.91%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f7a48adac0c": "14.23%",
            "[.] 0x00007f7a48ad8ed5": "3.70%",
            "[.] 0x00007f7a48adac02": "3.82%",
            "[.] 0x00007f7a48adac0e": "26.62%",
            "[.] 0x00007f7a48adabb8": "19.65%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007fb438adc440": "18.72%",
            "[.] 0x00007fb438ad565d": "4.35%",
            "[.] 0x00007fb438ad5662": "12.33%",
            "[.] 0x00007fb438ad566f": "7.66%",
            "[.] 0x00007fb438adc433": "11.15%"
        },
        "Json.data": {
            "[.] 0x00007f4dccadb274": "1.48%",
            " ": "0",
            "[.] 0x00007f4dccadb42a": "2.59%",
            "[.] 0x00007f4dcc56ecc5": "1.02%",
            "[.] 0x00007f4dccadb1e6": "1.42%",
            "[.] 0x00007f4dcc56ecee": "1.01%"
        }
    }
}