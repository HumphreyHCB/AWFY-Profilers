{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.30864197530864196",
            " ": "0",
            "Queens.placeQueen(I)Z": "10.030864197530864",
            "Queens.getRowColumn(II)Z": "69.29012345679011",
            "java.util.Arrays.fill([ZZ)V": "0.15432098765432098",
            "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Ljava/lang/Class;)Ljava/lang/String;": "0.15432098765432098",
            "Queens.setRowColumn(IIZ)V": "18.827160493827158",
            "Queens.queens()Z": "1.0802469135802468",
            "java.util.zip.ZipUtils.CENFLG([BI)I": "0.15432098765432098"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.29112081513828236",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.5822416302765647",
            "Bounce$Ball.bounce()Z": "80.64046579330422",
            "Bounce.benchmark()Ljava/lang/Object;": "17.030567685589517",
            "som.Random.next()I": "0.14556040756914118",
            "Bounce$Ball.<init>(Lsom/Random;)V": "1.3100436681222707"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.031250000000001",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "39.24632352941177",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.2380514705882355",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.64889705882353",
            "havlak.HavlakLoopFinder$$Lambda$80+0x000000080100f7a8.331418503.apply(Ljava/lang/Object;)V": "2.022058823529412",
            "havlak.HavlakLoopFinder.findLoops()V": "5.928308823529412",
            "som.Vector.<init>(I)V": "2.34375",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.067095588235294",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.136948529411765",
            "som.Vector.append(Ljava/lang/Object;)V": "4.825367647058824"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "15.184563758389263",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.104026845637584",
            "cd.CollisionDetector.lambda$handleNewFrame$0(Lcd/RedBlackTree;Lsom/Vector;Lcd/Aircraft;)V": "2.6006711409395975",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.348993288590604",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.697986577181208",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.503355704697988",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "6.0402684563758395",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.466442953020135",
            "cd.Vector2D.compareNumbers(DD)I": "4.949664429530202",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "15.855704697986578"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "84.86238532110092",
            " ": "0",
            "List$Element.getNext()LList$Element;": "11.620795107033638",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.1529051987767584",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.2232415902140672",
            "List$Element.length()I": "0.1529051987767584",
            "List.makeList(I)LList$Element;": "1.9877675840978593"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "6.289308176100628",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "6.60377358490566",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "15.40880503144654",
            "deltablue.Planner.chainTest(I)V": "3.7735849056603774",
            "deltablue.Planner$$Lambda$85+0x0000000801012868.597190999.apply(Ljava/lang/Object;)V": "2.20125786163522",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "5.660377358490566",
            "deltablue.Variable.<init>()V": "5.031446540880503",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "6.60377358490566",
            "som.Dictionary.hash(Lsom/Dictionary$CustomHash;)I": "17.61006289308176",
            "som.Vector.append(Ljava/lang/Object;)V": "7.861635220125786"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.5494505494505494",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.3663003663003663",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.06105006105006105",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "37.91208791208791",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.7704517704517704",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.724053724053724",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "44.01709401709402",
            "som.Random.next()I": "10.744810744810744",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1221001221001221",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.6105006105006104"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "6.749740394600208",
            "java.util.Arrays.fill([ZZ)V": "6.542056074766355",
            "Sieve.sieve([ZI)I": "86.60436137071652",
            "jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init>(IILjava/lang/String;I)V": "0.10384215991692627"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.73582295988935",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.59612724757953",
            "java.lang.StringConcatHelper.prepend(J[BJLjava/lang/String;)J": "0.13831258644536654",
            "Towers.moveDisks(III)V": "2.7662517289073305",
            "Towers$TowersDisk.getSize()I": "11.20331950207469",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.2766251728907331",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.06777316735823",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "23.09820193637621",
            "Towers.moveTopDisk(II)V": "5.117565698478562"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "2.229299363057325",
            "nbody.Body.setVX(D)V": "31.210191082802545",
            "nbody.NBodySystem.advance(D)V": "39.968152866242036",
            "nbody.Body.setZ(D)V": "0.47770700636942676",
            "nbody.Body.getY()D": "1.1146496815286624",
            "nbody.Body.getX()D": "0.9554140127388535",
            "nbody.Body.getZ()D": "7.32484076433121",
            "nbody.Body.setVZ(D)V": "8.439490445859873",
            "nbody.Body.setVY(D)V": "6.050955414012739",
            "nbody.Body.setX(D)V": "0.7961783439490445"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "6.433166547533953",
            "richards.Scheduler.createPacket(Lrichards/Packet;II)Lrichards/Packet;": "3.431022158684775",
            "richards.Scheduler.schedule()V": "9.721229449606863",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.295210864903503",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.290207290922087",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "4.360257326661902",
            "Richards.benchmark()Ljava/lang/Object;": "9.363831308077199",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.645461043602573",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.5039313795568265",
            "richards.RBObject.<init>()V": "10.507505360972123"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.321523472099203",
            "json.JsonPureStringParser.isWhiteSpace()Z": "2.6572187776793625",
            "java.lang.String.isLatin1()Z": "3.011514614703277",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "4.295837023914969",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "29.5837023914969",
            "json.JsonPureStringParser.readNumber()Ljson/JsonValue;": "2.4357838795394153",
            "java.lang.String.<init>([BB)V": "6.200177147918512",
            "json.JsonPureStringParser.read()V": "17.183348095659877",
            "java.util.Arrays.copyOfRange([BII)[B": "8.990256864481843",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.1443755535872455"
        },
        "JavaFlightRecorder_Permute.jfr": {
            "Permute.verifyResult(Ljava/lang/Object;)Z": "0.12135922330097088",
            " ": "0",
            "Permute.swap(II)V": "42.23300970873787",
            "Permute.permute(I)V": "57.64563106796117"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.9",
            "Richards::benchmark": "4.5",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "46.4",
            "richards.HandlerTaskDataRecord::workInAdd": "2.1",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "5.9",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.5"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.MethodType::hashCode": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.invoke.MethodHandles$Lookup::checkMethod": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable::hash": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.2",
            "java.util.Arrays::copyOf": "0.0",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.3",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "2.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "List::isShorterThan": "80.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "List$Element::setNext": "0.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.2",
            "json.JsonPureStringParser::read": "14.7",
            "java.lang.String::<init>": "5.8",
            "java.lang.String::length": "3.2",
            "java.util.Arrays::copyOfRange": "7.5",
            "java.lang.String::equals": "21.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "10.6",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.5"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "35.1",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.3",
            "havlak.HavlakLoopFinder::findLoops": "5.6",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.9",
            "som.Vector::append": "5.6",
            "AGCT::Unknown not Java[ERR=-3]": "8.1",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "7.0",
            "havlak.HavlakLoopFinder::doDFS": "5.7",
            "som.Vector::<init>": "2.3",
            "som.Vector::forEach": "1.9"
        },
        "Permute.hpl": {
            "Permute::swap": "40.2",
            "java.io.BufferedWriter::write": "0.0",
            "Permute::permute": "50.7",
            "Permute::benchmark": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "jdk.internal.loader.NativeLibraries::load": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "6.2",
            "java.lang.invoke.InnerClassLambdaMetafactory::<init>": "0.0",
            "java.lang.invoke.InvokerBytecodeGenerator::classFilePrologue": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "54.5",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "4.8",
            "AGCT::Unknown Java[ERR=-5]": "0.9",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "Queens::placeQueen": "13.8",
            "Queens::setRowColumn": "23.7",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.1",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "39.7",
            "java.util.Arrays::setAll": "34.3",
            "som.Random::next": "11.5",
            "AGCT::Unknown not Java[ERR=-3]": "5.1",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.3",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.8"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Sieve::benchmark": "5.8",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "85.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.util.Arrays::fill": "5.5"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "3.5",
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "4.5",
            "deltablue.Planner::addPropagate": "3.1",
            "deltablue.Variable::<init>": "4.6",
            "som.Vector::append": "4.7",
            "som.Dictionary::getBucket": "12.8",
            "AGCT::Unknown not Java[ERR=-3]": "12.8",
            "AGCT::Unknown Java[ERR=-5]": "14.9",
            "deltablue.AbstractConstraint::satisfy": "4.6",
            "som.Vector::forEach": "5.9"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.5",
            "Bounce$Ball::bounce": "76.3",
            "java.util.Arrays::setAll": "0.5",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "1.3"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.8",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.9",
            "nbody.Body::setVZ": "8.7",
            "nbody.Body::getZ": "7.8",
            "nbody.Body::setVX": "27.3",
            "nbody.Body::setVY": "5.2",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "nbody.NBodySystem::advance": "40.9"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.7",
            "Towers::popDiskFrom": "22.2",
            "Towers::moveDisks": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "Towers::pushDisk": "33.9",
            "Towers$TowersDisk::setNext": "15.3",
            "AGCT::Unknown Java[ERR=-5]": "3.8",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "4.6",
            "Towers$TowersDisk::getNext": "3.2"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "15.0",
            "cd.RedBlackTree::forEach": "3.4",
            "cd.RedBlackTree::put": "6.7",
            "cd.RedBlackTree::findNode": "2.9",
            "cd.RedBlackTree::treeMinimum": "2.9",
            "AGCT::Unknown not Java[ERR=-3]": "10.0",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "cd.Vector2D::compareNumbers": "4.9",
            "cd.CollisionDetector::isInVoxel": "21.7",
            "cd.RedBlackTree::treeInsert": "13.3"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "3.49%",
            "deltablue.AbstractConstraint.satisfy": "2.53%",
            "deltablue.UnaryConstraint.<init>": "9.62%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "6.34%",
            "java.util.Arrays.copyOf": "4.13%",
            "som.Vector.append": "2.81%",
            "deltablue.UnaryConstraint.chooseMethod": "3.19%",
            "som.Vector.forEach": "5.84%",
            "itable": "4.04%",
            "deltablue.Planner.addPropagate": "3.38%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.07%",
            "som.Random.next": "0.92%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.71%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.65%",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial": "0.04%",
            "Bounce$Ball.<init>": "1.88%",
            "Bounce.lambda$benchmark$0": "0.18%",
            "Benchmark.innerBenchmarkLoop": "0.14%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.56%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "vmSymbols::find_sid(Symbol": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "10.62%",
            "java.util.Arrays.setAll": "34.89%",
            "Storage.lambda$buildTreeDepth$0": "3.84%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.54%",
            "SpinPause": "0.17%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.55%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.31%",
            "Storage.buildTreeDepth": "44.10%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.25%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.51%",
            "Towers.popDiskFrom": "19.62%",
            "Towers.moveDisks": "8.45%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.51%",
            "Towers.moveTopDisk": "4.19%",
            "Towers$TowersDisk.getSize": "10.54%",
            "Towers$TowersDisk.getNext": "3.83%",
            "Towers.benchmark": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.13%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.51%",
            "cd.CollisionDetector.isInVoxel": "19.63%",
            "cd.RedBlackTree.forEach": "6.09%",
            "Node::set_req_X(unsigned": "2.27%",
            "cd.RedBlackTree.put": "6.67%",
            "cd.RedBlackTree.treeInsert": "12.49%",
            "cd.RedBlackTree.treeMinimum": "5.32%",
            "cd.RedBlackTree.findNode": "2.91%",
            "cd.Vector2D.compareNumbers": "3.94%",
            "cd.RedBlackTree.leftRotate": "2.13%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.19%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.10%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.73%",
            "som.Vector.hasSome": "2.53%",
            "som.Vector.append": "4.08%",
            "som.IdentitySet.lambda$contains$0": "30.91%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.49%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.30%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.00%",
            "havlak.HavlakLoopFinder.doDFS": "5.56%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.09%",
            "Sieve.benchmark": "7.39%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "83.44%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.03%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.03%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.34%",
            "Permute.swap": "40.33%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.08%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.88%",
            "nbody.Body.getZ": "7.86%",
            "nbody.Body.getY": "0.66%",
            "nbody.Body.setX": "1.17%",
            "nbody.Body.setY": "1.72%",
            "nbody.Body.setVX": "27.54%",
            "nbody.Body.setVY": "5.43%",
            "nbody.Body.getMass": "0.53%",
            "nbody.Body.getVZ": "0.50%",
            "nbody.NBodySystem.advance": "41.91%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.28%",
            "Interpreter": "0.05%",
            "List.makeList": "1.07%",
            "List.tail": "4.47%",
            "List$Element.length": "0.13%",
            "List.verifyResult": "0.10%",
            "List.isShorterThan": "81.62%",
            "List$Element.<init>": "0.17%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.51%",
            "java.lang.String.length": "3.41%",
            "java.lang.String.<init>": "5.82%",
            "json.JsonPureStringParser.readArray": "2.68%",
            "java.lang.String.isLatin1": "3.23%",
            "json.JsonPureStringParser.readStringInternal": "7.02%",
            "java.util.Arrays.copyOfRange": "7.76%",
            "java.lang.String.equals": "21.42%",
            "json.JsonPureStringParser.read": "15.36%",
            "json.JsonPureStringParser.readValue": "2.42%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.15%",
            "Queens.getRowColumn": "68.32%",
            "Queens.setRowColumn": "18.03%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.64%",
            "Queens.placeQueen": "8.74%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.31%",
            "Richards.benchmark": "4.93%",
            "richards.Packet.<init>": "7.14%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.80%",
            "itable": "36.73%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.17%",
            "richards.TaskControlBlock.<init>": "3.09%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.85%",
            "richards.RBObject.<init>": "5.79%",
            "richards.RBObject.append": "2.70%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "5.3",
            "Towers.moveDisks": "92.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.6",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.8",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "5.5",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "93.8",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Harness.processArguments": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.4",
            "deltablue.AbstractConstraint.satisfy": "9.7",
            "deltablue.Planner.removePropagateFrom": "8.9",
            "som.Vector.<init>": "32.1",
            "deltablue.Variable.<init>": "4.6",
            "som.Vector.forEach": "6.8",
            "deltablue.Planner.constraintsConsuming": "5.5",
            "deltablue.AbstractConstraint.<init>": "4.0",
            "deltablue.Plan.lambda$execute$0": "1.9",
            "deltablue.Planner.addConstraintsConsumingTo": "18.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.8",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.4",
            "java.lang.Integer.valueOf": "9.1",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "3.8"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.1",
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.schedule": "14.7",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Scheduler.<init>": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "richards.TaskControlBlock.runTask": "84.0",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.util.Arrays.setAll": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "1.0",
            "Bounce.benchmark": "51.7",
            "Bounce$Ball.<init>": "46.6",
            "Bounce.lambda$benchmark$0": "0.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.9",
            "cd.Aircraft.<init>": "1.5",
            "som.Vector.<init>": "6.2",
            "cd.Vector3D.<init>": "7.7",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "14.7",
            "cd.RedBlackTree$Node.<init>": "8.2",
            "cd.RedBlackTree$Entry.<init>": "4.7"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.2",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "1.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.lambda$getSuiteFromName$8": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "Run.lambda$getSuiteFromName$5": "0.1",
            "java.io.PrintStream.println": "0.3",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "List.tail": "2.7",
            "List$Element.length": "0.2",
            "List.isShorterThan": "74.6",
            "List$Element.<init>": "21.0",
            "Run.printResult": "0.4"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "Harness.main": "0.0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.0",
            "json.JsonObject$HashIndexTable.<init>": "0.6",
            "som.Vector.<init>": "2.4",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "4.0",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "23.7",
            "Queens.placeQueen": "74.9",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.3",
            "java.util.Arrays.fill0": "0.3",
            "Benchmark.innerBenchmarkLoop": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.925546154924856",
            "java.lang.String.<init>(byte[], byte) String.java": "5.447738678519679",
            "json.JsonPureStringParser.isWhiteSpace()": "2.3286745677291605",
            "json.JsonPureStringParser.read()": "21.06430626319972",
            "java.lang.String.length() String.java": "3.1828052029728853",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.1318123292269915",
            "java.lang.String.substring(int, int) String.java": "9.731140073174776",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.9718859289414326",
            "json.JsonPureStringParser.readStringInternal()": "3.225299264427797",
            "json.JsonPureStringParser.readValue()": "2.9235914280979243"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "4.077305893520842",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.004088167123927",
            "havlak.HavlakLoopFinder.findLoops()": "10.60273312001877",
            "som.Vector.<init>(int)": "2.2461024474696596",
            "som.Vector.append(Object)": "2.4915662545915858",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.128801159110509",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.3030913233974815",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.1533345063462175",
            "som.Vector.removeAll()": "2.860848088314837",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.88179940176344"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.144830420077756",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.23706419698454342",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.1896513575876347",
            "Queens.getRowColumn(int, int)": "58.2545753390018",
            "Queens.queens()": "1.0114739071340517",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.45832411417011726",
            "Benchmark.innerBenchmarkLoop(int)": "0.17384707778866515",
            "Queens.setRowColumn(int, int, boolean)": "24.401808009609",
            "java.lang.System.nanoTime() System.java (native)": "0.14223851819072603",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.30028131618042164"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.506154145825141",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9588890563153039",
            "richards.TaskControlBlock.runTask()": "37.82897759222031",
            "richards.Scheduler$$Lambda$14.0x00000008000c7978.apply(Packet, RBObject)": "3.322393446358414",
            "richards.Scheduler.schedule()": "2.1647010397180377",
            "richards.Scheduler$$Lambda$15.0x00000008000c7ba0.apply(Packet, RBObject)": "3.958205466513288",
            "richards.RBObject.append(Packet, Packet)": "3.5208550017824787",
            "richards.Packet.<init>(Packet, int, int)": "1.6391454392431999",
            "Richards.benchmark()": "26.98342110969411",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.6464958672218688"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$11.0x00000008000c2aa0.apply(int)": "0.6745233094416814",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.5100054290900518",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.250335890672385",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "41.644959446342504",
            "som.Random.next()": "15.39887360091253",
            "Storage$$Lambda$11.0x00000008000c2aa0.<init>(Storage, int, Random)": "0.2138732444571185",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1096785869010864",
            "Storage.buildTreeDepth(int, Random)": "37.6362070951078",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "1.8426002599382516",
            "com.yourkit.probes.CallCounterBase.update(long, Object) a": "0.12613037493624935"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "35.71596354411349",
            "Towers.popDiskFrom(int)": "30.16066898430893",
            "Towers.moveDisks(int, int, int)": "6.447900028187541",
            "Towers$TowersDisk.getSize()": "2.4194306116696414",
            "java.util.jar.JarEntry.<init>(String) JarEntry.java": "0.07046885276707694",
            "Towers.moveTopDisk(int, int)": "6.8354787184064625",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.2114065583012308",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "17.59372357418021",
            "Towers.benchmark()": "0.22315136709574362",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.14093770553415388"
        },
        "YourKit_Permute.txt": {
            "java.lang.String.getBytes(String) String.java": "0.06680547359513656",
            "java.util.IdentityHashMap.put(Object, Object) IdentityHashMap.java": "0.11134245599189425",
            "java.lang.invoke.LambdaForm$Name.<init>(LambdaForm$Name, Object) LambdaForm.java": "0.10020821039270482",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.08907396479351541",
            "sun.management.MemoryUsageCompositeData.getCompositeData() MemoryUsageCompositeData.java": "0.044536982396757706",
            "Permute.permute(int)": "56.92939774865553",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.12247670159108368",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.23381915758297794",
            "Permute.benchmark()": "0.3228931223764933",
            "Permute.swap(int, int)": "41.909300435348996"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "5.027904872039822",
            "deltablue.Variable.<init>()": "2.8659057770626983",
            "som.Vector.forEach(ForEachInterface)": "24.460757202473733",
            "deltablue.BinaryConstraint.getOutput()": "3.016742923223893",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "8.99994972095128",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "3.4441148373472776",
            "deltablue.ScaleConstraint.execute()": "3.242998642465685",
            "deltablue.BinaryConstraint.chooseMethod(int)": "3.192719593745287",
            "som.Vector.append(Object)": "19.131178038111525",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "3.3184172155462828"
        },
        "YourKit_List.txt": {
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.11981468661803076",
            "List.tail(List$Element, List$Element, List$Element)": "3.5278768837531276",
            "List$Element.<init>(Object)": "0.3860695457692102",
            "List.makeList(int)": "0.3195058309814154",
            "List$Element.setNext(List$Element)": "0.1597529154907077",
            "List$Element.getNext()": "24.149315725011977",
            "List.isShorterThan(List$Element, List$Element)": "70.31790830182649",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.11981468661803076",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.18637840140582562",
            "java.lang.Integer.valueOf(int) Integer.java": "0.10650194366047178"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.143199571360086",
            "nbody.Body.getZ()": "7.303798539240293",
            "nbody.Body.setX(double)": "0.6203998759200249",
            "nbody.Body.getX()": "0.4088999182200164",
            "nbody.Body.setZ(double)": "0.549899890020022",
            "nbody.NBodySystem.advance(double)": "45.105890978821805",
            "nbody.Body.setVY(double)": "5.188798962240208",
            "nbody.Body.setVZ(double)": "7.303798539240293",
            "nbody.Body.setVX(double)": "28.18589436282113",
            "nbody.Body.setY(double)": "1.4099997180000565"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.12943567987979",
            "java.io.RandomAccessFile.<init>(File, String, boolean) RandomAccessFile.java": "0.044191082239604045",
            "java.lang.Long.getChars(long, int, byte[]) Long.java": "0.07954394803128727",
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.07954394803128727",
            "jdk.internal.org.objectweb.asm.FieldVisitor.<init>(int, FieldVisitor) FieldVisitor.java": "0.23863184409386182",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.1060585973750497",
            "sun.nio.fs.UnixNativeDispatcher.stat0(long, UnixFileAttributes) UnixNativeDispatcher.java (native)": "0.03535286579168323",
            "java.net.URL$DefaultFactory.createURLStreamHandler(String) URL.java": "0.017676432895841615",
            "com.yourkit.probes.Table.createRow() a": "0.16792611251049536",
            "java.lang.invoke.MemberName.getDeclaringClass() MemberName.java": "0.07954394803128727"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.892104367204184",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.32941285709864",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.448265189266145",
            "cd.RedBlackTree.findNode(Comparable)": "9.447831873471786",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.993128849546564",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.522516945742672",
            "cd.RedBlackTree.put(Comparable, Object)": "6.909839363644804",
            "cd.Vector2D.compareNumbers(double, double)": "9.525209693893341",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.2712556872698",
            "cd.CollisionDetector.lambda$handleNewFrame$0(RedBlackTree, Vector, Aircraft)": "2.9171438298925993"
        },
        "YourKit_Sieve.txt": {
            "java.util.stream.MatchOps.makeRef(Predicate, MatchOps$MatchKind) MatchOps.java": "0.13516885709532522",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "3.753535185493261",
            "Benchmark.innerBenchmarkLoop(int)": "0.22874729662285803",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.07278323074363664",
            "Sieve.benchmark()": "87.30868407918814",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.10397604391948093",
            "java.lang.invoke.InvokerBytecodeGenerator.<init>(LambdaForm, int, String, String, MethodType) InvokerBytecodeGenerator.java": "0.05198802195974046",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.11437364831142902",
            "Sieve.sieve(boolean[], int)": "7.9125769422725",
            "java.util.TreeMap$PrivateEntryIterator.hasNext() TreeMap.java": "0.08318083513558473"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.17233455882352938",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object) DirectMethodHandle$Holder": "0.17233455882352938",
            "Bounce.benchmark()": "60.049019607843135",
            "Bounce.lambda$benchmark$0(Random, int)": "0.3829656862745097",
            "som.Random.next()": "0.1531862745098039",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.708486519607843",
            "com.yourkit.probes.Table.createRow() a": "0.5553002450980391",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c9800.invoke(Object, Object, long) LambdaForm$MH": "0.17233455882352938",
            "Bounce$Ball.bounce()": "35.577512254901954",
            "Bounce$Ball.<init>(Random)": "1.723345588235294"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.926000000000002,
        "JavaFlightRecorder_Bounce.jfr": 26.2565,
        "rebench_test_Async_Bounce.txt": 62.0835,
        "Mandelbrot.hpl": 38.324,
        "rebench_test_Async_Towers.txt": 79.8475,
        "List.hpl": 22.565,
        "JavaFlightRecorder_Storage.jfr": 58.765,
        "JavaFlightRecorder_Sieve.jfr": 31.572499999999998,
        "Queens.hpl": 21.1455,
        "JavaFlightRecorder_NBody.jfr": 21.064,
        "Permute.hpl": 30.031,
        "rebench_test_Async_Sieve.txt": 86.3955,
        "JavaFlightRecorder_Richards.jfr": 90.78800000000001,
        "Storage.hpl": 59.7705,
        "DeltaBlue.hpl": 12.571000000000002,
        "Towers.hpl": 25.930999999999997,
        "NBody.hpl": 21.243,
        "Bounce.hpl": 26.064500000000002,
        "JavaFlightRecorder_Json.jfr": 84.9435,
        "rebench_test_Async_List.txt": 71.616,
        "rebench_test_Async_Richards.txt": 277.676,
        "Richards.hpl": 90.156,
        "rebench_test_Async_DeltaBlue.txt": 35.9835,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.816,
        "JavaFlightRecorder_Havlak.jfr": 155.3125,
        "JavaFlightRecorder_List.jfr": 22.5345,
        "JavaFlightRecorder_CD.jfr": 42.4235,
        "rebench_test_Async_Storage.txt": 167.6255,
        "rebench_test_Async_Mandelbrot.txt": 116.6235,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.658,
        "JavaFlightRecorder_Towers.jfr": 25.681,
        "Json.hpl": 78.416,
        "Havlak.hpl": 154.09449999999998,
        "rebench_test_Async_CD.txt": 147.15449999999998,
        "rebench_test_Async_Havlak.txt": 512.0640000000001,
        "Sieve.hpl": 31.21,
        "rebench_test_Async_Permute.txt": 85.7625,
        "rebench_test_Async_NBody.txt": 60.0215,
        "JavaFlightRecorder_Permute.jfr": 29.802500000000002,
        "CD.hpl": 42.8555,
        "rebench_test_Async_Json.txt": 275.734,
        "rebench_test_Async_Queens.txt": 64.5385
    },
    "Perf": {
        "NBody.data": {
            "[.] 0x00007f0a8cad607d": "18.72%",
            " ": "0",
            "[.] 0x00007f0a8cad6075": "23.15%",
            "[.] 0x00007f0a8cad6038": "4.59%",
            "[.] 0x00007f0a8cad6081": "4.60%",
            "[.] 0x00007f0a8cad6090": "5.36%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007f6564ad3716": "2.51%",
            "[.] 0x00007f6564ad367c": "19.81%",
            "[.] 0x00007f6564ad34dc": "14.26%",
            "[.] 0x00007f6564ad3554": "11.29%",
            "[.] 0x00007f6564ad3610": "25.80%"
        },
        "Havlak.data": {
            "[.] 0x00007fad80adebc3": "1.15%",
            " ": "0",
            "[.] 0x00007fad80b3617c": "17.08%",
            "[.] 0x00007fad80af5253": "1.65%",
            "[.] 0x00007fad80b36175": "17.19%",
            "[.] 0x00007fad80b29de0": "1.41%"
        },
        "DeltaBlue.data": {
            "[.] 0x00007f9794b2df7c": "3.39%",
            " ": "0",
            "[.] 0x00007f9794b2df41": "7.10%",
            "[.] 0x00007f9794b2df30": "3.34%",
            "[.] 0x00007f9794afbac0": "1.76%",
            "[.] 0x00007f9794afbb50": "3.93%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007f6e98ad3952": "4.64%",
            "[.] 0x00007f6e98ad3968": "4.37%",
            "[.] 0x00007f6e98ad3a70": "4.70%",
            "[.] 0x00007f6e98ad3a5e": "3.24%",
            "[.] 0x00007f6e98ad3aa2": "13.92%"
        },
        "Towers.data": {
            "[.] 0x00007f6320ad53a3": "3.83%",
            " ": "0",
            "[.] 0x00007f6320ad5405": "7.15%",
            "[.] 0x00007f6320ad4f46": "3.96%",
            "[.] 0x00007f6320ad5382": "10.20%",
            "[.] 0x00007f6320ad50dd": "3.27%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007f6228646aba": "10.24%",
            "[.] 0x00007f6228af273a": "6.15%",
            "[.] 0x00007f6228646a9b": "4.66%",
            "[.] 0x00007f6228646aaf": "7.72%",
            "[.] 0x00007f6228646b1c": "6.16%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f4594ad593d": "4.54%",
            "[.] 0x00007f4594ad58a6": "6.80%",
            "[.] 0x00007f4594ad5959": "4.86%",
            "[.] 0x00007f4594ad58ea": "5.99%",
            "[.] 0x00007f4594ad5822": "4.53%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007fb744b0cde8": "5.07%",
            "[.] 0x00007fb744b22d92": "2.18%",
            "[.] 0x00007fb744adc899": "2.16%",
            "[.] 0x00007fb744b0ce00": "3.54%",
            "[.] 0x00007fb744b22dba": "3.28%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007fb21cad84d8": "6.08%",
            "[.] 0x00007fb21cad84a6": "6.13%",
            "[.] 0x00007fb21cad8442": "5.69%",
            "[.] 0x00007fb21cad84b2": "4.99%",
            "[.] 0x00007fb21cad8474": "6.03%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007f43a4ad3bf5": "5.79%",
            "[.] 0x00007f43a4ad3ac5": "10.94%",
            "[.] 0x00007f43a4ad3ab5": "26.41%",
            "[.] 0x00007f43a4ad3cd5": "5.92%",
            "[.] 0x00007f43a4ad3c05": "4.94%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f88d8adaf0c": "14.42%",
            "[.] 0x00007f88d8adaf0e": "25.80%",
            "[.] 0x00007f88d8adaeb8": "21.36%",
            "[.] 0x00007f88d8adaf02": "3.56%",
            "[.] 0x00007f88d8ad91d5": "3.75%"
        },
        "Bounce.data": {
            "[.] 0x00007f78ecad59ef": "5.12%",
            " ": "0",
            "[.] 0x00007f78ecad59e2": "8.73%",
            "[.] 0x00007f78ecadc742": "9.77%",
            "[.] 0x00007f78ecadc754": "16.15%",
            "[.] 0x00007f78ecadc747": "26.56%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007f93b0adaf8b": "1.04%",
            "[.] 0x00007f93b0adafaa": "2.50%",
            "[.] 0x00007f93b0adadf4": "1.39%",
            "[.] 0x00007f93b0adae96": "0.98%",
            "[.] 0x00007f93b0adad66": "1.36%"
        }
    }
}