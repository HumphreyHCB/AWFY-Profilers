{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "99.82378854625551",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Ljava/lang/Class;)Z": "0.0881057268722467",
            "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Ljava/lang/Class;)Ljava/lang/String;": "0.0881057268722467"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.3067484662576687",
            " ": "0",
            "Queens.placeQueen(I)Z": "8.43558282208589",
            "Queens.getRowColumn(II)Z": "68.86503067484662",
            "java.util.Arrays.fill([ZZ)V": "0.7668711656441718",
            "Queens.setRowColumn(IIZ)V": "21.012269938650306",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.15337423312883436",
            "Queens.queens()Z": "0.4601226993865031"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.lang.Math.abs(I)I": "0.18832391713747645",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.9416195856873822",
            "java.lang.invoke.StringConcatFactory.parseRecipe(Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;": "0.18832391713747645",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "1.1299435028248588",
            "Bounce$Ball.bounce()Z": "74.01129943502825",
            "Bounce.benchmark()Ljava/lang/Object;": "19.962335216572505",
            "som.Random.next()I": "0.9416195856873822",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.6365348399246704"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.982600732600732",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "39.1025641025641",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.654761904761904",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.5256410256410255",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "15.956959706959706",
            "som.Dictionary.atPut(Lsom/Dictionary$CustomHash;Ljava/lang/Object;)V": "1.923076923076923",
            "havlak.HavlakLoopFinder.findLoops()V": "4.212454212454213",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.281135531135531",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.1978021978021975",
            "som.Vector.append(Ljava/lang/Object;)V": "2.335164835164835"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "17.03204047217538",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.9629005059021924",
            "cd.RedBlackTree.rightRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "1.4333895446880272",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "3.794266441821248",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "4.1315345699831365",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "26.053962900505905",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "3.709949409780776",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.263069139966273",
            "cd.Vector2D.compareNumbers(DD)I": "4.974704890387859",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "15.09274873524452"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "84.95297805642635",
            " ": "0",
            "List$Element.getNext()LList$Element;": "11.128526645768027",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.15673981191222572",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.1943573667711602",
            "List$Element.setNext(LList$Element;)V": "0.15673981191222572",
            "List.makeList(I)LList$Element;": "1.4106583072100314"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "8.823529411764707",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "4.901960784313726",
            "deltablue.UnaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "7.189542483660131",
            "deltablue.UnaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "19.281045751633986",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "12.418300653594772",
            "deltablue.ScaleConstraint.execute()V": "2.287581699346405",
            "deltablue.AbstractConstraint.<init>(Ldeltablue/Strength$Sym;)V": "4.57516339869281",
            "som.Vector.<init>(I)V": "5.555555555555555",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "4.901960784313726",
            "som.Vector.append(Ljava/lang/Object;)V": "3.5947712418300655"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.4728132387706856",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.4728132387706856",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/LambdaForm;": "0.0591016548463357",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "34.988179669030735",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.0638297872340425",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "2.6595744680851063",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.8628841607565",
            "java.lang.invoke.DirectMethodHandle.shouldBeInitialized(Ljava/lang/invoke/MemberName;)Z": "0.0591016548463357",
            "som.Random.next()I": "14.00709219858156",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.29550827423167847"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$MH+0x0000000801012800.927327686.<clinit>()V": "0.1053740779768177",
            "java.lang.StringConcatHelper.checkOverflow(J)J": "0.1053740779768177",
            "Sieve.benchmark()Ljava/lang/Object;": "7.060063224446786",
            "java.util.Arrays.fill([ZZ)V": "6.42781875658588",
            "Sieve.sieve([ZI)I": "86.19599578503689",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1053740779768177"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "16.4",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "2.933333333333333",
            "Towers.moveDisks(III)V": "4.8",
            "Towers$TowersDisk.getSize()I": "10.8",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "35.2",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "23.066666666666666",
            "Towers.moveTopDisk(II)V": "6.8"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "0.9404388714733543",
            "nbody.Body.getMass()D": "0.6269592476489029",
            "nbody.Body.setVX(D)V": "31.50470219435737",
            "nbody.NBodySystem.advance(D)V": "40.75235109717869",
            "nbody.Body.getY()D": "0.9404388714733543",
            "nbody.Body.getZ()D": "7.836990595611286",
            "nbody.Body.setVZ(D)V": "7.366771159874609",
            "nbody.Body.getVZ()D": "0.9404388714733543",
            "nbody.Body.setVY(D)V": "5.956112852664577",
            "nbody.Body.setX(D)V": "1.8808777429467085"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "6.598639455782314",
            "richards.Scheduler.schedule()V": "10.272108843537415",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "11.904761904761905",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.122448979591837",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.741496598639456",
            "Richards.benchmark()Ljava/lang/Object;": "9.523809523809526",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.421768707482993",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.081632653061225",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.557823129251701",
            "richards.RBObject.<init>()V": "11.904761904761905"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "4.03187998124707",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.3286451007969995",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "25.035161744022503",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "4.641350210970464",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "9.70464135021097",
            "java.lang.String.<init>([BB)V": "4.922644163150492",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.1411157993436474",
            "json.JsonPureStringParser.readArray()Ljson/JsonArray;": "2.8598218471636194",
            "json.JsonPureStringParser.read()V": "15.189873417721518",
            "java.util.Arrays.copyOfRange([BII)[B": "6.891701828410689"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "42.721893491124256",
            "java.nio.CharBuffer.<init>(IIII[CILjdk/internal/access/foreign/MemorySegmentProxy;)V": "0.11834319526627218",
            "Permute.permute(I)V": "57.04142011834319",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.11834319526627218"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.0",
            "richards.Packet::setLink": "2.0",
            "Richards::benchmark": "4.9",
            "richards.RBObject::append": "2.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "45.6",
            "richards.TaskControlBlock::<init>": "3.3",
            "richards.Scheduler::schedule": "6.2",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.8",
            "richards.RBObject::<init>": "6.0"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.7",
            "java.lang.invoke.DirectMethodHandle::preparedFieldLambdaForm": "0.0",
            "java.nio.ByteBuffer::flip": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "jdk.internal.org.objectweb.asm.ByteVector::putUTF8": "0.0",
            "Mandelbrot::mandelbrot": "98.0",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0"
        },
        "List.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "List$Element::getNext": "8.8",
            "List::makeList": "0.6",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "List::tail": "2.1",
            "List::isShorterThan": "80.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "13.0",
            "java.lang.String::<init>": "7.1",
            "json.JsonPureStringParser::readArray": "2.4",
            "java.lang.String::length": "3.3",
            "java.util.Arrays::copyOfRange": "8.0",
            "java.lang.String::equals": "22.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "AGCT::Unknown Java[ERR=-5]": "10.1",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "9.2"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.5",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.9",
            "havlak.HavlakLoopFinder::findLoops": "6.0",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "3.1",
            "som.Vector::append": "4.0",
            "AGCT::Unknown not Java[ERR=-3]": "8.5",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.1",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::hasSome": "3.3",
            "som.Vector::<init>": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "39.4",
            "java.util.concurrent.ConcurrentHashMap::putVal": "0.0",
            "Permute::permute": "50.2",
            "Permute::benchmark": "0.1",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Harness::processArguments": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "6.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "68.3",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "Queens::benchmark": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.1",
            "AGCT::Unknown Java[ERR=-5]": "0.6",
            "Queens::placeQueen": "8.0",
            "Queens::setRowColumn": "18.0",
            "Queens::queens": "0.7",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "39.7",
            "java.util.Arrays::setAll": "35.0",
            "som.Random::next": "11.6",
            "AGCT::Unknown not Java[ERR=-3]": "4.2",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.9"
        },
        "Sieve.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.nio.Buffer::limit": "0.0",
            "Sieve::benchmark": "6.2",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "jdk.internal.org.objectweb.asm.Frame::execute": "0.0",
            "Sieve::sieve": "84.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "6.5"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "5.6",
            "deltablue.BinaryConstraint::<init>": "12.9",
            "deltablue.Planner::addPropagate": "2.5",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "13.5",
            "AGCT::Unknown Java[ERR=-5]": "12.3",
            "deltablue.BinaryConstraint::chooseMethod": "2.4",
            "som.Vector::<init>": "5.3",
            "som.Vector::forEach": "8.1",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "2.8"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "17.8",
            "Bounce$Ball::bounce": "75.3",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.2",
            "jdk.internal.org.objectweb.asm.Frame::push": "0.0",
            "som.Random::next": "0.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "Bounce$Ball::<init>": "1.6",
            "java.lang.invoke.InvokerBytecodeGenerator::classFilePrologue": "0.0",
            "java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.3",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "0.6",
            "nbody.Body::setVZ": "8.7",
            "nbody.Body::getZ": "8.2",
            "nbody.Body::setVX": "28.8",
            "nbody.Body::setVY": "5.9",
            "nbody.Body::getMass": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "nbody.NBodySystem::advance": "39.8"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "Towers::popDiskFrom": "20.4",
            "Towers::moveDisks": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "4.6",
            "Towers::pushDisk": "33.8",
            "Towers$TowersDisk::setNext": "14.7",
            "AGCT::Unknown Java[ERR=-5]": "4.5",
            "Towers::moveTopDisk": "4.4",
            "Towers$TowersDisk::getNext": "3.9"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.5",
            "cd.RedBlackTree::forEach": "3.6",
            "cd.RedBlackTree::put": "6.3",
            "cd.RedBlackTree::findNode": "3.4",
            "cd.RedBlackTree::treeMinimum": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "9.1",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "cd.Vector2D::compareNumbers": "4.4",
            "cd.CollisionDetector::isInVoxel": "22.1",
            "cd.RedBlackTree::treeInsert": "13.5"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "2.80%",
            "deltablue.AbstractConstraint.satisfy": "3.03%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "17.65%",
            "som.Vector.append": "4.21%",
            "vtable": "1.69%",
            "som.Vector.<init>": "6.05%",
            "som.Vector.forEach": "8.25%",
            "itable": "3.90%",
            "deltablue.Planner.addPropagate": "2.42%",
            "deltablue.ScaleConstraint.execute": "1.83%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.11%",
            "som.Random.next": "0.90%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.72%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "19.54%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.85%",
            "Bounce.lambda$benchmark$0": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.39%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.46%",
            "som.Random.next": "10.42%",
            "java.util.Arrays.setAll": "35.48%",
            "Storage.lambda$buildTreeDepth$0": "4.10%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.57%",
            "SpinPause": "0.18%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.57%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.33%",
            "Storage.buildTreeDepth": "43.06%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.19%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.47%",
            "Towers.popDiskFrom": "19.82%",
            "Towers.moveDisks": "8.57%",
            "Interpreter": "0.06%",
            "Towers.pushDisk": "34.39%",
            "Towers.moveTopDisk": "4.18%",
            "Towers$TowersDisk.getSize": "10.56%",
            "Towers$TowersDisk.getNext": "3.84%",
            "Towers.benchmark": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.31%",
            "cd.CollisionDetector.isInVoxel": "19.04%",
            "cd.RedBlackTree.forEach": "6.22%",
            "Node::set_req_X(unsigned": "2.54%",
            "cd.RedBlackTree.put": "6.65%",
            "cd.RedBlackTree.treeInsert": "12.76%",
            "cd.RedBlackTree.treeMinimum": "5.17%",
            "cd.RedBlackTree.findNode": "2.86%",
            "cd.Vector2D.compareNumbers": "3.92%",
            "cd.RedBlackTree.leftRotate": "2.19%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.76%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.06%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.32%",
            "som.Vector.append": "3.18%",
            "som.Vector.forEach": "2.11%",
            "som.IdentitySet.lambda$contains$0": "31.36%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "7.93%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.33%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.11%",
            "havlak.HavlakLoopFinder.doDFS": "5.60%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "6.40%",
            "Sieve.benchmark": "7.23%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "83.27%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.09%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.14%",
            "Permute.swap": "40.36%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "Benchmark.innerBenchmarkLoop": "0.07%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.39%",
            "nbody.Body.getZ": "7.97%",
            "nbody.Body.getY": "0.78%",
            "nbody.Body.setX": "1.59%",
            "nbody.Body.setY": "1.56%",
            "nbody.Body.setZ": "0.36%",
            "nbody.Body.setVX": "28.59%",
            "nbody.Body.setVY": "5.93%",
            "nbody.Body.getMass": "0.60%",
            "nbody.NBodySystem.advance": "40.24%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.26%",
            "Interpreter": "0.05%",
            "List.makeList": "1.13%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.45%",
            "List$Element.length": "0.13%",
            "List.verifyResult": "0.10%",
            "List.isShorterThan": "81.67%",
            "List$Element.<init>": "0.18%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.67%",
            "java.lang.String.length": "2.93%",
            "java.lang.String.<init>": "4.99%",
            "json.JsonPureStringParser.readArray": "2.59%",
            "java.lang.String.isLatin1": "3.44%",
            "json.JsonPureStringParser.isDigit": "2.55%",
            "json.JsonPureStringParser.readStringInternal": "6.67%",
            "java.util.Arrays.copyOfRange": "8.30%",
            "java.lang.String.equals": "23.29%",
            "json.JsonPureStringParser.read": "12.74%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.05%",
            "Queens.getRowColumn": "68.75%",
            "Queens.setRowColumn": "17.57%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.62%",
            "Queens.placeQueen": "8.65%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.01%",
            "Richards.benchmark": "4.97%",
            "richards.Packet.<init>": "7.13%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.80%",
            "itable": "35.92%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.22%",
            "richards.TaskControlBlock.<init>": "2.88%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.72%",
            "richards.RBObject.<init>": "6.28%",
            "richards.RBObject.append": "3.02%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.5",
            "Towers.moveDisks": "94.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "Sieve.benchmark": "4.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "94.0",
            "java.lang.Integer.valueOf": "0.8",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.3",
            "deltablue.AbstractConstraint.satisfy": "10.4",
            "deltablue.Planner.removePropagateFrom": "10.0",
            "som.Vector.<init>": "30.5",
            "deltablue.Variable.<init>": "4.4",
            "som.Vector.forEach": "7.1",
            "deltablue.AbstractConstraint.<init>": "4.7",
            "deltablue.Planner.constraintsConsuming": "4.1",
            "deltablue.Plan.lambda$execute$0": "3.2",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.4",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "9.0",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.9",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.5",
            "som.Set.contains": "3.9"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.3",
            "Mandelbrot.mandelbrot": "99.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.createDevice": "0.1",
            "richards.Scheduler.schedule": "12.7",
            "richards.Scheduler.<init>": "0.0",
            "richards.Packet.<init>": "0.3",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "85.6",
            "richards.RBObject.<init>": "0.6",
            "richards.RBObject.append": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.util.Arrays.setAll": "0.0",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "53.2",
            "Bounce$Ball.<init>": "45.7",
            "Bounce.lambda$benchmark$0": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.6",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.5",
            "cd.RedBlackTree.treeInsert": "2.2",
            "cd.RedBlackTree.findNode": "1.5",
            "cd.RedBlackTree.<init>": "1.5",
            "cd.Vector2D.<init>": "45.2",
            "cd.RedBlackTree$InsertResult.<init>": "14.8",
            "cd.RedBlackTree$Node.<init>": "8.0",
            "cd.RedBlackTree$Entry.<init>": "4.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.5",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List.makeList": "0.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.1",
            "List$Element.length": "0.2",
            "List.isShorterThan": "77.1",
            "List$Element.<init>": "19.8",
            "Run.printResult": "0.1",
            "java.lang.System.nanoTime": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.7",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.4",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "18.3",
            "Queens.placeQueen": "81.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.218590299874652",
            "json.JsonPureStringParser.readChar(String)": "2.0634461479124484",
            "java.lang.String.<init>(byte[], byte) String.java": "6.3099026130556375",
            "json.JsonPureStringParser.isWhiteSpace()": "1.897599074341915",
            "json.JsonPureStringParser.read()": "22.605341818532448",
            "java.lang.String.length() String.java": "3.012245685083406",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.661266994503906",
            "java.lang.String.substring(int, int) String.java": "10.00482113585961",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.363899334683253",
            "json.JsonPureStringParser.readStringInternal()": "3.062385498023335"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.hasSome(TestInterface)": "2.4503908598917623",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.8671935400738775",
            "havlak.HavlakLoopFinder.findLoops()": "11.775191134782236",
            "som.Vector.<init>(int)": "5.4698909028433995",
            "som.Set.<init>(int)": "1.5612919852246374",
            "som.Vector.append(Object)": "5.886521776479685",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.282449961343529",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.224293445580277",
            "som.Vector.removeAll()": "2.7081006786358564",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.37007129971652"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "14.333675706335944",
            "jdk.internal.org.objectweb.asm.Frame.pop(String) Frame.java": "0.12264107556223267",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.13797121000751175",
            "Queens.getRowColumn(int, int)": "57.610645245358796",
            "Queens.queens()": "0.8891477978261869",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.3832533611319771",
            "Queens.setRowColumn(int, int, boolean)": "25.831276540295256",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.21462188223390719",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.44457389891309346",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.030660268890558166"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "3.2698850574712646",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.092873563218391",
            "richards.TaskControlBlock.runTask()": "39.816091954022994",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "2.975632183908046",
            "richards.Scheduler.schedule()": "2.589425287356322",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.3213793103448284",
            "richards.RBObject.append(Packet, Packet)": "2.902068965517242",
            "richards.Packet.<init>(Packet, int, int)": "1.548505747126437",
            "Richards.benchmark()": "25.8832183908046",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.9420689655172418"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2653194934022082",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.4078177200933495",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.09204962015994977",
            "Storage$$Lambda$12.0x00000008000c2a98.apply(int)": "0.37902784771744025",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.62980350113439",
            "som.Random.next()": "14.662963023126116",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, Object) DirectMethodHandle$Holder": "0.048732151849385175",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.07039088600466747",
            "Storage.buildTreeDepth(int, Random)": "36.45706426687893",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.6332526545486057"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "34.57465879484666",
            "Towers.popDiskFrom(int)": "32.67442694265841",
            "Towers.moveDisks(int, int, int)": "7.290197671917201",
            "java.nio.Buffer.<init>(int, int, int, int, MemorySegmentProxy) Buffer.java": "0.10756029352008985",
            "Towers$TowersDisk.getSize()": "0.9560914979563543",
            "Towers.moveTopDisk(int, int)": "7.50531825895738",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "15.787460860004298",
            "com.yourkit.probes.Table.createRow() a": "0.22707173076463413",
            "Towers.benchmark()": "0.22707173076463413",
            "java.util.Arrays$ArrayList.iterator() Arrays.java": "0.1314625809689987"
        },
        "YourKit_Permute.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.19970931200142014",
            "sun.management.MappedMXBeanType.newMappedType(Type) MappedMXBeanType.java": "0.0443798471114267",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.0887596942228534",
            "Permute.permute(int)": "57.638326435965425",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.09985465600071007",
            "sun.invoke.util.BytecodeDescriptor.unparseSig(Class, StringBuilder) BytecodeDescriptor.java": "0.16642442666785012",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.05547480888928337",
            "sun.nio.fs.UnixFileAttributes.asBasicFileAttributes() UnixFileAttributes.java": "0.15532946488999344",
            "Permute.benchmark()": "0.09985465600071007",
            "Permute.swap(int, int)": "41.31763766073826"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.961822248502455",
            "deltablue.Variable.<init>()": "2.8022726688433557",
            "som.Vector.forEach(ForEachInterface)": "22.443890274314214",
            "deltablue.BinaryConstraint.getOutput()": "3.1107797516517985",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "9.332339254955395",
            "deltablue.AbstractConstraint.<init>(Strength$Sym)": "3.6249582229992034",
            "som.Vector.<init>(int)": "2.827981592410726",
            "deltablue.BinaryConstraint.chooseMethod(int)": "2.5451834331696532",
            "som.Vector.append(Object)": "18.84464097488238",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "3.4449957580276114"
        },
        "YourKit_List.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.21054570815733026",
            "sun.management.MappedMXBeanType$CompositeDataMXBeanType.toOpenTypeData(Object) MappedMXBeanType.java": "0.052636427039332565",
            "List.tail(List$Element, List$Element, List$Element)": "4.618846472701433",
            "List$Element.<init>(Object)": "0.6579553379916572",
            "List.makeList(int)": "1.8554340531364728",
            "Benchmark.innerBenchmarkLoop(int)": "0.11843196083849829",
            "List$Element.getNext()": "23.094232363507164",
            "List.isShorterThan(List$Element, List$Element)": "68.87476478096667",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.4474096298343268",
            "sun.management.LazyCompositeData.isTypeMatched(CompositeType, CompositeType) LazyCompositeData.java": "0.03947732027949943"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "3.276965833828796",
            "nbody.Body.getZ()": "5.710493204098281",
            "nbody.Body.setX(double)": "0.3871520816337818",
            "nbody.Body.getMass()": "0.40097894169213116",
            "nbody.Body.setZ(double)": "0.8987459037927076",
            "nbody.NBodySystem.advance(double)": "45.31062041121082",
            "nbody.Body.setVY(double)": "5.268033682231102",
            "nbody.Body.setVZ(double)": "8.392904055418054",
            "nbody.Body.setVX(double)": "27.888776737690634",
            "nbody.Body.setY(double)": "0.6775161428591181"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.33895009721321",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.07777057679844457",
            "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(MethodType, int) DirectMethodHandle.java": "0.0691294015986174",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0691294015986174",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.07777057679844457",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(int, int) MethodWriter.java": "0.06048822639879022",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.05184705119896305",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.08641175199827175",
            "java.lang.invoke.MethodHandle.invokeBasic(Object[]) MethodHandle.java (native)": "0.08641175199827175",
            "java.security.BasicPermission.newPermissionCollection() BasicPermission.java": "0.05184705119896305"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "3.8943143011203643",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "22.200919990147717",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "16.622397965636836",
            "cd.RedBlackTree.findNode(Comparable)": "8.101505135835014",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.14144682097471",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.369873318288632",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "1.9371717292752582",
            "cd.RedBlackTree.put(Comparable, Object)": "7.296014485517811",
            "cd.Vector2D.compareNumbers(double, double)": "8.227987138777385",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.6080655576192098"
        },
        "YourKit_Sieve.txt": {
            "java.io.PrintStream.println(String) PrintStream.java": "0.08019808928052288",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.11027237276071897",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.2054474552143795",
            "Benchmark.innerBenchmarkLoop(int)": "0.04009904464026144",
            "Sieve.benchmark()": "91.00478181107334",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.08019808928052288",
            "java.lang.invoke.MethodHandles$Lookup.getDirectFieldCommon(byte, Class, MemberName, boolean) MethodHandles.java": "0.08019808928052288",
            "Sieve.sieve(boolean[], int)": "6.125129068799935",
            "jdk.internal.org.objectweb.asm.Frame.pop() Frame.java": "0.0501238058003268",
            "java.util.zip.Inflater.<init>(boolean) Inflater.java": "0.19047046204124185"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.15536695733234931",
            "Bounce.benchmark()": "61.098055970946376",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.19420869666543666",
            "java.util.ImmutableCollections$MapN.probe(Object) ImmutableCollections.java": "0.15536695733234931",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.233050435998524",
            "Bounce.lambda$benchmark$0(Random, int)": "0.5632052203297664",
            "som.Random.next()": "0.36899652366432967",
            "Bounce$Ball.bounce()": "35.92860888310578",
            "jdk.internal.loader.URLClassPath$JarLoader$1.run() URLClassPath.java": "0.233050435998524",
            "Bounce$Ball.<init>(Random)": "0.5632052203297664"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 22.0925,
        "JavaFlightRecorder_Bounce.jfr": 15.538,
        "rebench_test_Async_Bounce.txt": 62.498000000000005,
        "Mandelbrot.hpl": 38.0005,
        "JavaFlightRecorder_Storage.jfr": 59.2725,
        "List.hpl": 22.685499999999998,
        "rebench_test_Async_Towers.txt": 80.14349999999999,
        "JavaFlightRecorder_Sieve.jfr": 31.533,
        "Permute.hpl": 30.3595,
        "JavaFlightRecorder_NBody.jfr": 21.298499999999997,
        "Queens.hpl": 21.844,
        "rebench_test_Async_Sieve.txt": 88.393,
        "JavaFlightRecorder_Richards.jfr": 92.625,
        "Storage.hpl": 60.5325,
        "DeltaBlue.hpl": 11.882,
        "NBody.hpl": 21.371,
        "Bounce.hpl": 26.2935,
        "Towers.hpl": 26.002499999999998,
        "JavaFlightRecorder_Json.jfr": 82.241,
        "rebench_test_Async_List.txt": 70.55250000000001,
        "rebench_test_Async_Richards.txt": 287.4125,
        "rebench_test_Async_DeltaBlue.txt": 36.9315,
        "JavaFlightRecorder_Mandelbrot.jfr": 38.042,
        "Richards.hpl": 90.9305,
        "JavaFlightRecorder_Havlak.jfr": 156.53,
        "JavaFlightRecorder_List.jfr": 22.2225,
        "JavaFlightRecorder_CD.jfr": 42.5045,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.129000000000001,
        "rebench_test_Async_Storage.txt": 170.6945,
        "rebench_test_Async_Mandelbrot.txt": 106.523,
        "JavaFlightRecorder_Towers.jfr": 26.101,
        "Json.hpl": 79.525,
        "Havlak.hpl": 156.05700000000002,
        "rebench_test_Async_CD.txt": 151.4275,
        "rebench_test_Async_Havlak.txt": 517.328,
        "Sieve.hpl": 30.9715,
        "rebench_test_Async_Permute.txt": 84.9465,
        "rebench_test_Async_NBody.txt": 59.356,
        "JavaFlightRecorder_Permute.jfr": 29.6015,
        "CD.hpl": 42.2515,
        "rebench_test_Async_Json.txt": 281.85,
        "rebench_test_Async_Queens.txt": 63.673500000000004
    },
    "Perf": {
        "NBody.data": {
            "[.] 0x00007f9f64ad5c10": "5.23%",
            " ": "0",
            "[.] 0x00007f9f64ad5c01": "4.44%",
            "[.] 0x00007f9f64ad5bf9": "5.12%",
            "[.] 0x00007f9f64ad5bfd": "18.92%",
            "[.] 0x00007f9f64ad5bf5": "23.35%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007f083cad367c": "20.25%",
            "[.] 0x00007f083cad3716": "2.52%",
            "[.] 0x00007f083cad3610": "26.03%",
            "[.] 0x00007f083cad34dc": "13.94%",
            "[.] 0x00007f083cad3554": "10.42%"
        },
        "Havlak.data": {
            "[.] 0x00007f05c8b05a53": "1.72%",
            "[.] 0x00007f05c8b1cef0": "1.40%",
            " ": "0",
            "[.] 0x00007f05c8b2faf5": "16.65%",
            "[.] 0x00007f05c8adf643": "1.18%",
            "[.] 0x00007f05c8b2fafc": "16.54%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007fd49cb343c1": "6.44%",
            "[.] 0x00007fd49cb343b0": "3.78%",
            "[.] 0x00007fd49cb343fd": "3.51%",
            "[.] 0x00007fd49caf99d0": "3.94%",
            "[.] 0x00007fd49caf9940": "2.03%"
        },
        "Queens.data": {
            "[.] 0x00007f1e44ad3f96": "4.16%",
            "[.] 0x00007f1e44ad3ded": "3.73%",
            " ": "0",
            "[.] 0x00007f1e44ad3dd7": "3.70%",
            "[.] 0x00007f1e44ad3f2d": "25.05%",
            "[.] 0x00007f1e44ad3f1e": "6.42%"
        },
        "Towers.data": {
            "[.] 0x00007f2060ad5405": "7.13%",
            " ": "0",
            "[.] 0x00007f2060ad4f46": "3.70%",
            "[.] 0x00007f2060ad53a3": "3.84%",
            "[.] 0x00007f2060ad5382": "10.06%",
            "[.] 0x00007f2060ad50dd": "3.15%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007fa7f0646f1c": "6.60%",
            "[.] 0x00007fa7f0646eaf": "8.11%",
            "[.] 0x00007fa7f0646eba": "10.48%",
            "[.] 0x00007fa7f0af283a": "5.85%",
            "[.] 0x00007fa7f0646e9b": "4.84%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007fd62cad5c5a": "6.15%",
            "[.] 0x00007fd62cad5ca5": "4.51%",
            "[.] 0x00007fd62cad5cad": "4.83%",
            "[.] 0x00007fd62cad5cc9": "5.49%",
            "[.] 0x00007fd62cad5c16": "6.83%"
        },
        "CD.data": {
            "[.] 0x00007fcb0cb09d68": "5.11%",
            " ": "0",
            "[.] 0x00007fcb0cada511": "2.18%",
            "[.] 0x00007fcb0cada540": "2.15%",
            "[.] 0x00007fcb0cb09d80": "3.51%",
            "[.] 0x00007fcb0cb20b3a": "3.24%"
        },
        "Mandelbrot.data": {
            "[.] 0x00007fac54ad7d17": "5.86%",
            " ": "0",
            "[.] 0x00007fac54ad7d49": "6.03%",
            "[.] 0x00007fac54ad7ce5": "6.13%",
            "[.] 0x00007fac54ad7cb3": "5.73%",
            "[.] 0x00007fac54ad7cf1": "5.07%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007f298cad4405": "5.19%",
            "[.] 0x00007f298cad43f5": "5.32%",
            "[.] 0x00007f298cad42c5": "11.34%",
            "[.] 0x00007f298cad42b5": "25.34%",
            "[.] 0x00007f298cad44d5": "6.09%"
        },
        "Sieve.data": {
            "[.] 0x00007fa2e0ada232": "3.42%",
            " ": "0",
            "[.] 0x00007fa2e0ada28c": "14.69%",
            "[.] 0x00007fa2e0ada28e": "27.68%",
            "[.] 0x00007fa2e0ad8255": "3.41%",
            "[.] 0x00007fa2e0ada238": "20.25%"
        },
        "Bounce.data": {
            "[.] 0x00007f3b3cadbc47": "26.26%",
            " ": "0",
            "[.] 0x00007f3b3cad556f": "5.18%",
            "[.] 0x00007f3b3cad5562": "8.77%",
            "[.] 0x00007f3b3cadbc54": "16.27%",
            "[.] 0x00007f3b3cadbc42": "9.55%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007f2014adad69": "1.30%",
            "[.] 0x00007f2014adaf89": "1.01%",
            "[.] 0x00007f2014adadf5": "1.41%",
            "[.] 0x00007f2014adafa8": "2.28%",
            "[.] 0x00007f2014adae91": "1.04%"
        }
    }
}