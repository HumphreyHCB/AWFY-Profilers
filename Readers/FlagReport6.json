{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "jdk.internal.loader.URLClassPath$JarLoader.getResource(Ljava/lang/String;Z)Ljdk/internal/loader/Resource;": "0.0876424189307625",
            "Mandelbrot.mandelbrot(I)I": "99.91235758106924"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.970873786407767",
            " ": "0",
            "Queens.placeQueen(I)Z": "15.210355987055015",
            "Queens.getRowColumn(II)Z": "56.63430420711974",
            "java.util.Arrays.fill([ZZ)V": "0.32362459546925565",
            "Queens.setRowColumn(IIZ)V": "26.05177993527508",
            "Queens.queens()Z": "0.8090614886731391"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.1564945226917058",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.6259780907668232",
            "Bounce$Ball.bounce()Z": "79.18622848200313",
            "Bounce.benchmark()Ljava/lang/Object;": "17.370892018779344",
            "som.Random.next()I": "0.782472613458529",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1564945226917058",
            "Bounce$Ball.<init>(Lsom/Random;)V": "1.721439749608764"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.966086159486709",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "39.298808432630615",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.889092575618698",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "2.841429880843263",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "15.925756186984417",
            "havlak.HavlakLoopFinder.findLoops()V": "4.582951420714941",
            "som.Vector.<init>(I)V": "1.5123739688359303",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.6516956920256645",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.176901924839597",
            "som.Vector.append(Ljava/lang/Object;)V": "2.0394133822181484"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "15.066225165562916",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.80794701986755",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.8973509933774837",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.1324503311258285",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "25.827814569536425",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.884105960264901",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.119205298013245",
            "cd.Vector2D.compareNumbers(DD)I": "4.304635761589404",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "16.55629139072848",
            "som.Vector.append(Ljava/lang/Object;)V": "1.8211920529801326"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.8975903614458",
            " ": "0",
            "List$Element.getNext()LList$Element;": "9.487951807228917",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.30120481927710846",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.957831325301205",
            "List$Element.length()I": "0.15060240963855423",
            "java.lang.invoke.InvokerBytecodeGenerator.maybeDump([B)V": "0.15060240963855423",
            "List.makeList(I)LList$Element;": "1.0542168674698795"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "6.497175141242938",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "5.084745762711864",
            "deltablue.Plan.lambda$execute$0(Ldeltablue/AbstractConstraint;)V": "2.542372881355932",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "40.67796610169491",
            "deltablue.UnaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "6.497175141242938",
            "deltablue.EqualityConstraint.execute()V": "3.672316384180791",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "3.672316384180791",
            "som.Vector.<init>(I)V": "3.672316384180791",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "4.519774011299435",
            "som.Vector.append(Ljava/lang/Object;)V": "5.084745762711864"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.17931858936043035",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.41841004184100417",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "34.54871488344292",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.0161386730424387",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;)J": "0.05977286312014345",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "2.390914524805738",
            "java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(Ljava/lang/invoke/LambdaForm$BasicType;)I": "0.05977286312014345",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "45.427375971309026",
            "som.Random.next()I": "15.122534369396293",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.657501494321578"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "5.982905982905983",
            "java.util.Arrays.fill([ZZ)V": "4.38034188034188",
            "Sieve.sieve([ZI)I": "89.31623931623932",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.21367521367521367",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitInsn(I)V": "0.10683760683760683"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "Towers.buildTowerAt(II)V": "0.2621231979030144",
            "java.lang.StringConcatHelper.mix(JLjava/lang/String;)J": "0.1310615989515072",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "15.46526867627785",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "3.2765399737876804",
            "sun.nio.cs.StreamEncoder.implFlushBuffer()V": "0.1310615989515072",
            "Towers.moveDisks(III)V": "5.766710353866317",
            "Towers$TowersDisk.getSize()I": "11.926605504587156",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "33.944954128440365",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "24.50851900393185",
            "Towers.moveTopDisk(II)V": "4.456094364351245"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.5625",
            "nbody.Body.getMass()D": "0.46875",
            "nbody.Body.setVX(D)V": "34.375",
            "nbody.NBodySystem.advance(D)V": "38.28125",
            "nbody.Body.setZ(D)V": "0.625",
            "nbody.Body.getY()D": "0.9375",
            "nbody.Body.getZ()D": "7.5",
            "nbody.Body.setVZ(D)V": "7.34375",
            "nbody.Body.setVY(D)V": "5.625",
            "nbody.Body.setX(D)V": "1.71875"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.878284923928078",
            "richards.Scheduler.schedule()V": "10.857538035961273",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "12.033195020746888",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.085753803596128",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.6652835408022133",
            "Richards.benchmark()Ljava/lang/Object;": "9.197786998616875",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.771784232365145",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.702627939142462",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.633471645919779",
            "richards.RBObject.<init>()V": "11.61825726141079"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.305785123966942",
            "json.JsonPureStringParser.isDigit()Z": "2.5765678172095283",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "2.771025765678172",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "23.237724842002915",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.9309674282936315",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "11.18133203694701",
            "java.lang.String.<init>([BB)V": "5.979581915410792",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.569761789013126",
            "json.JsonPureStringParser.read()V": "13.077297034516285",
            "java.util.Arrays.copyOfRange([BII)[B": "5.007292173067574"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Ljava/lang/Object;JLjava/lang/Object;JLjava/lang/Object;)J": "0.12135922330097088",
            "Permute.swap(II)V": "44.53883495145631",
            "Permute.permute(I)V": "55.09708737864078",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.24271844660194175"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.2",
            "richards.Packet::setLink": "2.5",
            "Richards::benchmark": "5.4",
            "richards.RBObject::append": "2.7",
            "AGCT::Unknown Java[ERR=-5]": "42.9",
            "richards.HandlerTaskDataRecord::workInAdd": "2.7",
            "richards.TaskControlBlock::<init>": "2.8",
            "richards.Scheduler::schedule": "7.4",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "6.6"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.invoke.InnerClassLambdaMetafactory::<clinit>": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.invoke.MemberName::init": "0.0",
            "Mandelbrot::mandelbrot": "97.6",
            "Run::measure": "0.0",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0"
        },
        "List.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "List$Element::getNext": "9.3",
            "List::makeList": "0.9",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "List::tail": "2.3",
            "List::isShorterThan": "80.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "3.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.2",
            "json.JsonPureStringParser::read": "16.9",
            "java.lang.String::<init>": "5.3",
            "java.lang.String::length": "3.1",
            "java.util.Arrays::copyOfRange": "7.5",
            "java.lang.String::equals": "21.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "java.lang.String::isLatin1": "2.4",
            "json.JsonPureStringParser::readStringInternal": "9.4"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.7",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.0",
            "havlak.HavlakLoopFinder::findLoops": "6.3",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "8.0",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.5",
            "havlak.HavlakLoopFinder::doDFS": "5.1",
            "som.Vector::hasSome": "2.1",
            "som.Vector::forEach": "2.2"
        },
        "Permute.hpl": {
            "Permute::swap": "39.0",
            "java.lang.Long::getChars": "0.0",
            "Permute::permute": "51.1",
            "Permute::benchmark": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "java.lang.System::arraycopy": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "5.6",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.1",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "1.0",
            "Queens::placeQueen": "13.1",
            "Queens::setRowColumn": "24.1",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.4"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "40.3",
            "java.util.Arrays::setAll": "34.3",
            "som.Random::next": "11.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.8",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "3.8"
        },
        "Sieve.hpl": {
            "java.io.BufferedWriter::write": "0.0",
            "Sieve::benchmark": "5.9",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "86.3",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Run::measure": "0.0",
            "java.util.Arrays::fill": "5.2"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "4.6",
            "deltablue.Variable::<init>": "4.5",
            "som.Vector::append": "3.6",
            "AGCT::Unknown not Java[ERR=-3]": "13.7",
            "AGCT::Unknown Java[ERR=-5]": "13.8",
            "deltablue.BinaryConstraint::chooseMethod": "4.1",
            "deltablue.AbstractConstraint::<init>": "2.3",
            "som.Vector::<init>": "4.9",
            "deltablue.StayConstraint::<init>": "12.4",
            "som.Vector::forEach": "4.5"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.2",
            "Bounce$Ball::bounce": "75.7",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.3",
            "java.lang.invoke.LambdaFormBuffer::clearDuplicatesAndNulls": "0.0",
            "Bounce::verifyResult": "0.0",
            "som.Random::next": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.5"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.7",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "0.7",
            "nbody.Body::setVZ": "7.9",
            "nbody.Body::getZ": "8.0",
            "nbody.Body::setVX": "28.9",
            "nbody.Body::setVY": "6.3",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.4",
            "nbody.NBodySystem::advance": "39.4"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.0",
            "Towers::popDiskFrom": "21.3",
            "Towers::moveDisks": "3.7",
            "Towers::buildTowerAt": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "Towers::pushDisk": "33.8",
            "Towers$TowersDisk::setNext": "14.8",
            "AGCT::Unknown Java[ERR=-5]": "3.9",
            "Towers::moveTopDisk": "4.0",
            "Towers$TowersDisk::getNext": "3.9"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.8",
            "cd.RedBlackTree::forEach": "3.5",
            "cd.RedBlackTree::put": "6.5",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "10.7",
            "AGCT::Unknown Java[ERR=-5]": "3.1",
            "cd.Vector2D::compareNumbers": "4.6",
            "cd.CollisionDetector::isInVoxel": "21.5",
            "cd.RedBlackTree::treeInsert": "13.6"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "5.32%",
            "deltablue.AbstractConstraint.satisfy": "3.56%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "5.56%",
            "som.Vector.append": "5.15%",
            "vtable": "2.01%",
            "som.Vector.forEach": "22.86%",
            "itable": "4.27%",
            "deltablue.Planner.addPropagate": "2.04%",
            "deltablue.Plan.lambda$execute$0": "4.50%",
            "deltablue.ScaleConstraint.execute": "1.65%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.18%",
            "som.Random.next": "0.88%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.68%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.85%",
            "__tls_get_addr": "0.03%",
            "Bounce$Ball.<init>": "1.76%",
            "Bounce.lambda$benchmark$0": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.58%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.46%",
            "som.Random.next": "10.63%",
            "java.util.Arrays.setAll": "35.36%",
            "Storage.lambda$buildTreeDepth$0": "4.04%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.58%",
            "SpinPause": "0.23%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.56%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.30%",
            "Storage.buildTreeDepth": "43.56%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.15%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.62%",
            "Towers.popDiskFrom": "19.21%",
            "Towers.moveDisks": "8.60%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "35.00%",
            "Towers.moveTopDisk": "4.08%",
            "Towers$TowersDisk.getSize": "10.46%",
            "Towers$TowersDisk.getNext": "3.82%",
            "Towers.benchmark": "0.15%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.03%",
            "cd.CollisionDetector.isInVoxel": "19.14%",
            "cd.RedBlackTree.forEach": "6.13%",
            "Node::set_req_X(unsigned": "2.05%",
            "cd.RedBlackTree.put": "6.88%",
            "cd.RedBlackTree.treeInsert": "12.96%",
            "cd.RedBlackTree.treeMinimum": "5.25%",
            "cd.RedBlackTree.findNode": "2.83%",
            "cd.Vector2D.compareNumbers": "3.96%",
            "cd.RedBlackTree.leftRotate": "2.26%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.33%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.51%",
            "som.Vector.append": "3.99%",
            "som.Vector.<init>": "2.07%",
            "som.Vector.forEach": "2.06%",
            "som.IdentitySet.lambda$contains$0": "30.98%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.75%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.25%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.02%",
            "havlak.HavlakLoopFinder.doDFS": "6.56%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.92%",
            "Sieve.benchmark": "7.53%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "83.38%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr,": "0.03%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.28%",
            "Permute.swap": "40.36%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "I2C/C2I": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.73%",
            "nbody.Body.getZ": "7.74%",
            "nbody.Body.getY": "0.71%",
            "nbody.Body.setX": "1.18%",
            "nbody.Body.setY": "1.73%",
            "nbody.Body.setVX": "27.63%",
            "nbody.Body.setVY": "5.57%",
            "nbody.Body.getMass": "0.48%",
            "nbody.Body.getVZ": "0.46%",
            "nbody.NBodySystem.advance": "41.76%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.40%",
            "Interpreter": "0.05%",
            "List.makeList": "1.32%",
            "List$Element.setNext": "0.05%",
            "List.tail": "4.76%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.11%",
            "List.isShorterThan": "80.66%",
            "List$Element.<init>": "0.19%",
            "Benchmark.innerBenchmarkLoop": "0.13%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.51%",
            "java.lang.String.length": "3.28%",
            "java.lang.String.<init>": "5.79%",
            "json.JsonPureStringParser.isWhiteSpace": "2.21%",
            "java.lang.String.isLatin1": "3.35%",
            "json.JsonPureStringParser.readStringInternal": "6.78%",
            "java.util.Arrays.copyOfRange": "8.09%",
            "java.lang.String.equals": "21.87%",
            "json.JsonPureStringParser.read": "15.66%",
            "json.JsonPureStringParser.readValue": "2.20%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.12%",
            "Queens.getRowColumn": "56.93%",
            "Queens.setRowColumn": "23.52%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.61%",
            "Queens.placeQueen": "14.21%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "Queens.benchmark": "0.05%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.46%",
            "Richards.benchmark": "4.43%",
            "richards.Packet.<init>": "6.91%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.68%",
            "itable": "36.73%",
            "richards.TaskControlBlock.<init>": "3.37%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.28%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.02%",
            "richards.RBObject.<init>": "6.25%",
            "richards.RBObject.append": "2.88%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.8",
            "Towers.moveDisks": "93.6",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "Towers.pushDisk": "0.1",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Towers.benchmark": "0.5"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "7.7",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "91.4",
            "java.lang.Integer.valueOf": "0.3",
            "Run.runBenchmark": "0.1",
            "java.lang.System.nanoTime": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.1",
            "deltablue.AbstractConstraint.satisfy": "10.3",
            "deltablue.Planner.removePropagateFrom": "9.2",
            "som.Vector.<init>": "33.4",
            "deltablue.Variable.<init>": "4.7",
            "som.Vector.forEach": "7.3",
            "deltablue.Planner.constraintsConsuming": "4.7",
            "deltablue.AbstractConstraint.<init>": "3.4",
            "deltablue.Plan.lambda$execute$0": "2.0",
            "deltablue.Planner.addConstraintsConsumingTo": "16.0"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "havlak.HavlakLoopFinder.stepEProcessNonBackPreds": "3.4",
            "som.Vector.hasSome": "3.3",
            "som.Vector.<init>": "42.5",
            "java.lang.Integer.valueOf": "9.0",
            "som.Set.<init>": "5.4",
            "havlak.UnionFindNode.findSet": "4.6",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "3.9"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.8",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createDevice": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "15.9",
            "richards.Scheduler.createWorker": "0.0",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "richards.TaskControlBlock.runTask": "82.9",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.4",
            "Run.printResult": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "54.1",
            "Bounce$Ball.<init>": "44.9",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "3.1",
            "som.Vector.<init>": "6.3",
            "cd.Vector3D.<init>": "7.7",
            "cd.RedBlackTree.treeInsert": "2.1",
            "cd.RedBlackTree.findNode": "1.7",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "44.1",
            "cd.RedBlackTree$InsertResult.<init>": "14.8",
            "cd.RedBlackTree$Node.<init>": "7.4",
            "cd.RedBlackTree$Entry.<init>": "5.0"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.5",
            "nbody.NBodySystem.advance": "99.0",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.7",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.2",
            "List.makeList": "0.4",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.1",
            "List$Element.length": "0.2",
            "List.isShorterThan": "73.6",
            "List$Element.<init>": "22.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.9",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.4",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.2",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.2",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.2"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.2",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "25.1",
            "Queens.placeQueen": "74.0",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "java.util.Arrays.fill0": "0.2",
            "Run.printResult": "0.1",
            "java.lang.System.nanoTime": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.41728452176596",
            "java.lang.String.<init>(byte[], byte) String.java": "7.600936623690739",
            "json.JsonPureStringParser.isWhiteSpace()": "2.106185855683659",
            "json.JsonPureStringParser.read()": "21.11055649569633",
            "java.lang.String.length() String.java": "3.104493602308284",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "2.7960733228632777",
            "java.lang.String.substring(int, int) String.java": "9.435225654074195",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.191062304954612",
            "json.JsonPureStringParser.readValue()": "3.6766943839102026",
            "json.JsonPureStringParser.readStringInternal()": "3.559007698332503"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.756246481617807",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "6.012644524314729",
            "havlak.HavlakLoopFinder.findLoops()": "10.903737063179323",
            "som.Vector.<init>(int)": "3.241241934785434",
            "som.Set.<init>(int)": "2.258260078811762",
            "som.Vector.append(Object)": "4.146278092928594",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "6.809422768804402",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.1267916684709665",
            "som.Vector.removeAll()": "2.5245745463993425",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.21474039752307"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "8.508805797273618",
            "Queens.getRowColumn(int, int)": "67.09037450625166",
            "Queens.queens()": "0.905824002851118",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.2821419025273974",
            "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm$Name) InvokerBytecodeGenerator.java": "0.267292328710166",
            "java.util.TreeMap$PrivateEntryIterator.nextEntry() TreeMap.java": "0.133646164355083",
            "Queens.setRowColumn(int, int, boolean)": "21.517032461168363",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.3860889192480175",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.20789403344124024",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.2821419025273974"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.906084491957656",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.4489476055822945",
            "richards.TaskControlBlock.runTask()": "33.782415903139224",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "3.836684582078928",
            "richards.Scheduler.schedule()": "2.667720258347646",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.402404540022334",
            "richards.RBObject.append(Packet, Packet)": "3.288120318428494",
            "Richards.benchmark()": "30.422459788280314",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "2.6415981505547683",
            "richards.Packet.setLink(Packet)": "2.2660928510321496"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.2619424368130694",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.5880340418252579",
            "java.util.HashMap$Node.getKey() HashMap.java": "0.10691528033186506",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.1653765556173292",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.09622375229867856",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.12427832185777",
            "som.Random.next()": "16.01590899371339",
            "Storage.benchmark()": "0.1817559765641706",
            "Storage.buildTreeDepth(int, Random)": "35.60278835051107",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "2.459051447632896"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "30.432681541199624",
            "Towers.popDiskFrom(int)": "29.32475277866176",
            "Towers.moveDisks(int, int, int)": "8.333038671428401",
            "java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(LambdaForm$Name, int) InvokerBytecodeGenerator.java": "0.21215657154980372",
            "Towers.buildTowerAt(int, int)": "0.10607828577490186",
            "Towers$TowersDisk.getSize()": "1.4968824770458375",
            "Towers.moveTopDisk(int, int)": "10.383885529743171",
            "java.security.SecureClassLoader.getProtectionDomain(CodeSource) SecureClassLoader.java": "0.17679714295816978",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.200169725257236",
            "com.yourkit.probes.Table.createRow() a": "0.10607828577490186"
        },
        "YourKit_Permute.txt": {
            "java.lang.invoke.MethodType.checkPtypes(Class[]) MethodType.java": "0.22327907651773946",
            "java.nio.CharBuffer.limit(int) CharBuffer.java": "0.10047558443298275",
            "java.nio.CharBuffer.arrayOffset() CharBuffer.java": "0.10047558443298275",
            "java.nio.LongBuffer.<clinit>() LongBuffer.java": "0.2567709379954004",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c5c00.<clinit>() LambdaForm$MH": "0.11163953825886973",
            "Permute.permute(int)": "55.339719114921735",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.10047558443298275",
            "com.yourkit.probes.Table.createRow() a": "0.2121151226918525",
            "Permute.benchmark()": "0.32375466095072225",
            "Permute.swap(int, int)": "42.702123384017675"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "4.661497959085091",
            "som.Vector.forEach(ForEachInterface)": "23.331642634591702",
            "som.Dictionary.at(Dictionary$CustomHash)": "6.811100644880808",
            "deltablue.BinaryConstraint.isSatisfied()": "2.6085066299543516",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "4.540733763253871",
            "som.Vector.<init>(int)": "3.0915634132792316",
            "deltablue.ScaleConstraint.execute()": "3.0432577349467436",
            "deltablue.BinaryConstraint.chooseMethod(int)": "5.144554742409971",
            "deltablue.Strength.weaker(Strength)": "14.20186942975147",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.4394367557906436"
        },
        "YourKit_List.txt": {
            "java.lang.StringConcatHelper.prepend(long, byte[], long, String) StringConcatHelper.java": "0.12058847174210145",
            "List.tail(List$Element, List$Element, List$Element)": "3.1888951416244606",
            "jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry) URLClassPath.java": "0.2411769434842029",
            "List$Element.<init>(Object)": "0.13398719082455718",
            "List.makeList(int)": "0.7905244258648871",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.2545756625666586",
            "List$Element.getNext()": "23.380764798885227",
            "List.isShorterThan(List$Element, List$Element)": "71.16059704692232",
            "com.yourkit.probes.Table.closeRow(int, Throwable) a": "0.12058847174210145",
            "com.yourkit.probes.Table.createRow() a": "0.12058847174210145"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.240785125725064",
            "nbody.Body.getZ()": "5.559416261292564",
            "nbody.Body.getMass()": "0.6949270326615705",
            "nbody.Body.getX()": "1.120392562862532",
            "nbody.Body.setZ(double)": "0.8367488760618911",
            "nbody.NBodySystem.advance(double)": "42.83019670689679",
            "nbody.Body.setVY(double)": "7.998751967778077",
            "nbody.Body.setVZ(double)": "9.360241664421153",
            "nbody.Body.setVX(double)": "26.563231268880035",
            "nbody.Body.setY(double)": "0.55310518926125"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.83258052702254",
            "sun.nio.cs.StreamEncoder.implFlushBuffer() StreamEncoder.java": "0.0",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "java.lang.invoke.LambdaForm$Name.useCount(LambdaForm$Name) LambdaForm.java": "0.08719764217575557",
            "sun.nio.cs.StreamEncoder.writeBytes() StreamEncoder.java": "0.0",
            "sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java": "0.0",
            "com.yourkit.probes.Table.createRow() a": "0.07847787795818001",
            "Run.measure(Benchmark)": "8.719764217575556E-4",
            "Run.printResult(long)": "8.719764217575556E-4",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.0"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.04702108989682",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "21.165542073890283",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "13.669097400829072",
            "cd.RedBlackTree.findNode(Comparable)": "9.614511785530576",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "8.237768162425489",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.178583315682774",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "3.1014554146872824",
            "cd.RedBlackTree.put(Comparable, Object)": "6.717298556688553",
            "cd.Vector2D.compareNumbers(double, double)": "11.187933069079245",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.3269085297588425"
        },
        "YourKit_Sieve.txt": {
            "javax.management.openmbean.OpenType.isAssignableFrom(OpenType) OpenType.java": "0.0409316032909009",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "1.9033195530268918",
            "java.lang.reflect.Modifier.isPrivate(int) Modifier.java": "0.09209610740452702",
            "Sieve.benchmark()": "90.21325365314557",
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.1637264131636036",
            "java.nio.DirectByteBuffer.asLongBuffer() DirectByteBuffer.java": "0.1330277106954279",
            "java.util.Arrays$ArrayItr.next() Arrays.java": "0.11256190904997748",
            "java.util.Arrays.copyOf(Object[], int, Class) Arrays.java": "0.0409316032909009",
            "Sieve.sieve(boolean[], int)": "7.0402357660349555",
            "java.util.zip.Inflater.inflateBytesBytes(long, byte[], int, int, byte[], int, int) Inflater.java (native)": "0.10232900822725224"
        },
        "YourKit_Bounce.txt": {
            "Bounce.benchmark()": "63.598729180706634",
            "Bounce.lambda$benchmark$0(Random, int)": "1.213054780013478",
            "som.Random.next()": "0.7894483488976605",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.09627418888995858",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.42360643111581775",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.134783864445942",
            "Bounce$Ball.bounce()": "32.097814575912196",
            "jdk.internal.misc.Unsafe.allocateInstance(Class) Unsafe.java (native)": "0.23105805333590057",
            "java.io.RandomAccessFile.<clinit>() RandomAccessFile.java": "0.21180321555790887",
            "Bounce$Ball.<init>(Random)": "0.943487051121594"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.0105,
        "JavaFlightRecorder_Bounce.jfr": 23.304,
        "rebench_test_Async_Bounce.txt": 68.2465,
        "Mandelbrot.hpl": 37.917500000000004,
        "rebench_test_Async_Towers.txt": 77.7745,
        "JavaFlightRecorder_Storage.jfr": 58.417,
        "List.hpl": 22.4025,
        "JavaFlightRecorder_Sieve.jfr": 31.024,
        "JavaFlightRecorder_NBody.jfr": 21.487499999999997,
        "Queens.hpl": 20.826,
        "Permute.hpl": 29.9695,
        "rebench_test_Async_Sieve.txt": 88.3625,
        "JavaFlightRecorder_Richards.jfr": 92.0795,
        "Storage.hpl": 60.479,
        "DeltaBlue.hpl": 12.67,
        "JavaFlightRecorder_Json.jfr": 79.73400000000001,
        "Towers.hpl": 25.891,
        "Bounce.hpl": 26.173,
        "NBody.hpl": 21.611,
        "rebench_test_Async_List.txt": 70.035,
        "rebench_test_Async_Richards.txt": 279.83900000000006,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.9905,
        "rebench_test_Async_DeltaBlue.txt": 44.2925,
        "Richards.hpl": 96.784,
        "JavaFlightRecorder_Havlak.jfr": 156.778,
        "JavaFlightRecorder_List.jfr": 23.0685,
        "JavaFlightRecorder_CD.jfr": 43.06,
        "JavaFlightRecorder_DeltaBlue.jfr": 14.792,
        "rebench_test_Async_Mandelbrot.txt": 117.81,
        "rebench_test_Async_Storage.txt": 169.41899999999998,
        "Json.hpl": 80.4425,
        "JavaFlightRecorder_Towers.jfr": 26.018,
        "Havlak.hpl": 154.691,
        "rebench_test_Async_CD.txt": 151.6215,
        "rebench_test_Async_Havlak.txt": 524.148,
        "Sieve.hpl": 30.879,
        "rebench_test_Async_Permute.txt": 86.68950000000001,
        "JavaFlightRecorder_Permute.jfr": 29.808500000000002,
        "rebench_test_Async_NBody.txt": 60.6085,
        "CD.hpl": 41.932,
        "rebench_test_Async_Queens.txt": 60.535,
        "rebench_test_Async_Json.txt": 291.2625
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007f29ecad6081": "4.14%",
            "[.] 0x00007f29ecad607d": "18.80%",
            "[.] 0x00007f29ecad6075": "22.81%",
            "[.] 0x00007f29ecad6079": "4.80%",
            "[.] 0x00007f29ecad6090": "5.28%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007f2544ad3290": "25.81%",
            "[.] 0x00007f2544ad32fc": "19.49%",
            "[.] 0x00007f2544ad315c": "14.19%",
            "[.] 0x00007f2544ad3396": "2.65%",
            "[.] 0x00007f2544ad31d4": "10.65%"
        },
        "Havlak.data": {
            "[.] 0x00007f84f4b29a00": "1.39%",
            " ": "0",
            "[.] 0x00007f84f4b062d3": "1.65%",
            "[.] 0x00007f84f4b3537c": "17.06%",
            "[.] 0x00007f84f4adebc3": "1.20%",
            "[.] 0x00007f84f4b35375": "16.99%"
        },
        "DeltaBlue.data": {
            "[.] 0x00007f5964b36750": "1.56%",
            " ": "0",
            "[.] 0x00007f5964b367b0": "19.56%",
            "[.] 0x00007f5964ae5b40": "1.66%",
            "[.] 0x00007f5964af77c0": "1.57%",
            "[.] 0x00007f5964af7850": "3.26%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007f1988ad3b16": "4.21%",
            "[.] 0x00007f1988ad3aad": "25.21%",
            "[.] 0x00007f1988ad3a7f": "3.50%",
            "[.] 0x00007f1988ad3a9e": "6.47%",
            "[.] 0x00007f1988ad3957": "3.51%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007fec44ad4f02": "10.25%",
            "[.] 0x00007fec44ad4f23": "3.95%",
            "[.] 0x00007fec44ad4ac6": "3.53%",
            "[.] 0x00007fec44ad4f85": "6.46%",
            "[.] 0x00007fec44ad4efd": "3.05%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007f0bf0646e2f": "8.26%",
            "[.] 0x00007f0bf0af1b3a": "6.46%",
            "[.] 0x00007f0bf0646e3a": "10.15%",
            "[.] 0x00007f0bf0646e1b": "4.78%",
            "[.] 0x00007f0bf0646e9c": "6.42%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f0cf0ad5fb5": "4.67%",
            "[.] 0x00007f0cf0ad5fbd": "4.85%",
            "[.] 0x00007f0cf0ad5fd9": "4.70%",
            "[.] 0x00007f0cf0ad5f26": "6.87%",
            "[.] 0x00007f0cf0ad5f6a": "5.96%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007f16acada991": "2.29%",
            "[.] 0x00007f16acb0bc00": "3.67%",
            "[.] 0x00007f16acb1203a": "2.93%",
            "[.] 0x00007f16acb0bbe8": "5.16%",
            "Node::set_req_X": "2.50%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007fb9ccad8858": "5.76%",
            "[.] 0x00007fb9ccad8826": "6.11%",
            "[.] 0x00007fb9ccad8832": "5.28%",
            "[.] 0x00007fb9ccad87f4": "6.35%",
            "[.] 0x00007fb9ccad87c2": "5.73%"
        },
        "List.data": {
            "[.] 0x00007fe5e4ad4405": "5.05%",
            " ": "0",
            "[.] 0x00007fe5e4ad42b5": "25.36%",
            "[.] 0x00007fe5e4ad44d5": "5.97%",
            "[.] 0x00007fe5e4ad43f5": "5.20%",
            "[.] 0x00007fe5e4ad42c5": "11.19%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f6324adab82": "3.64%",
            "[.] 0x00007f6324adab8c": "14.22%",
            "[.] 0x00007f6324adab8e": "25.72%",
            "[.] 0x00007f6324adab38": "21.46%",
            "[.] 0x00007f6324ad8b55": "3.45%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007f5714adbc42": "9.55%",
            "[.] 0x00007f5714adbc54": "16.23%",
            "[.] 0x00007f5714ad51e2": "8.70%",
            "[.] 0x00007f5714adbc47": "26.40%",
            "[.] 0x00007f5714ad51ef": "5.00%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007fae10adaaaa": "2.59%",
            "[.] 0x00007fae10ada8f4": "1.44%",
            "[.] 0x00007fae10ada996": "0.96%",
            "[.] 0x00007fae10ada866": "1.42%",
            "[.] 0x00007fae10adaa8b": "1.00%"
        }
    }
}