{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "Mandelbrot.mandelbrot(I)I": "100.0"
        },
        "JavaFlightRecorder_Queens.jfr": {
            "java.util.Arrays.fill([II)V": "0.4942339373970346",
            " ": "0",
            "Queens.placeQueen(I)Z": "13.673805601317955",
            "Queens.getRowColumn(II)Z": "61.449752883031294",
            "java.util.Arrays.fill([ZZ)V": "0.16474464579901152",
            "Queens.setRowColumn(IIZ)V": "23.393739703459637",
            "Queens.queens()Z": "0.8237232289950576"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.473186119873817",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.15772870662460567",
            "Bounce$Ball.bounce()Z": "80.7570977917981",
            "Bounce.benchmark()Ljava/lang/Object;": "16.561514195583594",
            "som.Random.next()I": "0.31545741324921134",
            "Bounce$Ball.<init>(Lsom/Random;)V": "1.7350157728706623"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.183842093183383",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.948817994032595",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "6.633004360798715",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.22010557723204",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.8689465228368145",
            "havlak.HavlakLoopFinder$$Lambda$80+0x000000080100f7a8.331418503.apply(Ljava/lang/Object;)V": "1.7213679137020887",
            "havlak.HavlakLoopFinder.findLoops()V": "7.183842093183383",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.246040853798485",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.4328666513656185",
            "som.Vector.append(Ljava/lang/Object;)V": "2.0197383520771175"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "17.892976588628763",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "2.6755852842809364",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "2.591973244147157",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "3.8461538461538463",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "26.337792642140467",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.013377926421405",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.525083612040134",
            "cd.Vector2D.compareNumbers(DD)I": "4.013377926421405",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "15.468227424749164",
            "som.Vector.append(Ljava/lang/Object;)V": "2.4247491638795986"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "87.98151001540832",
            " ": "0",
            "List$Element.getNext()LList$Element;": "10.169491525423728",
            "List$Element.<init>(Ljava/lang/Object;)V": "0.15408320493066255",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "0.3081664098613251",
            "List$Element.length()I": "0.15408320493066255",
            "List$Element.setNext(LList$Element;)V": "0.15408320493066255",
            "List.makeList(I)LList$Element;": "1.0785824345146378"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "7.07395498392283",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "3.536977491961415",
            "deltablue.UnaryConstraint.chooseMethod(I)Ldeltablue/Direction;": "3.536977491961415",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "8.360128617363344",
            "deltablue.UnaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "20.90032154340836",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "11.57556270096463",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "2.8938906752411575",
            "som.Vector.<init>(I)V": "3.8585209003215435",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "7.395498392282958",
            "som.Vector.append(Ljava/lang/Object;)V": "4.180064308681672"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.5980861244019139",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.23923444976076555",
            "java.lang.StringConcatHelper.mix(JJ)J": "0.05980861244019139",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "38.57655502392345",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.9736842105263157",
            "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;": "0.05980861244019139",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "4.246411483253588",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "42.22488038277512",
            "som.Random.next()I": "11.423444976076555",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.4784688995215311"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "5.377456049638056",
            "java.util.Arrays.fill([ZZ)V": "5.791106514994829",
            "Sieve.sieve([ZI)I": "88.8314374353671"
        },
        "JavaFlightRecorder_Towers.jfr": {
            "sun.nio.cs.StreamEncoder.writeBytes()V": "0.1342281879194631",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "17.315436241610737",
            "sun.net.www.protocol.jar.Handler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V": "0.1342281879194631",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.429530201342282",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;": "0.1342281879194631",
            "Towers.moveDisks(III)V": "3.8926174496644297",
            "Towers$TowersDisk.getSize()I": "11.140939597315436",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "36.375838926174495",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.34228187919463",
            "Towers.moveTopDisk(II)V": "5.100671140939597"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.889763779527559",
            "nbody.Body.getMass()D": "0.31496062992125984",
            "nbody.Body.setVX(D)V": "30.236220472440944",
            "nbody.NBodySystem.advance(D)V": "38.89763779527559",
            "NBody.innerBenchmarkLoop(I)Z": "0.9448818897637795",
            "nbody.Body.getY()D": "0.6299212598425197",
            "nbody.Body.getZ()D": "8.188976377952756",
            "nbody.Body.setVZ(D)V": "9.763779527559056",
            "nbody.Body.setVY(D)V": "6.299212598425196",
            "nbody.Body.setX(D)V": "1.889763779527559"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "5.405405405405406",
            "richards.Scheduler.schedule()V": "10.597439544807967",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.229018492176388",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.330014224751067",
            "richards.HandlerTaskDataRecord.workInAdd(Lrichards/Packet;)V": "3.556187766714083",
            "Richards.benchmark()Ljava/lang/Object;": "8.179231863442391",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.907539118065434",
            "richards.Packet.setLink(Lrichards/Packet;)V": "3.8406827880512093",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "4.836415362731152",
            "richards.RBObject.<init>()V": "11.024182076813657"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.971631205673759",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.120567375886525",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "22.69503546099291",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "4.822695035460993",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "11.914893617021276",
            "java.lang.String.<init>([BB)V": "4.91725768321513",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.735224586288416",
            "json.JsonPureStringParser.read()V": "16.31205673758865",
            "java.util.Arrays.copyOfRange([BII)[B": "4.491725768321513",
            "json.JsonPureStringParser.readValue()Ljson/JsonValue;": "3.3569739952718676"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.util.ArrayList.elementData(I)Ljava/lang/Object;": "0.1180637544273908",
            "Permute.swap(II)V": "45.218417945690675",
            "Permute.permute(I)V": "54.30932703659977",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.3541912632821724"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.5",
            "richards.Packet::setLink": "2.4",
            "Richards::benchmark": "5.3",
            "richards.RBObject::append": "3.5",
            "AGCT::Unknown Java[ERR=-5]": "42.7",
            "richards.HandlerTaskDataRecord::workInAdd": "2.7",
            "richards.TaskControlBlock::<init>": "2.7",
            "richards.Scheduler::schedule": "6.4",
            "richards.TaskState::isTaskHoldingOrWaiting": "3.0",
            "richards.RBObject::<init>": "6.5"
        },
        "Mandelbrot.hpl": {
            "java.lang.invoke.BoundMethodHandle::bindArgumentL": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::execute": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::visitTypeInsn": "0.0",
            "jdk.internal.org.objectweb.asm.Handler::putExceptionTable": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "jdk.internal.org.objectweb.asm.MethodWriter::visitLdcInsn": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "97.6"
        },
        "List.hpl": {
            "List$Element::getNext": "8.6",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "List::tail": "1.9",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.1",
            "List::isShorterThan": "81.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.3",
            "List$Element::<init>": "0.1",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "List$Element::length": "0.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.2",
            "json.JsonPureStringParser::read": "15.4",
            "java.lang.String::<init>": "5.8",
            "java.lang.String::length": "3.2",
            "java.util.Arrays::copyOfRange": "8.2",
            "java.lang.String::equals": "22.6",
            "AGCT::Unknown not Java[ERR=-3]": "3.7",
            "AGCT::Unknown Java[ERR=-5]": "10.3",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.0"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.2",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.4",
            "havlak.HavlakLoopFinder::findLoops": "5.7",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.1",
            "som.Vector::append": "4.6",
            "AGCT::Unknown not Java[ERR=-3]": "8.0",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.4",
            "havlak.HavlakLoopFinder::doDFS": "5.3",
            "som.Vector::hasSome": "2.8",
            "som.Vector::<init>": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "39.3",
            "Permute::permute": "50.9",
            "Permute::benchmark": "0.0",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "java.lang.System::arraycopy": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "5.8",
            "jdk.internal.org.objectweb.asm.ByteVector::putUTF8": "0.0"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "66.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.5",
            "AGCT::Unknown Java[ERR=-5]": "0.6",
            "Queens::placeQueen": "7.9",
            "Queens::setRowColumn": "18.8",
            "Queens::queens": "0.6",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.1",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.5",
            "Storage::buildTreeDepth": "39.3",
            "java.util.Arrays::setAll": "35.1",
            "som.Random::next": "12.0",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "2.8",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.5",
            "Storage::lambda$buildTreeDepth$0": "4.1"
        },
        "Sieve.hpl": {
            "java.lang.invoke.MethodHandleNatives::classData": "0.0",
            "Sieve::benchmark": "5.8",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "87.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.8",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "java.lang.invoke.DirectMethodHandle$Holder::invokeStatic": "0.0",
            "java.util.Arrays::fill": "5.0"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "4.3",
            "deltablue.Planner::addPropagate": "2.1",
            "som.Vector::append": "4.6",
            "AGCT::Unknown not Java[ERR=-3]": "10.4",
            "AGCT::Unknown Java[ERR=-5]": "18.9",
            "deltablue.Plan::lambda$execute$0": "5.7",
            "deltablue.AbstractConstraint::satisfy": "3.4",
            "deltablue.EqualityConstraint::execute": "2.0",
            "som.Vector::forEach": "26.8",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "1.7"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.2",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "75.3",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.3",
            "som.Random::next": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.2",
            "Run::measure": "0.0"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.5",
            "nbody.Body::setX": "1.3",
            "nbody.Body::getY": "1.0",
            "nbody.Body::setVZ": "8.0",
            "nbody.Body::getZ": "8.3",
            "nbody.Body::setVX": "30.0",
            "nbody.Body::setVY": "6.0",
            "nbody.Body::getMass": "0.6",
            "AGCT::Unknown not Java[ERR=-3]": "2.3",
            "nbody.NBodySystem::advance": "38.7"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.4",
            "Towers::popDiskFrom": "22.5",
            "Towers::moveDisks": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "5.1",
            "Towers::pushDisk": "31.7",
            "Towers$TowersDisk::setNext": "13.9",
            "AGCT::Unknown Java[ERR=-5]": "3.5",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "5.2",
            "Towers$TowersDisk::getNext": "3.4"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "11.5",
            "cd.RedBlackTree::forEach": "3.8",
            "cd.RedBlackTree::put": "7.1",
            "cd.RedBlackTree::findNode": "4.5",
            "cd.RedBlackTree::treeMinimum": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "7.3",
            "AGCT::Unknown Java[ERR=-5]": "3.3",
            "cd.Vector2D::compareNumbers": "6.2",
            "cd.CollisionDetector::isInVoxel": "21.6",
            "cd.RedBlackTree::treeInsert": "14.9"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.satisfy": "3.21%",
            "deltablue.UnaryConstraint.<init>": "10.52%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "6.13%",
            "som.Dictionary.at": "5.33%",
            "som.Vector.append": "6.80%",
            "vtable": "2.14%",
            "itable": "4.02%",
            "som.Vector.forEach": "3.54%",
            "deltablue.Planner.addPropagate": "2.68%",
            "deltablue.ScaleConstraint.execute": "2.05%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.62%",
            "som.Random.next": "0.89%",
            "Interpreter": "0.06%",
            "java.util.Arrays.setAll": "0.72%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.81%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.82%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.11%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.03%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.49%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "10.87%",
            "java.util.Arrays.setAll": "35.01%",
            "Storage.lambda$buildTreeDepth$0": "3.84%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.53%",
            "SpinPause": "0.19%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.55%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.27%",
            "Storage.buildTreeDepth": "44.09%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.15%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.64%",
            "Towers.popDiskFrom": "19.17%",
            "Towers.moveDisks": "8.67%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.96%",
            "Towers.moveTopDisk": "4.04%",
            "Towers$TowersDisk.getSize": "10.47%",
            "Towers$TowersDisk.getNext": "3.80%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.14%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.49%",
            "cd.CollisionDetector.isInVoxel": "19.60%",
            "cd.RedBlackTree.forEach": "6.09%",
            "Node::set_req_X(unsigned": "2.52%",
            "cd.RedBlackTree.put": "6.57%",
            "cd.RedBlackTree.treeInsert": "12.37%",
            "cd.RedBlackTree.treeMinimum": "5.01%",
            "cd.RedBlackTree.findNode": "2.89%",
            "cd.Vector2D.compareNumbers": "4.31%",
            "cd.RedBlackTree.leftRotate": "2.11%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.74%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.19%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.53%",
            "som.Vector.append": "3.15%",
            "som.Vector.forEach": "2.12%",
            "som.IdentitySet.lambda$contains$0": "31.12%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.78%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.36%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.85%",
            "havlak.HavlakLoopFinder.doDFS": "5.45%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "5.13%",
            "Sieve.benchmark": "7.06%",
            "Interpreter": "0.06%",
            "Sieve.sieve": "84.67%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.04%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.08%",
            "__memset_avx2_unaligned_erms": "0.05%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.07%",
            "[vdso]": "0.03%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.18%",
            "Permute.swap": "40.20%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "Permute.verifyResult": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.85%",
            "nbody.Body.getZ": "7.85%",
            "nbody.Body.getY": "0.70%",
            "nbody.Body.setX": "1.18%",
            "nbody.Body.setY": "1.75%",
            "nbody.Body.setVX": "27.45%",
            "nbody.Body.setVY": "5.50%",
            "nbody.Body.getVZ": "0.49%",
            "nbody.Body.getMass": "0.48%",
            "nbody.NBodySystem.advance": "41.63%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.13%",
            "Interpreter": "0.05%",
            "List.makeList": "1.23%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.60%",
            "List$Element.length": "0.13%",
            "List.verifyResult": "0.08%",
            "List.isShorterThan": "81.49%",
            "List$Element.<init>": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.52%",
            "java.lang.String.length": "3.20%",
            "java.lang.String.<init>": "5.58%",
            "json.JsonPureStringParser.readArray": "2.66%",
            "json.JsonPureStringParser.isWhiteSpace": "2.20%",
            "java.lang.String.isLatin1": "3.13%",
            "json.JsonPureStringParser.readStringInternal": "6.63%",
            "java.util.Arrays.copyOfRange": "8.02%",
            "java.lang.String.equals": "22.17%",
            "json.JsonPureStringParser.read": "15.75%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.00%",
            "Queens.getRowColumn": "68.86%",
            "Queens.setRowColumn": "17.08%",
            "Interpreter": "0.07%",
            "Queens.queens": "0.63%",
            "Queens.placeQueen": "8.86%",
            "__futex_abstimed_wait_common": "0.03%",
            "__tls_get_addr": "0.04%",
            "Benchmark.innerBenchmarkLoop": "0.13%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.41%",
            "Richards.benchmark": "4.60%",
            "richards.Packet.<init>": "6.80%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.68%",
            "itable": "36.93%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.26%",
            "richards.TaskControlBlock.<init>": "3.03%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "4.06%",
            "richards.RBObject.<init>": "6.93%",
            "richards.RBObject.append": "3.13%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Towers$TowersDisk.<init>": "3.7",
            "Towers.moveDisks": "94.4",
            "java.io.PrintStream.println": "0.1",
            "Towers.moveTopDisk": "0.3",
            "java.lang.Integer.valueOf": "0.7",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.5",
            "Run.printResult": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "4.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Sieve.sieve": "95.3",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.0",
            "deltablue.AbstractConstraint.satisfy": "9.3",
            "deltablue.Planner.removePropagateFrom": "8.7",
            "som.Vector.<init>": "33.9",
            "deltablue.Variable.<init>": "4.4",
            "som.Vector.forEach": "7.8",
            "deltablue.Planner.addPropagate": "1.9",
            "deltablue.Planner.constraintsConsuming": "5.0",
            "deltablue.AbstractConstraint.<init>": "4.1",
            "deltablue.Planner.addConstraintsConsumingTo": "16.4"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.0",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.4",
            "som.Vector.<init>": "42.2",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.3",
            "havlak.UnionFindNode.findSet": "4.8",
            "havlak.HavlakLoopFinder.processEdges": "3.4",
            "som.IdentitySet.contains": "4.3",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.0",
            " ": "0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printTotal": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "13.1",
            "richards.Packet.<init>": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "85.7",
            "richards.RBObject.<init>": "0.4",
            "richards.RBObject.append": "0.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "1.6",
            "Bounce.benchmark": "51.6",
            "Bounce$Ball.<init>": "45.7",
            "Bounce.lambda$benchmark$0": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "3.1",
            "som.Vector.<init>": "5.9",
            "cd.Vector3D.<init>": "7.7",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.8",
            "cd.RedBlackTree.<init>": "1.7",
            "cd.Vector2D.<init>": "44.6",
            "cd.RedBlackTree$InsertResult.<init>": "14.6",
            "cd.RedBlackTree$Node.<init>": "7.7",
            "cd.RedBlackTree$Entry.<init>": "4.9"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "NBody.innerBenchmarkLoop": "0.2",
            "nbody.NBodySystem.advance": "99.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.9",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.6",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.1",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.8",
            "List$Element.length": "0.2",
            "List.isShorterThan": "74.2",
            "List$Element.<init>": "21.8",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.8",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.buildTreeDepth": "99.1",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.3",
            "json.JsonValue.<init>": "3.9",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readValue": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "22.2",
            "Queens.placeQueen": "77.0",
            "Run.runBenchmark": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "25.758876710945007",
            "java.lang.String.<init>(byte[], byte) String.java": "6.069330100846846",
            "som.Vector.append(Object)": "1.5110190750374604",
            "json.JsonPureStringParser.read()": "19.17184369580956",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "5.652642389346265",
            "java.lang.String.length() String.java": "2.5716787043116662",
            "java.lang.String.substring(int, int) String.java": "10.06784854453929",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.108944896206881",
            "json.JsonPureStringParser.readStringInternal()": "3.1398892199942767",
            "json.JsonPureStringParser.readValue()": "1.7761839823560117"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "2.3165344293281174",
            "som.Vector.hasSome(TestInterface)": "2.283566671794985",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.582540275610453",
            "havlak.HavlakLoopFinder.findLoops()": "10.57605661662894",
            "som.Vector.<init>(int)": "4.024264269544386",
            "som.Vector.append(Object)": "4.05503417657531",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.099057122134554",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.364931097386757",
            "som.Vector.removeAll()": "2.6462120046594437",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.651376953339636"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "10.340922636786267",
            "Queens.getRowColumn(int, int)": "66.67958040290857",
            "Queens.queens()": "0.4321134819406365",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.8791274287757778",
            "Queens.setRowColumn(int, int, boolean)": "19.862319704374777",
            "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class) MethodHandleImpl.java": "0.22350697341757061",
            "java.lang.invoke.LambdaForm$MH.0x0000000800141c00.<clinit>() LambdaForm$MH": "0.14900464894504706",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.2831088329955894",
            "com.yourkit.probes.builtin.Files$RandomAccessFile_open_Probe.onEnter() a": "0.1788055787340565",
            "jdk.internal.loader.URLClassPath$JarLoader$2.getBytes() URLClassPath.java": "0.16390511383955178"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.5836914806456712",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "5.012864555633813",
            "richards.TaskControlBlock.runTask()": "38.80927397910048",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.265426686406693",
            "richards.Scheduler.schedule()": "1.9224964424832185",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.341909703755875",
            "richards.RBObject.append(Packet, Packet)": "1.4014460048008508",
            "richards.Packet.<init>(Packet, int, int)": "1.3691049431516005",
            "Richards.benchmark()": "27.00478647712409",
            "richards.Packet.setLink(Packet)": "1.9260898937775797"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.22196717051409767",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.12993200225215473",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.07037983455325048",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "0.8174888475031401",
            "Storage$$Lambda$9.0x00000008000c2a98.apply(int)": "0.6388323444064273",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "40.59292303694401",
            "javax.management.openmbean.TabularDataSupport.<init>(TabularType, int, float) TabularDataSupport.java": "0.286933171640175",
            "som.Random.next()": "15.721772272510723",
            "Storage.buildTreeDepth(int, Random)": "38.0375936593183",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.12919572090606"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.19198475555291",
            "Towers.popDiskFrom(int)": "29.690942654677542",
            "Towers.moveDisks(int, int, int)": "9.575418329065682",
            "Towers$TowersDisk.getSize()": "1.4768058119454535",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, long, long) DirectMethodHandle$Holder": "0.1071875186089442",
            "jdk.internal.misc.TerminatingThreadLocal$1.initialValue() TerminatingThreadLocal.java": "0.2262847615077711",
            "Towers.moveTopDisk(int, int)": "7.729411064133865",
            "jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(int, String, String, String, String[]) ClassWriter.java": "0.1071875186089442",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.24569761210028",
            "java.lang.invoke.LambdaFormBuffer.changeName(int, LambdaForm$Name) LambdaFormBuffer.java": "0.13100696718870958"
        },
        "YourKit_Permute.txt": {
            "java.util.zip.ZipFile$CleanableResource.getInflater() ZipFile.java": "0.17093627495669614",
            "java.lang.StringLatin1.lastIndexOf(byte[], int, int) StringLatin1.java": "0.04558300665511897",
            "Benchmark.innerBenchmarkLoop(int)": "0.11395751663779742",
            "jdk.internal.org.objectweb.asm.Type.getType(String) Type.java": "0.12535326830157717",
            "Permute.permute(int)": "55.21241681101286",
            "java.lang.invoke.LambdaFormEditor.getInCache(LambdaFormEditor$TransformKey) LambdaFormEditor.java": "0.12535326830157717",
            "java.security.SecureClassLoader.getPermissions(CodeSource) SecureClassLoader.java": "0.034187254991339226",
            "Permute.benchmark()": "0.2848937915944936",
            "Permute.swap(int, int)": "43.885039657215785",
            "jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String) BuiltinClassLoader.java": "0.0011395751663779742"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "6.7646313655941235",
            "som.Vector.forEach(ForEachInterface)": "37.95287560172284",
            "deltablue.EqualityConstraint.execute()": "6.359260197618447",
            "deltablue.BinaryConstraint.getOutput()": "2.102862933873829",
            "som.Vector.<init>(int)": "6.359260197618447",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "3.521662021788701",
            "deltablue.ScaleConstraint.execute()": "2.077527235875349",
            "som.Vector.append(Object)": "2.3815556118571073",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.6855839878388656",
            "deltablue.ScaleConstraint.recalculate()": "2.1535343298707885"
        },
        "YourKit_List.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.1336326705152876",
            "List.tail(List$Element, List$Element, List$Element)": "3.581355569809707",
            "List$Element.<init>(Object)": "0.12026940346375882",
            "java.lang.invoke.MethodHandles$1.<clinit>() MethodHandles.java": "0.0935428693607013",
            "List.makeList(int)": "0.5211674150096215",
            "Run.runBenchmark()": "0.0013363267051528759",
            "Benchmark.innerBenchmarkLoop(int)": "0.026726534103057517",
            "List$Element.getNext()": "23.318901004917684",
            "List.isShorterThan(List$Element, List$Element)": "72.18836861235836",
            "java.util.jar.JavaUtilJarAccessImpl.entryFor(JarFile, String) JavaUtilJarAccessImpl.java": "0.013363267051528759"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "1.1134585736310167",
            "nbody.Body.getZ()": "6.223947924399018",
            "nbody.Body.getX()": "1.3418603323245588",
            "nbody.Body.setZ(double)": "0.5567292868155084",
            "nbody.NBodySystem.advance(double)": "43.55336036087478",
            "nbody.Body.setVY(double)": "3.4545766002398213",
            "nbody.Body.setVZ(double)": "7.936961114600581",
            "nbody.Body.getVX()": "0.9421572546108604",
            "nbody.Body.setVX(double)": "32.518700393993036",
            "nbody.Body.setY(double)": "0.7137554959173186"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.8492342687862",
            "java.util.zip.ZipFile$CleanableResource.getInflater() ZipFile.java": "0.017633418855414782",
            "sun.nio.fs.UnixFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "Run.runBenchmark()": "8.816709427707391E-4",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.0881670942770739",
            "java.lang.invoke.LambdaForm.useCount(LambdaForm$Name) LambdaForm.java": "0.04408354713853695",
            "sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes.lastModifiedTime() UnixFileAttributes.java": "0.0",
            "sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java": "0.0",
            "jdk.internal.util.jar.JarIndex.getJarIndex(JarFile) JarIndex.java": "0.0"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.656379317012801",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "26.236609042038907",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.425494063503114",
            "cd.RedBlackTree.findNode(Comparable)": "7.858606953629578",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.572417527168658",
            "cd.RedBlackTree$Node.successor()": "1.6243183663998142",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.1812275205940366",
            "cd.RedBlackTree.put(Comparable, Object)": "5.924894612677418",
            "cd.Vector2D.compareNumbers(double, double)": "8.65529643810187",
            "cd.RedBlackTree.forEach(ForEachInterface)": "3.1867579378891597"
        },
        "YourKit_Sieve.txt": {
            "java.lang.invoke.MethodHandle.<init>(MethodType, LambdaForm) MethodHandle.java": "0.1367801942278758",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.09469398061929862",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.7461254379596602",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.1262586408257315",
            "Sieve.benchmark()": "87.92862178171984",
            "java.nio.charset.CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean) CharsetEncoder.java": "0.09469398061929862",
            "java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(Object, Object) DirectMethodHandle$Holder": "0.09469398061929862",
            "sun.nio.cs.US_ASCII$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer) US_ASCII.java": "0.19990951464074155",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.11573708742358721",
            "Sieve.sieve(boolean[], int)": "8.185768546868259"
        },
        "YourKit_Bounce.txt": {
            "sun.nio.fs.UnixFileAttributeViews.createBasicView(UnixPath, boolean) UnixFileAttributeViews.java": "0.34147822127788735",
            "sun.management.MappedMXBeanType$CompositeDataMXBeanType.toJavaTypeData(Object) MappedMXBeanType.java": "0.11382607375929578",
            "Bounce.benchmark()": "63.97025345272422",
            "java.lang.Class.getDeclaredFields0(boolean) Class.java (native)": "0.34147822127788735",
            "java.lang.System.arraycopy(Object, int, Object, int, int) System.java (native)": "0.17073911063894368",
            "Bounce.lambda$benchmark$0(Random, int)": "0.37942024586431927",
            "som.Random.next()": "0.3604492335711033",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.17073911063894368",
            "Bounce$Ball.bounce()": "33.31309758688723",
            "Bounce$Ball.<init>(Random)": "0.7019274548489907"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 20.784,
        "JavaFlightRecorder_Bounce.jfr": 22.991,
        "rebench_test_Async_Bounce.txt": 69.4105,
        "Mandelbrot.hpl": 38.404,
        "List.hpl": 22.732,
        "JavaFlightRecorder_Storage.jfr": 59.266,
        "rebench_test_Async_Towers.txt": 78.113,
        "JavaFlightRecorder_Sieve.jfr": 32.355000000000004,
        "Permute.hpl": 29.969,
        "Queens.hpl": 22.097,
        "JavaFlightRecorder_NBody.jfr": 21.445500000000003,
        "rebench_test_Async_Sieve.txt": 87.82900000000001,
        "JavaFlightRecorder_Richards.jfr": 90.5025,
        "Storage.hpl": 59.6165,
        "DeltaBlue.hpl": 15.057,
        "Bounce.hpl": 26.318,
        "JavaFlightRecorder_Json.jfr": 80.511,
        "NBody.hpl": 21.5035,
        "Towers.hpl": 26.094,
        "rebench_test_Async_List.txt": 69.562,
        "rebench_test_Async_Richards.txt": 272.9435,
        "rebench_test_Async_DeltaBlue.txt": 37.136,
        "Richards.hpl": 97.172,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.622,
        "JavaFlightRecorder_Havlak.jfr": 155.0385,
        "JavaFlightRecorder_CD.jfr": 42.8,
        "JavaFlightRecorder_List.jfr": 22.671999999999997,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.118,
        "rebench_test_Async_Storage.txt": 166.84199999999998,
        "rebench_test_Async_Mandelbrot.txt": 105.3715,
        "Json.hpl": 79.86,
        "JavaFlightRecorder_Towers.jfr": 25.948999999999998,
        "Havlak.hpl": 157.809,
        "rebench_test_Async_CD.txt": 148.2825,
        "rebench_test_Async_Havlak.txt": 500.861,
        "Sieve.hpl": 31.089,
        "rebench_test_Async_Permute.txt": 91.137,
        "rebench_test_Async_NBody.txt": 62.9025,
        "JavaFlightRecorder_Permute.jfr": 29.854,
        "CD.hpl": 42.6345,
        "rebench_test_Async_Queens.txt": 64.6755,
        "rebench_test_Async_Json.txt": 285.1635
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007f8c9cad5bb8": "4.33%",
            "[.] 0x00007f8c9cad5bf5": "23.49%",
            "[.] 0x00007f8c9cad5bfd": "19.07%",
            "[.] 0x00007f8c9cad5c10": "5.19%",
            "[.] 0x00007f8c9cad5bf9": "4.81%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007f2ee8ad367c": "19.29%",
            "[.] 0x00007f2ee8ad34dc": "14.42%",
            "[.] 0x00007f2ee8ad3554": "10.77%",
            "[.] 0x00007f2ee8ad3610": "25.83%",
            "[.] 0x00007f2ee8ad3716": "2.61%"
        },
        "Havlak.data": {
            " ": "0",
            "G1ParScanThreadState::trim_queue_to_threshold": "1.28%",
            "[.] 0x00007f199cb34b75": "16.50%",
            "[.] 0x00007f199cb34b7c": "16.27%",
            "[.] 0x00007f199caf53d3": "1.60%",
            "[.] 0x00007f199cb287e0": "1.33%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007f7d34b2e80e": "3.12%",
            "[.] 0x00007f7d34b0b3d0": "3.84%",
            "[.] 0x00007f7d34b2e813": "1.73%",
            "[.] 0x00007f7d34b2e7d1": "7.50%",
            "[.] 0x00007f7d34b2e7c0": "3.64%"
        },
        "Queens.data": {
            "[.] 0x00007f53d0ad3c57": "3.71%",
            " ": "0",
            "[.] 0x00007f53d0ad3dad": "26.29%",
            "[.] 0x00007f53d0ad3c6d": "3.73%",
            "[.] 0x00007f53d0ad3d9e": "7.40%",
            "[.] 0x00007f53d0ad3e16": "4.43%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007f3404ad4f23": "3.83%",
            "[.] 0x00007f3404ad4f02": "9.88%",
            "[.] 0x00007f3404ad4c5d": "3.26%",
            "[.] 0x00007f3404ad4f85": "6.41%",
            "[.] 0x00007f3404ad4ac6": "3.85%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007f9c04646a9b": "4.68%",
            "[.] 0x00007f9c04646aaf": "8.38%",
            "[.] 0x00007f9c04646b1c": "6.85%",
            "[.] 0x00007f9c04646aba": "10.42%",
            "[.] 0x00007f9c04af253a": "5.89%"
        },
        "Storage.data": {
            "[.] 0x00007f7a0cad5e7f": "4.47%",
            " ": "0",
            "[.] 0x00007f7a0cad5f5a": "6.27%",
            "[.] 0x00007f7a0cad5fc9": "4.94%",
            "[.] 0x00007f7a0cad5fad": "4.42%",
            "[.] 0x00007f7a0cad5f16": "6.78%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007f08b4b0bf80": "3.58%",
            "[.] 0x00007f08b4b2333a": "3.09%",
            "[.] 0x00007f08b4adb719": "2.07%",
            "[.] 0x00007f08b4b0bf68": "5.21%",
            "[.] 0x00007f08b4adb81c": "2.19%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007f888cad807c": "4.98%",
            "[.] 0x00007f888cad8070": "6.05%",
            "[.] 0x00007f888cad80d4": "6.05%",
            "[.] 0x00007f888cad80a2": "6.04%",
            "[.] 0x00007f888cad803e": "5.60%"
        },
        "List.data": {
            "[.] 0x00007efc70ad3f75": "5.08%",
            " ": "0",
            "[.] 0x00007efc70ad3f85": "5.03%",
            "[.] 0x00007efc70ad4055": "5.90%",
            "[.] 0x00007efc70ad3e45": "11.10%",
            "[.] 0x00007efc70ad3e35": "27.39%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f7174ada702": "3.82%",
            "[.] 0x00007f7174ad89d5": "3.40%",
            "[.] 0x00007f7174ada70e": "26.99%",
            "[.] 0x00007f7174ada6b8": "20.35%",
            "[.] 0x00007f7174ada70c": "14.44%"
        },
        "Bounce.data": {
            "[.] 0x00007f2370ad5a06": "8.37%",
            " ": "0",
            "[.] 0x00007f2370adc747": "26.50%",
            "[.] 0x00007f2370ad5a13": "5.14%",
            "[.] 0x00007f2370adc742": "9.96%",
            "[.] 0x00007f2370adc754": "16.08%"
        },
        "Json.data": {
            "[.] 0x00007f1778adb4e6": "1.40%",
            " ": "0",
            "[.] 0x00007f1778adb72a": "2.55%",
            "[.] 0x00007f1778adb70b": "0.95%",
            "[.] 0x00007f1778adb616": "0.99%",
            "[.] 0x00007f1778adb574": "1.46%"
        }
    }
}