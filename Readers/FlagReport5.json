{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.08741258741258741",
            "java.nio.CharBuffer.position(I)Ljava/nio/Buffer;": "0.08741258741258741",
            "Mandelbrot.mandelbrot(I)I": "99.82517482517483"
        },
        "JavaFlightRecorder_Queens.jfr": {
            " ": "0",
            "Queens.placeQueen(I)Z": "8.450704225352114",
            "Queens.getRowColumn(II)Z": "71.04851330203444",
            "java.util.Arrays.fill([ZZ)V": "0.1564945226917058",
            "Queens.setRowColumn(IIZ)V": "19.40532081377152",
            "Queens.queens()Z": "0.9389671361502347"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "jdk.internal.org.objectweb.asm.Attribute.computeAttributesSize(Ljdk/internal/org/objectweb/asm/SymbolTable;II)I": "0.19120458891013384",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.19120458891013384",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.9560229445506692",
            "Bounce$Ball.bounce()Z": "74.37858508604207",
            "Bounce.benchmark()Ljava/lang/Object;": "20.650095602294453",
            "som.Random.next()I": "1.3384321223709368",
            "Bounce$Ball.<init>(Lsom/Random;)V": "2.1032504780114722",
            "java.util.ArrayList.get(I)Ljava/lang/Object;": "0.19120458891013384"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "6.730549851699749",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.71777321469313",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "5.521332420716404",
            "java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;": "3.125712981975816",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "16.244581336983803",
            "som.Dictionary.atPut(Lsom/Dictionary$CustomHash;Ljava/lang/Object;)V": "2.7150353639060003",
            "havlak.HavlakLoopFinder.findLoops()V": "4.7684234542550765",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "4.699977184576774",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.7150353639060003",
            "som.Vector.append(Ljava/lang/Object;)V": "1.9621263974446725"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "16.481639624252775",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.672075149444919",
            "cd.RedBlackTree.rightRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "1.7933390264731",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "3.5012809564474807",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.807002561912895",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "23.654995730145174",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "5.2946199829205804",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "7.429547395388557",
            "cd.Vector2D.compareNumbers(DD)I": "6.148590947907771",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "13.834329632792485"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "85.28974739970282",
            " ": "0",
            "List$Element.getNext()LList$Element;": "11.589895988112927",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "1.188707280832095",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.1485884101040119",
            "List.makeList(I)LList$Element;": "1.7830609212481425"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "8.074534161490682",
            "deltablue.BinaryConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "4.968944099378882",
            "som.Vector.with(Ljava/lang/Object;)Lsom/Vector;": "4.658385093167701",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "5.279503105590062",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "13.664596273291924",
            "deltablue.EqualityConstraint.<init>(Ldeltablue/Variable;Ldeltablue/Variable;Ldeltablue/Strength$Sym;Ldeltablue/Planner;)V": "3.7267080745341614",
            "deltablue.Strength.of(Ldeltablue/Strength$Sym;)Ldeltablue/Strength;": "7.763975155279502",
            "som.Vector.<init>(I)V": "3.7267080745341614",
            "som.IdentityDictionary$IdEntry.match(ILjava/lang/Object;)Z": "13.043478260869565",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "5.590062111801242"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.4830917874396135",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.36231884057971014",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.06038647342995169",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "38.707729468599034",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.0265700483091786",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "4.3478260869565215",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "42.45169082125604",
            "som.Random.next()I": "12.258454106280192",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.12077294685990338",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.12077294685990338"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "Sieve.benchmark()Ljava/lang/Object;": "6.465067778936392",
            "java.io.BufferedOutputStream.write([BII)V": "0.10427528675703858",
            "java.util.Arrays.fill([ZZ)V": "6.465067778936392",
            "Sieve.sieve([ZI)I": "86.7570385818561",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.20855057351407716"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers.buildTowerAt(II)V": "0.13850415512465375",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "14.127423822714682",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "4.016620498614959",
            "Towers.moveDisks(III)V": "4.570637119113574",
            "Towers$TowersDisk.getSize()I": "11.772853185595569",
            "Towers.benchmark()Ljava/lang/Object;": "0.13850415512465375",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.257617728531855",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "23.130193905817176",
            "Towers.moveTopDisk(II)V": "4.847645429362881"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.557632398753894",
            "nbody.Body.getMass()D": "1.2461059190031152",
            "nbody.Body.setVX(D)V": "30.99688473520249",
            "nbody.NBodySystem.advance(D)V": "41.1214953271028",
            "nbody.Body.getY()D": "0.778816199376947",
            "nbody.Body.getX()D": "0.9345794392523363",
            "nbody.Body.getZ()D": "7.943925233644859",
            "nbody.Body.setVZ(D)V": "9.813084112149532",
            "nbody.Body.setVY(D)V": "3.582554517133956",
            "nbody.Body.setX(D)V": "0.778816199376947"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.86757337151038",
            "java.lang.Object.<init>()V": "3.7938439513242668",
            "richards.Scheduler.schedule()V": "9.663564781675019",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.171080887616322",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.8718682891911245",
            "Richards.benchmark()Ljava/lang/Object;": "8.661417322834646",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.724409448818898",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "3.579098067287044",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.297065139584825",
            "richards.RBObject.<init>()V": "10.808876163206873"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "4.406130268199234",
            "java.lang.Object.<init>()V": "3.0172413793103448",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.496168582375479",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "24.904214559386975",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.6513409961685825",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "11.302681992337165",
            "java.lang.String.<init>([BB)V": "7.758620689655173",
            "java.lang.String.substring(II)Ljava/lang/String;": "3.831417624521073",
            "json.JsonPureStringParser.read()V": "11.733716475095786",
            "java.util.Arrays.copyOfRange([BII)[B": "5.076628352490421"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "Permute.swap(II)V": "44.87334137515079",
            "Permute.permute(I)V": "54.523522316043426",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.24125452352231605",
            "Permute.benchmark()Ljava/lang/Object;": "0.3618817852834741"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "6.6",
            "Richards::benchmark": "4.8",
            "richards.RBObject::append": "3.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "AGCT::Unknown Java[ERR=-5]": "46.2",
            "richards.HandlerTaskDataRecord::workInAdd": "2.2",
            "richards.TaskControlBlock::<init>": "3.0",
            "richards.Scheduler::schedule": "6.0",
            "richards.TaskState::isTaskHoldingOrWaiting": "2.7",
            "richards.RBObject::<init>": "5.8"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::getLocal": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.util.zip.Inflater::inflateBytesBytes": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.4",
            "AGCT::Not walkable not Java[ERR=-4]": "0.0",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Mandelbrot::mandelbrot": "98.3",
            "java.lang.invoke.LambdaFormEditor::makeArgumentCombinationForm": "0.0"
        },
        "List.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "List$Element::getNext": "9.4",
            "List::makeList": "0.7",
            "java.lang.Integer::valueOf": "0.1",
            "List::tail": "1.8",
            "List::isShorterThan": "81.2",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.7",
            "List$Element::length": "0.1"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::isWhiteSpace": "2.4",
            "json.JsonPureStringParser::read": "15.5",
            "java.lang.String::<init>": "5.8",
            "java.lang.String::length": "3.0",
            "java.util.Arrays::copyOfRange": "7.8",
            "java.lang.String::equals": "21.9",
            "AGCT::Unknown not Java[ERR=-3]": "4.0",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "java.lang.String::isLatin1": "2.6",
            "json.JsonPureStringParser::readStringInternal": "8.9"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.4",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "11.9",
            "havlak.HavlakLoopFinder::findLoops": "6.0",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.8",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.7",
            "havlak.HavlakLoopFinder::doDFS": "5.8",
            "som.Vector::hasSome": "1.9",
            "som.Vector::forEach": "2.1"
        },
        "Permute.hpl": {
            "Permute::swap": "38.9",
            "Permute::permute": "50.5",
            "Permute::benchmark": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.util.concurrent.ConcurrentHashMap::setTabAt": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "6.2",
            "java.lang.invoke.LambdaForm$MH.0x0000000801008400::invoke": "0.0"
        },
        "Queens.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Queens::getRowColumn": "66.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "AGCT::Unknown not Java[ERR=-3]": "3.2",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "8.2",
            "Queens::setRowColumn": "18.9",
            "Queens::queens": "0.8",
            "java.util.Arrays::fill": "0.2"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.2",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.6",
            "Storage::buildTreeDepth": "40.2",
            "java.util.Arrays::setAll": "35.0",
            "som.Random::next": "11.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.6",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.4",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "4.0"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "5.6",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "Sieve::sieve": "83.8",
            "AGCT::Unknown not Java[ERR=-3]": "2.9",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "AGCT::Deopt[ERR=-9]": "0.0",
            "java.util.Arrays::fill": "7.1"
        },
        "DeltaBlue.hpl": {
            "deltablue.Planner::chainTest": "3.8",
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "18.3",
            "deltablue.Planner::addPropagate": "3.0",
            "som.Vector::append": "3.1",
            "AGCT::Unknown not Java[ERR=-3]": "12.6",
            "AGCT::Unknown Java[ERR=-5]": "15.4",
            "deltablue.EqualityConstraint::execute": "3.3",
            "som.Vector::<init>": "2.1",
            "som.Vector::forEach": "11.1",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "3.0"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "15.6",
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Bounce$Ball::bounce": "76.5",
            "java.util.Arrays::setAll": "0.6",
            "Bounce::lambda$benchmark$0": "0.3",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "som.Random::next": "0.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.8",
            "AGCT::Unknown Java[ERR=-5]": "0.1",
            "Bounce$Ball::<init>": "1.7"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.6",
            "nbody.Body::setX": "1.1",
            "nbody.Body::getY": "0.6",
            "nbody.Body::getVZ": "0.6",
            "nbody.Body::setVZ": "8.5",
            "nbody.Body::getZ": "7.7",
            "nbody.Body::setVX": "27.1",
            "nbody.Body::setVY": "5.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "nbody.NBodySystem::advance": "43.0"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "10.3",
            "java.io.FileOutputStream::writeBytes": "0.1",
            "Towers::popDiskFrom": "21.7",
            "Towers::moveDisks": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "4.1",
            "Towers::pushDisk": "33.4",
            "Towers$TowersDisk::setNext": "14.5",
            "AGCT::Unknown Java[ERR=-5]": "3.6",
            "Towers::moveTopDisk": "5.0",
            "Towers$TowersDisk::getNext": "3.4"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.6",
            "cd.RedBlackTree::forEach": "3.9",
            "cd.RedBlackTree::put": "6.6",
            "cd.RedBlackTree::findNode": "2.8",
            "cd.RedBlackTree::treeMinimum": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "8.4",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "cd.Vector2D::compareNumbers": "4.7",
            "cd.CollisionDetector::isInVoxel": "22.9",
            "cd.RedBlackTree::treeInsert": "13.5"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.54%",
            "deltablue.BinaryConstraint.chooseMethod": "2.69%",
            "deltablue.AbstractConstraint.satisfy": "2.02%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "5.61%",
            "som.Vector.append": "2.99%",
            "som.Vector.<init>": "1.96%",
            "som.Vector.forEach": "24.91%",
            "itable": "3.60%",
            "deltablue.Plan.lambda$execute$0": "3.43%",
            "deltablue.ScaleConstraint.execute": "1.90%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "73.69%",
            "som.Random.next": "0.92%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.73%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.04%",
            "Bounce.benchmark": "18.99%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.85%",
            "Bounce.lambda$benchmark$0": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.59%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.01%",
            "LinearScan::build_intervals()": "0.01%",
            "LinearScan::allocate_registers()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.01%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.45%",
            "som.Random.next": "10.66%",
            "java.util.Arrays.setAll": "35.40%",
            "Storage.lambda$buildTreeDepth$0": "4.04%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.58%",
            "SpinPause": "0.16%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.56%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.31%",
            "Storage.buildTreeDepth": "43.51%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.15%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.62%",
            "Towers.popDiskFrom": "19.06%",
            "Towers.moveDisks": "8.67%",
            "Interpreter": "0.05%",
            "Towers.pushDisk": "34.95%",
            "Towers.moveTopDisk": "4.05%",
            "Towers$TowersDisk.getSize": "10.52%",
            "Towers$TowersDisk.getNext": "3.81%",
            "Towers.benchmark": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.33%",
            "cd.CollisionDetector.isInVoxel": "19.52%",
            "cd.RedBlackTree.forEach": "6.03%",
            "Node::set_req_X(unsigned": "2.40%",
            "cd.RedBlackTree.put": "6.84%",
            "cd.RedBlackTree.treeInsert": "12.19%",
            "cd.RedBlackTree.treeMinimum": "5.40%",
            "cd.RedBlackTree.findNode": "2.87%",
            "cd.Vector2D.compareNumbers": "4.32%",
            "cd.RedBlackTree.leftRotate": "2.23%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.13%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.15%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.69%",
            "som.Vector.hasSome": "2.32%",
            "som.Vector.append": "3.85%",
            "som.IdentitySet.lambda$contains$0": "31.69%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.26%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.15%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "3.88%",
            "havlak.HavlakLoopFinder.doDFS": "5.57%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "9.26%",
            "Sieve.benchmark": "5.68%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "82.30%",
            ".annobin__ZN30OopOopIterateBackwardsDispatchI25G1ScanEvacuatedObjClosureE5Table25oop_oop_iterate_backwardsI13InstanceKlass9narrowOopEEvPS0_P7oopDescP5Klass.start": "0.02%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.06%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.14%",
            "Permute.swap": "40.27%",
            "Permute.benchmark": "0.08%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "[no_Java_frame]": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.39%",
            "nbody.Body.getZ": "8.09%",
            "nbody.Body.getY": "0.74%",
            "nbody.Body.setX": "1.49%",
            "nbody.Body.setY": "1.56%",
            "nbody.Body.setZ": "0.38%",
            "nbody.Body.setVX": "28.75%",
            "nbody.Body.setVY": "6.14%",
            "nbody.Body.getMass": "0.59%",
            "nbody.NBodySystem.advance": "39.90%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.09%",
            "Interpreter": "0.06%",
            "List.makeList": "1.12%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.52%",
            "List$Element.length": "0.12%",
            "List.verifyResult": "0.09%",
            "List.isShorterThan": "81.54%",
            "List$Element.<init>": "0.17%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.36%",
            "java.lang.String.length": "3.22%",
            "java.lang.String.<init>": "5.49%",
            "json.JsonPureStringParser.readArray": "2.67%",
            "java.lang.String.isLatin1": "3.39%",
            "json.JsonPureStringParser.readStringInternal": "6.85%",
            "java.util.Arrays.copyOfRange": "6.86%",
            "java.lang.String.equals": "21.36%",
            "json.JsonPureStringParser.read": "16.45%",
            "json.JsonPureStringParser.readValue": "2.36%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "1.07%",
            "Queens.verifyResult": "0.04%",
            "Queens.getRowColumn": "55.19%",
            "Queens.setRowColumn": "25.30%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.63%",
            "Queens.placeQueen": "14.28%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.14%",
            "Queens.benchmark": "0.06%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "6.10%",
            "Richards.benchmark": "5.16%",
            "richards.Packet.<init>": "6.98%",
            "richards.TaskState.isTaskHoldingOrWaiting": "3.07%",
            "itable": "35.66%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.11%",
            "richards.TaskControlBlock.<init>": "2.81%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.70%",
            "richards.RBObject.<init>": "6.43%",
            "richards.RBObject.append": "3.05%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "3.8",
            "Towers.moveDisks": "94.7",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.2",
            "Towers.pushDisk": "0.1",
            "java.lang.Integer.valueOf": "0.2",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.6",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.util.Arrays.fill": "0.1",
            "Sieve.benchmark": "5.9",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "93.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.printTotal": "0.1",
            "Run.printResult": "0.2"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "4.4",
            "deltablue.AbstractConstraint.satisfy": "12.4",
            "deltablue.Planner.removePropagateFrom": "8.9",
            "som.Vector.<init>": "29.3",
            "deltablue.Variable.<init>": "4.6",
            "som.Vector.forEach": "7.4",
            "deltablue.Planner.addPropagate": "1.8",
            "deltablue.Planner.constraintsConsuming": "5.1",
            "deltablue.AbstractConstraint.<init>": "4.6",
            "deltablue.Planner.addConstraintsConsumingTo": "17.5"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "3.9",
            "som.Vector.hasSome": "3.3",
            "havlak.UnionFindNode.<init>": "3.3",
            "som.Vector.<init>": "42.0",
            "havlak.HavlakLoopFinder.stepD": "3.3",
            "java.lang.Integer.valueOf": "8.8",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "4.9",
            "som.IdentitySet.contains": "4.4",
            "som.Set.contains": "4.3"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.7",
            "Run.runBenchmark": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Richards.txt": {
            "Run.reportBenchmark": "0.0",
            "richards.Scheduler.schedule": "14.1",
            "richards.Scheduler.<init>": "0.1",
            "richards.Packet.<init>": "0.2",
            "richards.TaskControlBlock.addInputAndCheckPriority": "0.0",
            "Run.runBenchmark": "0.0",
            "richards.TaskControlBlock.runTask": "84.6",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.3",
            "richards.Scheduler.lambda$createIdler$2": "0.0"
        },
        "JProfiler_Bounce.txt": {
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.0",
            "Run.getSuiteFromName": "0.0",
            "som.Random.<init>": "0.5",
            "Bounce.benchmark": "52.3",
            "Bounce$Ball.<init>": "46.5",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.8",
            "som.Vector.<init>": "6.1",
            "cd.Vector3D.<init>": "8.1",
            "cd.RedBlackTree.treeInsert": "2.3",
            "cd.RedBlackTree.findNode": "1.9",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.2",
            "cd.RedBlackTree$InsertResult.<init>": "15.0",
            "cd.RedBlackTree$Node.<init>": "7.6",
            "cd.RedBlackTree$Entry.<init>": "4.6"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.2",
            " ": "0",
            "java.lang.ClassLoader.loadClass": "0.2",
            "Run.runBenchmark": "0.1",
            "NBody.innerBenchmarkLoop": "0.3",
            "nbody.NBodySystem.advance": "99.2",
            "Run.printResult": "0.1"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.3",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.9",
            "java.io.PrintStream.println": "0.1",
            "java.lang.Integer.valueOf": "0.4",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "java.io.PrintStream.println": "0.2",
            "List.makeList": "0.3",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "2.9",
            "List$Element.length": "0.2",
            "List.isShorterThan": "74.6",
            "List$Element.<init>": "21.3",
            "Benchmark.innerBenchmarkLoop": "0.2"
        },
        "JProfiler_Storage.txt": {
            "Run.reportBenchmark": "0.0",
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.5",
            "java.lang.Integer.valueOf": "0.0",
            "som.Random.<init>": "0.0",
            "Storage.benchmark": "0.0",
            "Storage.buildTreeDepth": "99.4",
            "Run.printResult": "0.0",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.6",
            "som.Vector.<init>": "2.5",
            "java.lang.String.substring": "91.2",
            "json.JsonValue.<init>": "4.1",
            "json.JsonPureStringParser.readArray": "0.3",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readValue": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.0"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.3",
            "java.util.Arrays.fill": "0.3",
            "java.io.PrintStream.println": "0.1",
            "Queens.queens": "23.9",
            "Queens.placeQueen": "74.9",
            "Run.runBenchmark": "0.1",
            "Benchmark.innerBenchmarkLoop": "0.3",
            "Run.printResult": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Queens.benchmark": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "23.982622016298137",
            "java.lang.String.<init>(byte[], byte) String.java": "6.905990632965432",
            "json.JsonPureStringParser.read()": "20.554739393026207",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "3.3567299925080465",
            "java.lang.String.length() String.java": "3.130715753610996",
            "json.JsonArray.<init>()": "2.0048300079942076",
            "java.lang.String.substring(int, int) String.java": "11.020286870665446",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "6.566969274619856",
            "json.JsonPureStringParser.readStringInternal()": "3.5283333961150665",
            "json.JsonPureStringParser.readValue()": "2.2099170025489383"
        },
        "YourKit_Havlak.txt": {
            "havlak.HavlakLoopFinder.stepD(int, Vector)": "2.006150463448891",
            "som.Vector.forEach(ForEachInterface)": "2.296144165824459",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.730621820078385",
            "havlak.HavlakLoopFinder.findLoops()": "11.104161842455513",
            "som.Vector.<init>(int)": "3.289480803066143",
            "som.Vector.append(Object)": "4.200580420231173",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.987811607971798",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "3.9084225857483252",
            "som.Vector.removeAll()": "2.8263565321081465",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.714330233574785"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "8.778012185946329",
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.26555330982694775",
            "java.util.zip.ZipFile$Source.<init>(ZipFile$Source$Key, boolean, ZipCoder) ZipFile.java": "0.1917885015416845",
            "Queens.getRowColumn(int, int)": "63.18693477715651",
            "Queens.queens()": "1.017954354336633",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.20654146319873715",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.4425888497115796",
            "Benchmark.innerBenchmarkLoop(int)": "0.2803062714840004",
            "Queens.setRowColumn(int, int, boolean)": "25.08003481698951",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.2803062714840004"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.9982032825916822",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "1.9400138887357945",
            "richards.TaskControlBlock.runTask()": "38.396108214562595",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.181317813222223",
            "richards.Scheduler.schedule()": "2.5205483478650663",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.0937342695370056",
            "richards.RBObject.append(Packet, Packet)": "2.9063465643750255",
            "richards.Scheduler$$Lambda$12.0x00000008000c7520.apply(Packet, RBObject)": "1.5358443285825039",
            "Richards.benchmark()": "27.24102835433178",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.9400138887357945"
        },
        "YourKit_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.14572853472657016",
            "Storage$$Lambda$7.0x00000008000c2a98.<init>(Storage, int, Random)": "0.21049677238282358",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.3979144627474693",
            "Storage$$Lambda$7.0x00000008000c2a98.apply(int)": "0.8959606209115054",
            "jdk.internal.org.objectweb.asm.Label.resolve(byte[], int) Label.java": "0.15112588786459127",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "42.201904186187114",
            "som.Random.next()": "13.498780198190813",
            "Storage.buildTreeDepth(int, Random)": "37.155379002137366",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "3.7079816058205073",
            "com.yourkit.probes.builtin.Files.<clinit>() a": "0.11334441589844345"
        },
        "YourKit_Towers.txt": {
            "Towers.pushDisk(Towers$TowersDisk, int)": "32.71938800370316",
            "Towers.popDiskFrom(int)": "29.41821371144569",
            "Towers.moveDisks(int, int, int)": "8.234663548214199",
            "Towers$TowersDisk.getSize()": "1.5592262339813865",
            "com.yourkit.probes.ForeignKeyColumn.setValue(int, int) a": "0.10963309457681625",
            "Towers.moveTopDisk(int, int)": "8.502655557179748",
            "java.util.Objects.equals(Object, Object) Objects.java": "0.1949032792476733",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "18.649807533011742",
            "Towers.benchmark()": "0.2192661891536325",
            "com.yourkit.probes.Table.createRow() a": "0.10963309457681625"
        },
        "YourKit_Permute.txt": {
            "java.util.zip.ZipFile$Source.get(File, boolean, ZipCoder) ZipFile.java": "0.0011159219747355264",
            "Permute.permute(int)": "55.1042271124403",
            "java.lang.ThreadLocal$ThreadLocalMap.<init>(ThreadLocal, Object) ThreadLocal.java": "0.1897067357050395",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7400.invoke(Object, Object, long) LambdaForm$MH": "0.10043297772619737",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation(String, boolean) MethodWriter.java": "0.30129893317859213",
            "java.io.File.toPath() File.java": "0.03347765924206579",
            "Permute.benchmark()": "0.5468017676204079",
            "jdk.internal.loader.NativeLibraries.find(String) NativeLibraries.java": "0.06695531848413158",
            "Permute.swap(int, int)": "43.554434673927595",
            "java.lang.Integer.valueOf(int) Integer.java": "0.10043297772619737"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "2.682983323038912",
            "som.Vector.forEach(ForEachInterface)": "41.36426806670784",
            "deltablue.BinaryConstraint.getOutput()": "2.0846201358863494",
            "deltablue.BinaryConstraint.isSatisfied()": "2.0074119827053734",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.682983323038912",
            "deltablue.Planner.makePlan(Vector)": "2.6250772081531806",
            "som.Vector.append(Object)": "2.91460778258184",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "12.777949351451511",
            "deltablue.Variable.getValue()": "5.636195182211241",
            "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, int) DirectMethodHandle$Holder": "1.7178814082767138"
        },
        "YourKit_List.txt": {
            "List.tail(List$Element, List$Element, List$Element)": "2.388203882843841",
            "List$Element.<init>(Object)": "0.36225564515047026",
            "com.yourkit.probes.builtin.Processes$FileOutputStream_write_arrayRange_Probe.onExit(int, Throwable) a": "0.12075188171682343",
            "List.makeList(int)": "0.8318462962714502",
            "sun.nio.fs.UnixFileAttributes.toFileTime(long, long) UnixFileAttributes.java": "0.1073350059705097",
            "jdk.internal.org.objectweb.asm.SymbolTable.addType(String) SymbolTable.java": "0.32200501791152913",
            "List$Element.setNext(List$Element)": "0.12075188171682343",
            "List$Element.getNext()": "23.88203882843841",
            "List.isShorterThan(List$Element, List$Element)": "71.63269960956892",
            "sun.nio.fs.UnixFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.12075188171682343"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.62582678059443",
            "nbody.Body.getZ()": "5.478752093564594",
            "nbody.Body.setX(double)": "0.6954892554006868",
            "nbody.Body.getX()": "1.1638799784256393",
            "nbody.NBodySystem.advance(double)": "46.640361086666466",
            "nbody.Body.setVY(double)": "5.833593550401679",
            "nbody.Body.setVZ(double)": "8.218128140346892",
            "nbody.Body.getVX()": "0.5819399892128196",
            "nbody.Body.setVX(double)": "25.406648309535296",
            "nbody.Body.setY(double)": "1.1354926618786725"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.56283962658492",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "jdk.internal.loader.URLClassPath$JarLoader.checkResource(String, boolean, JarEntry) URLClassPath.java": "0.026125121917235608",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.11320886164135431",
            "Harness.main(String[])": "8.708373972411871E-4",
            "sun.nio.fs.UnixNativeDispatcher.<clinit>() UnixNativeDispatcher.java": "0.0",
            "java.util.ArrayDeque.addFirst(Object) ArrayDeque.java": "0.06966699177929496",
            "java.security.SecureClassLoader$DebugHolder.<clinit>() SecureClassLoader.java": "0.026125121917235608",
            "jdk.internal.misc.Unsafe.compareAndSetLong(Object, long, long, long) Unsafe.java (native)": "0.03483349588964748",
            "jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String) BuiltinClassLoader.java": "8.708373972411871E-4"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.407942912113946",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.095036397834797",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "16.468763909428976",
            "cd.RedBlackTree.findNode(Comparable)": "8.729737102818499",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.789280227432625",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.5198501012247476",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.1106436745301305",
            "cd.RedBlackTree.put(Comparable, Object)": "5.951440837365572",
            "cd.Vector2D.compareNumbers(double, double)": "8.622051201056758",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.005915545536778"
        },
        "YourKit_Sieve.txt": {
            "java.lang.invoke.MethodTypeForm.canonicalizeAll(Class[], int) MethodTypeForm.java": "0.2521846869072289",
            "java.util.zip.ZipCoder$UTF8ZipCoder.checkedHash(byte[], int, int) ZipCoder.java": "0.010964551604662125",
            "java.util.concurrent.ConcurrentHashMap$Traverser.advance() ConcurrentHashMap.java": "0.06578730962797276",
            "com.yourkit.probes.ObjectRowIndexMap.get(Object) a": "0.09868096444195915",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.335449491793033",
            "Benchmark.innerBenchmarkLoop(int)": "0.09868096444195915",
            "Sieve.benchmark()": "89.13083999429843",
            "sun.nio.fs.UnixNativeDispatcher.init() UnixNativeDispatcher.java (native)": "0.03289365481398638",
            "Sieve.sieve(boolean[], int)": "7.927370810170717",
            "sun.nio.fs.UnixFileSystemProvider.getFileAttributeView(Path, Class, LinkOption[]) UnixFileSystemProvider.java": "0.0438582064186485"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.write(byte[], int, int) FileOutputStream.java": "0.17035452669833998",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.17035452669833998",
            "Bounce.benchmark()": "63.27724252806117",
            "Benchmark.innerBenchmarkLoop(int)": "0.26499593041964",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.35963733414093996",
            "som.Random.next()": "0.45427873786223993",
            "Bounce.lambda$benchmark$0(Random, int)": "0.37856561488519996",
            "com.yourkit.probes.Table.createRow() a": "0.22713936893111997",
            "Bounce$Ball.bounce()": "32.38628835342885",
            "Bounce$Ball.<init>(Random)": "2.0253260396358197"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.6585,
        "JavaFlightRecorder_Bounce.jfr": 15.3215,
        "rebench_test_Async_Bounce.txt": 66.334,
        "Mandelbrot.hpl": 38.1905,
        "List.hpl": 23.2115,
        "rebench_test_Async_Towers.txt": 76.8115,
        "JavaFlightRecorder_Storage.jfr": 59.003,
        "JavaFlightRecorder_Sieve.jfr": 31.688,
        "Queens.hpl": 21.9055,
        "JavaFlightRecorder_NBody.jfr": 21.541,
        "Permute.hpl": 30.345,
        "rebench_test_Async_Sieve.txt": 88.52000000000001,
        "JavaFlightRecorder_Richards.jfr": 91.6985,
        "Storage.hpl": 59.6855,
        "DeltaBlue.hpl": 12.437,
        "JavaFlightRecorder_Json.jfr": 80.798,
        "Towers.hpl": 26.424,
        "Bounce.hpl": 25.688499999999998,
        "NBody.hpl": 21.1505,
        "rebench_test_Async_List.txt": 70.8195,
        "rebench_test_Async_Richards.txt": 276.43100000000004,
        "Richards.hpl": 89.8435,
        "rebench_test_Async_DeltaBlue.txt": 44.763000000000005,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.9375,
        "JavaFlightRecorder_Havlak.jfr": 156.812,
        "JavaFlightRecorder_List.jfr": 23.493000000000002,
        "JavaFlightRecorder_CD.jfr": 42.1175,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.351500000000001,
        "rebench_test_Async_Mandelbrot.txt": 108.2045,
        "rebench_test_Async_Storage.txt": 174.9905,
        "JavaFlightRecorder_Towers.jfr": 26.033,
        "Json.hpl": 79.316,
        "Havlak.hpl": 156.5765,
        "rebench_test_Async_CD.txt": 152.0765,
        "rebench_test_Async_Havlak.txt": 512.511,
        "Sieve.hpl": 31.4085,
        "rebench_test_Async_Permute.txt": 86.3425,
        "rebench_test_Async_NBody.txt": 59.736000000000004,
        "JavaFlightRecorder_Permute.jfr": 30.314,
        "CD.hpl": 42.383,
        "rebench_test_Async_Json.txt": 281.192,
        "rebench_test_Async_Queens.txt": 62.583
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007efeccad5bfd": "18.57%",
            "[.] 0x00007efeccad5c10": "5.20%",
            "[.] 0x00007efeccad5bf5": "23.17%",
            "[.] 0x00007efeccad5c01": "4.32%",
            "[.] 0x00007efeccad5bf9": "4.87%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007fd2ecad3716": "2.59%",
            "[.] 0x00007fd2ecad367c": "19.08%",
            "[.] 0x00007fd2ecad3610": "25.48%",
            "[.] 0x00007fd2ecad34dc": "14.54%",
            "[.] 0x00007fd2ecad3554": "11.10%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007fec90b39175": "16.92%",
            "[.] 0x00007fec90b2cf80": "1.44%",
            "[.] 0x00007fec90b073d1": "1.64%",
            "[.] 0x00007fec90adfdc3": "1.10%",
            "[.] 0x00007fec90b3917c": "16.76%"
        },
        "DeltaBlue.data": {
            "[.] 0x00007f6840b3d7d0": "1.57%",
            " ": "0",
            "[.] 0x00007f6840647050": "1.78%",
            "[.] 0x00007f6840b019c0": "1.62%",
            "[.] 0x00007f6840b3d830": "19.49%",
            "[.] 0x00007f6840b01a04": "3.67%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007f8c84ad3a9e": "6.95%",
            "[.] 0x00007f8c84ad3b16": "4.28%",
            "[.] 0x00007f8c84ad396d": "3.62%",
            "[.] 0x00007f8c84ad3aad": "25.28%",
            "[.] 0x00007f8c84ad3957": "3.46%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007fcfd8ad4ac6": "3.84%",
            "[.] 0x00007fcfd8ad4f85": "6.02%",
            "[.] 0x00007fcfd8ad4c5d": "3.40%",
            "[.] 0x00007fcfd8ad4f02": "10.16%",
            "[.] 0x00007fcfd8ad4f23": "3.87%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007f2840646eba": "10.34%",
            "[.] 0x00007f2840646f1c": "6.87%",
            "[.] 0x00007f2840646eaf": "8.13%",
            "[.] 0x00007f2840af233a": "6.32%",
            "[.] 0x00007f2840646e9b": "5.14%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007fed14ad6096": "6.90%",
            "[.] 0x00007fed14ad60da": "6.25%",
            "[.] 0x00007fed14ad612d": "4.64%",
            "[.] 0x00007fed14ad6149": "4.64%",
            "[.] 0x00007fed14ad5fff": "4.46%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007fcaacb2583a": "3.02%",
            "[.] 0x00007fcaacade699": "2.23%",
            "[.] 0x00007fcaacb1ab00": "3.56%",
            "[.] 0x00007fcaacade6c8": "2.12%",
            "[.] 0x00007fcaacb1aae8": "5.18%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007fee54ad84c9": "6.20%",
            "[.] 0x00007fee54ad8471": "5.29%",
            "[.] 0x00007fee54ad8465": "6.36%",
            "[.] 0x00007fee54ad8433": "5.66%",
            "[.] 0x00007fee54ad8497": "6.34%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007fe67cad3e35": "26.37%",
            "[.] 0x00007fe67cad3e45": "10.96%",
            "[.] 0x00007fe67cad3f75": "5.04%",
            "[.] 0x00007fe67cad3e95": "4.82%",
            "[.] 0x00007fe67cad4055": "5.94%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f0f14ada802": "10.71%",
            "[.] 0x00007f0f14ada80c": "10.83%",
            "[.] 0x00007f0f14ada80e": "29.06%",
            "[.] 0x00007f0f14ada7b8": "18.66%",
            "[.] 0x00007f0f14ad8ad5": "3.11%"
        },
        "Bounce.data": {
            "[.] 0x00007f8914adc0c7": "26.06%",
            "[.] 0x00007f8914ad5562": "8.81%",
            " ": "0",
            "[.] 0x00007f8914adc0d4": "16.27%",
            "[.] 0x00007f8914ad556f": "5.23%",
            "[.] 0x00007f8914adc0c2": "9.98%"
        },
        "Json.data": {
            " ": "0",
            "[.] 0x00007f5624adb316": "0.95%",
            "[.] 0x00007f5624adb42a": "2.53%",
            "[.] 0x00007f5624adb40b": "0.98%",
            "[.] 0x00007f5624adb274": "1.42%",
            "[.] 0x00007f5624adb1e6": "1.50%"
        }
    }
}