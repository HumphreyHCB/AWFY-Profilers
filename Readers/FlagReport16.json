{
    "JavaFlightRecorder": {
        "JavaFlightRecorder_Mandelbrot.jfr": {
            " ": "0",
            "sun.nio.cs.StreamEncoder.write([CII)V": "0.088261253309797",
            "Mandelbrot.mandelbrot(I)I": "99.9117387466902"
        },
        "JavaFlightRecorder_Queens.jfr": {
            " ": "0",
            "Queens.benchmark()Ljava/lang/Object;": "0.16260162601626016",
            "Queens.placeQueen(I)Z": "15.934959349593495",
            "Queens.getRowColumn(II)Z": "54.959349593495936",
            "java.util.Arrays.fill([ZZ)V": "0.4878048780487805",
            "Queens.setRowColumn(IIZ)V": "27.317073170731707",
            "Queens.queens()Z": "1.1382113821138211"
        },
        "JavaFlightRecorder_Bounce.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Ljava/lang/invoke/MemberName;)Z": "0.1366120218579235",
            "Bounce.lambda$benchmark$0(Lsom/Random;I)LBounce$Ball;": "0.273224043715847",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "0.546448087431694",
            "java.io.FileOutputStream.write([BII)V": "0.1366120218579235",
            "Bounce$Ball.bounce()Z": "77.73224043715848",
            "Bounce.benchmark()Ljava/lang/Object;": "17.89617486338798",
            "som.Random.next()I": "1.639344262295082",
            "Bounce$Ball.<init>(Lsom/Random;)V": "1.5027322404371586",
            "java.lang.StringConcatHelper.newArrayWithSuffix(Ljava/lang/String;J)[B": "0.1366120218579235"
        },
        "JavaFlightRecorder_Havlak.jfr": {
            "havlak.HavlakLoopFinder.lambda$processEdges$1(ILhavlak/BasicBlock;)V": "7.0",
            "som.IdentitySet.lambda$contains$0(Ljava/lang/Object;Ljava/lang/Object;)Z": "38.909090909090914",
            "havlak.HavlakLoopFinder.doDFS(Lhavlak/BasicBlock;I)I": "7.295454545454546",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(Lhavlak/BasicBlock;)V": "13.227272727272728",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "2.772727272727273",
            "havlak.HavlakLoopFinder.findLoops()V": "6.0",
            "som.Vector.<init>(I)V": "1.7045454545454546",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(ILsom/Vector;Lsom/Vector;Ljava/lang/Integer;)V": "3.772727272727273",
            "som.Vector.hasSome(Lsom/TestInterface;)Z": "2.2272727272727275",
            "som.Vector.append(Ljava/lang/Object;)V": "3.7272727272727275"
        },
        "JavaFlightRecorder_CD.jfr": {
            "cd.CollisionDetector.recurse(Lcd/RedBlackTree;Lcd/RedBlackTree;Lcd/Vector2D;Lcd/Motion;)V": "13.722126929674099",
            "cd.RedBlackTree.findNode(Ljava/lang/Comparable;)Lcd/RedBlackTree$Node;": "3.9451114922813035",
            "cd.RedBlackTree.rightRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "1.7152658662092624",
            "cd.RedBlackTree.leftRotate(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "3.4305317324185247",
            "cd.RedBlackTree.forEach(Lsom/ForEachInterface;)V": "5.060034305317324",
            "cd.CollisionDetector.isInVoxel(Lcd/Vector2D;Lcd/Motion;)Z": "27.873070325900514",
            "cd.RedBlackTree.treeMinimum(Lcd/RedBlackTree$Node;)Lcd/RedBlackTree$Node;": "4.974271012006861",
            "cd.RedBlackTree.put(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;": "8.404802744425385",
            "cd.Vector2D.compareNumbers(DD)I": "5.317324185248713",
            "cd.RedBlackTree.treeInsert(Ljava/lang/Comparable;Ljava/lang/Object;)Lcd/RedBlackTree$InsertResult;": "15.09433962264151"
        },
        "JavaFlightRecorder_List.jfr": {
            "List.isShorterThan(LList$Element;LList$Element;)Z": "86.30952380952381",
            " ": "0",
            "List$Element.getNext()LList$Element;": "9.375",
            "java.nio.CharBuffer.limit(I)Ljava/nio/Buffer;": "0.1488095238095238",
            "List.tail(LList$Element;LList$Element;LList$Element;)LList$Element;": "2.8273809523809526",
            "List$Element.length()I": "0.1488095238095238",
            "List$Element.setNext(LList$Element;)V": "0.1488095238095238",
            "List.makeList(I)LList$Element;": "0.8928571428571428",
            "java.lang.invoke.LambdaForm.useCount(Ljava/lang/invoke/LambdaForm$Name;)I": "0.1488095238095238"
        },
        "JavaFlightRecorder_DeltaBlue.jfr": {
            "deltablue.Plan$$Lambda$83+0x0000000801012420.1891502635.apply(Ljava/lang/Object;)V": "9.060402684563758",
            "deltablue.Planner.addPropagate(Ldeltablue/AbstractConstraint;I)Z": "5.369127516778524",
            "deltablue.Variable.setDeterminedBy(Ldeltablue/AbstractConstraint;)V": "14.429530201342283",
            "som.Vector.forEach(Lsom/ForEachInterface;)V": "18.456375838926174",
            "deltablue.ScaleConstraint.execute()V": "2.684563758389262",
            "deltablue.AbstractConstraint.satisfy(ILdeltablue/Planner;)Ldeltablue/AbstractConstraint;": "5.704697986577181",
            "som.Vector.<init>(I)V": "4.026845637583893",
            "deltablue.Strength$Sym.customHash()I": "8.389261744966444",
            "deltablue.Planner$$Lambda$80+0x000000080100f590.2025269734.apply(Ljava/lang/Object;)V": "6.0402684563758395",
            "som.Vector.append(Ljava/lang/Object;)V": "3.0201342281879198"
        },
        "JavaFlightRecorder_Storage.jfr": {
            "Storage$$Lambda$77+0x000000080100c210.992802731.<init>(LStorage;ILsom/Random;)V": "0.5451241671714112",
            " ": "0",
            "Storage$$Lambda$77+0x000000080100c210.992802731.apply(I)Ljava/lang/Object;": "0.18170805572380375",
            "java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V": "38.64324651726226",
            "java.lang.invoke.LambdaForm$DMH+0x000000080100d400.715521683.newInvokeSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;": "1.574803149606299",
            "Storage.lambda$buildTreeDepth$0(ILsom/Random;I)Ljava/lang/Object;": "3.9370078740157477",
            "Storage.buildTreeDepth(ILsom/Random;)Ljava/lang/Object;": "42.64082374318595",
            "som.Random.next()I": "12.053301029678982",
            "java.io.PrintStream.println(Ljava/lang/String;)V": "0.06056935190793458",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Ljava/lang/Object;)Ljava/lang/Object;": "0.3634161114476075"
        },
        "JavaFlightRecorder_Sieve.jfr": {
            " ": "0",
            "java.lang.invoke.LambdaForm$Name.<init>(Ljava/lang/invoke/LambdaForm$NamedFunction;[Ljava/lang/Object;)V": "0.1040582726326743",
            "java.nio.Buffer.remaining()I": "0.1040582726326743",
            "Sieve.benchmark()Ljava/lang/Object;": "5.202913631633715",
            "jdk.jfr.internal.RequestEngine.run_requests(Ljava/util/Collection;)J": "0.1040582726326743",
            "java.util.Arrays.fill([ZZ)V": "5.619146722164412",
            "Sieve.sieve([ZI)I": "88.86576482830385"
        },
        "JavaFlightRecorder_Towers.jfr": {
            " ": "0",
            "Towers$TowersDisk.setNext(LTowers$TowersDisk;)V": "18.655692729766805",
            "Towers$TowersDisk.getNext()LTowers$TowersDisk;": "2.469135802469136",
            "sun.nio.cs.StreamEncoder.implFlushBuffer()V": "0.13717421124828533",
            "Towers.moveDisks(III)V": "3.4293552812071333",
            "Towers$TowersDisk.getSize()I": "11.385459533607682",
            "Towers.pushDisk(LTowers$TowersDisk;I)V": "37.585733882030176",
            "Towers.popDiskFrom(I)LTowers$TowersDisk;": "21.947873799725652",
            "Towers.moveTopDisk(II)V": "4.3895747599451305"
        },
        "JavaFlightRecorder_NBody.jfr": {
            "nbody.Body.setY(D)V": "1.40625",
            "nbody.Body.getMass()D": "0.3125",
            "nbody.Body.setVX(D)V": "32.8125",
            "nbody.NBodySystem.advance(D)V": "40.9375",
            "nbody.Body.setZ(D)V": "0.625",
            "NBody.innerBenchmarkLoop(I)Z": "0.46875",
            "nbody.Body.getZ()D": "8.28125",
            "nbody.Body.setVZ(D)V": "7.65625",
            "nbody.Body.setVY(D)V": "5.46875",
            "nbody.Body.setX(D)V": "1.09375"
        },
        "JavaFlightRecorder_Richards.jfr": {
            "richards.TaskState.isTaskHoldingOrWaiting()Z": "4.685314685314686",
            "richards.Scheduler.schedule()V": "9.86013986013986",
            "richards.Packet.<init>(Lrichards/Packet;II)V": "13.496503496503497",
            "richards.TaskControlBlock.<init>(Lrichards/TaskControlBlock;IILrichards/Packet;Lrichards/TaskState;Lrichards/ProcessFunction;Lrichards/RBObject;)V": "6.783216783216783",
            "Richards.benchmark()Ljava/lang/Object;": "8.601398601398602",
            "richards.Packet.setLink(Lrichards/Packet;)V": "4.335664335664336",
            "richards.TaskControlBlock.addInputAndCheckPriority(Lrichards/Packet;Lrichards/TaskControlBlock;)Lrichards/TaskControlBlock;": "4.125874125874126",
            "richards.RBObject.append(Lrichards/Packet;Lrichards/Packet;)Lrichards/Packet;": "5.734265734265735",
            "richards.TaskControlBlock.runTask()Lrichards/TaskControlBlock;": "3.6363636363636367",
            "richards.RBObject.<init>()V": "11.3986013986014"
        },
        "JavaFlightRecorder_Json.jfr": {
            "java.lang.String.length()I": "3.643911439114391",
            "json.JsonPureStringParser.isDigit()Z": "3.874538745387454",
            "java.lang.StringLatin1.newString([BII)Ljava/lang/String;": "3.044280442804428",
            "java.lang.String.equals(Ljava/lang/Object;)Z": "23.570110701107012",
            "json.JsonPureStringParser.endCapture()Ljava/lang/String;": "5.119926199261992",
            "json.JsonPureStringParser.readStringInternal()Ljava/lang/String;": "10.885608856088561",
            "java.lang.String.<init>([BB)V": "4.566420664206642",
            "java.lang.String.substring(II)Ljava/lang/String;": "4.520295202952029",
            "json.JsonPureStringParser.read()V": "14.345018450184503",
            "java.util.Arrays.copyOfRange([BII)[B": "5.857933579335794"
        },
        "JavaFlightRecorder_Permute.jfr": {
            " ": "0",
            "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(Ljava/lang/invoke/LambdaForm$BasicType;Ljava/lang/Class;Ljava/lang/Object;)V": "0.11890606420927467",
            "Permute.swap(II)V": "42.687277051129605",
            "Permute.permute(I)V": "56.95600475624257",
            "Benchmark.innerBenchmarkLoop(I)Z": "0.11890606420927467",
            "Permute.benchmark()Ljava/lang/Object;": "0.11890606420927467"
        }
    },
    "HonestProfiler": {
        "Richards.hpl": {
            "richards.Packet::<init>": "7.1",
            "richards.TaskControlBlock::addInputAndCheckPriority": "2.2",
            "Richards::benchmark": "4.9",
            "richards.RBObject::append": "3.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "AGCT::Unknown Java[ERR=-5]": "44.6",
            "richards.TaskControlBlock::<init>": "2.8",
            "richards.Scheduler::schedule": "5.9",
            "richards.TaskState::isTaskHoldingOrWaiting": "3.0",
            "richards.RBObject::<init>": "6.1"
        },
        "Mandelbrot.hpl": {
            "java.io.FileOutputStream::writeBytes": "0.0",
            "java.lang.invoke.ClassSpecializer$Factory::findFactories": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::execute": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.1",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "java.lang.StringLatin1::regionMatchesCI": "0.0",
            "Mandelbrot::mandelbrot": "97.5",
            "java.nio.CharBuffer::array": "0.0"
        },
        "List.hpl": {
            "List$Element::getNext": "9.3",
            "List::makeList": "0.7",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "List::tail": "2.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "List::isShorterThan": "81.5",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "List$Element::<init>": "0.2",
            "AGCT::Unknown Java[ERR=-5]": "2.5",
            "List$Element::length": "0.0"
        },
        "Json.hpl": {
            "json.JsonPureStringParser::read": "16.2",
            "java.lang.String::<init>": "5.4",
            "json.JsonPureStringParser::readArray": "2.6",
            "java.lang.String::length": "2.9",
            "java.util.Arrays::copyOfRange": "7.1",
            "java.lang.String::equals": "22.3",
            "AGCT::Unknown not Java[ERR=-3]": "3.9",
            "AGCT::Unknown Java[ERR=-5]": "10.2",
            "java.lang.String::isLatin1": "2.5",
            "json.JsonPureStringParser::readStringInternal": "9.0"
        },
        "Havlak.hpl": {
            "som.IdentitySet::lambda$contains$0": "34.3",
            "havlak.HavlakLoopFinder::lambda$initAllNodes$0": "12.3",
            "havlak.HavlakLoopFinder::findLoops": "6.1",
            "havlak.HavlakLoopFinder::lambda$stepEProcessNonBackPreds$4": "4.0",
            "som.Vector::append": "3.4",
            "AGCT::Unknown not Java[ERR=-3]": "7.7",
            "havlak.HavlakLoopFinder::lambda$processEdges$1": "6.7",
            "havlak.HavlakLoopFinder::doDFS": "5.8",
            "som.Vector::hasSome": "2.1",
            "som.Vector::forEach": "2.0"
        },
        "Permute.hpl": {
            "Permute::swap": "40.4",
            "Permute::permute": "49.5",
            "Permute::benchmark": "0.1",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "java.lang.invoke.MethodHandleNatives::resolve": "0.0",
            "jdk.internal.org.objectweb.asm.Frame::accept": "0.0",
            "java.nio.charset.CharsetEncoder::encode": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "3.3",
            "AGCT::Unknown Java[ERR=-5]": "6.4"
        },
        "Queens.hpl": {
            "Queens::getRowColumn": "56.7",
            "Benchmark::innerBenchmarkLoop": "0.1",
            "Run::printResult": "0.0",
            "AGCT::Unknown not Java[ERR=-3]": "1.9",
            "AGCT::Unknown Java[ERR=-5]": "0.7",
            "Queens::placeQueen": "14.9",
            "Queens::setRowColumn": "23.3",
            "Queens::queens": "0.9",
            "java.util.Arrays::fill": "0.3"
        },
        "Storage.hpl": {
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800::newInvokeSpecial": "1.0",
            "java.lang.invoke.DirectMethodHandle::allocateInstance": "0.4",
            "Storage::buildTreeDepth": "41.0",
            "java.util.Arrays::setAll": "34.6",
            "som.Random::next": "11.7",
            "AGCT::Unknown not Java[ERR=-3]": "3.4",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "Storage$$Lambda$2.0x00000008010030f0::apply": "0.5",
            "Storage$$Lambda$2.0x00000008010030f0::<init>": "0.4",
            "Storage::lambda$buildTreeDepth$0": "3.8"
        },
        "Sieve.hpl": {
            "Sieve::benchmark": "6.0",
            "java.lang.invoke.MethodHandles$Lookup$ClassDefiner::defineClass": "0.0",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "AGCT::Not walkable Java[ERR=-6]": "0.0",
            "java.lang.ClassLoader::defineClass0": "0.0",
            "Sieve::sieve": "86.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.8",
            "jdk.internal.org.objectweb.asm.ByteVector::putByte": "0.0",
            "sun.nio.cs.US_ASCII$Encoder::encodeArrayLoop": "0.0",
            "java.util.Arrays::fill": "4.6"
        },
        "DeltaBlue.hpl": {
            "deltablue.Plan$$Lambda$8.0x000000080100d938::apply": "4.2",
            "deltablue.Planner::addPropagate": "2.7",
            "som.Vector::append": "2.2",
            "AGCT::Unknown not Java[ERR=-3]": "11.4",
            "AGCT::Unknown Java[ERR=-5]": "18.1",
            "deltablue.AbstractConstraint::satisfy": "2.7",
            "deltablue.Plan::lambda$execute$0": "2.1",
            "deltablue.AbstractConstraint::<init>": "4.7",
            "som.Vector::forEach": "25.5",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0::apply": "2.9"
        },
        "Bounce.hpl": {
            "Bounce::benchmark": "18.3",
            "java.io.FileOutputStream::writeBytes": "0.0",
            "Bounce$Ball::bounce": "74.9",
            "java.util.Arrays::setAll": "0.7",
            "Bounce::lambda$benchmark$0": "0.2",
            "Benchmark::innerBenchmarkLoop": "0.0",
            "som.Random::next": "1.0",
            "AGCT::Unknown not Java[ERR=-3]": "2.6",
            "AGCT::Unknown Java[ERR=-5]": "0.0",
            "Bounce$Ball::<init>": "1.7"
        },
        "NBody.hpl": {
            "nbody.Body::setY": "1.5",
            "nbody.Body::setX": "1.4",
            "nbody.Body::getY": "1.0",
            "nbody.Body::setVZ": "8.8",
            "nbody.Body::getZ": "7.9",
            "nbody.Body::setVX": "29.2",
            "nbody.Body::setVY": "6.5",
            "nbody.Body::getMass": "0.5",
            "AGCT::Unknown not Java[ERR=-3]": "2.2",
            "nbody.NBodySystem::advance": "38.7"
        },
        "Towers.hpl": {
            "Towers$TowersDisk::getSize": "9.7",
            "Towers::popDiskFrom": "20.9",
            "Towers::moveDisks": "3.2",
            "AGCT::Unknown not Java[ERR=-3]": "2.5",
            "Towers::pushDisk": "35.1",
            "Towers$TowersDisk::setNext": "15.7",
            "AGCT::Unknown Java[ERR=-5]": "4.5",
            "Towers::benchmark": "0.1",
            "Towers::moveTopDisk": "3.9",
            "Towers$TowersDisk::getNext": "3.9"
        },
        "CD.hpl": {
            "cd.CollisionDetector::recurse": "14.3",
            "cd.RedBlackTree::forEach": "3.9",
            "cd.RedBlackTree::put": "7.0",
            "cd.RedBlackTree::findNode": "3.0",
            "cd.RedBlackTree::treeMinimum": "3.3",
            "AGCT::Unknown not Java[ERR=-3]": "9.0",
            "AGCT::Unknown Java[ERR=-5]": "2.9",
            "cd.Vector2D::compareNumbers": "4.6",
            "cd.CollisionDetector::isInVoxel": "22.1",
            "cd.RedBlackTree::treeInsert": "13.6"
        }
    },
    "Async": {
        "rebench_test_Async_DeltaBlue.txt": {
            "deltablue.EqualityConstraint.execute": "3.07%",
            "deltablue.Planner$$Lambda$5.0x000000080100cbb0.apply": "2.93%",
            "deltablue.AbstractConstraint.satisfy": "2.92%",
            "deltablue.Plan$$Lambda$8.0x000000080100d938.apply": "17.68%",
            "som.Vector.append": "3.54%",
            "som.Vector.forEach": "6.46%",
            "itable": "3.89%",
            "deltablue.Planner.addPropagate": "2.81%",
            "deltablue.AbstractConstraint.<init>": "1.95%",
            "deltablue.Variable.setValue": "3.73%"
        },
        "rebench_test_Async_Bounce.txt": {
            "Bounce$Ball.bounce": "74.16%",
            "som.Random.next": "0.88%",
            "Interpreter": "0.05%",
            "java.util.Arrays.setAll": "0.68%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.05%",
            "Bounce.benchmark": "18.62%",
            "__tls_get_addr": "0.04%",
            "Bounce$Ball.<init>": "1.79%",
            "Bounce.lambda$benchmark$0": "0.17%",
            "Benchmark.innerBenchmarkLoop": "0.13%"
        },
        "rebench_test_Async_Mandelbrot.txt": {
            "DebugInformationRecorder::find_sharable_decode_offset(int)": "0.01%",
            "Interpreter": "0.04%",
            "resource_allocate_bytes(unsigned": "0.01%",
            "Mandelbrot.mandelbrot": "98.51%",
            "LIR_OpVisitState::visit(LIR_Op*)": "0.01%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.01%",
            "[no_Java_frame]": "0.01%",
            "__tls_get_addr": "0.02%",
            "[vdso]": "0.01%"
        },
        "rebench_test_Async_Storage.txt": {
            "java.lang.invoke.DirectMethodHandle.allocateInstance": "0.46%",
            "som.Random.next": "10.50%",
            "java.util.Arrays.setAll": "35.71%",
            "Storage.lambda$buildTreeDepth$0": "4.06%",
            "Storage$$Lambda$2.0x00000008010030f0.apply": "0.58%",
            "SpinPause": "0.21%",
            "Storage$$Lambda$2.0x00000008010030f0.<init>": "0.56%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.31%",
            "Storage.buildTreeDepth": "43.22%",
            "java.lang.invoke.LambdaForm$DMH.0x0000000801006800.newInvokeSpecial": "1.16%"
        },
        "rebench_test_Async_Towers.txt": {
            "Towers$TowersDisk.setNext": "15.85%",
            "Towers.popDiskFrom": "18.59%",
            "Towers.moveDisks": "8.81%",
            "Interpreter": "0.06%",
            "Towers.pushDisk": "35.19%",
            "Towers.moveTopDisk": "3.92%",
            "Towers$TowersDisk.getSize": "10.53%",
            "Towers$TowersDisk.getNext": "3.86%",
            "Towers.benchmark": "0.14%",
            "Benchmark.innerBenchmarkLoop": "0.12%"
        },
        "rebench_test_Async_CD.txt": {
            "cd.CollisionDetector.recurse": "13.54%",
            "cd.CollisionDetector.isInVoxel": "19.03%",
            "cd.RedBlackTree.forEach": "6.00%",
            "Node::set_req_X(unsigned": "2.21%",
            "cd.RedBlackTree.put": "6.77%",
            "cd.RedBlackTree.treeInsert": "12.91%",
            "cd.RedBlackTree.treeMinimum": "5.29%",
            "cd.RedBlackTree.findNode": "2.77%",
            "cd.Vector2D.compareNumbers": "4.22%",
            "cd.RedBlackTree.leftRotate": "2.16%"
        },
        "rebench_test_Async_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "5.65%",
            "havlak.HavlakLoopFinder$$Lambda$5.0x0000000801009078.apply": "2.09%",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0": "11.34%",
            "som.Vector.hasSome": "2.23%",
            "som.Vector.append": "3.09%",
            "som.IdentitySet.lambda$contains$0": "30.77%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "8.68%",
            "havlak.HavlakLoopFinder.lambda$processEdges$1": "6.08%",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4": "4.13%",
            "havlak.HavlakLoopFinder.doDFS": "5.50%"
        },
        "rebench_test_Async_Sieve.txt": {
            "java.util.Arrays.fill": "7.29%",
            "Sieve.benchmark": "7.58%",
            "Interpreter": "0.05%",
            "Sieve.sieve": "82.30%",
            "HeapRegionManager::par_iterate(HeapRegionClosure*,": "0.02%",
            "G1ParScanThreadState::trim_queue_to_threshold(unsigned": "0.07%",
            "__memset_avx2_unaligned_erms": "0.04%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.11%",
            "[vdso]": "0.02%"
        },
        "rebench_test_Async_Permute.txt": {
            "Permute.permute": "57.11%",
            "Permute.swap": "40.29%",
            "Permute.benchmark": "0.07%",
            "Interpreter": "0.05%",
            "resource_allocate_bytes(unsigned": "0.02%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.02%",
            "LinearScan::build_intervals()": "0.02%",
            "[no_Java_frame]": "0.02%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.10%"
        },
        "rebench_test_Async_NBody.txt": {
            "nbody.Body.setVZ": "8.35%",
            "nbody.Body.getZ": "8.04%",
            "nbody.Body.getY": "0.76%",
            "nbody.Body.setX": "1.54%",
            "nbody.Body.setY": "1.55%",
            "nbody.Body.setZ": "0.35%",
            "nbody.Body.setVX": "28.71%",
            "nbody.Body.setVY": "5.98%",
            "nbody.Body.getMass": "0.58%",
            "nbody.NBodySystem.advance": "40.11%"
        },
        "rebench_test_Async_List.txt": {
            "List$Element.getNext": "9.28%",
            "Interpreter": "0.06%",
            "List.makeList": "1.11%",
            "List$Element.setNext": "0.04%",
            "List.tail": "4.37%",
            "List$Element.length": "0.14%",
            "List.verifyResult": "0.10%",
            "List.isShorterThan": "81.77%",
            "List$Element.<init>": "0.16%",
            "Benchmark.innerBenchmarkLoop": "0.09%"
        },
        "rebench_test_Async_Json.txt": {
            "jbyte_disjoint_arraycopy": "7.64%",
            "java.lang.String.length": "3.45%",
            "java.lang.String.<init>": "4.83%",
            "json.JsonPureStringParser.isWhiteSpace": "2.18%",
            "java.lang.String.isLatin1": "3.09%",
            "json.JsonPureStringParser.readStringInternal": "6.53%",
            "java.util.Arrays.copyOfRange": "8.54%",
            "java.lang.String.equals": "22.49%",
            "json.JsonPureStringParser.read": "14.68%",
            "json.JsonPureStringParser.readValue": "2.26%"
        },
        "rebench_test_Async_Queens.txt": {
            "java.util.Arrays.fill": "0.98%",
            "Queens.getRowColumn": "68.96%",
            "Queens.setRowColumn": "17.37%",
            "Interpreter": "0.06%",
            "Queens.queens": "0.61%",
            "Queens.placeQueen": "8.69%",
            "InstanceKlass::find_method_index(Array<Method*>": "0.03%",
            "__tls_get_addr": "0.03%",
            "Benchmark.innerBenchmarkLoop": "0.12%",
            "Queens.benchmark": "0.04%"
        },
        "rebench_test_Async_Richards.txt": {
            "richards.Scheduler.schedule": "5.43%",
            "Richards.benchmark": "4.50%",
            "richards.Packet.<init>": "6.60%",
            "richards.TaskState.isTaskHoldingOrWaiting": "2.70%",
            "itable": "37.28%",
            "richards.Scheduler$$Lambda$4.0x0000000801006a28.apply": "3.32%",
            "richards.TaskControlBlock.<init>": "3.10%",
            "richards.Scheduler$$Lambda$5.0x0000000801006c50.apply": "3.94%",
            "richards.RBObject.<init>": "6.07%",
            "richards.RBObject.append": "3.23%"
        }
    },
    "JProfiler": {
        "JProfiler_Towers.txt": {
            "Run.reportBenchmark": "0.1",
            "Towers$TowersDisk.<init>": "4.5",
            "Towers.moveDisks": "93.5",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Towers.moveTopDisk": "0.1",
            "java.lang.Integer.valueOf": "0.5",
            "Run.runBenchmark": "0.1",
            "Towers.benchmark": "0.7",
            "Run.printResult": "0.2",
            "Benchmark.innerBenchmarkLoop": "0.1"
        },
        "JProfiler_Sieve.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Sieve.benchmark": "7.3",
            "java.io.PrintStream.println": "0.2",
            "Sieve.sieve": "91.6",
            "java.lang.Integer.valueOf": "0.4",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.3"
        },
        "JProfiler_DeltaBlue.txt": {
            "deltablue.AbstractConstraint.inputsKnown": "5.1",
            "deltablue.AbstractConstraint.satisfy": "10.2",
            "deltablue.Planner.removePropagateFrom": "9.3",
            "som.Vector.<init>": "28.5",
            "deltablue.Variable.<init>": "4.9",
            "som.Vector.forEach": "7.7",
            "deltablue.Planner.addPropagate": "2.3",
            "deltablue.AbstractConstraint.<init>": "8.4",
            "deltablue.Planner.constraintsConsuming": "4.8",
            "deltablue.Planner.addConstraintsConsumingTo": "15.5"
        },
        "JProfiler_Havlak.txt": {
            "havlak.HavlakLoopFinder.findLoops": "4.2",
            "som.Vector.hasSome": "3.4",
            "som.Dictionary$Entry.<init>": "3.3",
            "som.Vector.<init>": "42.1",
            "java.lang.Integer.valueOf": "8.9",
            "som.Set.<init>": "5.2",
            "havlak.UnionFindNode.findSet": "5.0",
            "havlak.HavlakLoopFinder.processEdges": "3.3",
            "som.IdentitySet.contains": "4.2",
            "som.Set.contains": "4.1"
        },
        "JProfiler_Mandelbrot.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Mandelbrot.mandelbrot": "99.6",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_Richards.txt": {
            "richards.Scheduler.createHandler": "0.1",
            "richards.Scheduler.createDevice": "0.0",
            "richards.Scheduler.schedule": "14.1",
            "richards.Scheduler.<init>": "0.0",
            "java.io.PrintStream.println": "0.0",
            "richards.Packet.<init>": "0.2",
            "richards.Scheduler.createIdler": "0.1",
            "richards.TaskControlBlock.runTask": "84.3",
            "richards.RBObject.<init>": "0.5",
            "richards.RBObject.append": "0.5"
        },
        "JProfiler_Bounce.txt": {
            "Run.reportBenchmark": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "java.lang.Integer.valueOf": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.0",
            "som.Random.<init>": "1.5",
            "Bounce.benchmark": "51.6",
            "Bounce$Ball.<init>": "46.3",
            "Bounce.lambda$benchmark$0": "0.1",
            "Run.printResult": "0.0"
        },
        "JProfiler_CD.txt": {
            "cd.CollisionDetector.recurse": "2.5",
            "som.Vector.<init>": "6.0",
            "cd.Vector3D.<init>": "7.2",
            "cd.RedBlackTree.treeInsert": "2.4",
            "cd.RedBlackTree.findNode": "1.5",
            "cd.RedBlackTree.<init>": "1.6",
            "cd.Vector2D.<init>": "44.6",
            "cd.RedBlackTree$InsertResult.<init>": "15.5",
            "cd.RedBlackTree$Node.<init>": "7.7",
            "cd.RedBlackTree$Entry.<init>": "5.0"
        },
        "JProfiler_NBody.txt": {
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "Harness.processArguments": "0.1",
            "nbody.NBodySystem.advance": "99.4",
            "Run.printResult": "0.2"
        },
        "JProfiler_Permute.txt": {
            "Permute.permute": "98.8",
            "Run.reportBenchmark": "0.1",
            " ": "0",
            "Permute.benchmark": "0.7",
            "java.lang.Integer.valueOf": "0.2",
            "Run.getSuiteFromName": "0.1",
            "Run.runBenchmark": "0.1",
            "Run.printResult": "0.1"
        },
        "JProfiler_List.txt": {
            "Run.reportBenchmark": "0.1",
            "List$Element.getNext": "0.1",
            "List.makeList": "0.9",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Run.runBenchmark": "0.1",
            "List.tail": "3.8",
            "List$Element.length": "0.2",
            "List.isShorterThan": "75.4",
            "List$Element.<init>": "19.3",
            "Run.printResult": "0.1"
        },
        "JProfiler_Storage.txt": {
            "java.io.PrintStream.println": "0.0",
            "java.lang.ClassLoader.loadClass": "0.0",
            "Storage.lambda$buildTreeDepth$0": "0.4",
            "java.lang.Integer.valueOf": "0.0",
            "Run.runBenchmark": "0.0",
            "som.Random.<init>": "0.0",
            "Harness.processArguments": "0.0",
            "Storage.buildTreeDepth": "99.5",
            "Benchmark.innerBenchmarkLoop": "0.0",
            "Run.printResult": "0.0"
        },
        "JProfiler_Json.txt": {
            "json.JsonPureStringParser.readObject": "0.8",
            "json.JsonPureStringParser.readNumber": "0.1",
            "json.JsonObject$HashIndexTable.<init>": "0.5",
            "som.Vector.<init>": "2.6",
            "java.lang.String.substring": "91.0",
            "json.JsonValue.<init>": "4.5",
            "json.JsonPureStringParser.readArray": "0.4",
            "json.JsonPureStringParser.readStringInternal": "0.1",
            "json.JsonPureStringParser.readString": "0.0",
            "json.JsonPureStringParser.readValue": "0.1"
        },
        "JProfiler_Queens.txt": {
            "Run.reportBenchmark": "0.1",
            "java.util.Arrays.fill": "1.4",
            "java.io.PrintStream.println": "0.1",
            "java.lang.ClassLoader.loadClass": "0.1",
            "Queens.queens": "28.1",
            "Queens.placeQueen": "70.0",
            "Run.runBenchmark": "0.1",
            "Run.printTotal": "0.1",
            "java.util.Arrays.fill0": "0.1",
            "Run.printResult": "0.1"
        }
    },
    "YourKit": {
        "YourKit_Json.txt": {
            "java.lang.String.equals(Object) String.java": "22.41733607322997",
            "java.lang.String.<init>(byte[], byte) String.java": "6.247794590779834",
            "json.JsonPureStringParser.isDigit()": "1.8390518297112732",
            "json.JsonPureStringParser.read()": "19.474022873985515",
            "java.util.Arrays.copyOfRange(byte[], int, int) Arrays.java": "4.691035141249975",
            "java.lang.String.length() String.java": "2.9391618407123734",
            "java.lang.String.substring(int, int) String.java": "9.822114286900389",
            "java.lang.StringLatin1.newString(byte[], int, int) StringLatin1.java": "7.742283662328499",
            "json.JsonPureStringParser.readStringInternal()": "3.6905577350187855",
            "json.JsonPureStringParser.readValue()": "3.686406376486706"
        },
        "YourKit_Havlak.txt": {
            "som.Vector.forEach(ForEachInterface)": "3.5967730451311954",
            "havlak.HavlakLoopFinder.doDFS(BasicBlock, int)": "5.855814063878863",
            "havlak.HavlakLoopFinder.findLoops()": "10.03299019787646",
            "som.Vector.<init>(int)": "2.4014447505884946",
            "som.Vector.append(Object)": "5.931331194400514",
            "havlak.HavlakLoopFinder.lambda$initAllNodes$0(BasicBlock)": "2.356134472275504",
            "havlak.HavlakLoopFinder.lambda$processEdges$1(int, BasicBlock)": "7.286324279188991",
            "havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$4(int, Vector, Vector, Integer)": "4.112447164979039",
            "som.Vector.removeAll()": "2.0885880669987986",
            "som.IdentitySet.lambda$contains$0(Object, Object)": "37.73267367321797"
        },
        "YourKit_Queens.txt": {
            "Queens.placeQueen(int)": "12.927707743761255",
            "Queens.getRowColumn(int, int)": "61.82467198353485",
            "Queens.queens()": "0.32158476974530487",
            "java.lang.invoke.ClassSpecializer$Factory.loadSpecies(ClassSpecializer$SpeciesData) ClassSpecializer.java": "0.09647543092359145",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "0.6270903010033444",
            "Queens.setRowColumn(int, int, boolean)": "23.41137123745819",
            "java.nio.CharBuffer.wrap(char[], int, int) CharBuffer.java": "0.08039619243632622",
            "com.yourkit.probes.Table.createRow() a": "0.14471314638538718",
            "java.util.Arrays.fill(int[], int) Arrays.java": "0.3537432467198353",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.14471314638538718"
        },
        "YourKit_Richards.txt": {
            "richards.TaskState.isTaskHoldingOrWaiting()": "2.913325808768561",
            "richards.HandlerTaskDataRecord.workInAdd(Packet)": "2.158426291024758",
            "richards.TaskControlBlock.runTask()": "38.56950205948315",
            "richards.Scheduler$$Lambda$15.0x00000008000c7b98.apply(Packet, RBObject)": "4.137289104527932",
            "richards.Scheduler.schedule()": "2.484572199176207",
            "richards.Scheduler.lambda$createDevice$0(Packet, RBObject)": "1.5757611292710458",
            "richards.Scheduler$$Lambda$14.0x00000008000c7970.apply(Packet, RBObject)": "3.6865481303410976",
            "richards.RBObject.append(Packet, Packet)": "3.078231043227159",
            "Richards.benchmark()": "26.817255683733748",
            "richards.TaskControlBlock.addInputAndCheckPriority(Packet, TaskControlBlock)": "1.6637105876489644"
        },
        "YourKit_Storage.txt": {
            "Storage$$Lambda$10.0x00000008000c2a98.<init>(Storage, int, Random)": "0.2782304543105847",
            "java.lang.invoke.DirectMethodHandle.allocateInstance(Object) DirectMethodHandle.java": "0.7211279121927399",
            "Storage$$Lambda$10.0x00000008000c2a98.apply(int)": "0.4996791832516623",
            "java.lang.invoke.LambdaForm$DMH.0x00000008000c5400.newInvokeSpecial(Object, Object, int, Object) LambdaForm$DMH": "1.0845309545575852",
            "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean) MethodHandleNatives.java (native)": "0.11356345073901415",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(Label) MethodWriter.java": "0.08517258805426062",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "43.51751432319023",
            "som.Random.next()": "15.365134884988615",
            "Storage.buildTreeDepth(int, Random)": "36.11885550754345",
            "Storage.lambda$buildTreeDepth$0(int, Random, int)": "1.7943025216764237"
        },
        "YourKit_Towers.txt": {
            "Towers.popDiskFrom(int)": "30.58596265292981",
            "Towers.pushDisk(Towers$TowersDisk, int)": "30.395173022346235",
            "Towers.moveDisks(int, int, int)": "9.956833846080466",
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.2265626863179986",
            "java.lang.invoke.MethodHandles.insertArgumentPrimitive(BoundMethodHandle, int, Class, Object) MethodHandles.java": "0.26233574205241944",
            "Towers$TowersDisk.getSize()": "1.3713004698194653",
            "Towers.moveTopDisk(int, int)": "7.619660871431637",
            "java.util.zip.ZipFile$Source.findEND() ZipFile.java": "0.20271398249505135",
            "Towers$TowersDisk.setNext(Towers$TowersDisk)": "19.245903985118407",
            "java.lang.invoke.MethodHandles$Lookup.maybeBindCaller(MemberName, MethodHandle, MethodHandles$Lookup) MethodHandles.java": "0.05962175955736806"
        },
        "YourKit_Permute.txt": {
            "jdk.internal.org.objectweb.asm.ByteVector.enlarge(int) ByteVector.java": "0.1570545540211575",
            "java.lang.invoke.InvokerBytecodeGenerator.loadMethod(byte[]) InvokerBytecodeGenerator.java": "0.011218182430082678",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass(String) SymbolTable.java": "0.0",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference(int, String) SymbolTable.java": "0.0",
            "Benchmark.innerBenchmarkLoop(int)": "0.04487272972033071",
            "Permute.permute(int)": "56.11334851527355",
            "Run.measure(Benchmark)": "0.0011218182430082677",
            "jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8(String) SymbolTable.java": "0.0",
            "Permute.benchmark()": "0.10096364187074411",
            "Permute.swap(int, int)": "43.57142055844112"
        },
        "YourKit_DeltaBlue.txt": {
            "deltablue.Planner.addPropagate(AbstractConstraint, int)": "6.9815917024536045",
            "som.Vector.forEach(ForEachInterface)": "42.79364122655015",
            "deltablue.EqualityConstraint.execute()": "3.741932243401392",
            "deltablue.BinaryConstraint.getOutput()": "1.9839774981792617",
            "deltablue.BinaryConstraint.isSatisfied()": "2.2351138903538517",
            "som.Vector.<init>(int)": "5.776137020015572",
            "deltablue.AbstractConstraint.satisfy(int, Planner)": "2.938295788442704",
            "som.Vector.append(Object)": "3.4907958512268022",
            "deltablue.Plan$$Lambda$22.0x00000008000ccd88.apply(Object)": "2.184886611918934",
            "deltablue.Planner$$Lambda$31.0x00000008000cd620.apply(Object)": "1.8584093020919665"
        },
        "YourKit_List.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.2564690954739954",
            "List.tail(List$Element, List$Element, List$Element)": "4.38697136994992",
            "List.makeList(int)": "1.2013552366939784",
            "java.lang.invoke.LambdaForm$MH.0x00000008000c7800.linkToTargetMethod(Object, long, Object) LambdaForm$MH": "0.12148536101399782",
            "java.lang.ClassLoader.defineClass0(ClassLoader, Class, String, byte[], int, int, ProtectionDomain, boolean, int, Object) ClassLoader.java (native)": "0.0944886141219983",
            "List$Element.setNext(List$Element)": "0.2699674689199951",
            "List$Element.getNext()": "26.402818460375528",
            "List.isShorterThan(List$Element, List$Element)": "66.9924274124968",
            "com.yourkit.probes.Table.createRow() a": "0.04049512033799927",
            "java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(Object) MethodType.java": "0.20247560168999637"
        },
        "YourKit_NBody.txt": {
            "nbody.Body.getY()": "2.5174145008796645",
            "nbody.Body.getZ()": "5.163560425099766",
            "nbody.Body.setX(double)": "0.5721396592908329",
            "nbody.Body.getX()": "1.8594538926952064",
            "nbody.Body.setZ(double)": "0.7008710826312702",
            "nbody.NBodySystem.advance(double)": "45.17042610101125",
            "nbody.Body.setVY(double)": "6.550999098880035",
            "nbody.Body.setVZ(double)": "6.708337505185015",
            "nbody.Body.setVX(double)": "28.707107404917537",
            "nbody.Body.setY(double)": "0.9011199633830618"
        },
        "YourKit_Mandelbrot.txt": {
            "Mandelbrot.mandelbrot(int)": "99.91272111371316",
            "sun.nio.fs.UnixFileSystemProvider.<init>() UnixFileSystemProvider.java": "0.0",
            "sun.nio.fs.LinuxFileSystem.<init>(UnixFileSystemProvider, String) LinuxFileSystem.java": "0.0",
            "Run.runBenchmark()": "8.641473889786642E-4",
            "sun.nio.fs.LinuxFileSystemProvider.newFileSystem(String) LinuxFileSystemProvider.java": "0.0",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.0",
            "sun.launcher.LauncherHelper.loadMainClass(int, String) LauncherHelper.java": "0.0",
            "sun.nio.fs.UnixFileSystem.<init>(UnixFileSystemProvider, String) UnixFileSystem.java": "0.05184884333871985",
            "java.lang.ClassLoader.findBootstrapClass(String) ClassLoader.java (native)": "0.03456589555914656",
            "sun.nio.fs.LinuxFileSystemProvider.<init>() LinuxFileSystemProvider.java": "0.0"
        },
        "YourKit_CD.txt": {
            "cd.RedBlackTree.leftRotate(RedBlackTree$Node)": "4.357031082200606",
            "cd.CollisionDetector.isInVoxel(Vector2D, Motion)": "23.066183915804974",
            "cd.RedBlackTree.treeInsert(Comparable, Object)": "14.896750636678835",
            "cd.RedBlackTree.findNode(Comparable)": "7.578779417630634",
            "cd.CollisionDetector.recurse(RedBlackTree, RedBlackTree, Vector2D, Motion)": "7.502071123929918",
            "cd.RedBlackTree.treeMinimum(RedBlackTree$Node)": "2.8919026725169523",
            "cd.RedBlackTree.rightRotate(RedBlackTree$Node)": "2.124819735509803",
            "cd.RedBlackTree.put(Comparable, Object)": "7.417692000859131",
            "cd.Vector2D.compareNumbers(double, double)": "7.870270933693351",
            "cd.RedBlackTree.forEach(ForEachInterface)": "4.341689423460464"
        },
        "YourKit_Sieve.txt": {
            "sun.nio.cs.StreamEncoder.implWrite(char[], int, int) StreamEncoder.java": "0.08275405494869248",
            "sun.nio.fs.DefaultFileSystemProvider.<clinit>() DefaultFileSystemProvider.java": "0.0517212843429328",
            "sun.reflect.generics.factory.CoreReflectionFactory.makeWildcard(FieldTypeSignature[], FieldTypeSignature[]) CoreReflectionFactory.java": "0.031032770605759676",
            "java.util.Arrays.fill(boolean[], boolean) Arrays.java": "2.3584905660377355",
            "Sieve.benchmark()": "89.38472360145646",
            "java.lang.ThreadLocal.createMap(Thread, Object) ThreadLocal.java": "0.13447533929162528",
            "java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String) ClassLoader.java (native)": "0.23791790797749088",
            "java.util.jar.JarFile.<clinit>() JarFile.java": "0.031032770605759676",
            "Sieve.sieve(boolean[], int)": "7.458209202250909",
            "javax.management.openmbean.SimpleType.isValue(Object) SimpleType.java": "0.2068851373717312"
        },
        "YourKit_Bounce.txt": {
            "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean) FileOutputStream.java (native)": "0.17334026694401108",
            "Bounce.benchmark()": "62.71065657441112",
            "java.util.Arrays.setAll(Object[], IntFunction) Arrays.java": "0.4622407118506962",
            "som.Random.next()": "0.3659405635484678",
            "Bounce.lambda$benchmark$0(Random, int)": "0.17334026694401108",
            "com.yourkit.probes.Table.createRow() a": "0.17334026694401108",
            "Bounce$Ball.bounce()": "35.18807418963425",
            "sun.nio.cs.StreamEncoder.flushBuffer() StreamEncoder.java": "0.17334026694401108",
            "jdk.internal.org.objectweb.asm.MethodWriter.visitCode() MethodWriter.java": "0.17334026694401108",
            "Bounce$Ball.<init>(Random)": "0.17334026694401108"
        }
    },
    "Runtimes": {
        "JavaFlightRecorder_Queens.jfr": 21.187,
        "JavaFlightRecorder_Bounce.jfr": 24.863,
        "rebench_test_Async_Bounce.txt": 66.995,
        "Mandelbrot.hpl": 38.1065,
        "JavaFlightRecorder_Storage.jfr": 58.223,
        "List.hpl": 22.923000000000002,
        "rebench_test_Async_Towers.txt": 80.5455,
        "JavaFlightRecorder_Sieve.jfr": 31.633000000000003,
        "Queens.hpl": 21.176,
        "JavaFlightRecorder_NBody.jfr": 21.4645,
        "Permute.hpl": 30.237000000000002,
        "rebench_test_Async_Sieve.txt": 91.18,
        "JavaFlightRecorder_Richards.jfr": 90.991,
        "Storage.hpl": 59.959,
        "DeltaBlue.hpl": 14.813500000000001,
        "Towers.hpl": 26.067999999999998,
        "NBody.hpl": 21.498,
        "JavaFlightRecorder_Json.jfr": 82.3075,
        "Bounce.hpl": 26.319499999999998,
        "rebench_test_Async_List.txt": 71.7285,
        "rebench_test_Async_Richards.txt": 271.318,
        "Richards.hpl": 92.8435,
        "JavaFlightRecorder_Mandelbrot.jfr": 37.6815,
        "rebench_test_Async_DeltaBlue.txt": 38.8005,
        "JavaFlightRecorder_Havlak.jfr": 158.4275,
        "JavaFlightRecorder_CD.jfr": 41.4775,
        "JavaFlightRecorder_List.jfr": 23.127499999999998,
        "JavaFlightRecorder_DeltaBlue.jfr": 12.2,
        "rebench_test_Async_Mandelbrot.txt": 104.915,
        "rebench_test_Async_Storage.txt": 172.12400000000002,
        "Json.hpl": 81.686,
        "JavaFlightRecorder_Towers.jfr": 25.73,
        "Havlak.hpl": 156.8265,
        "rebench_test_Async_CD.txt": 152.084,
        "rebench_test_Async_Havlak.txt": 529.0245,
        "Sieve.hpl": 31.3985,
        "rebench_test_Async_Permute.txt": 82.6955,
        "rebench_test_Async_NBody.txt": 60.436499999999995,
        "JavaFlightRecorder_Permute.jfr": 29.845,
        "CD.hpl": 41.7245,
        "rebench_test_Async_Json.txt": 270.834,
        "rebench_test_Async_Queens.txt": 62.788
    },
    "Perf": {
        "NBody.data": {
            " ": "0",
            "[.] 0x00007f5588ad607d": "18.91%",
            "[.] 0x00007f5588ad6090": "5.53%",
            "[.] 0x00007f5588ad6079": "4.93%",
            "[.] 0x00007f5588ad6038": "4.59%",
            "[.] 0x00007f5588ad6075": "22.74%"
        },
        "Permute.data": {
            " ": "0",
            "[.] 0x00007f9388ad3c9d": "2.59%",
            "[.] 0x00007f9388ad3e7c": "20.05%",
            "[.] 0x00007f9388ad3cdc": "14.02%",
            "[.] 0x00007f9388ad3d54": "10.72%",
            "[.] 0x00007f9388ad3e10": "25.86%"
        },
        "Havlak.data": {
            " ": "0",
            "[.] 0x00007f8f60b040d3": "1.62%",
            "[.] 0x00007f8f60adecac": "1.76%",
            "[.] 0x00007f8f60b1c358": "1.34%",
            "[.] 0x00007f8f60b2f5f5": "16.51%",
            "[.] 0x00007f8f60b2f5fc": "16.28%"
        },
        "DeltaBlue.data": {
            " ": "0",
            "[.] 0x00007f5ff8b33461": "6.55%",
            "[.] 0x00007f5ff8b33450": "3.19%",
            "[.] 0x00007f5ff8b3349e": "3.58%",
            "[.] 0x00007f5ff8afebd0": "3.81%",
            "[.] 0x00007f5ff8afeb40": "1.87%"
        },
        "Queens.data": {
            " ": "0",
            "[.] 0x00007f22e8ad391e": "6.97%",
            "[.] 0x00007f22e8ad37d7": "3.70%",
            "[.] 0x00007f22e8ad392d": "25.71%",
            "[.] 0x00007f22e8ad3996": "4.11%",
            "[.] 0x00007f22e8ad37ed": "3.54%"
        },
        "Towers.data": {
            " ": "0",
            "[.] 0x00007fe0f4ad5405": "7.07%",
            "[.] 0x00007fe0f4ad4c6b": "3.26%",
            "[.] 0x00007fe0f4ad53a3": "3.91%",
            "[.] 0x00007fe0f4ad4f46": "3.73%",
            "[.] 0x00007fe0f4ad5382": "10.34%"
        },
        "Richards.data": {
            " ": "0",
            "[.] 0x00007f5a5864742f": "7.27%",
            "[.] 0x00007f5a5864741b": "4.09%",
            "[.] 0x00007f5a5864743a": "9.29%",
            "[.] 0x00007f5a58af1e3a": "5.95%",
            "[.] 0x00007f5a5864749c": "5.65%"
        },
        "Storage.data": {
            " ": "0",
            "[.] 0x00007f2614ad5cd9": "3.72%",
            "[.] 0x00007f2614ad5c26": "6.88%",
            "[.] 0x00007f2614ad5cb5": "4.70%",
            "[.] 0x00007f2614ad5c6a": "6.01%",
            "[.] 0x00007f2614ad5cbd": "4.62%"
        },
        "CD.data": {
            " ": "0",
            "[.] 0x00007f84f4ada400": "2.27%",
            "[.] 0x00007f84f4afc400": "3.55%",
            "[.] 0x00007f84f4afc3e8": "5.14%",
            "[.] 0x00007f84f4b1c93a": "2.74%",
            "[.] 0x00007f84f4ada4d9": "2.32%"
        },
        "Mandelbrot.data": {
            " ": "0",
            "[.] 0x00007fb8a4ad7870": "6.19%",
            "[.] 0x00007fb8a4ad787c": "4.87%",
            "[.] 0x00007fb8a4ad78d4": "5.75%",
            "[.] 0x00007fb8a4ad78a2": "5.94%",
            "[.] 0x00007fb8a4ad783e": "5.37%"
        },
        "List.data": {
            " ": "0",
            "[.] 0x00007fea70ad4285": "4.76%",
            "[.] 0x00007fea70ad4275": "5.35%",
            "[.] 0x00007fea70ad4145": "11.93%",
            "[.] 0x00007fea70ad4135": "25.71%",
            "[.] 0x00007fea70ad4355": "6.03%"
        },
        "Sieve.data": {
            " ": "0",
            "[.] 0x00007f5aa8adac0e": "25.62%",
            "[.] 0x00007f5aa8adabb8": "21.08%",
            "[.] 0x00007f5aa8adac0c": "14.14%",
            "[.] 0x00007f5aa8ad8ed5": "3.61%",
            "[.] 0x00007f5aa8adac02": "3.82%"
        },
        "Bounce.data": {
            " ": "0",
            "[.] 0x00007f2124adcad4": "15.75%",
            "[.] 0x00007f2124ad556f": "5.29%",
            "[.] 0x00007f2124adcac2": "9.66%",
            "[.] 0x00007f2124adcac7": "26.28%",
            "[.] 0x00007f2124ad5562": "8.75%"
        },
        "Json.data": {
            "[.] 0x00007f52a8adb70b": "0.88%",
            " ": "0",
            "[.] 0x00007f52a8adb72a": "2.35%",
            "[.] 0x00007f52a8adb616": "0.88%",
            "[.] 0x00007f52a8adb4e6": "1.26%",
            "[.] 0x00007f52a8adb574": "1.35%"
        }
    }
}